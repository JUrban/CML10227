Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.inferProps
% (62555)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 855
% Passive clauses: 10033
% Generated clauses: 20967
% Final active clauses: 853
% Final passive clauses: 8760
% Input formulas: 133
% Initial clauses: 512
% 
% Duplicate literals: 251
% Trivial inequalities: 43
% Fw subsumption resolutions: 1030
% Fw demodulations: 1044
% Bw demodulations: 2
% 
% Simple tautologies: 301
% Equational tautologies: 54
% Forward subsumptions: 8158
% 
% Binary resolution: 10228
% Factoring: 1197
% Forward superposition: 3756
% Backward superposition: 2748
% Self superposition: 25
% Equality factoring: 2
% Equality resolution: 33
% 
% Split clauses: 226
% Split components: 454
% SAT solver clauses: 480
% SAT solver unit clauses: 13
% SAT solver binary clauses: 100
% 
% Sat splits: 226
% 
% TWLsolver clauses: 480
% TWLsolver calls for satisfiability: 396
% 
% Memory used [KB]: 11513
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.inferProps
% (62584)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 665
% Passive clauses: 3308
% Generated clauses: 16099
% Final active clauses: 600
% Final passive clauses: 2229
% Input formulas: 133
% Initial clauses: 512
% 
% Duplicate literals: 161
% Trivial inequalities: 14
% Fw subsumption resolutions: 865
% Fw demodulations: 994
% Bw demodulations: 468
% Condensations: 253
% Global subsumptions: 40
% 
% Simple tautologies: 259
% Equational tautologies: 21
% Forward subsumptions: 6697
% Bw demodulations to eq. taut.: 5
% 
% Binary resolution: 4779
% Factoring: 770
% Forward superposition: 2388
% Backward superposition: 1393
% Self superposition: 30
% Equality factoring: 2
% Equality resolution: 13
% 
% Split clauses: 11
% Split components: 22
% SAT solver clauses: 3975
% SAT solver unit clauses: 613
% SAT solver binary clauses: 253
% SAT solver learnt clauses: 81
% SAT solver learnt literals: 53
% 
% Sat splits: 11
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 3814
% TWLsolver calls for satisfiability: 7100
% 
% Memory used [KB]: 17398
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.inferProps
% (62619)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1142
% Passive clauses: 5674
% Generated clauses: 238379
% Final active clauses: 1117
% Final passive clauses: 2551
% Input formulas: 133
% Initial clauses: 512
% Discarded non-redundant clauses: 149884
% 
% Duplicate literals: 11
% Trivial inequalities: 9
% Fw subsumption resolutions: 155
% Fw demodulations: 45236
% Bw demodulations: 89
% Condensations: 18
% 
% Simple tautologies: 90
% Equational tautologies: 41
% Forward subsumptions: 24836
% Fw demodulations to eq. taut.: 14803
% Bw demodulations to eq. taut.: 101
% 
% Unit resulting resolution: 186173
% Factoring: 2
% Forward superposition: 10695
% Backward superposition: 4405
% Self superposition: 51
% Equality factoring: 2
% Equality resolution: 29
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 5682
% SAT solver unit clauses: 3006
% SAT solver binary clauses: 1396
% 
% Sat splits: 3
% 
% Memory used [KB]: 141618
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.inferProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.inferProps
% SZS output start Proof for thm.inferProps
fof(f72715,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f749,f750,f751,f752,f753,f755,f930,f756,f859,f928,f864,f865,f866,f867,f870,f939,f943,f948,f949,f951,f952,f947,f960,f961,f962,f963,f964,f966,f931,f1140,f967,f1070,f1139,f1075,f1076,f1077,f1078,f1081,f1145,f1149,f1154,f1155,f1157,f1158,f1291,f1381,f1382,f1383,f1442,f1441,f1446,f1448,f1658,f1657,f1656,f1647,f1646,f1645,f1756,f1757,f1758,f1759,f1760,f1761,f1963,f1967,f1969,f1971,f1973,f1974,f1977,f1976,f1978,f1981,f1980,f1982,f1984,f1983,f1985,f1880,f1881,f1894,f1895,f1896,f1964,f1988,f1897,f1965,f1989,f1998,f2005,f2007,f2003,f2009,f2013,f2015,f2000,f2011,f2055,f2057,f2058,f2059,f2062,f2165,f2170,f2171,f2172,f2173,f2176,f2220,f2221,f2223,f2224,f2226,f2228,f2331,f2334,f2335,f2336,f2337,f2340,f2391,f2392,f2393,f2394,f2397,f2415,f2380,f2378,f2416,f2418,f2419,f2421,f2423,f2526,f2381,f2529,f2530,f2531,f2532,f2535,f2581,f2583,f2584,f2585,f2588,f2691,f2696,f2697,f2698,f2699,f2702,f2744,f2745,f2747,f2748,f2750,f2752,f2855,f2983,f2986,f2987,f2988,f2989,f2985,f2871,f2872,f2873,f2874,f2877,f2991,f2884,f2885,f2886,f2887,f2890,f3001,f3004,f945,f3005,f3006,f950,f3007,f3003,f2910,f2911,f1151,f2912,f2913,f1156,f2916,f3009,f3010,f3015,f3016,f3018,f3021,f3014,f3027,f3028,f3030,f3031,f3033,f3035,f3138,f3141,f3142,f3143,f3144,f3147,f2215,f3198,f3199,f3200,f3201,f3204,f3223,f3224,f3225,f3226,f3229,f3249,f3251,f3252,f3253,f3256,f3359,f3364,f3365,f3366,f3367,f3370,f3410,f3575,f3573,f3411,f3413,f3414,f3416,f3418,f3521,f3576,f3586,f3587,f3588,f3589,f3592,f2414,f3611,f3612,f3613,f3614,f3617,f3246,f3636,f3638,f3639,f3640,f3643,f3746,f2213,f3751,f3752,f3753,f3754,f3757,f3825,f3826,f3855,f3856,f2216,f3861,f3862,f3863,f3864,f3867,f3889,f3890,f3891,f3892,f3895,f3917,f3918,f3919,f3920,f3923,f3964,f3965,f3966,f3967,f3970,f3993,f3994,f3995,f3996,f3999,f4023,f4024,f4025,f4026,f4029,f4051,f4052,f4053,f4054,f4057,f4079,f4080,f4081,f4082,f4085,f4104,f4105,f4106,f4107,f4110,f4148,f4159,f4160,f4161,f4162,f4165,f4187,f4188,f4189,f4190,f4193,f4213,f4214,f4215,f4216,f4219,f4237,f4238,f4239,f4240,f4243,f4281,f4289,f4291,f4292,f4293,f4296,f4399,f4452,f4460,f4461,f4462,f4463,f4466,f3884,f4487,f4488,f4489,f4490,f4493,f3912,f4514,f4515,f4516,f4517,f4520,f3941,f4542,f4543,f4544,f4545,f4548,f3988,f4570,f4571,f4572,f4573,f4576,f4017,f4599,f4600,f4601,f4602,f4605,f4045,f4626,f4627,f4628,f4629,f4632,f4073,f4653,f4654,f4655,f4656,f4659,f4101,f4680,f4681,f4682,f4683,f4686,f4182,f4707,f4708,f4709,f4710,f4713,f4208,f4732,f4733,f4734,f4735,f4738,f4234,f4755,f4756,f4757,f4758,f4761,f4799,f4807,f4808,f4809,f4810,f4813,f4851,f4861,f4862,f4863,f4864,f4867,f4905,f4915,f4916,f4917,f4918,f4921,f4959,f5132,f5133,f5134,f5135,f5138,f5177,f5346,f5347,f5348,f5349,f5352,f5391,f5579,f5580,f5581,f5582,f5585,f5624,f5630,f5631,f5632,f5633,f5636,f5712,f5721,f5722,f5723,f5724,f5727,f5764,f5860,f5861,f5862,f5863,f5866,f5903,f5946,f5947,f5948,f5949,f5952,f5989,f6048,f6049,f6050,f6051,f6054,f6092,f6158,f6159,f6160,f6161,f6164,f6200,f6219,f6227,f6221,f6222,f6229,f6294,f6295,f6296,f6297,f6300,f6336,f6344,f6345,f6346,f6347,f6350,f6875,f6876,f6877,f6878,f6881,f6905,f6906,f6907,f6908,f6911,f6937,f6938,f6939,f6940,f6943,f6969,f6970,f6971,f6972,f6975,f6997,f6999,f7000,f7001,f7004,f7107,f7181,f7186,f7187,f7188,f7189,f7192,f5675,f7234,f7235,f7236,f7237,f7240,f6713,f7764,f7765,f7766,f7767,f940,f7770,f6900,f7849,f7850,f7855,f6930,f7884,f7885,f7890,f6962,f7917,f7918,f7923,f6994,f8017,f8018,f8019,f8020,f8023,f8061,f8696,f8697,f8698,f8699,f8702,f8740,f8874,f8875,f8876,f8877,f8880,f8919,f8930,f8931,f8932,f8933,f8936,f8975,f8985,f9033,f8987,f8988,f8989,f8990,f8993,f9034,f9045,f9046,f9047,f9048,f9051,f9088,f9099,f9100,f9101,f9102,f9105,f9142,f9153,f9154,f9155,f9156,f9159,f9196,f9207,f9208,f9209,f9210,f9213,f9251,f9265,f9266,f9267,f9268,f9271,f9299,f9300,f9301,f9302,f9305,f9335,f9336,f9337,f9338,f9341,f9363,f9364,f9365,f9366,f9369,f9405,f9418,f9419,f9420,f9421,f9424,f9453,f9454,f9455,f9456,f9459,f9487,f9488,f9489,f9490,f9493,f9522,f9523,f9524,f9525,f9528,f9550,f9551,f9552,f9553,f9556,f9592,f9606,f9607,f9608,f9609,f9612,f9643,f9644,f9645,f9646,f9649,f9675,f9676,f9677,f9678,f9681,f9711,f9712,f9713,f9714,f9717,f9748,f9749,f9750,f9751,f9754,f9782,f9783,f9784,f9785,f9788,f9810,f9811,f9812,f9813,f9816,f9836,f9838,f9839,f9840,f9843,f9946,f10020,f10029,f10030,f10031,f10032,f10035,f10057,f10058,f1143,f10059,f10060,f1146,f10063,f10160,f10161,f10166,f9291,f10196,f10197,f10202,f9327,f10302,f10303,f10308,f9358,f10333,f10334,f937,f10339,f9445,f10403,f9479,f10441,f9513,f10478,f9545,f10511,f9634,f10552,f9666,f10609,f9703,f10648,f9740,f10684,f9777,f10741,f9805,f10768,f9833,f10815,f10875,f10890,f10052,f10917,f10080,f10942,f11326,f11895,f11944,f12094,f12143,f12224,f12267,f12284,f12327,f12479,f12480,f12508,f12568,f12581,f12965,f13138,f13190,f13206,f13258,f13276,f13320,f13338,f13382,f13548,f13557,f13559,f13560,f13561,f13564,f13667,f13684,f13741,f13773,f13792,f13794,f13795,f13796,f13799,f13902,f13919,f13976,f14008,f14027,f14029,f14030,f14031,f14034,f14137,f14154,f3574,f14212,f13758,f14243,f13790,f14279,f14326,f14329,f14331,f14332,f14333,f14336,f14439,f14456,f3572,f14514,f13993,f14545,f14025,f14578,f14624,f14627,f14629,f14630,f14631,f14634,f14737,f14851,f14889,f14928,f14930,f14931,f14932,f14935,f15038,f15156,f15207,f15343,f15382,f15429,f15447,f15482,f15516,f15538,f15552,f15590,f15629,f15676,f15695,f15729,f15763,f15795,f15827,f15860,f15898,f15916,f15949,f15984,f16022,f16077,f16095,f16117,f16131,f16169,f16203,f16237,f16271,f16309,f16328,f16360,f16392,f16428,f16483,f16501,f15359,f16533,f15463,f16567,f15499,f16600,f15533,f16621,f16635,f15572,f16672,f15606,f16705,f15711,f16738,f15745,f16771,f15778,f16802,f15810,f16833,f15842,f16864,f15932,f16896,f15965,f16925,f16969,f16989,f16001,f17022,f16112,f17043,f17057,f16151,f17094,f16185,f17127,f16219,f17156,f17200,f17219,f16253,f17252,f16343,f17283,f16375,f17314,f16407,f17485,f17610,f17648,f17807,f17845,f18003,f18344,f18345,f18592,f18593,f18604,f18616,f18605,f18617,f18606,f18607,f18619,f18608,f18620,f18609,f18721,f18759,f18849,f18887,f18898,f18899,f18900,f18901,f18902,f18903,f18919,f18922,f18923,f18407,f18924,f18406,f18925,f18405,f18926,f18404,f18927,f18928,f18929,f18930,f18931,f13383,f18932,f13321,f18933,f13259,f18934,f13191,f18935,f12966,f18943,f12569,f10877,f18921,f9597,f18958,f9410,f18959,f9256,f18960,f9201,f18961,f9147,f18962,f9093,f18963,f9039,f18964,f8980,f18965,f8924,f18966,f8745,f18967,f8066,f18977,f4856,f18987,f4804,f18988,f18990,f18992,f18991,f19028,f19029,f19031,f19032,f19034,f19036,f19139,f19200,f18419,f18989,f18418,f18417,f5713,f19240,f19287,f19288,f19289,f19391,f19437,f19438,f19439,f19484,f19522,f19523,f19524,f19613,f19664,f19665,f19666,f19730,f19731,f19732,f19733,f19748,f19749,f19759,f19793,f19822,f19851,f19892,f19939,f19940,f19941,f19953,f19981,f20009,f20038,f20066,f20105,f20152,f20153,f20154,f20172,f20210,f20211,f20212,f20246,f20301,f20302,f20303,f20407,f20445,f20446,f20447,f20889,f21099,f21154,f21155,f21156,f21198,f21240,f21290,f21340,f21387,f21433,f21447,f21491,f21492,f21493,f21507,f21551,f21552,f21553,f21616,f18909,f21617,f18911,f21618,f18914,f21619,f18913,f21664,f21702,f21703,f21704,f21752,f21753,f21754,f21755,f21796,f21797,f21798,f21799,f21841,f21879,f21880,f21881,f21960,f21986,f22071,f22091,f22171,f22233,f22247,f22280,f22322,f22393,f22416,f22487,f22532,f22557,f22611,f22685,f22727,f22751,f22820,f22844,f22885,f22926,f22927,f22928,f22942,f22983,f22984,f22985,f22989,f22991,f22992,f22993,f22996,f23099,f23176,f23116,f23179,f23187,f23189,f23190,f23191,f23194,f23297,f23375,f23314,f23378,f23383,f23573,f23386,f23388,f23389,f23390,f23393,f23496,f23575,f23513,f23578,f23579,f3184,f23583,f23771,f23572,f23586,f23588,f23589,f23590,f23593,f23696,f23774,f23713,f23777,f23778,f3186,f23782,f23968,f23966,f23783,f23785,f23786,f23788,f23790,f23893,f23969,f23915,f24011,f24040,f24042,f24043,f24045,f24047,f24150,f24217,f24218,f24220,f24221,f24237,f24277,f24317,f24318,f24319,f24321,f24323,f24324,f24326,f24328,f24431,f24494,f24496,f24497,f24498,f24501,f24604,f24749,f24812,f24813,f24814,f24820,f24821,f24823,f24824,f24840,f23974,f20494,f20493,f1152,f24493,f3185,f24925,f24953,f24928,f25048,f2739,f25053,f18948,f25922,f25962,f25963,f25964,f26027,f26090,f26091,f26092,f26587,f26647,f26648,f26649,f26742,f26793,f26794,f26795,f26869,f26911,f26912,f26913,f26969,f26971,f26972,f26973,f26976,f27079,f27158,f27200,f27201,f27202,f27269,f18910,f27272,f27324,f27368,f27369,f27370,f27473,f14193,f27478,f27565,f27609,f27610,f27611,f27792,f27834,f27835,f27836,f27841,f18912,f27844,f27930,f27972,f27973,f27974,f28043,f13957,f28048,f28164,f28217,f28218,f28219,f28376,f28443,f28444,f28445,f28627,f28673,f28674,f28675,f28786,f28833,f28834,f28835,f28971,f29020,f29021,f29022,f29207,f29249,f29250,f29251,f29281,f29323,f29324,f29325,f29375,f29430,f29431,f29432,f29456,f29457,f29458,f16654,f29459,f29460,f29461,f16150,f29469,f29470,f29471,f29501,f29472,f29473,f29474,f29504,f29508,f26968,f3187,f29517,f29552,f29518,f29521,f29524,f29525,f19776,f29526,f29534,f19777,f29556,f29593,f1153,f29576,f19811,f29596,f18942,f25043,f29609,f19840,f29628,f29553,f29629,f29641,f19869,f29678,f29730,f29731,f29732,f29745,f19969,f29775,f19997,f29804,f20026,f29834,f20054,f29864,f20082,f29896,f29934,f29935,f29936,f29938,f29940,f29941,f29943,f29945,f30048,f3188,f30202,f30203,f30204,f30221,f30268,f30269,f30270,f30904,f30946,f30963,f31010,f31011,f31012,f31062,f31112,f31137,f31182,f31183,f31232,f31279,f31302,f31344,f31345,f31375,f31426,f31427,f31428,f954,f31458,f31530,f31531,f31532,f31550,f22109,f31595,f31646,f31647,f31648,f31670,f22347,f31719,f22441,f31767,f31810,f31812,f31869,f31896,f22017,f31983,f32004,f32047,f32049,f32111,f32173,f32198,f32244,f32246,f32264,f22266,f32305,f22299,f32353,f32400,f32402,f32451,f32500,f32521,f32564,f32566,f32611,f32637,f22586,f32691,f22640,f32764,f32785,f32828,f32830,f32875,f32901,f22778,f32949,f33005,f33007,f33052,f33078,f22871,f33133,f33195,f33197,f33220,f33270,f33273,f33274,f33303,f33348,f33350,f33374,f33421,f33424,f33425,f33446,f33489,f33491,f33512,f33555,f33557,f33580,f33634,f33636,f33659,f33713,f33715,f33739,f24038,f33776,f33778,f33779,f33781,f33783,f33886,f33952,f24254,f33953,f33956,f33959,f33960,f24257,f33961,f33976,f24258,f34023,f34041,f34060,f34108,f34111,f25193,f34112,f29490,f34132,f34149,f34150,f33993,f34151,f34170,f18618,f34206,f34222,f34242,f34258,f34276,f34293,f34315,f34370,f34372,f34373,f34393,f34409,f34429,f34445,f34467,f34522,f34524,f34525,f34552,f34597,f34598,f34599,f34624,f34668,f34669,f34670,f34742,f34744,f34745,f34746,f34743,f34747,f34748,f34749,f34752,f34753,f34750,f34755,f34756,f34757,f31346,f34739,f34738,f34761,f34760,f1514,f1511,f1510,f1515,f34933,f34932,f34931,f34930,f34929,f34925,f34924,f34923,f34922,f34918,f34917,f34916,f34907,f34906,f34905,f35030,f35031,f35032,f35033,f35034,f35035,f35093,f35094,f35156,f35157,f35158,f35159,f35160,f35199,f35252,f35253,f35254,f35396,f35397,f35398,f35399,f35395,f35400,f1445,f35407,f35408,f35409,f35432,f35655,f35684,f35661,f24256,f35762,f35764,f35767,f35768,f35763,f35769,f35770,f35771,f34751,f35773,f35774,f35772,f35775,f35776,f35777,f31184,f35759,f35758,f35781,f35780,f34762,f35969,f35971,f35972,f35974,f35976,f36079,f36166,f36172,f36175,f36177,f36178,f36174,f36287,f36295,f36298,f36503,f36299,f2001,f36505,f36303,f36305,f36306,f36307,f36310,f36413,f36506,f36509,f942,f36510,f36511,f36512,f36173,f36565,f36572,f36591,f36600,f16653,f36623,f36661,f36682,f36702,f37064,f37065,f37069,f37070,f37059,f37058,f37073,f37071,f37088,f37295,f37293,f37089,f37091,f37092,f37094,f37096,f37199,f37296,f37208,f2995,f37234,f37305,f37418,f37429,f37419,f37432,f37420,f37435,f37421,f37438,f37422,f37439,f37441,f37653,f37651,f37442,f37444,f37445,f37447,f37449,f37552,f37654,f37592,f37662,f1160,f37767,f37768,f37769,f37770,f37771,f24858,f37779,f37780,f37781,f37782,f37783,f37796,f37799,f37801,f37802,f37804,f37806,f37909,f37975,f24857,f37976,f37978,f38018,f37981,f37984,f37985,f24860,f37986,f38001,f24861,f38026,f38027,f38172,f38028,f38029,f38175,f38032,f38174,f38177,f38299,f38317,f38323,f29493,f38326,f38359,f38329,f38342,f38360,f38365,f38366,f38019,f38367,f16149,f38368,f38402,f24859,f38385,f18621,f38422,f38438,f38458,f38474,f38481,f38482,f38623,f38483,f38484,f38626,f38487,f38625,f38628,f38732,f38749,f38769,f38785,f38805,f38821,f1148,f38828,f38829,f38974,f38830,f38831,f38977,f38834,f38976,f38979,f39075,f39076,f39217,f39077,f39078,f39220,f39081,f39219,f39222,f39375,f39376,f39378,f39380,f39381,f39382,f39379,f39383,f39384,f39370,f39369,f39387,f39385,f39641,f39642,f39643,f39644,f39898,f39900,f39901,f39902,f39905,f40008,f40084,f40197,f37792,f40198,f37793,f40199,f37794,f40200,f37795,f40208,f37428,f40209,f37431,f40210,f37434,f40211,f37437,f40243,f29499,f40244,f29500,f40245,f29502,f40246,f29503,f40254,f15571,f29488,f40255,f18041,f29489,f40256,f17523,f29491,f40257,f17076,f29492,f40576,f40569,f40568,f40567,f40566,f40562,f40561,f40560,f40559,f40554,f40553,f40552,f40543,f40542,f40541,f40667,f40668,f40669,f40670,f40671,f40672,f40681,f40683,f40684,f40685,f40688,f40791,f40867,f41018,f41014,f41010,f41009,f41008,f41007,f41002,f41103,f41104,f41105,f42055,f24203,f42056,f24484,f42074,f13722,f42075,f15099,f42076,f14797,f42077,f14495,f42141,f42143,f42144,f42145,f42148,f42251,f42307,f42522,f42524,f42525,f42526,f42529,f42632,f42688,f42861,f42854,f42853,f42852,f42851,f42847,f42846,f42845,f42844,f42836,f42835,f42834,f42825,f42824,f42823,f42952,f42953,f42954,f42955,f42956,f42957,f43716,f43715,f43722,f43721,f44689,f44691,f44692,f44693,f44696,f44799,f44883,f44807,f44808,f44809,f44888,f44811,f44812,f44813,f44814,f44815,f44893,f44880,f44879,f44887,f45625,f45627,f45628,f45629,f45632,f45735,f45819,f45743,f45744,f44886,f45745,f45823,f45747,f45748,f45749,f45750,f45751,f45828,f45816,f45815,f45822,f47100,f47102,f47103,f47104,f47107,f47210,f47286,f47476,f47478,f47479,f47480,f47483,f47586,f47662,f48393,f48394,f48395,f48396,f48581,f48583,f48584,f48585,f48588,f48691,f48747,f49387,f49388,f49389,f49390,f49426,f49428,f49429,f49430,f49433,f49536,f49592,f51566,f51567,f51568,f51569,f52796,f52797,f52798,f52799,f54746,f54747,f54748,f54749,f55705,f55706,f55707,f1447,f55708,f56292,f56294,f56295,f56296,f56299,f56402,f56458,f57230,f57232,f57233,f57234,f57237,f57340,f57396,f57410,f57525,f57411,f57413,f57530,f57414,f57418,f57421,f57422,f57531,f57423,f57455,f57456,f57457,f57458,f57461,f57533,f57536,f57538,f57539,f57540,f57543,f57537,f57595,f57596,f57597,f57598,f57601,f57666,f57669,f57671,f57672,f57673,f57676,f57670,f58201,f58307,f58204,f58308,f58210,f58237,f58238,f58239,f58240,f58243,f58309,f58312,f58314,f58315,f58316,f58319,f58313,f58324,f2978,f58325,f57532,f58326,f57529,f58327,f58431,f57527,f58361,f58362,f58363,f58364,f58367,f58432,f58435,f58437,f58438,f58439,f58442,f58436,f58481,f58482,f58483,f58484,f58487,f58550,f58553,f58555,f58556,f58557,f58560,f58554,f58599,f58600,f58601,f58602,f58605,f58668,f58671,f58673,f58674,f58675,f58678,f58672,f58712,f58713,f58714,f58715,f58718,f58782,f58785,f58787,f58788,f58789,f58792,f58786,f58831,f58832,f58833,f58834,f58837,f58900,f58903,f58905,f58906,f58907,f58910,f58904,f58949,f58950,f58951,f58952,f58955,f59018,f59021,f59023,f59024,f59025,f59028,f59022,f59029,f59269,f59267,f59030,f59032,f59033,f59035,f59037,f59140,f59270,f59277,f59278,f59279,f59280,f59283,f23977,f59302,f59303,f59339,f59304,f59305,f59342,f59308,f59343,f59309,f59310,f59341,f59344,f59313,f59349,f59314,f59315,f59350,f59316,f59317,f59351,f59348,f59357,f59359,f59360,f59361,f59364,f59467,f59567,f59474,f59475,f59569,f59476,f59477,f59570,f59480,f59571,f59481,f59482,f59347,f59572,f59485,f59575,f59486,f59487,f59576,f59488,f59489,f59577,f59340,f59581,f59583,f59584,f59582,f59591,f59593,f59594,f929,f59595,f933,f59598,f932,f59701,f59819,f59821,f59824,f59825,f59823,f59775,f59827,f1987,f59858,f59859,f2993,f59860,f59861,f2996,f59864,f60302,f60303,f60306,f60307,f60308,f60309,f60305,f60326,f2977,f2975,f60500,f60501,f60502,f934,f60503,f60535,f60536,f61360,f61447,f61448,f61451,f61452,f61453,f61454,f61450,f61712,f61799,f61800,f61802,f61803,f61804,f61807,f61801,f61933,f62020,f62021,f62023,f62024,f62025,f62028,f62022,f62285,f62383,f62384,f62386,f62387,f62388,f62391,f62385,f62722,f62820,f62821,f62823,f62824,f62825,f62828,f62822,f63657,f63736,f63737,f63739,f63740,f63741,f63744,f63738,f63949,f64027,f64028,f64030,f64031,f64032,f64035,f64029,f64990,f64992,f36176,f64993,f64991,f36180,f65214,f65311,f65312,f65314,f65315,f65316,f65319,f65313,f65693,f65784,f65785,f65787,f65788,f65789,f65792,f65786,f66004,f66097,f66098,f66100,f66101,f66102,f66105,f66099,f66403,f66497,f66498,f66500,f66501,f66502,f66505,f66499,f67292,f67390,f67391,f67393,f67394,f67395,f67398,f67392,f67793,f67891,f67892,f67894,f67895,f67896,f67899,f67893,f68722,f68822,f68823,f68825,f68826,f68827,f68830,f68824,f68887,f68987,f68988,f68990,f68991,f68992,f68995,f68989,f69170,f69265,f69266,f69268,f69269,f69270,f69273,f69267,f69679,f69776,f69777,f69779,f69780,f69781,f69784,f69778,f70282,f70377,f70378,f70380,f70381,f70382,f70385,f70379,f70695,f70792,f70793,f70795,f70796,f70797,f70800,f70794,f71079,f71156,f71157,f71159,f71160,f71161,f71164,f71158,f71219,f71309,f71310,f71312,f71313,f71314,f71317,f71311,f71372,f71462,f71463,f71465,f71466,f71467,f71470,f71464,f71525,f71602,f71603,f71605,f71606,f71607,f71610,f71604,f71665,f71742,f71743,f71745,f71746,f71747,f71750,f71744,f71805,f71895,f71896,f71898,f71899,f71900,f71903,f71897,f71958,f72035,f72036,f72038,f72039,f72040,f72043,f72037,f72098,f72188,f3000,f72189,f72191,f3012,f72192,f72193,f3017,f72196,f72190,f3023,f72438,f72697])).
fof(f72697,plain,(
  $false | $spl89),
  inference(subsumption_resolution,[],[f72696,f747])).
fof(f747,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(resolution,[],[f455,f708])).
fof(f708,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))) )),
  inference(cnf_transformation,[],[f446])).
fof(f446,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) & p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))))) & (~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))))),
  inference(flattening,[],[f445])).
fof(f445,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) & p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))))) & ((~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))))),
  inference(nnf_transformation,[],[f240])).
fof(f240,plain,(
  ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) <=> (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) & p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X7,X53] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X7),s('type.typeSystem.tenv_val',X53)))) <=> (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X7),s('type.typeSystem.tenv_val',X53)))) & p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X7),s('type.typeSystem.tenv_val',X53))))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.inferProps.tenv_alpha_def')).
fof(f455,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(cnf_transformation,[],[f331])).
fof(f331,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))) & p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15,sK16,sK17])],[f266])).
fof(f266,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) & p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(flattening,[],[f265])).
fof(f265,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) & p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) & ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) & p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) => p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7))))) & p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) => p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7))))) & p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) => p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.inferProps.tenv_alpha_bind_var_list2')).
fof(f72696,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl89),
  inference(subsumption_resolution,[],[f72695,f958])).
fof(f958,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(resolution,[],[f457,f708])).
fof(f457,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(cnf_transformation,[],[f331])).
fof(f72695,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl89),
  inference(subsumption_resolution,[],[f72456,f456])).
fof(f456,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))),
  inference(cnf_transformation,[],[f331])).
fof(f72456,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl89),
  inference(resolution,[],[f2975,f459])).
fof(f459,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) | p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(flattening,[],[f267])).
fof(f267,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1)))))) | p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1)))))) => p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7)))))) => p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.inferProps.inferProps_|49|89_prove_ltb')).
fof(f72438,plain,(
  $false | $spl91),
  inference(subsumption_resolution,[],[f72437,f748])).
fof(f748,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(resolution,[],[f455,f709])).
fof(f709,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))) )),
  inference(cnf_transformation,[],[f446])).
fof(f72437,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl91),
  inference(subsumption_resolution,[],[f72436,f959])).
fof(f959,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(resolution,[],[f457,f709])).
fof(f72436,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl91),
  inference(subsumption_resolution,[],[f72197,f456])).
fof(f72197,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl91),
  inference(resolution,[],[f2977,f460])).
fof(f460,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))))) | p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(flattening,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1)))))) | p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(ennf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1)))))) => p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X2))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) & s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7)))))) => p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X9),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X8))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X6))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.inferProps.inferProps_|49|9|48|_prove_ltb')).
fof(f3023,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl116),
  inference(cnf_transformation,[],[f3023_D])).
fof(f3023_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f72190,plain,(
  ( ! [X0,X1] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) | $spl1330),
  inference(cnf_transformation,[],[f72190_D])).
fof(f72190_D,plain,(
  ( ! [X0,X1] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) <=> ~$spl1330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1330])])).
fof(f72196,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f72137,f717])).
fof(f717,plain,(
  ( ! [X0] : (s('type.typeSystem.tenv_val',X0) = s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val',X0)))) )),
  inference(cnf_transformation,[],[f246])).
fof(f246,plain,(
  ! [X0] : s('type.typeSystem.tenv_val',X0) = s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val',X0)))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X54] : s('type.typeSystem.tenv_val',X54) = s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val',X54)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.typeSystem.bind_var_list2_def|split|0')).
fof(f72137,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2829,f736])).
fof(f736,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,X0)),s('type.list.list'(X0),sK24(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f454])).
fof(f454,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,X0)),s('type.list.list'(X0),sK24(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK23,sK24])],[f264])).
fof(f264,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f112])).
fof(f112,axiom,(
  ! [X15] : ! [X41] : (s('type.list.list'(X15),'const.list.NIL_0') = s('type.list.list'(X15),X41) | ? [X56,X14] : s('type.list.list'(X15),X41) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X56),s('type.list.list'(X15),X14))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.list_CASES')).
fof(f2829,plain,(
  ( ! [X167,X166] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X166,X167) | p(s(bool,X166))) )),
  inference(resolution,[],[f458,f605])).
fof(f605,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | ~sP11(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f395])).
fof(f395,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X1)) | p(s(bool,X2))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f394])).
fof(f394,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2))) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f393])).
fof(f393,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2))))) & (((~p(s(bool,X0)) & ~p(s(bool,X1))) | (~p(s(bool,X0)) & ~p(s(bool,X2)))) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f325])).
fof(f325,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f458,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(cnf_transformation,[],[f331])).
fof(f3017,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) ) | $spl114),
  inference(cnf_transformation,[],[f3017_D])).
fof(f3017_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f72193,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f72134,f717])).
fof(f72134,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2829,f531])).
fof(f531,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))) )),
  inference(cnf_transformation,[],[f360])).
fof(f360,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(nnf_transformation,[],[f181])).
fof(f181,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f180])).
fof(f180,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f131])).
fof(f131,axiom,(
  ! [X29,X15] : ! [X41,X40] : (s('type.list.list'(X29),'const.list.NIL_0') = s('type.list.list'(X29),'const.list.MAP_2'(s(fun(X15,X29),X40),s('type.list.list'(X15),X41))) <=> s('type.list.list'(X15),'const.list.NIL_0') = s('type.list.list'(X15),X41))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.MAP_EQ_NIL|split|0')).
fof(f72192,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f72133,f717])).
fof(f72133,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2829,f529])).
fof(f529,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))) )),
  inference(cnf_transformation,[],[f359])).
fof(f359,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(nnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f178])).
fof(f178,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f130])).
fof(f130,axiom,(
  ! [X29,X15] : ! [X41,X40] : (s('type.list.list'(X29),'const.list.NIL_0') = s('type.list.list'(X29),'const.list.MAP_2'(s(fun(X15,X29),X40),s('type.list.list'(X15),X41))) <=> s('type.list.list'(X15),'const.list.NIL_0') = s('type.list.list'(X15),X41))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.MAP_EQ_NIL|split|1')).
fof(f3012,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | $spl111),
  inference(cnf_transformation,[],[f3012_D])).
fof(f3012_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f72191,plain,(
  ( ! [X2,X3] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f72132,f717])).
fof(f72132,plain,(
  ( ! [X2,X3] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2829,f525])).
fof(f525,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f358])).
fof(f358,plain,(
  ! [X0,X1] : ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f173])).
fof(f173,plain,(
  ! [X0] : ! [X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f128])).
fof(f128,axiom,(
  ! [X15] : ! [X41] : (s(fun(X15,bool),'const.pred_set.EMPTY_0') = s(fun(X15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X15),X41))) <=> s('type.list.list'(X15),'const.list.NIL_0') = s('type.list.list'(X15),X41))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.LIST_TO_SET_EQ_EMPTY|split|0')).
fof(f72189,plain,(
  ( ! [X0,X1] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f72131,f717])).
fof(f72131,plain,(
  ( ! [X0,X1] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2829,f523])).
fof(f523,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f357])).
fof(f357,plain,(
  ! [X0,X1] : ((s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f171])).
fof(f171,plain,(
  ! [X0] : ! [X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f129])).
fof(f129,axiom,(
  ! [X15] : ! [X41] : (s(fun(X15,bool),'const.pred_set.EMPTY_0') = s(fun(X15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X15),X41))) <=> s('type.list.list'(X15),'const.list.NIL_0') = s('type.list.list'(X15),X41))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.LIST_TO_SET_EQ_EMPTY|split|1')).
fof(f3000,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl104),
  inference(cnf_transformation,[],[f3000_D])).
fof(f3000_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f72188,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) | $spl1328),
  inference(cnf_transformation,[],[f72188_D])).
fof(f72188_D,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) <=> ~$spl1328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1328])])).
fof(f72098,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2829,f736])).
fof(f72037,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) | $spl1326),
  inference(cnf_transformation,[],[f72037_D])).
fof(f72037_D,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) <=> ~$spl1326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1326])])).
fof(f72043,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71997,f717])).
fof(f71997,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2828,f736])).
fof(f2828,plain,(
  ( ! [X165,X164] : (~sP11(X164,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X165) | p(s(bool,X164))) )),
  inference(resolution,[],[f458,f605])).
fof(f72040,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71994,f717])).
fof(f71994,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2828,f531])).
fof(f72039,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71993,f717])).
fof(f71993,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2828,f529])).
fof(f72038,plain,(
  ( ! [X2,X3] : (~sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71992,f717])).
fof(f71992,plain,(
  ( ! [X2,X3] : (~sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2828,f525])).
fof(f72036,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71991,f717])).
fof(f71991,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2828,f523])).
fof(f72035,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl1324),
  inference(cnf_transformation,[],[f72035_D])).
fof(f72035_D,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl1324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1324])])).
fof(f71958,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2828,f736])).
fof(f71897,plain,(
  ( ! [X0,X1] : (~sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1))) ) | $spl1322),
  inference(cnf_transformation,[],[f71897_D])).
fof(f71897_D,plain,(
  ( ! [X0,X1] : (~sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1))) ) <=> ~$spl1322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1322])])).
fof(f71903,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71844,f717])).
fof(f71844,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2827,f736])).
fof(f2827,plain,(
  ( ! [X163,X162] : (~sP11(X163,X162,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X162))) )),
  inference(resolution,[],[f458,f604])).
fof(f604,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | p(s(bool,X1)) | ~sP11(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f395])).
fof(f71900,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71841,f717])).
fof(f71841,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2827,f531])).
fof(f71899,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71840,f717])).
fof(f71840,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2827,f529])).
fof(f71898,plain,(
  ( ! [X2,X3] : (~sP11(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71839,f717])).
fof(f71839,plain,(
  ( ! [X2,X3] : (~sP11(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2827,f525])).
fof(f71896,plain,(
  ( ! [X0,X1] : (~sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71838,f717])).
fof(f71838,plain,(
  ( ! [X0,X1] : (~sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2827,f523])).
fof(f71895,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23))) ) | $spl1320),
  inference(cnf_transformation,[],[f71895_D])).
fof(f71895_D,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23))) ) <=> ~$spl1320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1320])])).
fof(f71805,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2827,f736])).
fof(f71744,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1))) ) | $spl1318),
  inference(cnf_transformation,[],[f71744_D])).
fof(f71744_D,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1))) ) <=> ~$spl1318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1318])])).
fof(f71750,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71704,f717])).
fof(f71704,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2826,f736])).
fof(f2826,plain,(
  ( ! [X161,X160] : (~sP11(X161,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X160) | p(s(bool,X160))) )),
  inference(resolution,[],[f458,f604])).
fof(f71747,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71701,f717])).
fof(f71701,plain,(
  ( ! [X10,X8,X11,X9] : (~sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2826,f531])).
fof(f71746,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71700,f717])).
fof(f71700,plain,(
  ( ! [X6,X4,X7,X5] : (~sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2826,f529])).
fof(f71745,plain,(
  ( ! [X2,X3] : (~sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71699,f717])).
fof(f71699,plain,(
  ( ! [X2,X3] : (~sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2826,f525])).
fof(f71743,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71698,f717])).
fof(f71698,plain,(
  ( ! [X0,X1] : (~sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2826,f523])).
fof(f71742,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23))) ) | $spl1316),
  inference(cnf_transformation,[],[f71742_D])).
fof(f71742_D,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23))) ) <=> ~$spl1316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1316])])).
fof(f71665,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2826,f736])).
fof(f71604,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) | $spl1314),
  inference(cnf_transformation,[],[f71604_D])).
fof(f71604_D,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) <=> ~$spl1314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1314])])).
fof(f71610,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71564,f717])).
fof(f71564,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2821,f736])).
fof(f2821,plain,(
  ( ! [X151,X150] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X150,X151) | p(s(bool,X150))) )),
  inference(resolution,[],[f458,f595])).
fof(f595,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f390])).
fof(f390,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ((p(s(bool,X2)) | p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0))))) & ((~p(s(bool,X2)) & ~p(s(bool,X0))) | (~p(s(bool,X1)) & ~p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f389])).
fof(f389,plain,(
  ! [X0,X2,X1] : ((~sP10(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0))) | sP10(X0,X2,X1)))),
  inference(flattening,[],[f388])).
fof(f388,plain,(
  ! [X0,X2,X1] : ((~sP10(X0,X2,X1) | ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (~p(s(bool,X2)) & ~p(s(bool,X0)))) | sP10(X0,X2,X1)))),
  inference(nnf_transformation,[],[f323])).
fof(f323,plain,(
  ! [X0,X2,X1] : (sP10(X0,X2,X1) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f71607,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71561,f717])).
fof(f71561,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2821,f531])).
fof(f71606,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71560,f717])).
fof(f71560,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2821,f529])).
fof(f71605,plain,(
  ( ! [X2,X3] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71559,f717])).
fof(f71559,plain,(
  ( ! [X2,X3] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2821,f525])).
fof(f71603,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71558,f717])).
fof(f71558,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2821,f523])).
fof(f71602,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) | $spl1312),
  inference(cnf_transformation,[],[f71602_D])).
fof(f71602_D,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) <=> ~$spl1312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1312])])).
fof(f71525,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2821,f736])).
fof(f71464,plain,(
  ( ! [X0,X1] : (~sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) | $spl1310),
  inference(cnf_transformation,[],[f71464_D])).
fof(f71464_D,plain,(
  ( ! [X0,X1] : (~sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) <=> ~$spl1310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1310])])).
fof(f71470,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71411,f717])).
fof(f71411,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2820,f736])).
fof(f2820,plain,(
  ( ! [X149,X148] : (~sP10(X148,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X149) | p(s(bool,X148))) )),
  inference(resolution,[],[f458,f595])).
fof(f71467,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71408,f717])).
fof(f71408,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2820,f531])).
fof(f71466,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71407,f717])).
fof(f71407,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2820,f529])).
fof(f71465,plain,(
  ( ! [X2,X3] : (~sP10(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71406,f717])).
fof(f71406,plain,(
  ( ! [X2,X3] : (~sP10(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2820,f525])).
fof(f71463,plain,(
  ( ! [X0,X1] : (~sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71405,f717])).
fof(f71405,plain,(
  ( ! [X0,X1] : (~sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2820,f523])).
fof(f71462,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl1308),
  inference(cnf_transformation,[],[f71462_D])).
fof(f71462_D,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl1308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1308])])).
fof(f71372,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2820,f736])).
fof(f71311,plain,(
  ( ! [X0,X1] : (~sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl1306),
  inference(cnf_transformation,[],[f71311_D])).
fof(f71311_D,plain,(
  ( ! [X0,X1] : (~sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl1306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1306])])).
fof(f71317,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71258,f717])).
fof(f71258,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2819,f736])).
fof(f2819,plain,(
  ( ! [X146,X147] : (~sP10(X146,X147,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X146))) )),
  inference(resolution,[],[f458,f594])).
fof(f594,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X2)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f390])).
fof(f71314,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71255,f717])).
fof(f71255,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2819,f531])).
fof(f71313,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71254,f717])).
fof(f71254,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2819,f529])).
fof(f71312,plain,(
  ( ! [X2,X3] : (~sP10(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71253,f717])).
fof(f71253,plain,(
  ( ! [X2,X3] : (~sP10(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2819,f525])).
fof(f71310,plain,(
  ( ! [X0,X1] : (~sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71252,f717])).
fof(f71252,plain,(
  ( ! [X0,X1] : (~sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2819,f523])).
fof(f71309,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) | $spl1304),
  inference(cnf_transformation,[],[f71309_D])).
fof(f71309_D,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) <=> ~$spl1304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1304])])).
fof(f71219,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2819,f736])).
fof(f71158,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) | $spl1302),
  inference(cnf_transformation,[],[f71158_D])).
fof(f71158_D,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) <=> ~$spl1302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1302])])).
fof(f71164,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f71118,f717])).
fof(f71118,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2818,f736])).
fof(f2818,plain,(
  ( ! [X144,X145] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X145,X144) | p(s(bool,X144))) )),
  inference(resolution,[],[f458,f594])).
fof(f71161,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71115,f717])).
fof(f71115,plain,(
  ( ! [X10,X8,X11,X9] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2818,f531])).
fof(f71160,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71114,f717])).
fof(f71114,plain,(
  ( ! [X6,X4,X7,X5] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2818,f529])).
fof(f71159,plain,(
  ( ! [X2,X3] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71113,f717])).
fof(f71113,plain,(
  ( ! [X2,X3] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2818,f525])).
fof(f71157,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f71112,f717])).
fof(f71112,plain,(
  ( ! [X0,X1] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2818,f523])).
fof(f71156,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl1300),
  inference(cnf_transformation,[],[f71156_D])).
fof(f71156_D,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl1300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1300])])).
fof(f71079,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2818,f736])).
fof(f70794,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) | $spl1298),
  inference(cnf_transformation,[],[f70794_D])).
fof(f70794_D,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) <=> ~$spl1298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1298])])).
fof(f70800,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f70734,f717])).
fof(f70734,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2814,f736])).
fof(f2814,plain,(
  ( ! [X136,X137] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X136,X137) | p(s(bool,X136))) )),
  inference(resolution,[],[f458,f583])).
fof(f583,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f385])).
fof(f385,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f384])).
fof(f384,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f322])).
fof(f322,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f193,f321,f320])).
fof(f320,plain,(
  ! [X0,X1,X2] : (sP8(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f321,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> (sP8(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f193,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X32,X30,X31] : ((p(s(bool,X31)) <=> (p(s(bool,X30)) & p(s(bool,X32)))) <=> ((p(s(bool,X31)) | ~p(s(bool,X30)) | ~p(s(bool,X32))) & (p(s(bool,X30)) | ~p(s(bool,X31))) & (p(s(bool,X32)) | ~p(s(bool,X31)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.sat.sat_23_prove_ltb')).
fof(f70797,plain,(
  ( ! [X10,X8,X11,X9] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70731,f717])).
fof(f70731,plain,(
  ( ! [X10,X8,X11,X9] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2814,f531])).
fof(f70796,plain,(
  ( ! [X6,X4,X7,X5] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70730,f717])).
fof(f70730,plain,(
  ( ! [X6,X4,X7,X5] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2814,f529])).
fof(f70795,plain,(
  ( ! [X2,X3] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70729,f717])).
fof(f70729,plain,(
  ( ! [X2,X3] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2814,f525])).
fof(f70793,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70728,f717])).
fof(f70728,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2814,f523])).
fof(f70792,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) | $spl1296),
  inference(cnf_transformation,[],[f70792_D])).
fof(f70792_D,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) <=> ~$spl1296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1296])])).
fof(f70695,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2814,f736])).
fof(f70379,plain,(
  ( ! [X0,X1] : (sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) | $spl1294),
  inference(cnf_transformation,[],[f70379_D])).
fof(f70379_D,plain,(
  ( ! [X0,X1] : (sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) <=> ~$spl1294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1294])])).
fof(f70385,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f70321,f717])).
fof(f70321,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2813,f736])).
fof(f2813,plain,(
  ( ! [X134,X135] : (sP9(X134,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X135) | p(s(bool,X134))) )),
  inference(resolution,[],[f458,f583])).
fof(f70382,plain,(
  ( ! [X10,X8,X11,X9] : (sP9(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70318,f717])).
fof(f70318,plain,(
  ( ! [X10,X8,X11,X9] : (sP9(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2813,f531])).
fof(f70381,plain,(
  ( ! [X6,X4,X7,X5] : (sP9(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70317,f717])).
fof(f70317,plain,(
  ( ! [X6,X4,X7,X5] : (sP9(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2813,f529])).
fof(f70380,plain,(
  ( ! [X2,X3] : (sP9(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70316,f717])).
fof(f70316,plain,(
  ( ! [X2,X3] : (sP9(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2813,f525])).
fof(f70378,plain,(
  ( ! [X0,X1] : (sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f70315,f717])).
fof(f70315,plain,(
  ( ! [X0,X1] : (sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2813,f523])).
fof(f70377,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl1292),
  inference(cnf_transformation,[],[f70377_D])).
fof(f70377_D,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl1292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1292])])).
fof(f70282,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2813,f736])).
fof(f69778,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) | $spl1290),
  inference(cnf_transformation,[],[f69778_D])).
fof(f69778_D,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) <=> ~$spl1290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1290])])).
fof(f69784,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f69718,f717])).
fof(f69718,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2812,f736])).
fof(f2812,plain,(
  ( ! [X132,X133] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X132,X133) | p(s(bool,X133))) )),
  inference(resolution,[],[f458,f582])).
fof(f582,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f385])).
fof(f69781,plain,(
  ( ! [X10,X8,X11,X9] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69715,f717])).
fof(f69715,plain,(
  ( ! [X10,X8,X11,X9] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2812,f531])).
fof(f69780,plain,(
  ( ! [X6,X4,X7,X5] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69714,f717])).
fof(f69714,plain,(
  ( ! [X6,X4,X7,X5] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2812,f529])).
fof(f69779,plain,(
  ( ! [X2,X3] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69713,f717])).
fof(f69713,plain,(
  ( ! [X2,X3] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2812,f525])).
fof(f69777,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69712,f717])).
fof(f69712,plain,(
  ( ! [X0,X1] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2812,f523])).
fof(f69776,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl1288),
  inference(cnf_transformation,[],[f69776_D])).
fof(f69776_D,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl1288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1288])])).
fof(f69679,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2812,f736])).
fof(f69267,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl1286),
  inference(cnf_transformation,[],[f69267_D])).
fof(f69267_D,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl1286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1286])])).
fof(f69273,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f69209,f717])).
fof(f69209,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2811,f736])).
fof(f2811,plain,(
  ( ! [X130,X131] : (sP9(X130,X131,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X130))) )),
  inference(resolution,[],[f458,f582])).
fof(f69270,plain,(
  ( ! [X10,X8,X11,X9] : (sP9(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69206,f717])).
fof(f69206,plain,(
  ( ! [X10,X8,X11,X9] : (sP9(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2811,f531])).
fof(f69269,plain,(
  ( ! [X6,X4,X7,X5] : (sP9(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69205,f717])).
fof(f69205,plain,(
  ( ! [X6,X4,X7,X5] : (sP9(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2811,f529])).
fof(f69268,plain,(
  ( ! [X2,X3] : (sP9(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69204,f717])).
fof(f69204,plain,(
  ( ! [X2,X3] : (sP9(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2811,f525])).
fof(f69266,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f69203,f717])).
fof(f69203,plain,(
  ( ! [X0,X1] : (sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2811,f523])).
fof(f69265,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) | $spl1284),
  inference(cnf_transformation,[],[f69265_D])).
fof(f69265_D,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) <=> ~$spl1284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1284])])).
fof(f69170,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2811,f736])).
fof(f68989,plain,(
  ( ! [X0,X1] : (~sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0))) ) | $spl1282),
  inference(cnf_transformation,[],[f68989_D])).
fof(f68989_D,plain,(
  ( ! [X0,X1] : (~sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0))) ) <=> ~$spl1282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1282])])).
fof(f68995,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f68926,f717])).
fof(f68926,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2805,f736])).
fof(f2805,plain,(
  ( ! [X118,X119] : (~sP9(X118,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X119) | ~p(s(bool,X118))) )),
  inference(resolution,[],[f458,f573])).
fof(f573,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~sP9(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f381])).
fof(f381,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | (sP8(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP8(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f380])).
fof(f380,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | (sP8(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP8(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f379])).
fof(f379,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | (sP8(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP8(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f321])).
fof(f68992,plain,(
  ( ! [X10,X8,X11,X9] : (~sP9(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68923,f717])).
fof(f68923,plain,(
  ( ! [X10,X8,X11,X9] : (~sP9(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2805,f531])).
fof(f68991,plain,(
  ( ! [X6,X4,X7,X5] : (~sP9(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68922,f717])).
fof(f68922,plain,(
  ( ! [X6,X4,X7,X5] : (~sP9(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2805,f529])).
fof(f68990,plain,(
  ( ! [X2,X3] : (~sP9(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68921,f717])).
fof(f68921,plain,(
  ( ! [X2,X3] : (~sP9(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2805,f525])).
fof(f68988,plain,(
  ( ! [X0,X1] : (~sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68920,f717])).
fof(f68920,plain,(
  ( ! [X0,X1] : (~sP9(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2805,f523])).
fof(f68987,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) | $spl1280),
  inference(cnf_transformation,[],[f68987_D])).
fof(f68987_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) <=> ~$spl1280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1280])])).
fof(f68887,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2805,f736])).
fof(f68824,plain,(
  ( ! [X0,X1] : (~sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) | $spl1278),
  inference(cnf_transformation,[],[f68824_D])).
fof(f68824_D,plain,(
  ( ! [X0,X1] : (~sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) <=> ~$spl1278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1278])])).
fof(f68830,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f68761,f717])).
fof(f68761,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2804,f736])).
fof(f2804,plain,(
  ( ! [X116,X117] : (~sP9(X116,X117,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X116))) )),
  inference(resolution,[],[f458,f572])).
fof(f572,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X2)) | ~sP9(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f381])).
fof(f68827,plain,(
  ( ! [X10,X8,X11,X9] : (~sP9(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68758,f717])).
fof(f68758,plain,(
  ( ! [X10,X8,X11,X9] : (~sP9(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2804,f531])).
fof(f68826,plain,(
  ( ! [X6,X4,X7,X5] : (~sP9(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68757,f717])).
fof(f68757,plain,(
  ( ! [X6,X4,X7,X5] : (~sP9(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2804,f529])).
fof(f68825,plain,(
  ( ! [X2,X3] : (~sP9(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68756,f717])).
fof(f68756,plain,(
  ( ! [X2,X3] : (~sP9(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2804,f525])).
fof(f68823,plain,(
  ( ! [X0,X1] : (~sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f68755,f717])).
fof(f68755,plain,(
  ( ! [X0,X1] : (~sP9(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2804,f523])).
fof(f68822,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) | $spl1276),
  inference(cnf_transformation,[],[f68822_D])).
fof(f68822_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) <=> ~$spl1276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1276])])).
fof(f68722,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2804,f736])).
fof(f67893,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) | $spl1274),
  inference(cnf_transformation,[],[f67893_D])).
fof(f67893_D,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) <=> ~$spl1274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1274])])).
fof(f67899,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f67832,f717])).
fof(f67832,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2789,f736])).
fof(f2789,plain,(
  ( ! [X87,X86] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X86,X87) | ~p(s(bool,X86))) )),
  inference(resolution,[],[f458,f555])).
fof(f555,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | ~sP7(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f373])).
fof(f373,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP6(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP6(X0,X1,X2) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f372])).
fof(f372,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP6(X2,X0,X1) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f371])).
fof(f371,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP6(X2,X0,X1)) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f318])).
fof(f318,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f67896,plain,(
  ( ! [X10,X8,X11,X9] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67829,f717])).
fof(f67829,plain,(
  ( ! [X10,X8,X11,X9] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2789,f531])).
fof(f67895,plain,(
  ( ! [X6,X4,X7,X5] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67828,f717])).
fof(f67828,plain,(
  ( ! [X6,X4,X7,X5] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2789,f529])).
fof(f67894,plain,(
  ( ! [X2,X3] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67827,f717])).
fof(f67827,plain,(
  ( ! [X2,X3] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2789,f525])).
fof(f67892,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67826,f717])).
fof(f67826,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2789,f523])).
fof(f67891,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) | $spl1272),
  inference(cnf_transformation,[],[f67891_D])).
fof(f67891_D,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl1272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1272])])).
fof(f67793,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2789,f736])).
fof(f67392,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1))) ) | $spl1270),
  inference(cnf_transformation,[],[f67392_D])).
fof(f67392_D,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1))) ) <=> ~$spl1270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1270])])).
fof(f67398,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f67331,f717])).
fof(f67331,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2788,f736])).
fof(f2788,plain,(
  ( ! [X85,X84] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X85,X84) | ~p(s(bool,X84))) )),
  inference(resolution,[],[f458,f554])).
fof(f554,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X0)) | ~sP7(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f373])).
fof(f67395,plain,(
  ( ! [X10,X8,X11,X9] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67328,f717])).
fof(f67328,plain,(
  ( ! [X10,X8,X11,X9] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | ~p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2788,f531])).
fof(f67394,plain,(
  ( ! [X6,X4,X7,X5] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67327,f717])).
fof(f67327,plain,(
  ( ! [X6,X4,X7,X5] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2788,f529])).
fof(f67393,plain,(
  ( ! [X2,X3] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67326,f717])).
fof(f67326,plain,(
  ( ! [X2,X3] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | ~p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2788,f525])).
fof(f67391,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f67325,f717])).
fof(f67325,plain,(
  ( ! [X0,X1] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2788,f523])).
fof(f67390,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) | $spl1268),
  inference(cnf_transformation,[],[f67390_D])).
fof(f67390_D,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl1268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1268])])).
fof(f67292,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2788,f736])).
fof(f66499,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) | $spl1266),
  inference(cnf_transformation,[],[f66499_D])).
fof(f66499_D,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) <=> ~$spl1266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1266])])).
fof(f66505,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f66442,f717])).
fof(f66442,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2783,f736])).
fof(f2783,plain,(
  ( ! [X74,X75] : (sP5(X74,X75,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X74))) )),
  inference(resolution,[],[f458,f549])).
fof(f549,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f370])).
fof(f370,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP5(X2,X0,X1)) & (~sP5(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f369])).
fof(f369,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP5(X2,X0,X1)) & (~sP5(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f316])).
fof(f316,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP5(X2,X0,X1))),
  inference(definition_folding,[],[f280,f315,f314])).
fof(f314,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f315,plain,(
  ! [X2,X0,X1] : (sP5(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP4(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f280,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f188])).
fof(f188,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X32,X30,X31] : ((p(s(bool,X31)) <=> (p(s(bool,X30)) => p(s(bool,X32)))) <=> ((p(s(bool,X31)) | p(s(bool,X30))) & (p(s(bool,X31)) | ~p(s(bool,X32))) & (~p(s(bool,X30)) | p(s(bool,X32)) | ~p(s(bool,X31)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.sat.sat_27_prove_ltb')).
fof(f66502,plain,(
  ( ! [X10,X8,X11,X9] : (sP5(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66439,f717])).
fof(f66439,plain,(
  ( ! [X10,X8,X11,X9] : (sP5(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2783,f531])).
fof(f66501,plain,(
  ( ! [X6,X4,X7,X5] : (sP5(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66438,f717])).
fof(f66438,plain,(
  ( ! [X6,X4,X7,X5] : (sP5(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2783,f529])).
fof(f66500,plain,(
  ( ! [X2,X3] : (sP5(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66437,f717])).
fof(f66437,plain,(
  ( ! [X2,X3] : (sP5(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2783,f525])).
fof(f66498,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66436,f717])).
fof(f66436,plain,(
  ( ! [X0,X1] : (sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2783,f523])).
fof(f66497,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) | $spl1264),
  inference(cnf_transformation,[],[f66497_D])).
fof(f66497_D,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) <=> ~$spl1264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1264])])).
fof(f66403,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2783,f736])).
fof(f66099,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) | $spl1262),
  inference(cnf_transformation,[],[f66099_D])).
fof(f66099_D,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) <=> ~$spl1262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1262])])).
fof(f66105,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f66043,f717])).
fof(f66043,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2775,f736])).
fof(f2775,plain,(
  ( ! [X59,X58] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X58,X59) | ~p(s(bool,X58))) )),
  inference(resolution,[],[f458,f538])).
fof(f538,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f365])).
fof(f365,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP4(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP4(X0,X1,X2) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f364])).
fof(f364,plain,(
  ! [X2,X0,X1] : ((~sP5(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP4(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP4(X2,X0,X1) | sP5(X2,X0,X1)))),
  inference(flattening,[],[f363])).
fof(f363,plain,(
  ! [X2,X0,X1] : ((~sP5(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP4(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP4(X2,X0,X1)) | sP5(X2,X0,X1)))),
  inference(nnf_transformation,[],[f315])).
fof(f66102,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66040,f717])).
fof(f66040,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2775,f531])).
fof(f66101,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66039,f717])).
fof(f66039,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2775,f529])).
fof(f66100,plain,(
  ( ! [X2,X3] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66038,f717])).
fof(f66038,plain,(
  ( ! [X2,X3] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2775,f525])).
fof(f66098,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f66037,f717])).
fof(f66037,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2775,f523])).
fof(f66097,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) | $spl1260),
  inference(cnf_transformation,[],[f66097_D])).
fof(f66097_D,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl1260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1260])])).
fof(f66004,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2775,f736])).
fof(f65786,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl1258),
  inference(cnf_transformation,[],[f65786_D])).
fof(f65786_D,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl1258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1258])])).
fof(f65792,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f65732,f717])).
fof(f65732,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2774,f736])).
fof(f2774,plain,(
  ( ! [X57,X56] : (~sP5(X56,X57,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X56))) )),
  inference(resolution,[],[f458,f537])).
fof(f537,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | p(s(bool,X0)) | ~sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f365])).
fof(f65789,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65729,f717])).
fof(f65729,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2774,f531])).
fof(f65788,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65728,f717])).
fof(f65728,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2774,f529])).
fof(f65787,plain,(
  ( ! [X2,X3] : (~sP5(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65727,f717])).
fof(f65727,plain,(
  ( ! [X2,X3] : (~sP5(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2774,f525])).
fof(f65785,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65726,f717])).
fof(f65726,plain,(
  ( ! [X0,X1] : (~sP5(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2774,f523])).
fof(f65784,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) | $spl1256),
  inference(cnf_transformation,[],[f65784_D])).
fof(f65784_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) <=> ~$spl1256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1256])])).
fof(f65693,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2774,f736])).
fof(f65313,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) | $spl1254),
  inference(cnf_transformation,[],[f65313_D])).
fof(f65313_D,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) <=> ~$spl1254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1254])])).
fof(f65319,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f65253,f717])).
fof(f65253,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2773,f736])).
fof(f2773,plain,(
  ( ! [X54,X55] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X55,X54) | p(s(bool,X54))) )),
  inference(resolution,[],[f458,f537])).
fof(f65316,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65250,f717])).
fof(f65250,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2773,f531])).
fof(f65315,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65249,f717])).
fof(f65249,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2773,f529])).
fof(f65314,plain,(
  ( ! [X2,X3] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65248,f717])).
fof(f65248,plain,(
  ( ! [X2,X3] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2773,f525])).
fof(f65312,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f65247,f717])).
fof(f65247,plain,(
  ( ! [X0,X1] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2773,f523])).
fof(f65311,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl1252),
  inference(cnf_transformation,[],[f65311_D])).
fof(f65311_D,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl1252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1252])])).
fof(f65214,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2773,f736])).
fof(f36180,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl924),
  inference(cnf_transformation,[],[f36180_D])).
fof(f36180_D,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) <=> ~$spl924),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl924])])).
fof(f64991,plain,(
  ( ! [X4] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X4))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X4)))))) ) | $spl1250),
  inference(cnf_transformation,[],[f64991_D])).
fof(f64991_D,plain,(
  ( ! [X4] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X4))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X4)))))) ) <=> ~$spl1250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1250])])).
fof(f64993,plain,(
  ( ! [X18] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X18))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X18))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char')))))) )),
  inference(forward_demodulation,[],[f64880,f527])).
fof(f527,plain,(
  ( ! [X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f84])).
fof(f84,axiom,(
  ! [X15] : s(fun(X15,bool),'const.pred_set.EMPTY_0') = s(fun(X15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X15),'const.list.NIL_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.LIST_TO_SET|split|0')).
fof(f64880,plain,(
  ( ! [X18] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X18))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X18))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char')))))) )),
  inference(superposition,[],[f1888,f736])).
fof(f1888,plain,(
  ( ! [X0] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X0))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X0)))))) )),
  inference(superposition,[],[f521,f456])).
fof(f521,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val',X1))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X1)))))) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0),s('type.typeSystem.tenv_val',X1))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X0))))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X13,X7] : s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X13),s('type.typeSystem.tenv_val',X7))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X13))))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X7)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.typeSysProps.tenv_names_bind_var_list2')).
fof(f36176,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl922),
  inference(cnf_transformation,[],[f36176_D])).
fof(f36176_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) <=> ~$spl922),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl922])])).
fof(f64992,plain,(
  ( ! [X8,X7,X9] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X7))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X7))))) | s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X8),X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(forward_demodulation,[],[f64877,f527])).
fof(f64877,plain,(
  ( ! [X8,X7,X9] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X7))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X7))))) | s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X8),X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(superposition,[],[f1888,f531])).
fof(f64990,plain,(
  ( ! [X6,X4,X5] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X4))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X4))))) | s('type.list.list'(X5),'const.list.NIL_0') != s('type.list.list'(X5),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X5),X6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(forward_demodulation,[],[f64876,f527])).
fof(f64876,plain,(
  ( ! [X6,X4,X5] : (s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X4))))) = s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.UNION_2'(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s(fun('type.list.list'('type.string.char'),bool),'const.typeSysProps.tenv_names_1'(s('type.typeSystem.tenv_val',X4))))) | s('type.list.list'(X5),'const.list.NIL_0') != s('type.list.list'(X5),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X5),X6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(superposition,[],[f1888,f529])).
fof(f64029,plain,(
  ( ! [X0] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0))) ) | $spl1248),
  inference(cnf_transformation,[],[f64029_D])).
fof(f64029_D,plain,(
  ( ! [X0] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0))) ) <=> ~$spl1248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1248])])).
fof(f64035,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f63988,f717])).
fof(f63988,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2980,f736])).
fof(f2980,plain,(
  ( ! [X185] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X185) | p(s(bool,X185))) )),
  inference(subsumption_resolution,[],[f2843,f665])).
fof(f665,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f424])).
fof(f424,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f423])).
fof(f423,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0] : ((p(s(bool,X0)) | p(s(bool,'F_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f101])).
fof(f101,axiom,(
  ! [X14] : ((p(s(bool,X14)) | p(s(bool,'F_0'))) <=> p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.OR_CLAUSES|split|3')).
fof(f2843,plain,(
  ( ! [X185] : (p(s(bool,'F_0')) | p(s(bool,X185)) | ~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X185)) )),
  inference(resolution,[],[f458,f630])).
fof(f630,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP13(X0,X1)) )),
  inference(cnf_transformation,[],[f405])).
fof(f405,plain,(
  ! [X0,X1] : ((~sP13(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP13(X0,X1)))),
  inference(flattening,[],[f404])).
fof(f404,plain,(
  ! [X0,X1] : ((~sP13(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP13(X0,X1)))),
  inference(nnf_transformation,[],[f329])).
fof(f329,plain,(
  ! [X0,X1] : (sP13(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP13])])).
fof(f64032,plain,(
  ( ! [X6,X7,X5] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63985,f717])).
fof(f63985,plain,(
  ( ! [X6,X7,X5] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2980,f531])).
fof(f64031,plain,(
  ( ! [X4,X2,X3] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63984,f717])).
fof(f63984,plain,(
  ( ! [X4,X2,X3] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2980,f529])).
fof(f64030,plain,(
  ( ! [X1] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63983,f717])).
fof(f63983,plain,(
  ( ! [X1] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2980,f525])).
fof(f64028,plain,(
  ( ! [X0] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63982,f717])).
fof(f63982,plain,(
  ( ! [X0] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2980,f523])).
fof(f64027,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) | $spl1246),
  inference(cnf_transformation,[],[f64027_D])).
fof(f64027_D,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) <=> ~$spl1246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1246])])).
fof(f63949,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2980,f736])).
fof(f63738,plain,(
  ( ! [X0] : (~sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl1244),
  inference(cnf_transformation,[],[f63738_D])).
fof(f63738_D,plain,(
  ( ! [X0] : (~sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl1244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1244])])).
fof(f63744,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f63696,f717])).
fof(f63696,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2979,f736])).
fof(f2979,plain,(
  ( ! [X184] : (~sP13(X184,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X184))) )),
  inference(subsumption_resolution,[],[f2842,f665])).
fof(f2842,plain,(
  ( ! [X184] : (p(s(bool,'F_0')) | p(s(bool,X184)) | ~sP13(X184,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f458,f630])).
fof(f63741,plain,(
  ( ! [X6,X7,X5] : (~sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63693,f717])).
fof(f63693,plain,(
  ( ! [X6,X7,X5] : (~sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2979,f531])).
fof(f63740,plain,(
  ( ! [X4,X2,X3] : (~sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63692,f717])).
fof(f63692,plain,(
  ( ! [X4,X2,X3] : (~sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2979,f529])).
fof(f63739,plain,(
  ( ! [X1] : (~sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63691,f717])).
fof(f63691,plain,(
  ( ! [X1] : (~sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2979,f525])).
fof(f63737,plain,(
  ( ! [X0] : (~sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f63690,f717])).
fof(f63690,plain,(
  ( ! [X0] : (~sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2979,f523])).
fof(f63736,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) | $spl1242),
  inference(cnf_transformation,[],[f63736_D])).
fof(f63736_D,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) <=> ~$spl1242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1242])])).
fof(f63657,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2979,f736])).
fof(f62822,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0))) ) | $spl1240),
  inference(cnf_transformation,[],[f62822_D])).
fof(f62822_D,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0))) ) <=> ~$spl1240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1240])])).
fof(f62828,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f62761,f717])).
fof(f62761,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2837,f736])).
fof(f2837,plain,(
  ( ! [X179] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X179) | ~p(s(bool,X179))) )),
  inference(resolution,[],[f458,f619])).
fof(f619,plain,(
  ( ! [X0,X1] : (sP12(X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f400])).
fof(f400,plain,(
  ! [X0,X1] : ((~sP12(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP12(X0,X1)))),
  inference(rectify,[],[f399])).
fof(f399,plain,(
  ! [X1,X0] : ((~sP12(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP12(X1,X0)))),
  inference(flattening,[],[f398])).
fof(f398,plain,(
  ! [X1,X0] : ((~sP12(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP12(X1,X0)))),
  inference(nnf_transformation,[],[f327])).
fof(f327,plain,(
  ! [X1,X0] : (sP12(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f62825,plain,(
  ( ! [X6,X7,X5] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62758,f717])).
fof(f62758,plain,(
  ( ! [X6,X7,X5] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2837,f531])).
fof(f62824,plain,(
  ( ! [X4,X2,X3] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62757,f717])).
fof(f62757,plain,(
  ( ! [X4,X2,X3] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2837,f529])).
fof(f62823,plain,(
  ( ! [X1] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62756,f717])).
fof(f62756,plain,(
  ( ! [X1] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2837,f525])).
fof(f62821,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62755,f717])).
fof(f62755,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2837,f523])).
fof(f62820,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16))) ) | $spl1238),
  inference(cnf_transformation,[],[f62820_D])).
fof(f62820_D,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16))) ) <=> ~$spl1238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1238])])).
fof(f62722,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2837,f736])).
fof(f62385,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) | $spl1236),
  inference(cnf_transformation,[],[f62385_D])).
fof(f62385_D,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) <=> ~$spl1236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1236])])).
fof(f62391,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f62324,f717])).
fof(f62324,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2836,f736])).
fof(f2836,plain,(
  ( ! [X178] : (sP12(X178,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X178))) )),
  inference(resolution,[],[f458,f616])).
fof(f616,plain,(
  ( ! [X0,X1] : (sP12(X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f400])).
fof(f62388,plain,(
  ( ! [X6,X7,X5] : (sP12(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62321,f717])).
fof(f62321,plain,(
  ( ! [X6,X7,X5] : (sP12(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2836,f531])).
fof(f62387,plain,(
  ( ! [X4,X2,X3] : (sP12(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62320,f717])).
fof(f62320,plain,(
  ( ! [X4,X2,X3] : (sP12(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2836,f529])).
fof(f62386,plain,(
  ( ! [X1] : (sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62319,f717])).
fof(f62319,plain,(
  ( ! [X1] : (sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2836,f525])).
fof(f62384,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f62318,f717])).
fof(f62318,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2836,f523])).
fof(f62383,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16))) ) | $spl1234),
  inference(cnf_transformation,[],[f62383_D])).
fof(f62383_D,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16))) ) <=> ~$spl1234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1234])])).
fof(f62285,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2836,f736])).
fof(f62022,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0))) ) | $spl1232),
  inference(cnf_transformation,[],[f62022_D])).
fof(f62022_D,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0))) ) <=> ~$spl1232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1232])])).
fof(f62028,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f61972,f717])).
fof(f61972,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2835,f736])).
fof(f2835,plain,(
  ( ! [X177] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X177) | p(s(bool,X177))) )),
  inference(resolution,[],[f458,f614])).
fof(f614,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | ~sP12(X0,X1)) )),
  inference(cnf_transformation,[],[f400])).
fof(f62025,plain,(
  ( ! [X6,X7,X5] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61969,f717])).
fof(f61969,plain,(
  ( ! [X6,X7,X5] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2835,f531])).
fof(f62024,plain,(
  ( ! [X4,X2,X3] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61968,f717])).
fof(f61968,plain,(
  ( ! [X4,X2,X3] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2835,f529])).
fof(f62023,plain,(
  ( ! [X1] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61967,f717])).
fof(f61967,plain,(
  ( ! [X1] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2835,f525])).
fof(f62021,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61966,f717])).
fof(f61966,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2835,f523])).
fof(f62020,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) | $spl1230),
  inference(cnf_transformation,[],[f62020_D])).
fof(f62020_D,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) <=> ~$spl1230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1230])])).
fof(f61933,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2835,f736])).
fof(f61801,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl1228),
  inference(cnf_transformation,[],[f61801_D])).
fof(f61801_D,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl1228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1228])])).
fof(f61807,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f61751,f717])).
fof(f61751,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2834,f736])).
fof(f2834,plain,(
  ( ! [X176] : (~sP12(X176,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X176))) )),
  inference(resolution,[],[f458,f614])).
fof(f61804,plain,(
  ( ! [X6,X7,X5] : (~sP12(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61748,f717])).
fof(f61748,plain,(
  ( ! [X6,X7,X5] : (~sP12(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2834,f531])).
fof(f61803,plain,(
  ( ! [X4,X2,X3] : (~sP12(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61747,f717])).
fof(f61747,plain,(
  ( ! [X4,X2,X3] : (~sP12(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2834,f529])).
fof(f61802,plain,(
  ( ! [X1] : (~sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61746,f717])).
fof(f61746,plain,(
  ( ! [X1] : (~sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2834,f525])).
fof(f61800,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61745,f717])).
fof(f61745,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2834,f523])).
fof(f61799,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) | $spl1226),
  inference(cnf_transformation,[],[f61799_D])).
fof(f61799_D,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) <=> ~$spl1226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1226])])).
fof(f61712,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2834,f736])).
fof(f61450,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl1225),
  inference(cnf_transformation,[],[f61450_D])).
fof(f61450_D,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl1225),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1225])])).
fof(f61454,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f61399,f717])).
fof(f61399,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f2771,f736])).
fof(f2771,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))),
  inference(resolution,[],[f458,f513])).
fof(f513,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f354])).
fof(f354,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X14] : (s(bool,'T_0') = s(bool,X14) <=> p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.EQ_CLAUSES|split|0')).
fof(f61453,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61396,f717])).
fof(f61396,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2771,f531])).
fof(f61452,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f61395,f717])).
fof(f61395,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2771,f529])).
fof(f61451,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(forward_demodulation,[],[f61394,f717])).
fof(f61394,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(superposition,[],[f2771,f525])).
fof(f61448,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(forward_demodulation,[],[f61393,f717])).
fof(f61393,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(superposition,[],[f2771,f523])).
fof(f61447,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl1223),
  inference(cnf_transformation,[],[f61447_D])).
fof(f61447_D,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl1223),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1223])])).
fof(f61360,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f2771,f736])).
fof(f60536,plain,(
  $false | ($spl121 | $spl377)),
  inference(subsumption_resolution,[],[f16654,f33800])).
fof(f33800,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl121),
  inference(resolution,[],[f3187,f510])).
fof(f510,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f352])).
fof(f352,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f159])).
fof(f159,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X14] : (s(bool,'F_0') = s(bool,X14) <=> ~p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.EQ_CLAUSES|split|3')).
fof(f60535,plain,(
  $false | ($spl119 | $spl357)),
  inference(subsumption_resolution,[],[f16150,f37823])).
fof(f37823,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl119),
  inference(resolution,[],[f3185,f510])).
fof(f60503,plain,(
  ( ! [X496,X495] : (~p(s(bool,X495)) | p(s(bool,X496)) | sP3(X496,X495,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1220),
  inference(cnf_transformation,[],[f60503_D])).
fof(f60503_D,plain,(
  ( ! [X496,X495] : (~p(s(bool,X495)) | p(s(bool,X496)) | sP3(X496,X495,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1220])])).
fof(f934,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) | $spl12),
  inference(cnf_transformation,[],[f934_D])).
fof(f934_D,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f60502,plain,(
  ( ! [X494,X496,X495] : (p(s(bool,X494)) | ~p(s(bool,X495)) | sP3(X496,X495,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X496))) ) | $spl6),
  inference(subsumption_resolution,[],[f60221,f510])).
fof(f60221,plain,(
  ( ! [X494,X496,X495] : (s(bool,'F_0') != s(bool,X494) | p(s(bool,X494)) | ~p(s(bool,X495)) | sP3(X496,X495,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X496))) ) | $spl6),
  inference(superposition,[],[f1795,f2769])).
fof(f2769,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))),
  inference(resolution,[],[f458,f510])).
fof(f1795,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,X5) != s(bool,X6) | p(s(bool,X6)) | ~p(s(bool,X4)) | sP3(X7,X4,X5) | p(s(bool,X7))) ) | $spl6),
  inference(superposition,[],[f931,f492])).
fof(f492,plain,(
  ( ! [X2,X0,X1] : (sP3(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f346])).
fof(f346,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP3(X2,X1,X0)) & (~sP3(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f313])).
fof(f313,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP3(X2,X1,X0))),
  inference(definition_folding,[],[f147,f312,f311,f310,f309])).
fof(f309,plain,(
  ! [X0,X1,X2] : (sP0(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f310,plain,(
  ! [X1,X0,X2] : (sP1(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f311,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f312,plain,(
  ! [X2,X1,X0] : (sP3(X2,X1,X0) <=> (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f147,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X32,X30,X31] : ((p(s(bool,X31)) <=> s(bool,X30) = s(bool,X32)) <=> ((p(s(bool,X31)) | p(s(bool,X30)) | p(s(bool,X32))) & (p(s(bool,X31)) | ~p(s(bool,X32)) | ~p(s(bool,X30))) & (p(s(bool,X30)) | ~p(s(bool,X32)) | ~p(s(bool,X31))) & (p(s(bool,X32)) | ~p(s(bool,X30)) | ~p(s(bool,X31)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.sat.sat_2|49|_prove_ltb')).
fof(f60501,plain,(
  ( ! [X490,X489] : (~p(s(bool,X489)) | p(s(bool,X490)) | sP3(X490,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X489)) ) | $spl1218),
  inference(cnf_transformation,[],[f60501_D])).
fof(f60501_D,plain,(
  ( ! [X490,X489] : (~p(s(bool,X489)) | p(s(bool,X490)) | sP3(X490,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X489)) ) <=> ~$spl1218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1218])])).
fof(f60500,plain,(
  ( ! [X488,X490,X489] : (p(s(bool,X488)) | ~p(s(bool,X489)) | sP3(X490,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X489) | p(s(bool,X490))) ) | $spl6),
  inference(subsumption_resolution,[],[f60219,f510])).
fof(f60219,plain,(
  ( ! [X488,X490,X489] : (s(bool,'F_0') != s(bool,X488) | p(s(bool,X488)) | ~p(s(bool,X489)) | sP3(X490,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X489) | p(s(bool,X490))) ) | $spl6),
  inference(superposition,[],[f1794,f2769])).
fof(f1794,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) != s(bool,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | sP3(X3,X1,X0) | p(s(bool,X3))) ) | $spl6),
  inference(superposition,[],[f931,f492])).
fof(f2975,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl89),
  inference(cnf_transformation,[],[f2975_D])).
fof(f2975_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f2977,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl91),
  inference(cnf_transformation,[],[f2977_D])).
fof(f2977_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f60326,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(subsumption_resolution,[],[f59945,f650])).
fof(f650,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f414])).
fof(f414,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f413])).
fof(f413,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f295])).
fof(f295,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f214])).
fof(f214,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X14] : ((p(s(bool,X14)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_CLAUSES|split|4')).
fof(f59945,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(superposition,[],[f710,f2769])).
fof(f710,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1)))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val',X1))))) )),
  inference(cnf_transformation,[],[f446])).
fof(f60305,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl1216),
  inference(cnf_transformation,[],[f60305_D])).
fof(f60305_D,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl1216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1216])])).
fof(f60309,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f59903,f717])).
fof(f59903,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f2769,f736])).
fof(f60308,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f59900,f717])).
fof(f59900,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2769,f531])).
fof(f60307,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f59899,f717])).
fof(f59899,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2769,f529])).
fof(f60306,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(forward_demodulation,[],[f59898,f717])).
fof(f59898,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(superposition,[],[f2769,f525])).
fof(f60303,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(forward_demodulation,[],[f59897,f717])).
fof(f59897,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(superposition,[],[f2769,f523])).
fof(f60302,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl1214),
  inference(cnf_transformation,[],[f60302_D])).
fof(f60302_D,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl1214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1214])])).
fof(f59864,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f2769,f736])).
fof(f2996,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) ) | $spl102),
  inference(cnf_transformation,[],[f2996_D])).
fof(f2996_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f59861,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2769,f531])).
fof(f59860,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2769,f529])).
fof(f2993,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))))) | $spl99),
  inference(cnf_transformation,[],[f2993_D])).
fof(f2993_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f59859,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))),
  inference(superposition,[],[f2769,f525])).
fof(f59858,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))),
  inference(superposition,[],[f2769,f523])).
fof(f1987,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))))) | $spl62),
  inference(cnf_transformation,[],[f1987_D])).
fof(f1987_D,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f59827,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')),'type.string.char'))))) | $spl1212),
  inference(cnf_transformation,[],[f59827_D])).
fof(f59827_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')),'type.string.char'))))) <=> ~$spl1212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1212])])).
fof(f59775,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')),'type.string.char'))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))))) | $spl70),
  inference(superposition,[],[f2003,f736])).
fof(f59823,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | $spl1210),
  inference(cnf_transformation,[],[f59823_D])).
fof(f59823_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) <=> ~$spl1210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1210])])).
fof(f59825,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl70),
  inference(forward_demodulation,[],[f59733,f527])).
fof(f59733,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl70),
  inference(superposition,[],[f2003,f736])).
fof(f59824,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl70),
  inference(forward_demodulation,[],[f59730,f527])).
fof(f59730,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl70),
  inference(superposition,[],[f2003,f531])).
fof(f59821,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl70),
  inference(forward_demodulation,[],[f59729,f527])).
fof(f59729,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl70),
  inference(superposition,[],[f2003,f529])).
fof(f59819,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) ) | $spl1208),
  inference(cnf_transformation,[],[f59819_D])).
fof(f59819_D,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(bool,X2) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) ) <=> ~$spl1208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1208])])).
fof(f59701,plain,(
  ( ! [X194,X193] : (p(s(bool,X193)) | p(s(bool,X194)) | s(bool,X194) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) ) | $spl70),
  inference(resolution,[],[f2003,f737])).
fof(f737,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f469])).
fof(f469,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f334])).
fof(f334,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f333])).
fof(f333,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X22,X23,X24,X25] : ((s(bool,X22) = s(bool,X23) & (p(s(bool,X23)) => s(bool,X24) = s(bool,X25))) => ((p(s(bool,X22)) => p(s(bool,X24))) <=> (p(s(bool,X23)) => p(s(bool,X25)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_CONG')).
fof(f932,plain,(
  ( ! [X8,X7] : (s(bool,X7) != s(bool,X8) | ~p(s(bool,X7))) ) | $spl8),
  inference(cnf_transformation,[],[f932_D])).
fof(f932_D,plain,(
  ( ! [X8,X7] : (s(bool,X7) != s(bool,X8) | ~p(s(bool,X7))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f59598,plain,(
  ( ! [X24,X23,X22] : (p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))) | s(bool,X23) != s(bool,X24)) ) | $spl70),
  inference(resolution,[],[f2003,f472])).
fof(f472,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f334])).
fof(f933,plain,(
  ( ! [X13] : (~p(s(bool,X13))) ) | $spl10),
  inference(cnf_transformation,[],[f933_D])).
fof(f933_D,plain,(
  ( ! [X13] : (~p(s(bool,X13))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f59595,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | ~p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X15) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) ) | $spl70),
  inference(resolution,[],[f2003,f471])).
fof(f471,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f334])).
fof(f929,plain,(
  ( ! [X2,X0] : (s(bool,X0) != s(bool,X2) | p(s(bool,X0))) ) | $spl2),
  inference(cnf_transformation,[],[f929_D])).
fof(f929_D,plain,(
  ( ! [X2,X0] : (s(bool,X0) != s(bool,X2) | p(s(bool,X0))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f59594,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) ) | $spl70),
  inference(resolution,[],[f2003,f470])).
fof(f470,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f334])).
fof(f59593,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X7) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))) | s(bool,X8) != s(bool,X9)) ) | $spl70),
  inference(resolution,[],[f2003,f468])).
fof(f468,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f334])).
fof(f59591,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) ) | $spl70),
  inference(resolution,[],[f2003,f466])).
fof(f466,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f334])).
fof(f59582,plain,(
  ( ! [X4] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X4),s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0')))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X4)))) ) | $spl1206),
  inference(cnf_transformation,[],[f59582_D])).
fof(f59582_D,plain,(
  ( ! [X4] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X4),s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0')))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X4)))) ) <=> ~$spl1206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1206])])).
fof(f59584,plain,(
  ( ! [X18] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X18),s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0')))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X18))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char')))))) )),
  inference(forward_demodulation,[],[f59530,f527])).
fof(f59530,plain,(
  ( ! [X18] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X18),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X18))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char')))))) )),
  inference(superposition,[],[f1893,f736])).
fof(f1893,plain,(
  ( ! [X11] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X11),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X11)))) )),
  inference(superposition,[],[f520,f456])).
fof(f520,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X2),s(X0,X3))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X0,X1)),X2))))))))) )),
  inference(cnf_transformation,[],[f356])).
fof(f356,plain,(
  ! [X0,X1,X2,X3] : ((s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X2),s(X0,X3))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X0,X1)),X2))))))))) & (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X0,X1)),X2)))))))) | s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X2),s(X0,X3)))))),
  inference(nnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2,X3] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X2),s(X0,X3))) <=> ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X0,X1)),X2)))))))))),
  inference(flattening,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.option.option'(X1),'const.option.NONE_0') = s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X2),s(X0,X3))) <=> ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X0,X1)),X2)))))))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X15,X29] : ! [X41,X22] : (s('type.option.option'(X29),'const.option.NONE_0') = s('type.option.option'(X29),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X15,X29)),X41),s(X15,X22))) <=> ~p(s(bool,'const.bool.IN_2'(s(X15,X22),s(fun(X15,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X15),'const.list.MAP_2'(s(fun('type.pair.prod'(X15,X29),X15),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X15,X29)),X41)))))))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.alist.ALOOKUP_NONE')).
fof(f59583,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X7),s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0')))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X7))) | s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X8),X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(forward_demodulation,[],[f59527,f527])).
fof(f59527,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X7),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X7))) | s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X8),X9),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(superposition,[],[f1893,f531])).
fof(f59581,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X4),s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0')))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X4))) | s('type.list.list'(X5),'const.list.NIL_0') != s('type.list.list'(X5),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X5),X6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(forward_demodulation,[],[f59526,f527])).
fof(f59526,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X4),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X4))) | s('type.list.list'(X5),'const.list.NIL_0') != s('type.list.list'(X5),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X5),X6),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) )),
  inference(superposition,[],[f1893,f529])).
fof(f59340,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | $spl1174),
  inference(cnf_transformation,[],[f59340_D])).
fof(f59340_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) <=> ~$spl1174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1174])])).
fof(f59577,plain,(
  ( ! [X49] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X49),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X49)))) ) | $spl1204),
  inference(cnf_transformation,[],[f59577_D])).
fof(f59577_D,plain,(
  ( ! [X49] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X49),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X49)))) ) <=> ~$spl1204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1204])])).
fof(f59489,plain,(
  ( ! [X50] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X50),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X50)))) )),
  inference(superposition,[],[f1893,f523])).
fof(f59488,plain,(
  ( ! [X49] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X49),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X49)))) )),
  inference(superposition,[],[f1893,f525])).
fof(f59576,plain,(
  ( ! [X45,X43,X44] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X43),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X44),'const.list.NIL_0') != s('type.list.list'(X44),'const.list.MAP_2'(s(fun('type.string.char',X44),X45),s('type.list.list'('type.string.char'),X43)))) ) | $spl1202),
  inference(cnf_transformation,[],[f59576_D])).
fof(f59576_D,plain,(
  ( ! [X45,X43,X44] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X43),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X44),'const.list.NIL_0') != s('type.list.list'(X44),'const.list.MAP_2'(s(fun('type.string.char',X44),X45),s('type.list.list'('type.string.char'),X43)))) ) <=> ~$spl1202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1202])])).
fof(f59487,plain,(
  ( ! [X47,X48,X46] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X46),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s('type.list.list'(X47),'const.list.NIL_0') != s('type.list.list'(X47),'const.list.MAP_2'(s(fun('type.string.char',X47),X48),s('type.list.list'('type.string.char'),X46)))) )),
  inference(superposition,[],[f1893,f529])).
fof(f59486,plain,(
  ( ! [X45,X43,X44] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X43),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s('type.list.list'(X44),'const.list.NIL_0') != s('type.list.list'(X44),'const.list.MAP_2'(s(fun('type.string.char',X44),X45),s('type.list.list'('type.string.char'),X43)))) )),
  inference(superposition,[],[f1893,f531])).
fof(f59575,plain,(
  ( ! [X42] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X42),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'('type.string.char'),X42) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X42,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X42,'type.string.char'))))) ) | $spl1200),
  inference(cnf_transformation,[],[f59575_D])).
fof(f59575_D,plain,(
  ( ! [X42] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X42),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'('type.string.char'),X42) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X42,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X42,'type.string.char'))))) ) <=> ~$spl1200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1200])])).
fof(f59485,plain,(
  ( ! [X42] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X42),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s('type.list.list'('type.string.char'),X42) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X42,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X42,'type.string.char'))))) )),
  inference(superposition,[],[f1893,f736])).
fof(f59572,plain,(
  ( ! [X35,X33,X34] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X33,'type.string.char'),X34),s('type.list.list'(X33),X35))))) | s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),X35)) ) | $spl1198),
  inference(cnf_transformation,[],[f59572_D])).
fof(f59572_D,plain,(
  ( ! [X35,X33,X34] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X33,'type.string.char'),X34),s('type.list.list'(X33),X35))))) | s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),X35)) ) <=> ~$spl1198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1198])])).
fof(f59347,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | $spl1182),
  inference(cnf_transformation,[],[f59347_D])).
fof(f59347_D,plain,(
  p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) <=> ~$spl1182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1182])])).
fof(f59482,plain,(
  ( ! [X37,X38,X36] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X36,'type.string.char'),X37),s('type.list.list'(X36),X38))))) | s('type.list.list'(X36),'const.list.NIL_0') != s('type.list.list'(X36),X38)) )),
  inference(superposition,[],[f1893,f530])).
fof(f530,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2)) )),
  inference(cnf_transformation,[],[f359])).
fof(f59481,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X33,'type.string.char'),X34),s('type.list.list'(X33),X35))))) | s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),X35)) )),
  inference(superposition,[],[f1893,f532])).
fof(f532,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2)) )),
  inference(cnf_transformation,[],[f360])).
fof(f59571,plain,(
  ( ! [X32] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X32))) | s('type.list.list'('type.string.char'),X32) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X32,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X32,'type.string.char'))))) ) | $spl1196),
  inference(cnf_transformation,[],[f59571_D])).
fof(f59571_D,plain,(
  ( ! [X32] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X32))) | s('type.list.list'('type.string.char'),X32) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X32,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X32,'type.string.char'))))) ) <=> ~$spl1196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1196])])).
fof(f59480,plain,(
  ( ! [X32] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X32))) | s('type.list.list'('type.string.char'),X32) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X32,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X32,'type.string.char'))))) )),
  inference(superposition,[],[f1893,f736])).
fof(f59570,plain,(
  ( ! [X19,X20,X18] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X18))) | s('type.list.list'(X19),'const.list.NIL_0') != s('type.list.list'(X19),'const.list.MAP_2'(s(fun('type.string.char',X19),X20),s('type.list.list'('type.string.char'),X18)))) ) | $spl1194),
  inference(cnf_transformation,[],[f59570_D])).
fof(f59570_D,plain,(
  ( ! [X19,X20,X18] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X18))) | s('type.list.list'(X19),'const.list.NIL_0') != s('type.list.list'(X19),'const.list.MAP_2'(s(fun('type.string.char',X19),X20),s('type.list.list'('type.string.char'),X18)))) ) <=> ~$spl1194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1194])])).
fof(f59477,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X21))) | s('type.list.list'(X22),'const.list.NIL_0') != s('type.list.list'(X22),'const.list.MAP_2'(s(fun('type.string.char',X22),X23),s('type.list.list'('type.string.char'),X21)))) )),
  inference(superposition,[],[f1893,f531])).
fof(f59476,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X18))) | s('type.list.list'(X19),'const.list.NIL_0') != s('type.list.list'(X19),'const.list.MAP_2'(s(fun('type.string.char',X19),X20),s('type.list.list'('type.string.char'),X18)))) )),
  inference(superposition,[],[f1893,f529])).
fof(f59569,plain,(
  ( ! [X16] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X16))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X16)))) ) | $spl1192),
  inference(cnf_transformation,[],[f59569_D])).
fof(f59569_D,plain,(
  ( ! [X16] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X16))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X16)))) ) <=> ~$spl1192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1192])])).
fof(f59475,plain,(
  ( ! [X17] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X17))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X17)))) )),
  inference(superposition,[],[f1893,f525])).
fof(f59474,plain,(
  ( ! [X16] : (p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X16))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X16)))) )),
  inference(superposition,[],[f1893,f523])).
fof(f59567,plain,(
  ( ! [X3,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X1))) | p(s(bool,X3)) | s(bool,X3) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X1),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) ) | $spl1190),
  inference(cnf_transformation,[],[f59567_D])).
fof(f59567_D,plain,(
  ( ! [X3,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X1))) | p(s(bool,X3)) | s(bool,X3) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X1),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) ) <=> ~$spl1190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1190])])).
fof(f59467,plain,(
  ( ! [X304,X303,X305] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X303))) | p(s(bool,X304)) | p(s(bool,X305)) | s(bool,X305) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X303),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) )),
  inference(resolution,[],[f1893,f737])).
fof(f59364,plain,(
  ( ! [X30,X31,X29,X32] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X29))) | p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X29),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))))) | s(bool,X31) != s(bool,X32)) )),
  inference(resolution,[],[f1893,f472])).
fof(f59361,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X17))) | p(s(bool,X18)) | ~p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X17),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) )),
  inference(resolution,[],[f1893,f471])).
fof(f59360,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X13))) | p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X13),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) )),
  inference(resolution,[],[f1893,f470])).
fof(f59359,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X9))) | p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X9),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f1893,f468])).
fof(f59357,plain,(
  ( ! [X4,X2,X3,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X1))) | p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X1),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) )),
  inference(resolution,[],[f1893,f466])).
fof(f59348,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | $spl1183),
  inference(cnf_transformation,[],[f59348_D])).
fof(f59348_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) <=> ~$spl1183),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1183])])).
fof(f59351,plain,(
  ( ! [X49] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X49))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X49)))) ) | $spl1188),
  inference(cnf_transformation,[],[f59351_D])).
fof(f59351_D,plain,(
  ( ! [X49] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X49))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X49)))) ) <=> ~$spl1188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1188])])).
fof(f59317,plain,(
  ( ! [X50] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X50))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X50)))) )),
  inference(superposition,[],[f1892,f523])).
fof(f1892,plain,(
  ( ! [X10] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X10))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X10),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))))))) )),
  inference(superposition,[],[f519,f456])).
fof(f519,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'(X0,X1),X0),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'(X0,X1)),X2)))))))) | s('type.option.option'(X1),'const.option.NONE_0') != s('type.option.option'(X1),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'(X0,X1)),X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f356])).
fof(f59316,plain,(
  ( ! [X49] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X49))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X49)))) )),
  inference(superposition,[],[f1892,f525])).
fof(f59350,plain,(
  ( ! [X45,X43,X44] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X43))) | s('type.list.list'(X44),'const.list.NIL_0') != s('type.list.list'(X44),'const.list.MAP_2'(s(fun('type.string.char',X44),X45),s('type.list.list'('type.string.char'),X43)))) ) | $spl1186),
  inference(cnf_transformation,[],[f59350_D])).
fof(f59350_D,plain,(
  ( ! [X45,X43,X44] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X43))) | s('type.list.list'(X44),'const.list.NIL_0') != s('type.list.list'(X44),'const.list.MAP_2'(s(fun('type.string.char',X44),X45),s('type.list.list'('type.string.char'),X43)))) ) <=> ~$spl1186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1186])])).
fof(f59315,plain,(
  ( ! [X47,X48,X46] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X46))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X47),'const.list.NIL_0') != s('type.list.list'(X47),'const.list.MAP_2'(s(fun('type.string.char',X47),X48),s('type.list.list'('type.string.char'),X46)))) )),
  inference(superposition,[],[f1892,f529])).
fof(f59314,plain,(
  ( ! [X45,X43,X44] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X43))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X44),'const.list.NIL_0') != s('type.list.list'(X44),'const.list.MAP_2'(s(fun('type.string.char',X44),X45),s('type.list.list'('type.string.char'),X43)))) )),
  inference(superposition,[],[f1892,f531])).
fof(f59349,plain,(
  ( ! [X42] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X42))) | s('type.list.list'('type.string.char'),X42) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X42,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X42,'type.string.char'))))) ) | $spl1184),
  inference(cnf_transformation,[],[f59349_D])).
fof(f59349_D,plain,(
  ( ! [X42] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X42))) | s('type.list.list'('type.string.char'),X42) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X42,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X42,'type.string.char'))))) ) <=> ~$spl1184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1184])])).
fof(f59313,plain,(
  ( ! [X42] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),X42))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'('type.string.char'),X42) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X42,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X42,'type.string.char'))))) )),
  inference(superposition,[],[f1892,f736])).
fof(f59344,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X33,'type.string.char'),X34),s('type.list.list'(X33),X35))),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),X35)) ) | $spl1180),
  inference(cnf_transformation,[],[f59344_D])).
fof(f59344_D,plain,(
  ( ! [X35,X33,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X33,'type.string.char'),X34),s('type.list.list'(X33),X35))),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),X35)) ) <=> ~$spl1180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1180])])).
fof(f59341,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | $spl1175),
  inference(cnf_transformation,[],[f59341_D])).
fof(f59341_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) <=> ~$spl1175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1175])])).
fof(f59310,plain,(
  ( ! [X37,X38,X36] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X36,'type.string.char'),X37),s('type.list.list'(X36),X38))),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X36),'const.list.NIL_0') != s('type.list.list'(X36),X38)) )),
  inference(superposition,[],[f1892,f530])).
fof(f59309,plain,(
  ( ! [X35,X33,X34] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),'const.list.MAP_2'(s(fun(X33,'type.string.char'),X34),s('type.list.list'(X33),X35))),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X33),'const.list.NIL_0') != s('type.list.list'(X33),X35)) )),
  inference(superposition,[],[f1892,f532])).
fof(f59343,plain,(
  ( ! [X32] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X32),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'('type.string.char'),X32) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X32,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X32,'type.string.char'))))) ) | $spl1178),
  inference(cnf_transformation,[],[f59343_D])).
fof(f59343_D,plain,(
  ( ! [X32] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X32),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'('type.string.char'),X32) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X32,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X32,'type.string.char'))))) ) <=> ~$spl1178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1178])])).
fof(f59308,plain,(
  ( ! [X32] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X32),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'('type.string.char'),X32) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK23(X32,'type.string.char')),s('type.list.list'('type.string.char'),sK24(X32,'type.string.char'))))) )),
  inference(superposition,[],[f1892,f736])).
fof(f59342,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X18),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X19),'const.list.NIL_0') != s('type.list.list'(X19),'const.list.MAP_2'(s(fun('type.string.char',X19),X20),s('type.list.list'('type.string.char'),X18)))) ) | $spl1176),
  inference(cnf_transformation,[],[f59342_D])).
fof(f59342_D,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X18),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X19),'const.list.NIL_0') != s('type.list.list'(X19),'const.list.MAP_2'(s(fun('type.string.char',X19),X20),s('type.list.list'('type.string.char'),X18)))) ) <=> ~$spl1176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1176])])).
fof(f59305,plain,(
  ( ! [X23,X21,X22] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X21),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X22),'const.list.NIL_0') != s('type.list.list'(X22),'const.list.MAP_2'(s(fun('type.string.char',X22),X23),s('type.list.list'('type.string.char'),X21)))) )),
  inference(superposition,[],[f1892,f531])).
fof(f59304,plain,(
  ( ! [X19,X20,X18] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X18),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s('type.list.list'(X19),'const.list.NIL_0') != s('type.list.list'(X19),'const.list.MAP_2'(s(fun('type.string.char',X19),X20),s('type.list.list'('type.string.char'),X18)))) )),
  inference(superposition,[],[f1892,f529])).
fof(f59339,plain,(
  ( ! [X16] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X16),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X16)))) ) | $spl1172),
  inference(cnf_transformation,[],[f59339_D])).
fof(f59339_D,plain,(
  ( ! [X16] : (~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X16),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X16)))) ) <=> ~$spl1172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1172])])).
fof(f59303,plain,(
  ( ! [X17] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X17),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X17)))) )),
  inference(superposition,[],[f1892,f525])).
fof(f59302,plain,(
  ( ! [X16] : (s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.ast.t')),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ~p(s(bool,'const.bool.IN_2'(s('type.list.list'('type.string.char'),X16),s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))))) | s(fun('type.string.char',bool),'const.pred_set.EMPTY_0') != s(fun('type.string.char',bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.string.char'),X16)))) )),
  inference(superposition,[],[f1892,f523])).
fof(f23977,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl611),
  inference(cnf_transformation,[],[f23977_D])).
fof(f23977_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl611),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl611])])).
fof(f59283,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl97),
  inference(forward_demodulation,[],[f59221,f717])).
fof(f59221,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl97),
  inference(superposition,[],[f2991,f736])).
fof(f59280,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) ) | $spl97),
  inference(forward_demodulation,[],[f59218,f717])).
fof(f59218,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) ) | $spl97),
  inference(superposition,[],[f2991,f531])).
fof(f59279,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) ) | $spl97),
  inference(forward_demodulation,[],[f59217,f717])).
fof(f59217,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) ) | $spl97),
  inference(superposition,[],[f2991,f529])).
fof(f59278,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | $spl97),
  inference(forward_demodulation,[],[f59216,f717])).
fof(f59216,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | $spl97),
  inference(superposition,[],[f2991,f525])).
fof(f59277,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | $spl97),
  inference(forward_demodulation,[],[f59215,f717])).
fof(f59215,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | $spl97),
  inference(superposition,[],[f2991,f523])).
fof(f59270,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1170),
  inference(cnf_transformation,[],[f59270_D])).
fof(f59270_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1170])])).
fof(f59140,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl97),
  inference(resolution,[],[f2991,f737])).
fof(f59037,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl97),
  inference(resolution,[],[f2991,f472])).
fof(f59035,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl97),
  inference(resolution,[],[f2991,f471])).
fof(f59033,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl97),
  inference(resolution,[],[f2991,f470])).
fof(f59032,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl97),
  inference(resolution,[],[f2991,f468])).
fof(f59030,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl97),
  inference(resolution,[],[f2991,f466])).
fof(f59267,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl1167),
  inference(cnf_transformation,[],[f59267_D])).
fof(f59267_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl1167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1167])])).
fof(f59269,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl1169),
  inference(cnf_transformation,[],[f59269_D])).
fof(f59269_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl1169),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1169])])).
fof(f59029,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl97),
  inference(resolution,[],[f2991,f710])).
fof(f59022,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl1164),
  inference(cnf_transformation,[],[f59022_D])).
fof(f59022_D,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl1164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1164])])).
fof(f59028,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58994,f717])).
fof(f58994,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2810,f736])).
fof(f2810,plain,(
  ( ! [X128,X129] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X128,X129)) )),
  inference(resolution,[],[f458,f581])).
fof(f581,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f383])).
fof(f383,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(flattening,[],[f382])).
fof(f382,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(nnf_transformation,[],[f320])).
fof(f59025,plain,(
  ( ! [X10,X8,X11,X9] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58991,f717])).
fof(f58991,plain,(
  ( ! [X10,X8,X11,X9] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2810,f531])).
fof(f59024,plain,(
  ( ! [X6,X4,X7,X5] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58990,f717])).
fof(f58990,plain,(
  ( ! [X6,X4,X7,X5] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2810,f529])).
fof(f59023,plain,(
  ( ! [X2,X3] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58989,f717])).
fof(f58989,plain,(
  ( ! [X2,X3] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2810,f525])).
fof(f59021,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58988,f717])).
fof(f58988,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2810,f523])).
fof(f59018,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl1162),
  inference(cnf_transformation,[],[f59018_D])).
fof(f59018_D,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl1162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1162])])).
fof(f58955,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2810,f736])).
fof(f58952,plain,(
  ( ! [X10,X8,X11,X9] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2810,f531])).
fof(f58951,plain,(
  ( ! [X6,X4,X7,X5] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2810,f529])).
fof(f58950,plain,(
  ( ! [X2,X3] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2810,f525])).
fof(f58949,plain,(
  ( ! [X0,X1] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2810,f523])).
fof(f58904,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl1160),
  inference(cnf_transformation,[],[f58904_D])).
fof(f58904_D,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl1160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1160])])).
fof(f58910,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58876,f717])).
fof(f58876,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2809,f736])).
fof(f2809,plain,(
  ( ! [X127,X126] : (sP8(X126,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X127)) )),
  inference(resolution,[],[f458,f580])).
fof(f580,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f383])).
fof(f58907,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58873,f717])).
fof(f58873,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2809,f531])).
fof(f58906,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58872,f717])).
fof(f58872,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2809,f529])).
fof(f58905,plain,(
  ( ! [X2,X3] : (sP8(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58871,f717])).
fof(f58871,plain,(
  ( ! [X2,X3] : (sP8(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2809,f525])).
fof(f58903,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58870,f717])).
fof(f58870,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2809,f523])).
fof(f58900,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl1158),
  inference(cnf_transformation,[],[f58900_D])).
fof(f58900_D,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl1158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1158])])).
fof(f58837,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2809,f736])).
fof(f58834,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2809,f531])).
fof(f58833,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2809,f529])).
fof(f58832,plain,(
  ( ! [X2,X3] : (sP8(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2809,f525])).
fof(f58831,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2809,f523])).
fof(f58786,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl1156),
  inference(cnf_transformation,[],[f58786_D])).
fof(f58786_D,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl1156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1156])])).
fof(f58792,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58757,f717])).
fof(f58757,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2796,f736])).
fof(f2796,plain,(
  ( ! [X101,X100] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X100,X101)) )),
  inference(resolution,[],[f458,f564])).
fof(f564,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f376])).
fof(f376,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f375])).
fof(f375,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f374])).
fof(f374,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f317])).
fof(f317,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f58789,plain,(
  ( ! [X10,X8,X11,X9] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58754,f717])).
fof(f58754,plain,(
  ( ! [X10,X8,X11,X9] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2796,f531])).
fof(f58788,plain,(
  ( ! [X6,X4,X7,X5] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58753,f717])).
fof(f58753,plain,(
  ( ! [X6,X4,X7,X5] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2796,f529])).
fof(f58787,plain,(
  ( ! [X2,X3] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58752,f717])).
fof(f58752,plain,(
  ( ! [X2,X3] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2796,f525])).
fof(f58785,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58751,f717])).
fof(f58751,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2796,f523])).
fof(f58782,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl1154),
  inference(cnf_transformation,[],[f58782_D])).
fof(f58782_D,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl1154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1154])])).
fof(f58718,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2796,f736])).
fof(f58715,plain,(
  ( ! [X10,X8,X11,X9] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2796,f531])).
fof(f58714,plain,(
  ( ! [X6,X4,X7,X5] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2796,f529])).
fof(f58713,plain,(
  ( ! [X2,X3] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2796,f525])).
fof(f58712,plain,(
  ( ! [X0,X1] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2796,f523])).
fof(f58672,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl1152),
  inference(cnf_transformation,[],[f58672_D])).
fof(f58672_D,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl1152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1152])])).
fof(f58678,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58644,f717])).
fof(f58644,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2780,f736])).
fof(f2780,plain,(
  ( ! [X68,X69] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X68,X69)) )),
  inference(resolution,[],[f458,f547])).
fof(f547,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f368])).
fof(f368,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f367])).
fof(f367,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f366])).
fof(f366,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f314])).
fof(f58675,plain,(
  ( ! [X10,X8,X11,X9] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58641,f717])).
fof(f58641,plain,(
  ( ! [X10,X8,X11,X9] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2780,f531])).
fof(f58674,plain,(
  ( ! [X6,X4,X7,X5] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58640,f717])).
fof(f58640,plain,(
  ( ! [X6,X4,X7,X5] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2780,f529])).
fof(f58673,plain,(
  ( ! [X2,X3] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58639,f717])).
fof(f58639,plain,(
  ( ! [X2,X3] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2780,f525])).
fof(f58671,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58638,f717])).
fof(f58638,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2780,f523])).
fof(f58668,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl1150),
  inference(cnf_transformation,[],[f58668_D])).
fof(f58668_D,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl1150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1150])])).
fof(f58605,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2780,f736])).
fof(f58602,plain,(
  ( ! [X10,X8,X11,X9] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2780,f531])).
fof(f58601,plain,(
  ( ! [X6,X4,X7,X5] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2780,f529])).
fof(f58600,plain,(
  ( ! [X2,X3] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2780,f525])).
fof(f58599,plain,(
  ( ! [X0,X1] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2780,f523])).
fof(f58554,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1148),
  inference(cnf_transformation,[],[f58554_D])).
fof(f58554_D,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1148])])).
fof(f58560,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58526,f717])).
fof(f58526,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2779,f736])).
fof(f2779,plain,(
  ( ! [X66,X67] : (sP4(X66,X67,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f458,f545])).
fof(f545,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f368])).
fof(f58557,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58523,f717])).
fof(f58523,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2779,f531])).
fof(f58556,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58522,f717])).
fof(f58522,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2779,f529])).
fof(f58555,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58521,f717])).
fof(f58521,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2779,f525])).
fof(f58553,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58520,f717])).
fof(f58520,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2779,f523])).
fof(f58550,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1146),
  inference(cnf_transformation,[],[f58550_D])).
fof(f58550_D,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1146])])).
fof(f58487,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2779,f736])).
fof(f58484,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2779,f531])).
fof(f58483,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2779,f529])).
fof(f58482,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2779,f525])).
fof(f58481,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2779,f523])).
fof(f58436,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl1144),
  inference(cnf_transformation,[],[f58436_D])).
fof(f58436_D,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl1144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1144])])).
fof(f58442,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58406,f717])).
fof(f58406,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2761,f736])).
fof(f2761,plain,(
  ( ! [X41,X40] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X40,X41)) )),
  inference(resolution,[],[f458,f487])).
fof(f487,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f343])).
fof(f343,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f342])).
fof(f342,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(flattening,[],[f341])).
fof(f341,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(nnf_transformation,[],[f310])).
fof(f58439,plain,(
  ( ! [X10,X8,X11,X9] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58403,f717])).
fof(f58403,plain,(
  ( ! [X10,X8,X11,X9] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2761,f531])).
fof(f58438,plain,(
  ( ! [X6,X4,X7,X5] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58402,f717])).
fof(f58402,plain,(
  ( ! [X6,X4,X7,X5] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2761,f529])).
fof(f58437,plain,(
  ( ! [X2,X3] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58401,f717])).
fof(f58401,plain,(
  ( ! [X2,X3] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2761,f525])).
fof(f58435,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58400,f717])).
fof(f58400,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2761,f523])).
fof(f58432,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl1142),
  inference(cnf_transformation,[],[f58432_D])).
fof(f58432_D,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl1142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1142])])).
fof(f58367,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2761,f736])).
fof(f58364,plain,(
  ( ! [X10,X8,X11,X9] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2761,f531])).
fof(f58363,plain,(
  ( ! [X6,X4,X7,X5] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2761,f529])).
fof(f58362,plain,(
  ( ! [X2,X3] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2761,f525])).
fof(f58361,plain,(
  ( ! [X0,X1] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2761,f523])).
fof(f57527,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl1115),
  inference(cnf_transformation,[],[f57527_D])).
fof(f57527_D,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl1115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1115])])).
fof(f58431,plain,(
  ( ! [X12,X13] : (sP3(X12,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X13) | p(s(bool,X12))) ) | $spl1140),
  inference(cnf_transformation,[],[f58431_D])).
fof(f58431_D,plain,(
  ( ! [X12,X13] : (sP3(X12,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X13) | p(s(bool,X12))) ) <=> ~$spl1140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1140])])).
fof(f58327,plain,(
  ( ! [X14,X15] : (sP3(X14,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X15) | p(s(bool,X14)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl898),
  inference(resolution,[],[f2761,f35632])).
fof(f35632,plain,(
  ( ! [X17,X15,X16] : (~sP1(X15,X17,X16) | sP3(X16,X15,X17) | p(s(bool,X16)) | s(bool,'T_0') != s(bool,X15)) ) | $spl898),
  inference(subsumption_resolution,[],[f35629,f483])).
fof(f483,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f340])).
fof(f340,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f339])).
fof(f339,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f338])).
fof(f338,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f311])).
fof(f35629,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') != s(bool,X15) | sP3(X16,X15,X17) | p(s(bool,X16)) | ~sP2(X16,X17,X15) | ~sP1(X15,X17,X16)) ) | $spl898),
  inference(resolution,[],[f35566,f479])).
fof(f479,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0)) | ~sP2(X0,X2,X1) | ~sP1(X1,X2,X0) | ~sP0(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f337])).
fof(f337,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | (sP0(X2,X1,X0) & sP1(X1,X2,X0) & sP2(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP0(X2,X1,X0) | ~sP1(X1,X2,X0) | ~sP2(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f336])).
fof(f336,plain,(
  ! [X2,X1,X0] : ((~sP3(X2,X1,X0) | (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP0(X0,X1,X2) | ~sP1(X1,X0,X2) | ~sP2(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP3(X2,X1,X0)))),
  inference(flattening,[],[f335])).
fof(f335,plain,(
  ! [X2,X1,X0] : ((~sP3(X2,X1,X0) | (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP0(X0,X1,X2) | ~sP1(X1,X0,X2) | ~sP2(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP3(X2,X1,X0)))),
  inference(nnf_transformation,[],[f312])).
fof(f35566,plain,(
  ( ! [X2,X0,X1] : (sP0(X2,X1,X0) | s(bool,'T_0') != s(bool,X1)) ) | $spl898),
  inference(subsumption_resolution,[],[f35565,f489])).
fof(f489,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f345])).
fof(f345,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(flattening,[],[f344])).
fof(f344,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(nnf_transformation,[],[f309])).
fof(f35565,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X1) | sP0(X2,X1,X0)) ) | $spl898),
  inference(subsumption_resolution,[],[f35532,f491])).
fof(f491,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f345])).
fof(f35532,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X1) | p(s(bool,X2)) | sP0(X2,X1,X0)) ) | $spl898),
  inference(resolution,[],[f34760,f473])).
fof(f473,plain,(
  ( ! [X2,X0,X1] : (sP0(X2,X1,X0) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f337])).
fof(f57529,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl1116),
  inference(cnf_transformation,[],[f57529_D])).
fof(f57529_D,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl1116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1116])])).
fof(f58326,plain,(
  ( ! [X12,X13] : (sP3(X12,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X13) | p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl890),
  inference(resolution,[],[f2761,f35531])).
fof(f35531,plain,(
  ( ! [X17,X15,X16] : (~sP1(X15,X17,X16) | sP3(X16,X15,X17) | p(s(bool,X16)) | s(bool,'F_0') = s(bool,X15)) ) | $spl890),
  inference(subsumption_resolution,[],[f35528,f483])).
fof(f35528,plain,(
  ( ! [X17,X15,X16] : (s(bool,'F_0') = s(bool,X15) | sP3(X16,X15,X17) | p(s(bool,X16)) | ~sP2(X16,X17,X15) | ~sP1(X15,X17,X16)) ) | $spl890),
  inference(resolution,[],[f35514,f479])).
fof(f35514,plain,(
  ( ! [X2,X0,X1] : (sP0(X2,X0,X1) | s(bool,'F_0') = s(bool,X0)) ) | $spl890),
  inference(subsumption_resolution,[],[f35513,f489])).
fof(f35513,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | sP0(X2,X0,X1)) ) | $spl890),
  inference(subsumption_resolution,[],[f35482,f491])).
fof(f35482,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | sP0(X2,X0,X1)) ) | $spl890),
  inference(resolution,[],[f34748,f473])).
fof(f57532,plain,(
  ( ! [X31] : (s(bool,'T_0') != s(bool,X31) | s(bool,X31) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1122),
  inference(cnf_transformation,[],[f57532_D])).
fof(f57532_D,plain,(
  ( ! [X31] : (s(bool,'T_0') != s(bool,X31) | s(bool,X31) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1122])])).
fof(f58325,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11) | s(bool,X11) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl176),
  inference(resolution,[],[f2761,f21579])).
fof(f21579,plain,(
  ( ! [X17,X15,X16] : (~sP1(X17,X15,X16) | p(s(bool,X16)) | s(bool,'T_0') != s(bool,X15) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(duplicate_literal_removal,[],[f21572])).
fof(f21572,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') != s(bool,X15) | p(s(bool,X16)) | ~sP1(X17,X15,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(resolution,[],[f19220,f495])).
fof(f495,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | s(bool,X0) != s(bool,X1) | ~sP3(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f346])).
fof(f19220,plain,(
  ( ! [X10,X11,X9] : (sP3(X10,X11,X9) | s(bool,'T_0') != s(bool,X9) | p(s(bool,X10)) | ~sP1(X11,X9,X10)) ) | $spl176),
  inference(subsumption_resolution,[],[f19217,f483])).
fof(f19217,plain,(
  ( ! [X10,X11,X9] : (s(bool,'T_0') != s(bool,X9) | sP3(X10,X11,X9) | p(s(bool,X10)) | ~sP2(X10,X9,X11) | ~sP1(X11,X9,X10)) ) | $spl176),
  inference(resolution,[],[f18552,f479])).
fof(f18552,plain,(
  ( ! [X6,X8,X7] : (sP0(X6,X7,X8) | s(bool,'T_0') != s(bool,X6)) ) | $spl176),
  inference(subsumption_resolution,[],[f18539,f489])).
fof(f18539,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X6) | sP0(X6,X7,X8) | p(s(bool,X8))) ) | $spl176),
  inference(resolution,[],[f18535,f483])).
fof(f18535,plain,(
  ( ! [X6,X8,X7] : (~sP2(X8,X6,X7) | s(bool,'T_0') != s(bool,X6) | sP0(X6,X7,X8)) ) | $spl176),
  inference(subsumption_resolution,[],[f18523,f490])).
fof(f490,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f345])).
fof(f18523,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X6) | p(s(bool,X7)) | ~sP2(X8,X6,X7) | sP0(X6,X7,X8)) ) | $spl176),
  inference(resolution,[],[f18512,f473])).
fof(f18512,plain,(
  ( ! [X6,X8,X7] : (sP3(X8,X6,X7) | s(bool,'T_0') != s(bool,X7) | p(s(bool,X6)) | ~sP2(X8,X7,X6)) ) | $spl176),
  inference(subsumption_resolution,[],[f18511,f487])).
fof(f18511,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X7) | sP3(X8,X6,X7) | p(s(bool,X6)) | ~sP2(X8,X7,X6) | ~sP1(X6,X7,X8)) ) | $spl176),
  inference(subsumption_resolution,[],[f18504,f510])).
fof(f18504,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,'T_0') != s(bool,X7) | sP3(X8,X6,X7) | p(s(bool,X6)) | ~sP2(X8,X7,X6) | ~sP1(X6,X7,X8)) ) | $spl176),
  inference(resolution,[],[f18500,f478])).
fof(f478,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1)) | ~sP2(X0,X2,X1) | ~sP1(X1,X2,X0) | ~sP0(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f337])).
fof(f18500,plain,(
  ( ! [X6,X8,X7] : (sP0(X6,X7,X8) | s(bool,'F_0') != s(bool,X7) | s(bool,'T_0') != s(bool,X6)) ) | $spl176),
  inference(subsumption_resolution,[],[f18486,f489])).
fof(f18486,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X6) | s(bool,'F_0') != s(bool,X7) | p(s(bool,X8)) | sP0(X6,X7,X8)) ) | $spl176),
  inference(resolution,[],[f5804,f473])).
fof(f5804,plain,(
  ( ! [X2,X0,X1] : (sP3(X2,X1,X0) | s(bool,'T_0') != s(bool,X0) | s(bool,'F_0') != s(bool,X1) | p(s(bool,X2))) ) | $spl176),
  inference(superposition,[],[f5713,f492])).
fof(f2978,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl92),
  inference(cnf_transformation,[],[f2978_D])).
fof(f2978_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f58324,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl176),
  inference(resolution,[],[f2761,f20225])).
fof(f20225,plain,(
  ( ! [X17,X15,X16] : (~sP1(X17,X15,X16) | ~p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(subsumption_resolution,[],[f20218,f483])).
fof(f20218,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X15)) | ~sP2(X16,X15,X17) | ~sP1(X17,X15,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(resolution,[],[f19218,f495])).
fof(f19218,plain,(
  ( ! [X4,X5,X3] : (sP3(X4,X5,X3) | ~p(s(bool,X3)) | ~sP2(X4,X3,X5) | ~sP1(X5,X3,X4)) ) | $spl176),
  inference(subsumption_resolution,[],[f19215,f514])).
fof(f514,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f354])).
fof(f19215,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,X3) | sP3(X4,X5,X3) | ~p(s(bool,X3)) | ~sP2(X4,X3,X5) | ~sP1(X5,X3,X4)) ) | $spl176),
  inference(resolution,[],[f18552,f477])).
fof(f477,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2)) | ~sP2(X0,X2,X1) | ~sP1(X1,X2,X0) | ~sP0(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f337])).
fof(f58313,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl1138),
  inference(cnf_transformation,[],[f58313_D])).
fof(f58313_D,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl1138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1138])])).
fof(f58319,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f58282,f717])).
fof(f58282,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2760,f736])).
fof(f2760,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X39)) )),
  inference(resolution,[],[f458,f486])).
fof(f486,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f343])).
fof(f58316,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58279,f717])).
fof(f58279,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2760,f531])).
fof(f58315,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58278,f717])).
fof(f58278,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2760,f529])).
fof(f58314,plain,(
  ( ! [X2,X3] : (sP1(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58277,f717])).
fof(f58277,plain,(
  ( ! [X2,X3] : (sP1(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2760,f525])).
fof(f58312,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f58276,f717])).
fof(f58276,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2760,f523])).
fof(f58309,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl1136),
  inference(cnf_transformation,[],[f58309_D])).
fof(f58309_D,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl1136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1136])])).
fof(f58243,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2760,f736])).
fof(f58240,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2760,f531])).
fof(f58239,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2760,f529])).
fof(f58238,plain,(
  ( ! [X2,X3] : (sP1(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2760,f525])).
fof(f58237,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2760,f523])).
fof(f58210,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl892),
  inference(resolution,[],[f2760,f35315])).
fof(f35315,plain,(
  ( ! [X10,X11] : (~sP1('T_0',X11,X10) | p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11)) ) | $spl892),
  inference(duplicate_literal_removal,[],[f35301])).
fof(f35301,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | ~sP1('T_0',X11,X10) | p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11)) ) | $spl892),
  inference(resolution,[],[f35295,f495])).
fof(f35295,plain,(
  ( ! [X10,X11] : (sP3(X10,'T_0',X11) | p(s(bool,X10)) | ~sP1('T_0',X11,X10)) ) | $spl892),
  inference(subsumption_resolution,[],[f35293,f483])).
fof(f35293,plain,(
  ( ! [X10,X11] : (sP3(X10,'T_0',X11) | p(s(bool,X10)) | ~sP2(X10,X11,'T_0') | ~sP1('T_0',X11,X10)) ) | $spl892),
  inference(resolution,[],[f35279,f479])).
fof(f35279,plain,(
  ( ! [X0,X1] : (sP0(X1,'T_0',X0)) ) | $spl892),
  inference(subsumption_resolution,[],[f35278,f489])).
fof(f35278,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP0(X1,'T_0',X0)) ) | $spl892),
  inference(subsumption_resolution,[],[f35255,f491])).
fof(f35255,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | sP0(X1,'T_0',X0)) ) | $spl892),
  inference(resolution,[],[f34750,f473])).
fof(f58308,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) | $spl1134),
  inference(cnf_transformation,[],[f58308_D])).
fof(f58308_D,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) <=> ~$spl1134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1134])])).
fof(f58204,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl910),
  inference(resolution,[],[f2760,f36297])).
fof(f36297,plain,(
  ( ! [X17,X15,X16] : (~sP1(X17,X15,X16) | sP3(X16,X17,X15) | p(s(bool,X16)) | s(bool,'F_0') = s(bool,X15)) ) | $spl910),
  inference(subsumption_resolution,[],[f36292,f483])).
fof(f36292,plain,(
  ( ! [X17,X15,X16] : (s(bool,'F_0') = s(bool,X15) | sP3(X16,X17,X15) | p(s(bool,X16)) | ~sP2(X16,X15,X17) | ~sP1(X17,X15,X16)) ) | $spl910),
  inference(resolution,[],[f36282,f479])).
fof(f36282,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X2,X1) | s(bool,'F_0') = s(bool,X0)) ) | $spl910),
  inference(subsumption_resolution,[],[f36281,f489])).
fof(f36281,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | sP0(X0,X2,X1)) ) | $spl910),
  inference(subsumption_resolution,[],[f36252,f490])).
fof(f36252,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | sP0(X0,X2,X1)) ) | $spl910),
  inference(resolution,[],[f35770,f473])).
fof(f58307,plain,(
  ( ! [X11] : (s(bool,X11) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1132),
  inference(cnf_transformation,[],[f58307_D])).
fof(f58307_D,plain,(
  ( ! [X11] : (s(bool,X11) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1132])])).
fof(f58201,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X11) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl176),
  inference(resolution,[],[f2760,f21579])).
fof(f57670,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl1130),
  inference(cnf_transformation,[],[f57670_D])).
fof(f57670_D,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl1130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1130])])).
fof(f57676,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f57640,f717])).
fof(f57640,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2758,f736])).
fof(f2758,plain,(
  ( ! [X35,X34] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X34,X35)) )),
  inference(resolution,[],[f458,f483])).
fof(f57673,plain,(
  ( ! [X10,X8,X11,X9] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57637,f717])).
fof(f57637,plain,(
  ( ! [X10,X8,X11,X9] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2758,f531])).
fof(f57672,plain,(
  ( ! [X6,X4,X7,X5] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57636,f717])).
fof(f57636,plain,(
  ( ! [X6,X4,X7,X5] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2758,f529])).
fof(f57671,plain,(
  ( ! [X2,X3] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57635,f717])).
fof(f57635,plain,(
  ( ! [X2,X3] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2758,f525])).
fof(f57669,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57634,f717])).
fof(f57634,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2758,f523])).
fof(f57666,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl1128),
  inference(cnf_transformation,[],[f57666_D])).
fof(f57666_D,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl1128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1128])])).
fof(f57601,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2758,f736])).
fof(f57598,plain,(
  ( ! [X10,X8,X11,X9] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2758,f531])).
fof(f57597,plain,(
  ( ! [X6,X4,X7,X5] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2758,f529])).
fof(f57596,plain,(
  ( ! [X2,X3] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2758,f525])).
fof(f57595,plain,(
  ( ! [X0,X1] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2758,f523])).
fof(f57537,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl1126),
  inference(cnf_transformation,[],[f57537_D])).
fof(f57537_D,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl1126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1126])])).
fof(f57543,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f57500,f717])).
fof(f57500,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f2757,f736])).
fof(f2757,plain,(
  ( ! [X33,X32] : (sP2(X32,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X33)) )),
  inference(resolution,[],[f458,f482])).
fof(f482,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f340])).
fof(f57540,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57497,f717])).
fof(f57497,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2757,f531])).
fof(f57539,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57496,f717])).
fof(f57496,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2757,f529])).
fof(f57538,plain,(
  ( ! [X2,X3] : (sP2(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57495,f717])).
fof(f57495,plain,(
  ( ! [X2,X3] : (sP2(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2757,f525])).
fof(f57536,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f57494,f717])).
fof(f57494,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f2757,f523])).
fof(f57533,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl1124),
  inference(cnf_transformation,[],[f57533_D])).
fof(f57533_D,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl1124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1124])])).
fof(f57461,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f2757,f736])).
fof(f57458,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2757,f531])).
fof(f57457,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2757,f529])).
fof(f57456,plain,(
  ( ! [X2,X3] : (sP2(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2757,f525])).
fof(f57455,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f2757,f523])).
fof(f57423,plain,(
  ( ! [X33,X34] : (~p(s(bool,X33)) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,'T_0') != s(bool,X34)) ) | $spl176),
  inference(resolution,[],[f2757,f28860])).
fof(f28860,plain,(
  ( ! [X17,X18,X16] : (~sP2(X17,X18,'F_0') | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | s(bool,'T_0') != s(bool,X16)) ) | $spl176),
  inference(subsumption_resolution,[],[f28859,f485])).
fof(f485,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f343])).
fof(f28859,plain,(
  ( ! [X17,X18,X16] : (s(bool,'T_0') != s(bool,X16) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | ~sP2(X17,X18,'F_0') | ~sP1('F_0',X18,X17)) ) | $spl176),
  inference(subsumption_resolution,[],[f28858,f28714])).
fof(f28714,plain,(
  ( ! [X10,X11,X9] : (sP0(X10,'F_0',X11) | s(bool,X9) != s(bool,X10) | s(bool,'T_0') != s(bool,X9)) ) | $spl176),
  inference(subsumption_resolution,[],[f28700,f489])).
fof(f28700,plain,(
  ( ! [X10,X11,X9] : (s(bool,'T_0') != s(bool,X9) | s(bool,X9) != s(bool,X10) | p(s(bool,X11)) | sP0(X10,'F_0',X11)) ) | $spl176),
  inference(resolution,[],[f19301,f473])).
fof(f19301,plain,(
  ( ! [X10,X11,X9] : (sP3(X11,'F_0',X9) | s(bool,'T_0') != s(bool,X10) | s(bool,X9) != s(bool,X10) | p(s(bool,X11))) ) | $spl176),
  inference(superposition,[],[f5713,f492])).
fof(f28858,plain,(
  ( ! [X17,X18,X16] : (s(bool,'T_0') != s(bool,X16) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | ~sP2(X17,X18,'F_0') | ~sP1('F_0',X18,X17) | ~sP0(X18,'F_0',X17)) ) | $spl176),
  inference(subsumption_resolution,[],[f28841,f19298])).
fof(f19298,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X3) | s(bool,X2) != s(bool,X3) | p(s(bool,X2))) ) | $spl176),
  inference(superposition,[],[f5713,f512])).
fof(f512,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f353])).
fof(f353,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X14] : (s(bool,'F_0') = s(bool,X14) <=> ~p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.EQ_CLAUSES|split|2')).
fof(f28841,plain,(
  ( ! [X17,X18,X16] : (s(bool,'T_0') != s(bool,X16) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,X18) | ~p(s(bool,X18)) | ~sP2(X17,X18,'F_0') | ~sP1('F_0',X18,X17) | ~sP0(X18,'F_0',X17)) ) | $spl176),
  inference(resolution,[],[f19303,f477])).
fof(f19303,plain,(
  ( ! [X17,X15,X16] : (~sP3(X17,'F_0',X15) | s(bool,'T_0') != s(bool,X16) | ~p(s(bool,X17)) | s(bool,X15) != s(bool,X16)) ) | $spl176),
  inference(superposition,[],[f5713,f494])).
fof(f494,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X2)) | ~sP3(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f346])).
fof(f57531,plain,(
  ( ! [X27] : (sP3(X27,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1120),
  inference(cnf_transformation,[],[f57531_D])).
fof(f57531_D,plain,(
  ( ! [X27] : (sP3(X27,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1120])])).
fof(f57422,plain,(
  ( ! [X31,X32] : (s(bool,'T_0') != s(bool,X31) | sP3(X32,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X31) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl176),
  inference(resolution,[],[f2757,f28729])).
fof(f28729,plain,(
  ( ! [X14,X12,X13] : (~sP2(X14,X13,'F_0') | s(bool,'T_0') != s(bool,X12) | sP3(X14,'F_0',X13) | s(bool,X12) != s(bool,X13)) ) | $spl176),
  inference(subsumption_resolution,[],[f28728,f19452])).
fof(f19452,plain,(
  ( ! [X2,X3] : (sP1('F_0',X2,X3)) ) | $spl176),
  inference(subsumption_resolution,[],[f19451,f486])).
fof(f19451,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | sP1('F_0',X2,X3)) ) | $spl176),
  inference(subsumption_resolution,[],[f19445,f485])).
fof(f19445,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | p(s(bool,X3)) | sP1('F_0',X2,X3)) ) | $spl176),
  inference(resolution,[],[f19442,f474])).
fof(f474,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,X2,X0) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f337])).
fof(f19442,plain,(
  ( ! [X4,X5] : (sP3(X5,'F_0',X4) | ~p(s(bool,X4)) | p(s(bool,X5))) ) | $spl176),
  inference(resolution,[],[f19372,f483])).
fof(f19372,plain,(
  ( ! [X2,X3] : (~sP2(X3,X2,'F_0') | ~p(s(bool,X2)) | sP3(X3,'F_0',X2)) ) | $spl176),
  inference(subsumption_resolution,[],[f19371,f514])).
fof(f19371,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | sP3(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP2(X3,X2,'F_0')) ) | $spl176),
  inference(subsumption_resolution,[],[f19368,f18552])).
fof(f19368,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | sP3(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP2(X3,X2,'F_0') | ~sP0(X2,'F_0',X3)) )),
  inference(resolution,[],[f19366,f477])).
fof(f19366,plain,(
  ( ! [X2,X3] : (sP1('F_0',X2,X3) | s(bool,'T_0') != s(bool,X2)) )),
  inference(subsumption_resolution,[],[f19360,f485])).
fof(f19360,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | sP1('F_0',X2,X3)) )),
  inference(resolution,[],[f19007,f474])).
fof(f19007,plain,(
  ( ! [X6,X5] : (sP3(X6,'F_0',X5) | s(bool,'T_0') != s(bool,X5) | p(s(bool,X6))) )),
  inference(superposition,[],[f10934,f492])).
fof(f10934,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(backward_demodulation,[],[f775,f773])).
fof(f773,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))),
  inference(resolution,[],[f455,f509])).
fof(f509,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f352])).
fof(f775,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))),
  inference(resolution,[],[f455,f514])).
fof(f28728,plain,(
  ( ! [X14,X12,X13] : (s(bool,X12) != s(bool,X13) | s(bool,'T_0') != s(bool,X12) | sP3(X14,'F_0',X13) | ~sP2(X14,X13,'F_0') | ~sP1('F_0',X13,X14)) ) | $spl176),
  inference(subsumption_resolution,[],[f28723,f19298])).
fof(f28723,plain,(
  ( ! [X14,X12,X13] : (s(bool,X12) != s(bool,X13) | s(bool,'T_0') != s(bool,X12) | sP3(X14,'F_0',X13) | ~p(s(bool,X13)) | ~sP2(X14,X13,'F_0') | ~sP1('F_0',X13,X14)) ) | $spl176),
  inference(resolution,[],[f28714,f477])).
fof(f57421,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X30))) )),
  inference(resolution,[],[f2757,f19686])).
fof(f19686,plain,(
  ( ! [X10,X11] : (~sP2(X10,X11,'F_0') | s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X10))) )),
  inference(subsumption_resolution,[],[f19685,f489])).
fof(f19685,plain,(
  ( ! [X10,X11] : (~p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11) | ~sP2(X10,X11,'F_0') | ~sP0(X11,'F_0',X10)) )),
  inference(subsumption_resolution,[],[f19684,f650])).
fof(f19684,plain,(
  ( ! [X10,X11] : (~p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11) | p(s(bool,'F_0')) | ~sP2(X10,X11,'F_0') | ~sP0(X11,'F_0',X10)) )),
  inference(subsumption_resolution,[],[f19672,f487])).
fof(f19672,plain,(
  ( ! [X10,X11] : (~p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11) | p(s(bool,'F_0')) | ~sP2(X10,X11,'F_0') | ~sP1('F_0',X11,X10) | ~sP0(X11,'F_0',X10)) )),
  inference(resolution,[],[f19009,f478])).
fof(f19009,plain,(
  ( ! [X10,X9] : (~sP3(X10,'F_0',X9) | ~p(s(bool,X10)) | s(bool,'T_0') != s(bool,X9)) )),
  inference(superposition,[],[f10934,f494])).
fof(f57418,plain,(
  ( ! [X27] : (sP3(X27,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl176),
  inference(resolution,[],[f2757,f19374])).
fof(f19374,plain,(
  ( ! [X4,X5] : (~sP2(X5,X4,'F_0') | sP3(X5,'F_0',X4) | s(bool,'T_0') != s(bool,X4)) ) | $spl176),
  inference(subsumption_resolution,[],[f19373,f701])).
fof(f701,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f237])).
fof(f237,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.inferProps.tenv_alpha_bind_var_list2',aHL_FALSITY)).
fof(f19373,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | sP3(X5,'F_0',X4) | p(s(bool,'F_0')) | ~sP2(X5,X4,'F_0')) ) | $spl176),
  inference(subsumption_resolution,[],[f19369,f18552])).
fof(f19369,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | sP3(X5,'F_0',X4) | p(s(bool,'F_0')) | ~sP2(X5,X4,'F_0') | ~sP0(X4,'F_0',X5)) )),
  inference(resolution,[],[f19366,f478])).
fof(f57414,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X20))) ) | $spl6),
  inference(resolution,[],[f2757,f36983])).
fof(f36983,plain,(
  ( ! [X6,X4,X7,X5] : (~sP2(X6,X7,X4) | ~p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | p(s(bool,X4))) ) | $spl6),
  inference(subsumption_resolution,[],[f36982,f489])).
fof(f36982,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X4)) | ~p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | ~sP2(X6,X7,X4) | ~sP0(X7,X4,X6)) ) | $spl6),
  inference(subsumption_resolution,[],[f36981,f487])).
fof(f36981,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X4)) | ~p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | ~sP2(X6,X7,X4) | ~sP1(X4,X7,X6) | ~sP0(X7,X4,X6)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f36931])).
fof(f36931,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X4)) | ~p(s(bool,X5)) | ~p(s(bool,X6)) | s(bool,X5) != s(bool,X7) | p(s(bool,X4)) | ~sP2(X6,X7,X4) | ~sP1(X4,X7,X6) | ~sP0(X7,X4,X6)) ) | $spl6),
  inference(resolution,[],[f1769,f478])).
fof(f1769,plain,(
  ( ! [X14,X12,X15,X13] : (~sP3(X15,X12,X13) | p(s(bool,X12)) | ~p(s(bool,X14)) | ~p(s(bool,X15)) | s(bool,X13) != s(bool,X14)) ) | $spl6),
  inference(superposition,[],[f931,f494])).
fof(f57530,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X17))) ) | $spl1118),
  inference(cnf_transformation,[],[f57530_D])).
fof(f57530_D,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X17))) ) <=> ~$spl1118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1118])])).
fof(f57413,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X17)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl910),
  inference(resolution,[],[f2757,f36296])).
fof(f36296,plain,(
  ( ! [X14,X12,X13] : (~sP2(X13,X12,X14) | sP3(X13,X14,X12) | p(s(bool,X14)) | s(bool,'F_0') = s(bool,X12)) ) | $spl910),
  inference(subsumption_resolution,[],[f36291,f487])).
fof(f36291,plain,(
  ( ! [X14,X12,X13] : (s(bool,'F_0') = s(bool,X12) | sP3(X13,X14,X12) | p(s(bool,X14)) | ~sP2(X13,X12,X14) | ~sP1(X14,X12,X13)) ) | $spl910),
  inference(resolution,[],[f36282,f478])).
fof(f57411,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X13))) ) | $spl176),
  inference(resolution,[],[f2757,f21565])).
fof(f21565,plain,(
  ( ! [X14,X12,X13] : (~sP2(X14,X12,X13) | p(s(bool,X13)) | s(bool,'T_0') != s(bool,X12) | ~p(s(bool,X14))) ) | $spl176),
  inference(subsumption_resolution,[],[f21558,f19298])).
fof(f21558,plain,(
  ( ! [X14,X12,X13] : (s(bool,'T_0') != s(bool,X12) | p(s(bool,X13)) | ~sP2(X14,X12,X13) | s(bool,X12) = s(bool,X13) | ~p(s(bool,X14))) ) | $spl176),
  inference(resolution,[],[f19219,f494])).
fof(f19219,plain,(
  ( ! [X6,X8,X7] : (sP3(X7,X8,X6) | s(bool,'T_0') != s(bool,X6) | p(s(bool,X8)) | ~sP2(X7,X6,X8)) ) | $spl176),
  inference(subsumption_resolution,[],[f19216,f487])).
fof(f19216,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X6) | sP3(X7,X8,X6) | p(s(bool,X8)) | ~sP2(X7,X6,X8) | ~sP1(X8,X6,X7)) ) | $spl176),
  inference(resolution,[],[f18552,f478])).
fof(f57525,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl1112),
  inference(cnf_transformation,[],[f57525_D])).
fof(f57525_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl1112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1112])])).
fof(f57410,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X11))) ) | $spl176),
  inference(resolution,[],[f2757,f20314])).
fof(f20314,plain,(
  ( ! [X14,X12,X13] : (~sP2(X13,X14,X12) | p(s(bool,X12)) | s(bool,X12) = s(bool,X14) | ~p(s(bool,X13))) ) | $spl176),
  inference(subsumption_resolution,[],[f20308,f489])).
fof(f20308,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~sP2(X13,X14,X12) | ~sP0(X14,X12,X13) | s(bool,X12) = s(bool,X14) | ~p(s(bool,X13))) ) | $spl176),
  inference(resolution,[],[f19295,f494])).
fof(f19295,plain,(
  ( ! [X6,X8,X7] : (sP3(X7,X6,X8) | p(s(bool,X6)) | ~sP2(X7,X8,X6) | ~sP0(X8,X6,X7)) ) | $spl176),
  inference(subsumption_resolution,[],[f19292,f510])).
fof(f19292,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,X6) | sP3(X7,X6,X8) | p(s(bool,X6)) | ~sP2(X7,X8,X6) | ~sP0(X8,X6,X7)) ) | $spl176),
  inference(resolution,[],[f18610,f478])).
fof(f18610,plain,(
  ( ! [X6,X8,X7] : (sP1(X6,X7,X8) | s(bool,'F_0') != s(bool,X6)) ) | $spl176),
  inference(subsumption_resolution,[],[f18597,f485])).
fof(f18597,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,X6) | sP1(X6,X7,X8) | p(s(bool,X8))) ) | $spl176),
  inference(resolution,[],[f18594,f483])).
fof(f18594,plain,(
  ( ! [X10,X11,X9] : (~sP2(X11,X10,X9) | s(bool,'F_0') != s(bool,X9) | sP1(X9,X10,X11)) ) | $spl176),
  inference(subsumption_resolution,[],[f18579,f486])).
fof(f18579,plain,(
  ( ! [X10,X11,X9] : (s(bool,'F_0') != s(bool,X9) | ~p(s(bool,X10)) | ~sP2(X11,X10,X9) | sP1(X9,X10,X11)) ) | $spl176),
  inference(resolution,[],[f18518,f474])).
fof(f18518,plain,(
  ( ! [X4,X5,X3] : (sP3(X5,X3,X4) | s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X4)) | ~sP2(X5,X4,X3)) ) | $spl176),
  inference(subsumption_resolution,[],[f18517,f514])).
fof(f18517,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,'T_0') != s(bool,X4) | sP3(X5,X3,X4) | ~p(s(bool,X4)) | ~sP2(X5,X4,X3)) ) | $spl176),
  inference(subsumption_resolution,[],[f18514,f18500])).
fof(f18514,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,'T_0') != s(bool,X4) | sP3(X5,X3,X4) | ~p(s(bool,X4)) | ~sP2(X5,X4,X3) | ~sP0(X4,X3,X5)) ) | $spl176),
  inference(resolution,[],[f18501,f477])).
fof(f18501,plain,(
  ( ! [X10,X11,X9] : (sP1(X10,X9,X11) | s(bool,'F_0') != s(bool,X10) | s(bool,'T_0') != s(bool,X9)) ) | $spl176),
  inference(subsumption_resolution,[],[f18487,f485])).
fof(f18487,plain,(
  ( ! [X10,X11,X9] : (s(bool,'T_0') != s(bool,X9) | s(bool,'F_0') != s(bool,X10) | p(s(bool,X11)) | sP1(X10,X9,X11)) ) | $spl176),
  inference(resolution,[],[f5804,f474])).
fof(f57396,plain,(
  ( ! [X28,X26,X24,X23,X21,X25,X22,X20] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X20),s('type.num.num',X21),s('type.ast.t',X22),s('type.typeSystem.tenv_val',X23))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X24),s('type.num.num',X25),s('type.ast.t',X26),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X23)))) ) | $spl1110),
  inference(cnf_transformation,[],[f57396_D])).
fof(f57396_D,plain,(
  ( ! [X28,X26,X24,X23,X21,X25,X22,X20] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X20),s('type.num.num',X21),s('type.ast.t',X22),s('type.typeSystem.tenv_val',X23))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X24),s('type.num.num',X25),s('type.ast.t',X26),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X28)) | s(bool,X28) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X23)))) ) <=> ~$spl1110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1110])])).
fof(f57340,plain,(
  ( ! [X984,X990,X988,X982,X987,X985,X989,X983,X986] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X982),s('type.num.num',X983),s('type.ast.t',X984),s('type.typeSystem.tenv_val',X985))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X986),s('type.num.num',X987),s('type.ast.t',X988),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X989)) | p(s(bool,X990)) | s(bool,X990) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X985)))) )),
  inference(resolution,[],[f1109,f737])).
fof(f1109,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X0)))) | s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X1),s('type.num.num',X2),s('type.ast.t',X3),s('type.typeSystem.tenv_val',X0))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(superposition,[],[f457,f725])).
fof(f725,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.typeSystem.tenv_val',X3) = s('type.typeSystem.tenv_val',X7) | s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.ast.t',X2),s('type.typeSystem.tenv_val',X3))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val',X7)))) )),
  inference(cnf_transformation,[],[f448])).
fof(f448,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.ast.t',X2),s('type.typeSystem.tenv_val',X3))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val',X7))) | (s('type.list.list'('type.string.char'),X0) = s('type.list.list'('type.string.char'),X4) & s('type.num.num',X1) = s('type.num.num',X5) & s('type.ast.t',X2) = s('type.ast.t',X6) & s('type.typeSystem.tenv_val',X3) = s('type.typeSystem.tenv_val',X7))) & (s('type.list.list'('type.string.char'),X0) != s('type.list.list'('type.string.char'),X4) | s('type.num.num',X1) != s('type.num.num',X5) | s('type.ast.t',X2) != s('type.ast.t',X6) | s('type.typeSystem.tenv_val',X3) != s('type.typeSystem.tenv_val',X7) | s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.ast.t',X2),s('type.typeSystem.tenv_val',X3))) = s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val',X7)))))),
  inference(flattening,[],[f447])).
fof(f447,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.ast.t',X2),s('type.typeSystem.tenv_val',X3))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val',X7))) | (s('type.list.list'('type.string.char'),X0) = s('type.list.list'('type.string.char'),X4) & s('type.num.num',X1) = s('type.num.num',X5) & s('type.ast.t',X2) = s('type.ast.t',X6) & s('type.typeSystem.tenv_val',X3) = s('type.typeSystem.tenv_val',X7))) & ((s('type.list.list'('type.string.char'),X0) != s('type.list.list'('type.string.char'),X4) | s('type.num.num',X1) != s('type.num.num',X5) | s('type.ast.t',X2) != s('type.ast.t',X6) | s('type.typeSystem.tenv_val',X3) != s('type.typeSystem.tenv_val',X7)) | s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.ast.t',X2),s('type.typeSystem.tenv_val',X3))) = s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val',X7)))))),
  inference(nnf_transformation,[],[f252])).
fof(f252,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X0),s('type.num.num',X1),s('type.ast.t',X2),s('type.typeSystem.tenv_val',X3))) = s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val',X7))) <=> (s('type.list.list'('type.string.char'),X0) = s('type.list.list'('type.string.char'),X4) & s('type.num.num',X1) = s('type.num.num',X5) & s('type.ast.t',X2) = s('type.ast.t',X6) & s('type.typeSystem.tenv_val',X3) = s('type.typeSystem.tenv_val',X7)))),
  inference(rectify,[],[f118])).
fof(f118,axiom,(
  ! [X83,X84,X85,X86,X98,X97,X99,X100] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X83),s('type.num.num',X84),s('type.ast.t',X85),s('type.typeSystem.tenv_val',X86))) = s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X98),s('type.num.num',X97),s('type.ast.t',X99),s('type.typeSystem.tenv_val',X100))) <=> (s('type.list.list'('type.string.char'),X83) = s('type.list.list'('type.string.char'),X98) & s('type.num.num',X84) = s('type.num.num',X97) & s('type.ast.t',X85) = s('type.ast.t',X99) & s('type.typeSystem.tenv_val',X86) = s('type.typeSystem.tenv_val',X100)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.typeSystem.tenv_val_|49||49||split|1')).
fof(f57237,plain,(
  ( ! [X94,X92,X90,X99,X97,X95,X93,X91,X98,X96] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X90),s('type.num.num',X91),s('type.ast.t',X92),s('type.typeSystem.tenv_val',X93))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X94),s('type.num.num',X95),s('type.ast.t',X96),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X97)) | ~p(s(bool,X98)) | s(bool,X97) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X93))) | s(bool,X98) != s(bool,X99)) )),
  inference(resolution,[],[f1109,f472])).
fof(f57234,plain,(
  ( ! [X61,X68,X66,X64,X62,X60,X69,X67,X65,X63] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X60),s('type.num.num',X61),s('type.ast.t',X62),s('type.typeSystem.tenv_val',X63))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X64),s('type.num.num',X65),s('type.ast.t',X66),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X67)) | ~p(s(bool,X68)) | p(s(bool,X69)) | s(bool,X69) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X63)))) )),
  inference(resolution,[],[f1109,f471])).
fof(f57233,plain,(
  ( ! [X59,X57,X54,X52,X50,X58,X56,X55,X53,X51] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X50),s('type.num.num',X51),s('type.ast.t',X52),s('type.typeSystem.tenv_val',X53))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X54),s('type.num.num',X55),s('type.ast.t',X56),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X57)) | p(s(bool,X58)) | s(bool,X57) != s(bool,X59) | s(bool,X58) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X53)))) )),
  inference(resolution,[],[f1109,f470])).
fof(f57232,plain,(
  ( ! [X47,X45,X43,X41,X48,X46,X44,X42,X40,X49] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X40),s('type.num.num',X41),s('type.ast.t',X42),s('type.typeSystem.tenv_val',X43))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X44),s('type.num.num',X45),s('type.ast.t',X46),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X47)) | ~p(s(bool,X48)) | s(bool,X47) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X43))) | s(bool,X48) != s(bool,X49)) )),
  inference(resolution,[],[f1109,f468])).
fof(f57230,plain,(
  ( ! [X28,X26,X24,X23,X21,X29,X27,X25,X22,X20] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X20),s('type.num.num',X21),s('type.ast.t',X22),s('type.typeSystem.tenv_val',X23))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X24),s('type.num.num',X25),s('type.ast.t',X26),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X27) != s(bool,X29) | s(bool,X28) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X23)))) )),
  inference(resolution,[],[f1109,f466])).
fof(f56458,plain,(
  ( ! [X14,X19,X17,X15,X22,X20,X18,X16] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X14),s('type.num.num',X15),s('type.ast.t',X16),s('type.typeSystem.tenv_val',X17))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X18),s('type.num.num',X19),s('type.ast.t',X20),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X17)))) ) | $spl1108),
  inference(cnf_transformation,[],[f56458_D])).
fof(f56458_D,plain,(
  ( ! [X14,X19,X17,X15,X22,X20,X18,X16] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X14),s('type.num.num',X15),s('type.ast.t',X16),s('type.typeSystem.tenv_val',X17))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X18),s('type.num.num',X19),s('type.ast.t',X20),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X17)))) ) <=> ~$spl1108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1108])])).
fof(f56402,plain,(
  ( ! [X984,X978,X976,X982,X980,X979,X977,X983,X981] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X976),s('type.num.num',X977),s('type.ast.t',X978),s('type.typeSystem.tenv_val',X979))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X980),s('type.num.num',X981),s('type.ast.t',X982),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X983)) | p(s(bool,X984)) | s(bool,X984) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X979)))) )),
  inference(resolution,[],[f898,f737])).
fof(f898,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X0)))) | s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X1),s('type.num.num',X2),s('type.ast.t',X3),s('type.typeSystem.tenv_val',X0))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X4),s('type.num.num',X5),s('type.ast.t',X6),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(superposition,[],[f455,f725])).
fof(f56299,plain,(
  ( ! [X92,X90,X88,X87,X85,X93,X91,X89,X86,X84] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X84),s('type.num.num',X85),s('type.ast.t',X86),s('type.typeSystem.tenv_val',X87))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X88),s('type.num.num',X89),s('type.ast.t',X90),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X91) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X87))) | s(bool,X92) != s(bool,X93)) )),
  inference(resolution,[],[f898,f472])).
fof(f56296,plain,(
  ( ! [X61,X59,X57,X54,X62,X60,X58,X56,X55,X63] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X54),s('type.num.num',X55),s('type.ast.t',X56),s('type.typeSystem.tenv_val',X57))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X58),s('type.num.num',X59),s('type.ast.t',X60),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X61)) | ~p(s(bool,X62)) | p(s(bool,X63)) | s(bool,X63) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X57)))) )),
  inference(resolution,[],[f898,f471])).
fof(f56295,plain,(
  ( ! [X47,X45,X52,X50,X48,X46,X44,X53,X51,X49] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X44),s('type.num.num',X45),s('type.ast.t',X46),s('type.typeSystem.tenv_val',X47))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X48),s('type.num.num',X49),s('type.ast.t',X50),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X51)) | p(s(bool,X52)) | s(bool,X51) != s(bool,X53) | s(bool,X52) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X47)))) )),
  inference(resolution,[],[f898,f470])).
fof(f56294,plain,(
  ( ! [X39,X37,X35,X43,X41,X38,X36,X34,X42,X40] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X34),s('type.num.num',X35),s('type.ast.t',X36),s('type.typeSystem.tenv_val',X37))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X38),s('type.num.num',X39),s('type.ast.t',X40),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X41)) | ~p(s(bool,X42)) | s(bool,X41) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X37))) | s(bool,X42) != s(bool,X43)) )),
  inference(resolution,[],[f898,f468])).
fof(f56292,plain,(
  ( ! [X14,X23,X21,X19,X17,X15,X22,X20,X18,X16] : (s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X14),s('type.num.num',X15),s('type.ast.t',X16),s('type.typeSystem.tenv_val',X17))) != s('type.typeSystem.tenv_val','const.typeSystem.Bind_name_4'(s('type.list.list'('type.string.char'),X18),s('type.num.num',X19),s('type.ast.t',X20),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X17)))) )),
  inference(resolution,[],[f898,f466])).
fof(f55708,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1106),
  inference(cnf_transformation,[],[f55708_D])).
fof(f55708_D,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1106])])).
fof(f1447,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,X37)) ) | $spl52),
  inference(cnf_transformation,[],[f1447_D])).
fof(f1447_D,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,X37)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f55707,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl76)),
  inference(subsumption_resolution,[],[f55492,f513])).
fof(f55492,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | ~p(s(bool,X482)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl76)),
  inference(superposition,[],[f1767,f14954])).
fof(f14954,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl76),
  inference(resolution,[],[f4288,f514])).
fof(f4288,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl76),
  inference(resolution,[],[f2216,f709])).
fof(f1767,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,X5) != s(bool,X6) | p(s(bool,X4)) | ~p(s(bool,X6)) | sP3(X7,X4,X5) | p(s(bool,X7))) ) | $spl6),
  inference(superposition,[],[f931,f492])).
fof(f55706,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) | $spl1104),
  inference(cnf_transformation,[],[f55706_D])).
fof(f55706_D,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) <=> ~$spl1104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1104])])).
fof(f55705,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl76)),
  inference(subsumption_resolution,[],[f55490,f513])).
fof(f55490,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | ~p(s(bool,X476)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl76)),
  inference(superposition,[],[f1766,f14954])).
fof(f1766,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) != s(bool,X2) | p(s(bool,X0)) | ~p(s(bool,X2)) | sP3(X3,X1,X0) | p(s(bool,X3))) ) | $spl6),
  inference(superposition,[],[f931,f492])).
fof(f54749,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1102),
  inference(cnf_transformation,[],[f54749_D])).
fof(f54749_D,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1102])])).
fof(f54748,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl76)),
  inference(subsumption_resolution,[],[f54532,f513])).
fof(f54532,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | ~p(s(bool,X482)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl76)),
  inference(superposition,[],[f1767,f14653])).
fof(f14653,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl76),
  inference(resolution,[],[f4287,f514])).
fof(f4287,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl76),
  inference(resolution,[],[f2216,f708])).
fof(f54747,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) | $spl1100),
  inference(cnf_transformation,[],[f54747_D])).
fof(f54747_D,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) <=> ~$spl1100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1100])])).
fof(f54746,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl76)),
  inference(subsumption_resolution,[],[f54530,f513])).
fof(f54530,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | ~p(s(bool,X476)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl76)),
  inference(superposition,[],[f1766,f14653])).
fof(f52799,plain,(
  ( ! [X496,X495] : (~p(s(bool,X495)) | p(s(bool,X496)) | sP3(X496,X495,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1098),
  inference(cnf_transformation,[],[f52799_D])).
fof(f52799_D,plain,(
  ( ! [X496,X495] : (~p(s(bool,X495)) | p(s(bool,X496)) | sP3(X496,X495,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1098),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1098])])).
fof(f52798,plain,(
  ( ! [X494,X496,X495] : (p(s(bool,X494)) | ~p(s(bool,X495)) | sP3(X496,X495,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X496))) ) | ($spl6 | $spl119)),
  inference(subsumption_resolution,[],[f52527,f510])).
fof(f52527,plain,(
  ( ! [X494,X496,X495] : (s(bool,'F_0') != s(bool,X494) | p(s(bool,X494)) | ~p(s(bool,X495)) | sP3(X496,X495,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X496))) ) | ($spl6 | $spl119)),
  inference(superposition,[],[f1795,f37823])).
fof(f52797,plain,(
  ( ! [X490,X489] : (~p(s(bool,X489)) | p(s(bool,X490)) | sP3(X490,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489)) ) | $spl1096),
  inference(cnf_transformation,[],[f52797_D])).
fof(f52797_D,plain,(
  ( ! [X490,X489] : (~p(s(bool,X489)) | p(s(bool,X490)) | sP3(X490,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489)) ) <=> ~$spl1096),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1096])])).
fof(f52796,plain,(
  ( ! [X488,X490,X489] : (p(s(bool,X488)) | ~p(s(bool,X489)) | sP3(X490,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489) | p(s(bool,X490))) ) | ($spl6 | $spl119)),
  inference(subsumption_resolution,[],[f52525,f510])).
fof(f52525,plain,(
  ( ! [X488,X490,X489] : (s(bool,'F_0') != s(bool,X488) | p(s(bool,X488)) | ~p(s(bool,X489)) | sP3(X490,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489) | p(s(bool,X490))) ) | ($spl6 | $spl119)),
  inference(superposition,[],[f1794,f37823])).
fof(f51569,plain,(
  ( ! [X496,X495] : (~p(s(bool,X495)) | p(s(bool,X496)) | sP3(X496,X495,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1094),
  inference(cnf_transformation,[],[f51569_D])).
fof(f51569_D,plain,(
  ( ! [X496,X495] : (~p(s(bool,X495)) | p(s(bool,X496)) | sP3(X496,X495,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1094),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1094])])).
fof(f51568,plain,(
  ( ! [X494,X496,X495] : (p(s(bool,X494)) | ~p(s(bool,X495)) | sP3(X496,X495,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X496))) ) | ($spl6 | $spl121)),
  inference(subsumption_resolution,[],[f51297,f510])).
fof(f51297,plain,(
  ( ! [X494,X496,X495] : (s(bool,'F_0') != s(bool,X494) | p(s(bool,X494)) | ~p(s(bool,X495)) | sP3(X496,X495,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X496))) ) | ($spl6 | $spl121)),
  inference(superposition,[],[f1795,f33800])).
fof(f51567,plain,(
  ( ! [X490,X489] : (~p(s(bool,X489)) | p(s(bool,X490)) | sP3(X490,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489)) ) | $spl1092),
  inference(cnf_transformation,[],[f51567_D])).
fof(f51567_D,plain,(
  ( ! [X490,X489] : (~p(s(bool,X489)) | p(s(bool,X490)) | sP3(X490,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489)) ) <=> ~$spl1092),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1092])])).
fof(f51566,plain,(
  ( ! [X488,X490,X489] : (p(s(bool,X488)) | ~p(s(bool,X489)) | sP3(X490,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489) | p(s(bool,X490))) ) | ($spl6 | $spl121)),
  inference(subsumption_resolution,[],[f51295,f510])).
fof(f51295,plain,(
  ( ! [X488,X490,X489] : (s(bool,'F_0') != s(bool,X488) | p(s(bool,X488)) | ~p(s(bool,X489)) | sP3(X490,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X489) | p(s(bool,X490))) ) | ($spl6 | $spl121)),
  inference(superposition,[],[f1794,f33800])).
fof(f49592,plain,(
  ( ! [X14,X12,X13,X11,X16] : (s('type.pair.prod'(X11,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X11,X12),s('type.typeSystem.tenv_val',X13))) != s('type.pair.prod'(X11,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X11,X14),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X13)))) ) | $spl1090),
  inference(cnf_transformation,[],[f49592_D])).
fof(f49592_D,plain,(
  ( ! [X14,X12,X13,X11,X16] : (s('type.pair.prod'(X11,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X11,X12),s('type.typeSystem.tenv_val',X13))) != s('type.pair.prod'(X11,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X11,X14),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X13)))) ) <=> ~$spl1090),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1090])])).
fof(f49536,plain,(
  ( ! [X648,X644,X646,X645,X647,X643] : (s('type.pair.prod'(X643,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X643,X644),s('type.typeSystem.tenv_val',X645))) != s('type.pair.prod'(X643,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X643,X646),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X647)) | p(s(bool,X648)) | s(bool,X648) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X645)))) )),
  inference(resolution,[],[f1115,f737])).
fof(f1115,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X28)))) | s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val',X28))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X31),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(superposition,[],[f457,f728])).
fof(f728,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X3) = s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f450])).
fof(f450,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & (s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(flattening,[],[f449])).
fof(f449,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & ((s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5)) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(nnf_transformation,[],[f254])).
fof(f254,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(flattening,[],[f253])).
fof(f253,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X15,X29] : ! [X22,X24,X34,X35] : (s('type.pair.prod'(X15,X29),'const.pair.,_2'(s(X15,X22),s(X29,X24))) = s('type.pair.prod'(X15,X29),'const.pair.,_2'(s(X15,X34),s(X29,X35))) <=> (s(X15,X22) = s(X15,X34) & s(X29,X24) = s(X29,X35)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.pair.CLOSED_PAIR_EQ')).
fof(f49433,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (s('type.pair.prod'(X60,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X60,X61),s('type.typeSystem.tenv_val',X62))) != s('type.pair.prod'(X60,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X60,X63),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X64)) | ~p(s(bool,X65)) | s(bool,X64) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X62))) | s(bool,X65) != s(bool,X66)) )),
  inference(resolution,[],[f1115,f472])).
fof(f49430,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (s('type.pair.prod'(X39,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X39,X40),s('type.typeSystem.tenv_val',X41))) != s('type.pair.prod'(X39,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X39,X42),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X43)) | ~p(s(bool,X44)) | p(s(bool,X45)) | s(bool,X45) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X41)))) )),
  inference(resolution,[],[f1115,f471])).
fof(f49429,plain,(
  ( ! [X37,X35,X33,X38,X36,X34,X32] : (s('type.pair.prod'(X32,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X32,X33),s('type.typeSystem.tenv_val',X34))) != s('type.pair.prod'(X32,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X32,X35),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X34)))) )),
  inference(resolution,[],[f1115,f470])).
fof(f49428,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25] : (s('type.pair.prod'(X25,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X25,X26),s('type.typeSystem.tenv_val',X27))) != s('type.pair.prod'(X25,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X25,X28),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X27))) | s(bool,X30) != s(bool,X31)) )),
  inference(resolution,[],[f1115,f468])).
fof(f49426,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X16] : (s('type.pair.prod'(X11,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X11,X12),s('type.typeSystem.tenv_val',X13))) != s('type.pair.prod'(X11,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X11,X14),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X13)))) )),
  inference(resolution,[],[f1115,f466])).
fof(f49390,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1088),
  inference(cnf_transformation,[],[f49390_D])).
fof(f49390_D,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1088),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1088])])).
fof(f49389,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl24)),
  inference(subsumption_resolution,[],[f49174,f513])).
fof(f49174,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | ~p(s(bool,X482)) | sP3(X484,X483,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl24)),
  inference(superposition,[],[f1767,f14355])).
fof(f14355,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl24),
  inference(resolution,[],[f3634,f514])).
fof(f3634,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl24),
  inference(resolution,[],[f947,f708])).
fof(f49388,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) | $spl1086),
  inference(cnf_transformation,[],[f49388_D])).
fof(f49388_D,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) <=> ~$spl1086),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1086])])).
fof(f49387,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl24)),
  inference(subsumption_resolution,[],[f49172,f513])).
fof(f49172,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | ~p(s(bool,X476)) | sP3(X478,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl24)),
  inference(superposition,[],[f1766,f14355])).
fof(f48747,plain,(
  ( ! [X14,X12,X13,X11,X16] : (s('type.pair.prod'('type.typeSystem.tenv_val',X11),'const.pair.,_2'(s('type.typeSystem.tenv_val',X12),s(X11,X13))) != s('type.pair.prod'('type.typeSystem.tenv_val',X11),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X11,X14))) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X12)))) ) | $spl1084),
  inference(cnf_transformation,[],[f48747_D])).
fof(f48747_D,plain,(
  ( ! [X14,X12,X13,X11,X16] : (s('type.pair.prod'('type.typeSystem.tenv_val',X11),'const.pair.,_2'(s('type.typeSystem.tenv_val',X12),s(X11,X13))) != s('type.pair.prod'('type.typeSystem.tenv_val',X11),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X11,X14))) | p(s(bool,X16)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X12)))) ) <=> ~$spl1084),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1084])])).
fof(f48691,plain,(
  ( ! [X648,X644,X646,X645,X647,X643] : (s('type.pair.prod'('type.typeSystem.tenv_val',X643),'const.pair.,_2'(s('type.typeSystem.tenv_val',X644),s(X643,X645))) != s('type.pair.prod'('type.typeSystem.tenv_val',X643),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X643,X646))) | p(s(bool,X647)) | p(s(bool,X648)) | s(bool,X648) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X644)))) )),
  inference(resolution,[],[f1113,f737])).
fof(f1113,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X20)))) | s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val',X20),s(X21,X22))) != s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X21,X23)))) )),
  inference(superposition,[],[f457,f727])).
fof(f727,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X2) = s(X0,X4) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f450])).
fof(f48588,plain,(
  ( ! [X61,X66,X64,X62,X60,X65,X63] : (s('type.pair.prod'('type.typeSystem.tenv_val',X60),'const.pair.,_2'(s('type.typeSystem.tenv_val',X61),s(X60,X62))) != s('type.pair.prod'('type.typeSystem.tenv_val',X60),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X60,X63))) | p(s(bool,X64)) | ~p(s(bool,X65)) | s(bool,X64) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X61))) | s(bool,X65) != s(bool,X66)) )),
  inference(resolution,[],[f1113,f472])).
fof(f48585,plain,(
  ( ! [X39,X45,X43,X41,X44,X42,X40] : (s('type.pair.prod'('type.typeSystem.tenv_val',X39),'const.pair.,_2'(s('type.typeSystem.tenv_val',X40),s(X39,X41))) != s('type.pair.prod'('type.typeSystem.tenv_val',X39),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X39,X42))) | p(s(bool,X43)) | ~p(s(bool,X44)) | p(s(bool,X45)) | s(bool,X45) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X40)))) )),
  inference(resolution,[],[f1113,f471])).
fof(f48584,plain,(
  ( ! [X37,X35,X33,X38,X36,X34,X32] : (s('type.pair.prod'('type.typeSystem.tenv_val',X32),'const.pair.,_2'(s('type.typeSystem.tenv_val',X33),s(X32,X34))) != s('type.pair.prod'('type.typeSystem.tenv_val',X32),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X32,X35))) | p(s(bool,X36)) | p(s(bool,X37)) | s(bool,X36) != s(bool,X38) | s(bool,X37) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X33)))) )),
  inference(resolution,[],[f1113,f470])).
fof(f48583,plain,(
  ( ! [X30,X28,X26,X31,X29,X27,X25] : (s('type.pair.prod'('type.typeSystem.tenv_val',X25),'const.pair.,_2'(s('type.typeSystem.tenv_val',X26),s(X25,X27))) != s('type.pair.prod'('type.typeSystem.tenv_val',X25),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X25,X28))) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X26))) | s(bool,X30) != s(bool,X31)) )),
  inference(resolution,[],[f1113,f468])).
fof(f48581,plain,(
  ( ! [X14,X12,X17,X15,X13,X11,X16] : (s('type.pair.prod'('type.typeSystem.tenv_val',X11),'const.pair.,_2'(s('type.typeSystem.tenv_val',X12),s(X11,X13))) != s('type.pair.prod'('type.typeSystem.tenv_val',X11),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X11,X14))) | p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val',X12)))) )),
  inference(resolution,[],[f1113,f466])).
fof(f48396,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1082),
  inference(cnf_transformation,[],[f48396_D])).
fof(f48396_D,plain,(
  ( ! [X484,X483] : (p(s(bool,X483)) | p(s(bool,X484)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1082),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1082])])).
fof(f48395,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl80)),
  inference(subsumption_resolution,[],[f48179,f513])).
fof(f48179,plain,(
  ( ! [X484,X482,X483] : (s(bool,'T_0') != s(bool,X482) | p(s(bool,X483)) | ~p(s(bool,X482)) | sP3(X484,X483,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X484))) ) | ($spl6 | $spl80)),
  inference(superposition,[],[f1767,f13583])).
fof(f13583,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl80),
  inference(resolution,[],[f2379,f514])).
fof(f2379,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl80),
  inference(cnf_transformation,[],[f2379_D])).
fof(f2379_D,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f48394,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) | $spl1080),
  inference(cnf_transformation,[],[f48394_D])).
fof(f48394_D,plain,(
  ( ! [X478,X477] : (p(s(bool,X477)) | p(s(bool,X478)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477)) ) <=> ~$spl1080),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1080])])).
fof(f48393,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl80)),
  inference(subsumption_resolution,[],[f48177,f513])).
fof(f48177,plain,(
  ( ! [X476,X478,X477] : (s(bool,'T_0') != s(bool,X476) | p(s(bool,X477)) | ~p(s(bool,X476)) | sP3(X478,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X477) | p(s(bool,X478))) ) | ($spl6 | $spl80)),
  inference(superposition,[],[f1766,f13583])).
fof(f47662,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X10),s('type.typeSystem.tenv_val',X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X11)))))) ) | $spl1078),
  inference(cnf_transformation,[],[f47662_D])).
fof(f47662_D,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X10),s('type.typeSystem.tenv_val',X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X11)))))) ) <=> ~$spl1078),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1078])])).
fof(f47586,plain,(
  ( ! [X644,X640,X642,X645,X641,X643] : (s('type.pair.prod'(X640,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X640,X641),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X640,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X640,X642),s('type.typeSystem.tenv_val',X643))) | p(s(bool,X644)) | p(s(bool,X645)) | s(bool,X645) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X643)))))) )),
  inference(resolution,[],[f1107,f737])).
fof(f1107,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X28)))))) | s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X31),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val',X28)))) )),
  inference(superposition,[],[f457,f728])).
fof(f47483,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s('type.pair.prod'(X57,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X57,X58),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X57,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X57,X59),s('type.typeSystem.tenv_val',X60))) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X60))))) | s(bool,X62) != s(bool,X63)) )),
  inference(resolution,[],[f1107,f472])).
fof(f47480,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s('type.pair.prod'(X36,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X36,X37),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X36,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X36,X38),s('type.typeSystem.tenv_val',X39))) | p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X39)))))) )),
  inference(resolution,[],[f1107,f471])).
fof(f47479,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X31),s('type.typeSystem.tenv_val',X32))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X32)))))) )),
  inference(resolution,[],[f1107,f470])).
fof(f47478,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (s('type.pair.prod'(X22,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X22,X23),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X22,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X22,X24),s('type.typeSystem.tenv_val',X25))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X25))))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f1107,f468])).
fof(f47476,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X10),s('type.typeSystem.tenv_val',X11))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X11)))))) )),
  inference(resolution,[],[f1107,f466])).
fof(f47286,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X8,X9))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X10),s(X8,X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X10)))))) ) | $spl1076),
  inference(cnf_transformation,[],[f47286_D])).
fof(f47286_D,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X8,X9))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X10),s(X8,X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X10)))))) ) <=> ~$spl1076),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1076])])).
fof(f47210,plain,(
  ( ! [X644,X640,X642,X645,X641,X643] : (s('type.pair.prod'('type.typeSystem.tenv_val',X640),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X640,X641))) != s('type.pair.prod'('type.typeSystem.tenv_val',X640),'const.pair.,_2'(s('type.typeSystem.tenv_val',X642),s(X640,X643))) | p(s(bool,X644)) | p(s(bool,X645)) | s(bool,X645) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X642)))))) )),
  inference(resolution,[],[f1105,f737])).
fof(f1105,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X20)))))) | s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X21,X23))) != s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val',X20),s(X21,X22)))) )),
  inference(superposition,[],[f457,f727])).
fof(f47107,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s('type.pair.prod'('type.typeSystem.tenv_val',X57),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X57,X58))) != s('type.pair.prod'('type.typeSystem.tenv_val',X57),'const.pair.,_2'(s('type.typeSystem.tenv_val',X59),s(X57,X60))) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X59))))) | s(bool,X62) != s(bool,X63)) )),
  inference(resolution,[],[f1105,f472])).
fof(f47104,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.typeSystem.tenv_val',X36),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X36,X37))) != s('type.pair.prod'('type.typeSystem.tenv_val',X36),'const.pair.,_2'(s('type.typeSystem.tenv_val',X38),s(X36,X39))) | p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X38)))))) )),
  inference(resolution,[],[f1105,f471])).
fof(f47103,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.typeSystem.tenv_val',X29),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X29,X30))) != s('type.pair.prod'('type.typeSystem.tenv_val',X29),'const.pair.,_2'(s('type.typeSystem.tenv_val',X31),s(X29,X32))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X31)))))) )),
  inference(resolution,[],[f1105,f470])).
fof(f47102,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (s('type.pair.prod'('type.typeSystem.tenv_val',X22),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X22,X23))) != s('type.pair.prod'('type.typeSystem.tenv_val',X22),'const.pair.,_2'(s('type.typeSystem.tenv_val',X24),s(X22,X25))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X24))))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f1105,f468])).
fof(f47100,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X8,X9))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X10),s(X8,X11))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val',X10)))))) )),
  inference(resolution,[],[f1105,f466])).
fof(f45822,plain,(
  ( ! [X673,X672,X674] : (s('type.pair.prod'(X672,bool),'const.pair.,_2'(s(X672,X673),s(bool,'T_0'))) != s('type.pair.prod'(X672,bool),'const.pair.,_2'(s(X672,X674),s(bool,'F_0')))) ) | $spl1074),
  inference(cnf_transformation,[],[f45822_D])).
fof(f45822_D,plain,(
  ( ! [X673,X672,X674] : (s('type.pair.prod'(X672,bool),'const.pair.,_2'(s(X672,X673),s(bool,'T_0'))) != s('type.pair.prod'(X672,bool),'const.pair.,_2'(s(X672,X674),s(bool,'F_0')))) ) <=> ~$spl1074),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1074])])).
fof(f45815,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,X88)) | s('type.pair.prod'(X89,bool),'const.pair.,_2'(s(X89,X90),s(bool,'T_0'))) != s('type.pair.prod'(X89,bool),'const.pair.,_2'(s(X89,X91),s(bool,'F_0')))) )),
  inference(duplicate_literal_removal,[],[f45801])).
fof(f45801,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,X88)) | s('type.pair.prod'(X89,bool),'const.pair.,_2'(s(X89,X90),s(bool,'T_0'))) != s('type.pair.prod'(X89,bool),'const.pair.,_2'(s(X89,X91),s(bool,'F_0'))) | p(s(bool,X88))) )),
  inference(superposition,[],[f45296,f510])).
fof(f45296,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X26)) | s('type.pair.prod'(X27,bool),'const.pair.,_2'(s(X27,X29),s(bool,'T_0'))) != s('type.pair.prod'(X27,bool),'const.pair.,_2'(s(X27,X28),s(bool,X26)))) )),
  inference(forward_demodulation,[],[f924,f775])).
fof(f924,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X26)) | s('type.pair.prod'(X27,bool),'const.pair.,_2'(s(X27,X28),s(bool,X26))) != s('type.pair.prod'(X27,bool),'const.pair.,_2'(s(X27,X29),s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))))) )),
  inference(superposition,[],[f455,f728])).
fof(f45816,plain,(
  ( ! [X87,X85,X86,X84] : (p(s(bool,X84)) | s('type.pair.prod'(X85,bool),'const.pair.,_2'(s(X85,X86),s(bool,'T_0'))) != s('type.pair.prod'(X85,bool),'const.pair.,_2'(s(X85,X87),s(bool,'F_0')))) )),
  inference(duplicate_literal_removal,[],[f45800])).
fof(f45800,plain,(
  ( ! [X87,X85,X86,X84] : (p(s(bool,X84)) | s('type.pair.prod'(X85,bool),'const.pair.,_2'(s(X85,X86),s(bool,'T_0'))) != s('type.pair.prod'(X85,bool),'const.pair.,_2'(s(X85,X87),s(bool,'F_0'))) | p(s(bool,X84))) )),
  inference(superposition,[],[f45296,f512])).
fof(f45828,plain,(
  ( ! [X80,X83,X81,X82] : (p(s(bool,X80)) | s('type.pair.prod'(X81,bool),'const.pair.,_2'(s(X81,X82),s(bool,'T_0'))) != s('type.pair.prod'(X81,bool),'const.pair.,_2'(s(X81,X83),s(bool,'F_0')))) )),
  inference(subsumption_resolution,[],[f45799,f513])).
fof(f45799,plain,(
  ( ! [X80,X83,X81,X82] : (p(s(bool,X80)) | s('type.pair.prod'(X81,bool),'const.pair.,_2'(s(X81,X82),s(bool,'T_0'))) != s('type.pair.prod'(X81,bool),'const.pair.,_2'(s(X81,X83),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f45296,f517])).
fof(f517,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.inferProps.tenv_alpha_bind_var_list2',aHL_BOOL_CASES)).
fof(f45751,plain,(
  ( ! [X707,X708,X706,X709] : (s('type.pair.prod'(X706,bool),'const.pair.,_2'(s(X706,X707),s(bool,'T_0'))) != s('type.pair.prod'(X706,bool),'const.pair.,_2'(s(X706,X708),s(bool,'F_0'))) | p(s(bool,X709))) )),
  inference(resolution,[],[f45296,f700])).
fof(f700,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f305])).
fof(f305,plain,(
  ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)))),
  inference(ennf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0] : (p(s(bool,'F_0')) => p(s(bool,X0)))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X14] : (p(s(bool,'F_0')) => p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.FALSITY')).
fof(f45750,plain,(
  ( ! [X705,X702,X704,X703] : (s('type.pair.prod'(X702,bool),'const.pair.,_2'(s(X702,X703),s(bool,'T_0'))) != s('type.pair.prod'(X702,bool),'const.pair.,_2'(s(X702,X704),s(bool,'F_0'))) | p(s(bool,X705))) )),
  inference(resolution,[],[f45296,f684])).
fof(f684,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f436])).
fof(f436,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f435])).
fof(f435,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X14] : ((p(s(bool,'F_0')) & p(s(bool,X14))) <=> p(s(bool,'F_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.AND_CLAUSES|split|2')).
fof(f45749,plain,(
  ( ! [X699,X700,X698,X701] : (s('type.pair.prod'(X698,bool),'const.pair.,_2'(s(X698,X699),s(bool,'T_0'))) != s('type.pair.prod'(X698,bool),'const.pair.,_2'(s(X698,X700),s(bool,'F_0'))) | p(s(bool,X701))) )),
  inference(resolution,[],[f45296,f680])).
fof(f680,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f434])).
fof(f434,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f433])).
fof(f433,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X14] : ((p(s(bool,X14)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.AND_CLAUSES|split|3')).
fof(f45748,plain,(
  ( ! [X697,X695,X696,X694] : (s('type.pair.prod'(X694,bool),'const.pair.,_2'(s(X694,X695),s(bool,'T_0'))) != s('type.pair.prod'(X694,bool),'const.pair.,_2'(s(X694,X696),s(bool,'F_0'))) | p(s(bool,X697))) )),
  inference(resolution,[],[f45296,f667])).
fof(f667,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f426])).
fof(f426,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f425])).
fof(f425,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f221])).
fof(f221,plain,(
  ! [X0] : ((p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f100])).
fof(f100,axiom,(
  ! [X14] : ((p(s(bool,'F_0')) | p(s(bool,X14))) <=> p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.OR_CLAUSES|split|2')).
fof(f45747,plain,(
  ( ! [X693,X691,X692,X690] : (s('type.pair.prod'(X690,bool),'const.pair.,_2'(s(X690,X691),s(bool,'T_0'))) != s('type.pair.prod'(X690,bool),'const.pair.,_2'(s(X690,X692),s(bool,'F_0'))) | p(s(bool,X693))) )),
  inference(resolution,[],[f45296,f665])).
fof(f45823,plain,(
  ( ! [X689,X687,X688,X686] : (s('type.pair.prod'(X686,bool),'const.pair.,_2'(s(X686,X687),s(bool,'T_0'))) != s('type.pair.prod'(X686,bool),'const.pair.,_2'(s(X686,X688),s(bool,'F_0'))) | p(s(bool,X689))) )),
  inference(subsumption_resolution,[],[f45746,f738])).
fof(f738,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f506])).
fof(f506,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f351])).
fof(f351,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f155])).
fof(f155,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X15] : ! [X22] : (s(X15,X22) = s(X15,X22) <=> p(s(bool,'T_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.REFL_CLAUSE')).
fof(f45746,plain,(
  ( ! [X689,X687,X688,X686] : (s('type.pair.prod'(X686,bool),'const.pair.,_2'(s(X686,X687),s(bool,'T_0'))) != s('type.pair.prod'(X686,bool),'const.pair.,_2'(s(X686,X688),s(bool,'F_0'))) | p(s(bool,X689)) | ~p(s(bool,'T_0'))) )),
  inference(resolution,[],[f45296,f657])).
fof(f657,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f418])).
fof(f418,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f417])).
fof(f417,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f297])).
fof(f297,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X14] : ((p(s(bool,'F_0')) => p(s(bool,X14))) <=> p(s(bool,'T_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_CLAUSES|split|2')).
fof(f45745,plain,(
  ( ! [X685,X683,X684,X682] : (s('type.pair.prod'(X682,bool),'const.pair.,_2'(s(X682,X683),s(bool,'T_0'))) != s('type.pair.prod'(X682,bool),'const.pair.,_2'(s(X682,X684),s(bool,'F_0'))) | ~p(s(bool,X685))) )),
  inference(resolution,[],[f45296,f650])).
fof(f44886,plain,(
  ( ! [X675,X676] : (sP13(X675,X676)) ) | $spl1068),
  inference(cnf_transformation,[],[f44886_D])).
fof(f44886_D,plain,(
  ( ! [X675,X676] : (sP13(X675,X676)) ) <=> ~$spl1068),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1068])])).
fof(f45744,plain,(
  ( ! [X681,X677,X679,X680,X678] : (s('type.pair.prod'(X677,bool),'const.pair.,_2'(s(X677,X678),s(bool,'T_0'))) != s('type.pair.prod'(X677,bool),'const.pair.,_2'(s(X677,X679),s(bool,'F_0'))) | sP13(X680,X681)) )),
  inference(resolution,[],[f45296,f638])).
fof(f638,plain,(
  ( ! [X0,X1] : (sP13(X0,X1) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f407])).
fof(f407,plain,(
  ! [X0,X1] : ((~sP13(X0,X1) | (p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0'))) & (((~p(s(bool,X1)) | p(s(bool,'F_0'))) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP13(X0,X1)))),
  inference(flattening,[],[f406])).
fof(f406,plain,(
  ! [X0,X1] : ((~sP13(X0,X1) | ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0')))) & (((~p(s(bool,X1)) | p(s(bool,'F_0'))) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP13(X0,X1)))),
  inference(nnf_transformation,[],[f330])).
fof(f330,plain,(
  ! [X0,X1] : (sP13(X0,X1) <=> ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(definition_folding,[],[f286,f329])).
fof(f286,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f285])).
fof(f285,plain,(
  ! [X0,X1] : (((p(s(bool,X1)) | p(s(bool,X0))) | p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | (p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(ennf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0,X1] : ((~(p(s(bool,X1)) | p(s(bool,X0))) => p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) => p(s(bool,'F_0'))) => (~p(s(bool,X0)) => p(s(bool,'F_0')))))),
  inference(flattening,[],[f201])).
fof(f201,plain,(
  ! [X0,X1] : ((~(p(s(bool,X1)) | p(s(bool,X0))) => p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) => p(s(bool,'F_0'))) => (~p(s(bool,X0)) => p(s(bool,'F_0')))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X29,X15] : ((~(p(s(bool,X15)) | p(s(bool,X29))) => p(s(bool,'F_0'))) <=> ((p(s(bool,X15)) => p(s(bool,'F_0'))) => (~p(s(bool,X29)) => p(s(bool,'F_0')))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.sat.sat_9_prove_ltb')).
fof(f45743,plain,(
  ( ! [X673,X675,X676,X672,X674] : (s('type.pair.prod'(X672,bool),'const.pair.,_2'(s(X672,X673),s(bool,'T_0'))) != s('type.pair.prod'(X672,bool),'const.pair.,_2'(s(X672,X674),s(bool,'F_0'))) | sP13(X675,X676)) )),
  inference(resolution,[],[f45296,f633])).
fof(f633,plain,(
  ( ! [X0,X1] : (sP13(X0,X1) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f405])).
fof(f45819,plain,(
  ( ! [X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X1),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X2),s(bool,X3))) | s(bool,X3) != s(bool,X5) | p(s(bool,X5))) ) | $spl1072),
  inference(cnf_transformation,[],[f45819_D])).
fof(f45819_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X1),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X2),s(bool,X3))) | s(bool,X3) != s(bool,X5) | p(s(bool,X5))) ) <=> ~$spl1072),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1072])])).
fof(f45735,plain,(
  ( ! [X633,X635,X636,X632,X634,X637] : (s('type.pair.prod'(X632,bool),'const.pair.,_2'(s(X632,X633),s(bool,'T_0'))) != s('type.pair.prod'(X632,bool),'const.pair.,_2'(s(X632,X634),s(bool,X635))) | p(s(bool,X636)) | p(s(bool,X637)) | s(bool,X635) != s(bool,X637)) )),
  inference(resolution,[],[f45296,f737])).
fof(f45632,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (s('type.pair.prod'(X49,bool),'const.pair.,_2'(s(X49,X50),s(bool,'T_0'))) != s('type.pair.prod'(X49,bool),'const.pair.,_2'(s(X49,X51),s(bool,X52))) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X52) != s(bool,X53) | s(bool,X54) != s(bool,X55)) )),
  inference(resolution,[],[f45296,f472])).
fof(f45629,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (s('type.pair.prod'(X28,bool),'const.pair.,_2'(s(X28,X29),s(bool,'T_0'))) != s('type.pair.prod'(X28,bool),'const.pair.,_2'(s(X28,X30),s(bool,X31))) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X31) != s(bool,X34)) )),
  inference(resolution,[],[f45296,f471])).
fof(f45628,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (s('type.pair.prod'(X21,bool),'const.pair.,_2'(s(X21,X22),s(bool,'T_0'))) != s('type.pair.prod'(X21,bool),'const.pair.,_2'(s(X21,X23),s(bool,X24))) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X24) != s(bool,X26)) )),
  inference(resolution,[],[f45296,f470])).
fof(f45627,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.pair.prod'(X14,bool),'const.pair.,_2'(s(X14,X15),s(bool,'T_0'))) != s('type.pair.prod'(X14,bool),'const.pair.,_2'(s(X14,X16),s(bool,X17))) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X17) != s(bool,X18) | s(bool,X19) != s(bool,X20)) )),
  inference(resolution,[],[f45296,f468])).
fof(f45625,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X1),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X2),s(bool,X3))) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X3) != s(bool,X5)) )),
  inference(resolution,[],[f45296,f466])).
fof(f44887,plain,(
  ( ! [X673,X672,X674] : (s('type.pair.prod'(bool,X672),'const.pair.,_2'(s(bool,'T_0'),s(X672,X673))) != s('type.pair.prod'(bool,X672),'const.pair.,_2'(s(bool,'F_0'),s(X672,X674)))) ) | $spl1070),
  inference(cnf_transformation,[],[f44887_D])).
fof(f44887_D,plain,(
  ( ! [X673,X672,X674] : (s('type.pair.prod'(bool,X672),'const.pair.,_2'(s(bool,'T_0'),s(X672,X673))) != s('type.pair.prod'(bool,X672),'const.pair.,_2'(s(bool,'F_0'),s(X672,X674)))) ) <=> ~$spl1070),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1070])])).
fof(f44879,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,X88)) | s('type.pair.prod'(bool,X89),'const.pair.,_2'(s(bool,'T_0'),s(X89,X90))) != s('type.pair.prod'(bool,X89),'const.pair.,_2'(s(bool,'F_0'),s(X89,X91)))) )),
  inference(duplicate_literal_removal,[],[f44865])).
fof(f44865,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,X88)) | s('type.pair.prod'(bool,X89),'const.pair.,_2'(s(bool,'T_0'),s(X89,X90))) != s('type.pair.prod'(bool,X89),'const.pair.,_2'(s(bool,'F_0'),s(X89,X91))) | p(s(bool,X88))) )),
  inference(superposition,[],[f44335,f510])).
fof(f44335,plain,(
  ( ! [X21,X19,X20,X18] : (p(s(bool,X18)) | s('type.pair.prod'(bool,X19),'const.pair.,_2'(s(bool,'T_0'),s(X19,X21))) != s('type.pair.prod'(bool,X19),'const.pair.,_2'(s(bool,X18),s(X19,X20)))) )),
  inference(forward_demodulation,[],[f922,f775])).
fof(f922,plain,(
  ( ! [X21,X19,X20,X18] : (p(s(bool,X18)) | s('type.pair.prod'(bool,X19),'const.pair.,_2'(s(bool,X18),s(X19,X20))) != s('type.pair.prod'(bool,X19),'const.pair.,_2'(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))),s(X19,X21)))) )),
  inference(superposition,[],[f455,f727])).
fof(f44880,plain,(
  ( ! [X87,X85,X86,X84] : (p(s(bool,X84)) | s('type.pair.prod'(bool,X85),'const.pair.,_2'(s(bool,'T_0'),s(X85,X86))) != s('type.pair.prod'(bool,X85),'const.pair.,_2'(s(bool,'F_0'),s(X85,X87)))) )),
  inference(duplicate_literal_removal,[],[f44864])).
fof(f44864,plain,(
  ( ! [X87,X85,X86,X84] : (p(s(bool,X84)) | s('type.pair.prod'(bool,X85),'const.pair.,_2'(s(bool,'T_0'),s(X85,X86))) != s('type.pair.prod'(bool,X85),'const.pair.,_2'(s(bool,'F_0'),s(X85,X87))) | p(s(bool,X84))) )),
  inference(superposition,[],[f44335,f512])).
fof(f44893,plain,(
  ( ! [X80,X83,X81,X82] : (p(s(bool,X80)) | s('type.pair.prod'(bool,X81),'const.pair.,_2'(s(bool,'T_0'),s(X81,X82))) != s('type.pair.prod'(bool,X81),'const.pair.,_2'(s(bool,'F_0'),s(X81,X83)))) )),
  inference(subsumption_resolution,[],[f44863,f513])).
fof(f44863,plain,(
  ( ! [X80,X83,X81,X82] : (p(s(bool,X80)) | s('type.pair.prod'(bool,X81),'const.pair.,_2'(s(bool,'T_0'),s(X81,X82))) != s('type.pair.prod'(bool,X81),'const.pair.,_2'(s(bool,'F_0'),s(X81,X83))) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f44335,f517])).
fof(f44815,plain,(
  ( ! [X707,X708,X706,X709] : (s('type.pair.prod'(bool,X706),'const.pair.,_2'(s(bool,'T_0'),s(X706,X707))) != s('type.pair.prod'(bool,X706),'const.pair.,_2'(s(bool,'F_0'),s(X706,X708))) | p(s(bool,X709))) )),
  inference(resolution,[],[f44335,f700])).
fof(f44814,plain,(
  ( ! [X705,X702,X704,X703] : (s('type.pair.prod'(bool,X702),'const.pair.,_2'(s(bool,'T_0'),s(X702,X703))) != s('type.pair.prod'(bool,X702),'const.pair.,_2'(s(bool,'F_0'),s(X702,X704))) | p(s(bool,X705))) )),
  inference(resolution,[],[f44335,f684])).
fof(f44813,plain,(
  ( ! [X699,X700,X698,X701] : (s('type.pair.prod'(bool,X698),'const.pair.,_2'(s(bool,'T_0'),s(X698,X699))) != s('type.pair.prod'(bool,X698),'const.pair.,_2'(s(bool,'F_0'),s(X698,X700))) | p(s(bool,X701))) )),
  inference(resolution,[],[f44335,f680])).
fof(f44812,plain,(
  ( ! [X697,X695,X696,X694] : (s('type.pair.prod'(bool,X694),'const.pair.,_2'(s(bool,'T_0'),s(X694,X695))) != s('type.pair.prod'(bool,X694),'const.pair.,_2'(s(bool,'F_0'),s(X694,X696))) | p(s(bool,X697))) )),
  inference(resolution,[],[f44335,f667])).
fof(f44811,plain,(
  ( ! [X693,X691,X692,X690] : (s('type.pair.prod'(bool,X690),'const.pair.,_2'(s(bool,'T_0'),s(X690,X691))) != s('type.pair.prod'(bool,X690),'const.pair.,_2'(s(bool,'F_0'),s(X690,X692))) | p(s(bool,X693))) )),
  inference(resolution,[],[f44335,f665])).
fof(f44888,plain,(
  ( ! [X689,X687,X688,X686] : (s('type.pair.prod'(bool,X686),'const.pair.,_2'(s(bool,'T_0'),s(X686,X687))) != s('type.pair.prod'(bool,X686),'const.pair.,_2'(s(bool,'F_0'),s(X686,X688))) | p(s(bool,X689))) )),
  inference(subsumption_resolution,[],[f44810,f738])).
fof(f44810,plain,(
  ( ! [X689,X687,X688,X686] : (s('type.pair.prod'(bool,X686),'const.pair.,_2'(s(bool,'T_0'),s(X686,X687))) != s('type.pair.prod'(bool,X686),'const.pair.,_2'(s(bool,'F_0'),s(X686,X688))) | p(s(bool,X689)) | ~p(s(bool,'T_0'))) )),
  inference(resolution,[],[f44335,f657])).
fof(f44809,plain,(
  ( ! [X685,X683,X684,X682] : (s('type.pair.prod'(bool,X682),'const.pair.,_2'(s(bool,'T_0'),s(X682,X683))) != s('type.pair.prod'(bool,X682),'const.pair.,_2'(s(bool,'F_0'),s(X682,X684))) | ~p(s(bool,X685))) )),
  inference(resolution,[],[f44335,f650])).
fof(f44808,plain,(
  ( ! [X681,X677,X679,X680,X678] : (s('type.pair.prod'(bool,X677),'const.pair.,_2'(s(bool,'T_0'),s(X677,X678))) != s('type.pair.prod'(bool,X677),'const.pair.,_2'(s(bool,'F_0'),s(X677,X679))) | sP13(X680,X681)) )),
  inference(resolution,[],[f44335,f638])).
fof(f44807,plain,(
  ( ! [X673,X675,X676,X672,X674] : (s('type.pair.prod'(bool,X672),'const.pair.,_2'(s(bool,'T_0'),s(X672,X673))) != s('type.pair.prod'(bool,X672),'const.pair.,_2'(s(bool,'F_0'),s(X672,X674))) | sP13(X675,X676)) )),
  inference(resolution,[],[f44335,f633])).
fof(f44883,plain,(
  ( ! [X2,X0,X5,X3,X1] : (s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,'T_0'),s(X0,X1))) != s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,X2),s(X0,X3))) | s(bool,X2) != s(bool,X5) | p(s(bool,X5))) ) | $spl1066),
  inference(cnf_transformation,[],[f44883_D])).
fof(f44883_D,plain,(
  ( ! [X2,X0,X5,X3,X1] : (s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,'T_0'),s(X0,X1))) != s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,X2),s(X0,X3))) | s(bool,X2) != s(bool,X5) | p(s(bool,X5))) ) <=> ~$spl1066),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1066])])).
fof(f44799,plain,(
  ( ! [X633,X635,X636,X632,X634,X637] : (s('type.pair.prod'(bool,X632),'const.pair.,_2'(s(bool,'T_0'),s(X632,X633))) != s('type.pair.prod'(bool,X632),'const.pair.,_2'(s(bool,X634),s(X632,X635))) | p(s(bool,X636)) | p(s(bool,X637)) | s(bool,X634) != s(bool,X637)) )),
  inference(resolution,[],[f44335,f737])).
fof(f44696,plain,(
  ( ! [X54,X52,X50,X55,X53,X51,X49] : (s('type.pair.prod'(bool,X49),'const.pair.,_2'(s(bool,'T_0'),s(X49,X50))) != s('type.pair.prod'(bool,X49),'const.pair.,_2'(s(bool,X51),s(X49,X52))) | p(s(bool,X53)) | ~p(s(bool,X54)) | s(bool,X51) != s(bool,X53) | s(bool,X54) != s(bool,X55)) )),
  inference(resolution,[],[f44335,f472])).
fof(f44693,plain,(
  ( ! [X30,X28,X33,X31,X29,X34,X32] : (s('type.pair.prod'(bool,X28),'const.pair.,_2'(s(bool,'T_0'),s(X28,X29))) != s('type.pair.prod'(bool,X28),'const.pair.,_2'(s(bool,X30),s(X28,X31))) | p(s(bool,X32)) | ~p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X30) != s(bool,X34)) )),
  inference(resolution,[],[f44335,f471])).
fof(f44692,plain,(
  ( ! [X26,X24,X23,X21,X27,X25,X22] : (s('type.pair.prod'(bool,X21),'const.pair.,_2'(s(bool,'T_0'),s(X21,X22))) != s('type.pair.prod'(bool,X21),'const.pair.,_2'(s(bool,X23),s(X21,X24))) | p(s(bool,X25)) | p(s(bool,X26)) | s(bool,X25) != s(bool,X27) | s(bool,X23) != s(bool,X26)) )),
  inference(resolution,[],[f44335,f470])).
fof(f44691,plain,(
  ( ! [X14,X19,X17,X15,X20,X18,X16] : (s('type.pair.prod'(bool,X14),'const.pair.,_2'(s(bool,'T_0'),s(X14,X15))) != s('type.pair.prod'(bool,X14),'const.pair.,_2'(s(bool,X16),s(X14,X17))) | p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X16) != s(bool,X18) | s(bool,X19) != s(bool,X20)) )),
  inference(resolution,[],[f44335,f468])).
fof(f44689,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,'T_0'),s(X0,X1))) != s('type.pair.prod'(bool,X0),'const.pair.,_2'(s(bool,X2),s(X0,X3))) | p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X2) != s(bool,X5)) )),
  inference(resolution,[],[f44335,f466])).
fof(f43721,plain,(
  ( ! [X37,X38] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X37))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X38)))) ) | $spl1064),
  inference(cnf_transformation,[],[f43721_D])).
fof(f43721_D,plain,(
  ( ! [X37,X38] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X37))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X38)))) ) <=> ~$spl1064),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1064])])).
fof(f43722,plain,(
  ( ! [X52,X53,X51] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X52))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X53))) | p(s(bool,X51))) )),
  inference(subsumption_resolution,[],[f43647,f513])).
fof(f43647,plain,(
  ( ! [X52,X53,X51] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X52))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X53))) | p(s(bool,X51)) | s(bool,'T_0') = s(bool,X51)) )),
  inference(superposition,[],[f43307,f517])).
fof(f43307,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X14))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X12),s('type.list.list'(bool),X13))) | p(s(bool,X12))) )),
  inference(forward_demodulation,[],[f920,f775])).
fof(f920,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | s('type.list.list'(bool),'const.list.CONS_2'(s(bool,X12),s('type.list.list'(bool),X13))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))),s('type.list.list'(bool),X14)))) )),
  inference(superposition,[],[f455,f732])).
fof(f732,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,X1) = s(X0,X3) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f453])).
fof(f453,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & (s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f452])).
fof(f452,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) | (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & ((s(X0,X1) != s(X0,X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4)) | s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4)))))),
  inference(nnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(flattening,[],[f259])).
fof(f259,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))) <=> (s(X0,X1) = s(X0,X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4)))),
  inference(rectify,[],[f116])).
fof(f116,axiom,(
  ! [X15] : ! [X83,X84,X98,X97] : (s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X83),s('type.list.list'(X15),X84))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X98),s('type.list.list'(X15),X97))) <=> (s(X15,X83) = s(X15,X98) & s('type.list.list'(X15),X84) = s('type.list.list'(X15),X97)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.list_|49||49|')).
fof(f43715,plain,(
  ( ! [X39,X41,X40] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X40))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X41))) | p(s(bool,X39))) )),
  inference(duplicate_literal_removal,[],[f43643])).
fof(f43643,plain,(
  ( ! [X39,X41,X40] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X40))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X41))) | p(s(bool,X39)) | p(s(bool,X39))) )),
  inference(superposition,[],[f43307,f512])).
fof(f43716,plain,(
  ( ! [X37,X38,X36] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X37))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X38))) | p(s(bool,X36))) )),
  inference(duplicate_literal_removal,[],[f43642])).
fof(f43642,plain,(
  ( ! [X37,X38,X36] : (s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'T_0'),s('type.list.list'(bool),X37))) != s('type.list.list'(bool),'const.list.CONS_2'(s(bool,'F_0'),s('type.list.list'(bool),X38))) | p(s(bool,X36)) | p(s(bool,X36))) )),
  inference(superposition,[],[f43307,f510])).
fof(f42957,plain,(
  $false | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42822,f42697])).
fof(f42697,plain,(
  ( ! [X8] : (~p(s(bool,X8))) ) | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42696,f511])).
fof(f511,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f353])).
fof(f42696,plain,(
  ( ! [X8] : (s(bool,'F_0') = s(bool,X8) | ~p(s(bool,X8))) ) | ($spl446 | $spl644)),
  inference(forward_demodulation,[],[f24953,f18947])).
fof(f18947,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl446),
  inference(cnf_transformation,[],[f18947_D])).
fof(f18947_D,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl446),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl446])])).
fof(f42822,plain,(
  p(s(bool,'F_0')) | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f704])).
fof(f704,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f444])).
fof(f444,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f239])).
fof(f239,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f44])).
fof(f44,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.NOT_CLAUSES|split|1')).
fof(f42956,plain,(
  $false | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42821,f42697])).
fof(f42821,plain,(
  p(s(bool,'F_0')) | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f702])).
fof(f702,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f443])).
fof(f443,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f238])).
fof(f238,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f42])).
fof(f42,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.NOT_CLAUSES|split|2')).
fof(f42955,plain,(
  $false | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42816,f42697])).
fof(f42816,plain,(
  ( ! [X300] : (p(s(bool,X300))) ) | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f661])).
fof(f661,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f422])).
fof(f422,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f421])).
fof(f421,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f299])).
fof(f299,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(ennf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0] : ((p(s(bool,'T_0')) => p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X14] : ((p(s(bool,'T_0')) => p(s(bool,X14))) <=> p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_CLAUSES|split|0')).
fof(f42954,plain,(
  $false | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42814,f42697])).
fof(f42814,plain,(
  ( ! [X298] : (p(s(bool,X298))) ) | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f658])).
fof(f658,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f420])).
fof(f420,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))))),
  inference(flattening,[],[f419])).
fof(f419,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f298])).
fof(f298,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f218])).
fof(f218,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X14] : ((p(s(bool,X14)) => p(s(bool,X14))) <=> p(s(bool,'T_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_CLAUSES|split|3')).
fof(f42953,plain,(
  $false | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42812,f42697])).
fof(f42812,plain,(
  p(s(bool,'F_0')) | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f655])).
fof(f655,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f418])).
fof(f42952,plain,(
  $false | ($spl446 | $spl644)),
  inference(subsumption_resolution,[],[f42811,f42697])).
fof(f42811,plain,(
  ( ! [X296] : (p(s(bool,X296))) ) | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f652])).
fof(f652,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f416])).
fof(f416,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f415])).
fof(f415,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f296])).
fof(f296,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X14] : ((p(s(bool,X14)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_CLAUSES|split|1')).
fof(f42823,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f706])).
fof(f706,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f20])).
fof(f20,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.TRUTH')).
fof(f42824,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f707])).
fof(f707,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.inferProps.tenv_alpha_bind_var_list2',aHL_TRUTH)).
fof(f42825,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f738])).
fof(f42834,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f712])).
fof(f712,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(cnf_transformation,[],[f11])).
fof(f11,axiom,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.inferProps.tenv_alpha_empty')).
fof(f42835,plain,(
  $false | ($spl16 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f939])).
fof(f42836,plain,(
  $false | ($spl36 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f1145])).
fof(f42844,plain,(
  $false | ($spl76 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f4288])).
fof(f42845,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f959])).
fof(f42846,plain,(
  $false | ($spl80 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f2379])).
fof(f42847,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f748])).
fof(f42851,plain,(
  $false | ($spl76 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f4287])).
fof(f42852,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f958])).
fof(f42853,plain,(
  $false | ($spl24 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f3634])).
fof(f42854,plain,(
  $false | ($spl446 | $spl644)),
  inference(resolution,[],[f42697,f747])).
fof(f42861,plain,(
  $false | ($spl66 | $spl446 | $spl644)),
  inference(resolution,[],[f42697,f1999])).
fof(f1999,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | $spl66),
  inference(cnf_transformation,[],[f1999_D])).
fof(f1999_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f42688,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val',X10))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X11),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X10)))) ) | $spl1062),
  inference(cnf_transformation,[],[f42688_D])).
fof(f42688_D,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val',X10))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X11),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X10)))) ) <=> ~$spl1062),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1062])])).
fof(f42632,plain,(
  ( ! [X644,X640,X642,X645,X641,X643] : (s('type.pair.prod'(X640,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X640,X641),s('type.typeSystem.tenv_val',X642))) != s('type.pair.prod'(X640,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X640,X643),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X644)) | p(s(bool,X645)) | s(bool,X645) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X642)))) )),
  inference(resolution,[],[f904,f737])).
fof(f904,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X28)))) | s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val',X28))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X31),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(superposition,[],[f455,f728])).
fof(f42529,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s('type.pair.prod'(X57,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X57,X58),s('type.typeSystem.tenv_val',X59))) != s('type.pair.prod'(X57,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X57,X60),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X59))) | s(bool,X62) != s(bool,X63)) )),
  inference(resolution,[],[f904,f472])).
fof(f42526,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s('type.pair.prod'(X36,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X36,X37),s('type.typeSystem.tenv_val',X38))) != s('type.pair.prod'(X36,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X36,X39),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X38)))) )),
  inference(resolution,[],[f904,f471])).
fof(f42525,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val',X31))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X32),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X31)))) )),
  inference(resolution,[],[f904,f470])).
fof(f42524,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (s('type.pair.prod'(X22,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X22,X23),s('type.typeSystem.tenv_val',X24))) != s('type.pair.prod'(X22,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X22,X25),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X24))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f904,f468])).
fof(f42522,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val',X10))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X11),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X10)))) )),
  inference(resolution,[],[f904,f466])).
fof(f42307,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X9),s(X8,X10))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X8,X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X9)))) ) | $spl1060),
  inference(cnf_transformation,[],[f42307_D])).
fof(f42307_D,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X9),s(X8,X10))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X8,X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X9)))) ) <=> ~$spl1060),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1060])])).
fof(f42251,plain,(
  ( ! [X644,X640,X642,X645,X641,X643] : (s('type.pair.prod'('type.typeSystem.tenv_val',X640),'const.pair.,_2'(s('type.typeSystem.tenv_val',X641),s(X640,X642))) != s('type.pair.prod'('type.typeSystem.tenv_val',X640),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X640,X643))) | p(s(bool,X644)) | p(s(bool,X645)) | s(bool,X645) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X641)))) )),
  inference(resolution,[],[f902,f737])).
fof(f902,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X20)))) | s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val',X20),s(X21,X22))) != s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X21,X23)))) )),
  inference(superposition,[],[f455,f727])).
fof(f42148,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s('type.pair.prod'('type.typeSystem.tenv_val',X57),'const.pair.,_2'(s('type.typeSystem.tenv_val',X58),s(X57,X59))) != s('type.pair.prod'('type.typeSystem.tenv_val',X57),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X57,X60))) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X58))) | s(bool,X62) != s(bool,X63)) )),
  inference(resolution,[],[f902,f472])).
fof(f42145,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.typeSystem.tenv_val',X36),'const.pair.,_2'(s('type.typeSystem.tenv_val',X37),s(X36,X38))) != s('type.pair.prod'('type.typeSystem.tenv_val',X36),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X36,X39))) | p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X37)))) )),
  inference(resolution,[],[f902,f471])).
fof(f42144,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.typeSystem.tenv_val',X29),'const.pair.,_2'(s('type.typeSystem.tenv_val',X30),s(X29,X31))) != s('type.pair.prod'('type.typeSystem.tenv_val',X29),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X29,X32))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X30)))) )),
  inference(resolution,[],[f902,f470])).
fof(f42143,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (s('type.pair.prod'('type.typeSystem.tenv_val',X22),'const.pair.,_2'(s('type.typeSystem.tenv_val',X23),s(X22,X24))) != s('type.pair.prod'('type.typeSystem.tenv_val',X22),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X22,X25))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X23))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f902,f468])).
fof(f42141,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X9),s(X8,X10))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))),s(X8,X11))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val',X9)))) )),
  inference(resolution,[],[f902,f466])).
fof(f14495,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl304),
  inference(cnf_transformation,[],[f14495_D])).
fof(f14495_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f42077,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,X37)) | ~p(s(bool,X38)) | s(bool,X39) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X39))) ) | ($spl6 | $spl24)),
  inference(resolution,[],[f40338,f14342])).
fof(f14342,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f481])).
fof(f481,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f340])).
fof(f40338,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(X2,X1,X3) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X0) != s(bool,X3) | p(s(bool,X0))) ) | $spl6),
  inference(subsumption_resolution,[],[f40337,f491])).
fof(f40337,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X0) != s(bool,X3) | ~sP2(X2,X1,X3) | ~sP0(X1,X3,X2)) ) | $spl6),
  inference(subsumption_resolution,[],[f40336,f485])).
fof(f40336,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X0) != s(bool,X3) | ~sP2(X2,X1,X3) | ~sP1(X3,X1,X2) | ~sP0(X1,X3,X2)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f40274])).
fof(f40274,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X0) != s(bool,X3) | ~p(s(bool,X1)) | ~sP2(X2,X1,X3) | ~sP1(X3,X1,X2) | ~sP0(X1,X3,X2)) ) | $spl6),
  inference(resolution,[],[f1796,f477])).
fof(f1796,plain,(
  ( ! [X10,X8,X11,X9] : (~sP3(X11,X9,X8) | p(s(bool,X10)) | ~p(s(bool,X8)) | ~p(s(bool,X11)) | s(bool,X9) != s(bool,X10)) ) | $spl6),
  inference(superposition,[],[f931,f494])).
fof(f14797,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl308),
  inference(cnf_transformation,[],[f14797_D])).
fof(f14797_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f42076,plain,(
  ( ! [X35,X36,X34] : (~p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X36) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X36))) ) | ($spl6 | $spl76)),
  inference(resolution,[],[f40338,f14640])).
fof(f14640,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4287,f481])).
fof(f15099,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl312),
  inference(cnf_transformation,[],[f15099_D])).
fof(f15099_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f42075,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,X31)) | ~p(s(bool,X32)) | s(bool,X33) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X33))) ) | ($spl6 | $spl76)),
  inference(resolution,[],[f40338,f14941])).
fof(f14941,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4288,f481])).
fof(f13722,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl288),
  inference(cnf_transformation,[],[f13722_D])).
fof(f13722_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f42074,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,X28)) | ~p(s(bool,X29)) | s(bool,X30) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X30))) ) | ($spl6 | $spl80)),
  inference(resolution,[],[f40338,f13570])).
fof(f13570,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f481])).
fof(f24484,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl628),
  inference(cnf_transformation,[],[f24484_D])).
fof(f24484_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl628])])).
fof(f42056,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,X46)) | ~p(s(bool,X47)) | s(bool,X46) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X48))) ) | ($spl6 | $spl119)),
  inference(resolution,[],[f36983,f24333])).
fof(f24333,plain,(
  ( ! [X33,X32] : (sP2(X32,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X33)) ) | $spl119),
  inference(resolution,[],[f3185,f482])).
fof(f24203,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl614),
  inference(cnf_transformation,[],[f24203_D])).
fof(f24203_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl614),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl614])])).
fof(f42055,plain,(
  ( ! [X45,X43,X44] : (~p(s(bool,X43)) | ~p(s(bool,X44)) | s(bool,X43) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X45))) ) | ($spl6 | $spl121)),
  inference(resolution,[],[f36983,f24052])).
fof(f24052,plain,(
  ( ! [X33,X32] : (sP2(X32,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X33)) ) | $spl121),
  inference(resolution,[],[f3187,f482])).
fof(f41105,plain,(
  $false | ($spl86 | $spl446)),
  inference(subsumption_resolution,[],[f41004,f40678])).
fof(f40678,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | ($spl86 | $spl446)),
  inference(subsumption_resolution,[],[f40677,f512])).
fof(f40677,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | p(s(bool,X1))) ) | ($spl86 | $spl446)),
  inference(forward_demodulation,[],[f2739,f18947])).
fof(f41004,plain,(
  ~p(s(bool,'T_0')) | ($spl86 | $spl446)),
  inference(resolution,[],[f40678,f705])).
fof(f705,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f444])).
fof(f41104,plain,(
  $false | ($spl86 | $spl446)),
  inference(subsumption_resolution,[],[f41003,f40678])).
fof(f41003,plain,(
  ~p(s(bool,'T_0')) | ($spl86 | $spl446)),
  inference(resolution,[],[f40678,f703])).
fof(f703,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f443])).
fof(f41103,plain,(
  $false | ($spl86 | $spl446)),
  inference(subsumption_resolution,[],[f40995,f40678])).
fof(f40995,plain,(
  ( ! [X314] : (~p(s(bool,X314))) ) | ($spl86 | $spl446)),
  inference(resolution,[],[f40678,f650])).
fof(f41002,plain,(
  $false | ($spl86 | $spl446)),
  inference(resolution,[],[f40678,f701])).
fof(f41007,plain,(
  $false | ($spl86 | $spl446)),
  inference(resolution,[],[f40678,f458])).
fof(f41008,plain,(
  $false | ($spl86 | $spl113 | $spl446)),
  inference(resolution,[],[f40678,f3014])).
fof(f41009,plain,(
  $false | ($spl86 | $spl101 | $spl446)),
  inference(resolution,[],[f40678,f2995])).
fof(f41010,plain,(
  $false | ($spl86 | $spl95 | $spl446)),
  inference(resolution,[],[f40678,f2985])).
fof(f41014,plain,(
  $false | ($spl86 | $spl121 | $spl446)),
  inference(resolution,[],[f40678,f3187])).
fof(f41018,plain,(
  $false | ($spl86 | $spl119 | $spl446)),
  inference(resolution,[],[f40678,f3185])).
fof(f40867,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X10),s('type.typeSystem.tenv_val',X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X11)))))) ) | $spl1058),
  inference(cnf_transformation,[],[f40867_D])).
fof(f40867_D,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X10),s('type.typeSystem.tenv_val',X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X11)))))) ) <=> ~$spl1058),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1058])])).
fof(f40791,plain,(
  ( ! [X644,X640,X642,X645,X641,X643] : (s('type.pair.prod'(X640,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X640,X641),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X640,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X640,X642),s('type.typeSystem.tenv_val',X643))) | p(s(bool,X644)) | p(s(bool,X645)) | s(bool,X645) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X643)))))) )),
  inference(resolution,[],[f896,f737])).
fof(f896,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X28)))))) | s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X31),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val',X28)))) )),
  inference(superposition,[],[f455,f728])).
fof(f40688,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s('type.pair.prod'(X57,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X57,X58),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X57,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X57,X59),s('type.typeSystem.tenv_val',X60))) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X60))))) | s(bool,X62) != s(bool,X63)) )),
  inference(resolution,[],[f896,f472])).
fof(f40685,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s('type.pair.prod'(X36,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X36,X37),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X36,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X36,X38),s('type.typeSystem.tenv_val',X39))) | p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X39)))))) )),
  inference(resolution,[],[f896,f471])).
fof(f40684,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X30),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X29,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X29,X31),s('type.typeSystem.tenv_val',X32))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X32)))))) )),
  inference(resolution,[],[f896,f470])).
fof(f40683,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (s('type.pair.prod'(X22,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X22,X23),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X22,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X22,X24),s('type.typeSystem.tenv_val',X25))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X25))))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f896,f468])).
fof(f40681,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X9),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) != s('type.pair.prod'(X8,'type.typeSystem.tenv_val'),'const.pair.,_2'(s(X8,X10),s('type.typeSystem.tenv_val',X11))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X11)))))) )),
  inference(resolution,[],[f896,f466])).
fof(f40672,plain,(
  $false | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40540,f40415])).
fof(f40415,plain,(
  ( ! [X1] : (~p(s(bool,X1))) ) | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40414,f516])).
fof(f516,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f355])).
fof(f355,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X14] : (s(bool,'T_0') = s(bool,X14) <=> p(s(bool,X14)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.EQ_CLAUSES|split|1')).
fof(f40414,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | ~p(s(bool,X1))) ) | ($spl24 | $spl82)),
  inference(forward_demodulation,[],[f2381,f3662])).
fof(f3662,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl24),
  inference(resolution,[],[f947,f514])).
fof(f40540,plain,(
  p(s(bool,'F_0')) | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f704])).
fof(f40671,plain,(
  $false | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40539,f40415])).
fof(f40539,plain,(
  p(s(bool,'F_0')) | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f702])).
fof(f40670,plain,(
  $false | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40534,f40415])).
fof(f40534,plain,(
  ( ! [X300] : (p(s(bool,X300))) ) | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f661])).
fof(f40669,plain,(
  $false | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40532,f40415])).
fof(f40532,plain,(
  ( ! [X298] : (p(s(bool,X298))) ) | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f658])).
fof(f40668,plain,(
  $false | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40530,f40415])).
fof(f40530,plain,(
  p(s(bool,'F_0')) | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f655])).
fof(f40667,plain,(
  $false | ($spl24 | $spl82)),
  inference(subsumption_resolution,[],[f40529,f40415])).
fof(f40529,plain,(
  ( ! [X296] : (p(s(bool,X296))) ) | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f652])).
fof(f40541,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f706])).
fof(f40542,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f707])).
fof(f40543,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f738])).
fof(f40552,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f712])).
fof(f40553,plain,(
  $false | ($spl16 | $spl24 | $spl82)),
  inference(resolution,[],[f40415,f939])).
fof(f40554,plain,(
  $false | ($spl24 | $spl36 | $spl82)),
  inference(resolution,[],[f40415,f1145])).
fof(f40559,plain,(
  $false | ($spl24 | $spl76 | $spl82)),
  inference(resolution,[],[f40415,f4288])).
fof(f40560,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f959])).
fof(f40561,plain,(
  $false | ($spl24 | $spl80 | $spl82)),
  inference(resolution,[],[f40415,f2379])).
fof(f40562,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f748])).
fof(f40566,plain,(
  $false | ($spl24 | $spl76 | $spl82)),
  inference(resolution,[],[f40415,f4287])).
fof(f40567,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f958])).
fof(f40568,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f3634])).
fof(f40569,plain,(
  $false | ($spl24 | $spl82)),
  inference(resolution,[],[f40415,f747])).
fof(f40576,plain,(
  $false | ($spl24 | $spl66 | $spl82)),
  inference(resolution,[],[f40415,f1999])).
fof(f29492,plain,(
  ( ! [X62] : (s(bool,X62) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl744),
  inference(cnf_transformation,[],[f29492_D])).
fof(f29492_D,plain,(
  ( ! [X62] : (s(bool,X62) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl744),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl744])])).
fof(f17076,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl381),
  inference(cnf_transformation,[],[f17076_D])).
fof(f17076_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl381),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl381])])).
fof(f40257,plain,(
  ( ! [X85,X86] : (p(s(bool,X85)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X86) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl1054)),
  inference(resolution,[],[f39845,f14348])).
fof(f14348,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl24),
  inference(resolution,[],[f3634,f491])).
fof(f39845,plain,(
  ( ! [X17,X15,X16] : (~sP0(X15,X17,X16) | p(s(bool,X16)) | s(bool,'F_0') != s(bool,X15) | s(bool,X15) != s(bool,X17)) ) | $spl1054),
  inference(duplicate_literal_removal,[],[f39822])).
fof(f39822,plain,(
  ( ! [X17,X15,X16] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X16)) | ~sP0(X15,X17,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl1054),
  inference(resolution,[],[f39774,f495])).
fof(f39774,plain,(
  ( ! [X6,X8,X7] : (sP3(X7,X8,X6) | s(bool,'F_0') != s(bool,X6) | p(s(bool,X7)) | ~sP0(X6,X8,X7)) ) | $spl1054),
  inference(subsumption_resolution,[],[f39761,f483])).
fof(f39761,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,X6) | sP3(X7,X8,X6) | p(s(bool,X7)) | ~sP2(X7,X6,X8) | ~sP0(X6,X8,X7)) ) | $spl1054),
  inference(resolution,[],[f39748,f479])).
fof(f39748,plain,(
  ( ! [X4,X5,X3] : (sP1(X5,X4,X3) | s(bool,'F_0') != s(bool,X4)) ) | $spl1054),
  inference(subsumption_resolution,[],[f39747,f485])).
fof(f39747,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | s(bool,'F_0') != s(bool,X4) | sP1(X5,X4,X3)) ) | $spl1054),
  inference(subsumption_resolution,[],[f39716,f487])).
fof(f39716,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | s(bool,'F_0') != s(bool,X4) | ~p(s(bool,X5)) | sP1(X5,X4,X3)) ) | $spl1054),
  inference(resolution,[],[f39385,f474])).
fof(f29491,plain,(
  ( ! [X60] : (s(bool,X60) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl742),
  inference(cnf_transformation,[],[f29491_D])).
fof(f29491_D,plain,(
  ( ! [X60] : (s(bool,X60) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl742),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl742])])).
fof(f17523,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl385),
  inference(cnf_transformation,[],[f17523_D])).
fof(f17523_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl385),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl385])])).
fof(f40256,plain,(
  ( ! [X83,X84] : (p(s(bool,X83)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X84) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1054)),
  inference(resolution,[],[f39845,f14646])).
fof(f14646,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl76),
  inference(resolution,[],[f4287,f491])).
fof(f29489,plain,(
  ( ! [X56] : (s(bool,X56) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl738),
  inference(cnf_transformation,[],[f29489_D])).
fof(f29489_D,plain,(
  ( ! [X56] : (s(bool,X56) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl738),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl738])])).
fof(f18041,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl391),
  inference(cnf_transformation,[],[f18041_D])).
fof(f18041_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl391),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl391])])).
fof(f40255,plain,(
  ( ! [X81,X82] : (p(s(bool,X81)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X82) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1054)),
  inference(resolution,[],[f39845,f14947])).
fof(f14947,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl76),
  inference(resolution,[],[f4288,f491])).
fof(f29488,plain,(
  ( ! [X54] : (s(bool,X54) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl736),
  inference(cnf_transformation,[],[f29488_D])).
fof(f29488_D,plain,(
  ( ! [X54] : (s(bool,X54) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl736),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl736])])).
fof(f15571,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl327),
  inference(cnf_transformation,[],[f15571_D])).
fof(f15571_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl327),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl327])])).
fof(f40254,plain,(
  ( ! [X80,X79] : (p(s(bool,X79)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X80) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl1054)),
  inference(resolution,[],[f39845,f13576])).
fof(f13576,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl80),
  inference(resolution,[],[f2379,f491])).
fof(f29503,plain,(
  ( ! [X89] : (s(bool,'F_0') != s(bool,X89) | s(bool,X89) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl756),
  inference(cnf_transformation,[],[f29503_D])).
fof(f29503_D,plain,(
  ( ! [X89] : (s(bool,'F_0') != s(bool,X89) | s(bool,X89) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl756),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl756])])).
fof(f40246,plain,(
  ( ! [X62,X63] : (p(s(bool,X62)) | s(bool,'F_0') != s(bool,X63) | s(bool,X63) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl1054)),
  inference(resolution,[],[f39845,f14347])).
fof(f14347,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl24),
  inference(resolution,[],[f3634,f490])).
fof(f29502,plain,(
  ( ! [X87] : (s(bool,'F_0') != s(bool,X87) | s(bool,X87) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl754),
  inference(cnf_transformation,[],[f29502_D])).
fof(f29502_D,plain,(
  ( ! [X87] : (s(bool,'F_0') != s(bool,X87) | s(bool,X87) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl754),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl754])])).
fof(f40245,plain,(
  ( ! [X61,X60] : (p(s(bool,X60)) | s(bool,'F_0') != s(bool,X61) | s(bool,X61) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1054)),
  inference(resolution,[],[f39845,f14645])).
fof(f14645,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl76),
  inference(resolution,[],[f4287,f490])).
fof(f29500,plain,(
  ( ! [X83] : (s(bool,'F_0') != s(bool,X83) | s(bool,X83) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl750),
  inference(cnf_transformation,[],[f29500_D])).
fof(f29500_D,plain,(
  ( ! [X83] : (s(bool,'F_0') != s(bool,X83) | s(bool,X83) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl750),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl750])])).
fof(f40244,plain,(
  ( ! [X59,X58] : (p(s(bool,X58)) | s(bool,'F_0') != s(bool,X59) | s(bool,X59) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1054)),
  inference(resolution,[],[f39845,f14946])).
fof(f14946,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl76),
  inference(resolution,[],[f4288,f490])).
fof(f29499,plain,(
  ( ! [X81] : (s(bool,'F_0') != s(bool,X81) | s(bool,X81) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl748),
  inference(cnf_transformation,[],[f29499_D])).
fof(f29499_D,plain,(
  ( ! [X81] : (s(bool,'F_0') != s(bool,X81) | s(bool,X81) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl748),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl748])])).
fof(f40243,plain,(
  ( ! [X57,X56] : (p(s(bool,X56)) | s(bool,'F_0') != s(bool,X57) | s(bool,X57) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl1054)),
  inference(resolution,[],[f39845,f13575])).
fof(f13575,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl80),
  inference(resolution,[],[f2379,f490])).
fof(f37437,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl968),
  inference(cnf_transformation,[],[f37437_D])).
fof(f37437_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl968),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl968])])).
fof(f40211,plain,(
  ( ! [X85,X86] : (p(s(bool,X85)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X86) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl1046)),
  inference(resolution,[],[f39804,f14348])).
fof(f39804,plain,(
  ( ! [X17,X15,X16] : (~sP0(X15,X17,X16) | p(s(bool,X16)) | s(bool,'T_0') = s(bool,X15) | s(bool,X15) != s(bool,X17)) ) | $spl1046),
  inference(duplicate_literal_removal,[],[f39782])).
fof(f39782,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') = s(bool,X15) | p(s(bool,X16)) | ~sP0(X15,X17,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl1046),
  inference(resolution,[],[f39714,f495])).
fof(f39714,plain,(
  ( ! [X6,X8,X7] : (sP3(X7,X8,X6) | s(bool,'T_0') = s(bool,X6) | p(s(bool,X7)) | ~sP0(X6,X8,X7)) ) | $spl1046),
  inference(subsumption_resolution,[],[f39701,f483])).
fof(f39701,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') = s(bool,X6) | sP3(X7,X8,X6) | p(s(bool,X7)) | ~sP2(X7,X6,X8) | ~sP0(X6,X8,X7)) ) | $spl1046),
  inference(resolution,[],[f39688,f479])).
fof(f39688,plain,(
  ( ! [X4,X5,X3] : (sP1(X5,X3,X4) | s(bool,'T_0') = s(bool,X3)) ) | $spl1046),
  inference(subsumption_resolution,[],[f39687,f485])).
fof(f39687,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,X3) | p(s(bool,X4)) | sP1(X5,X3,X4)) ) | $spl1046),
  inference(subsumption_resolution,[],[f39657,f487])).
fof(f39657,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | sP1(X5,X3,X4)) ) | $spl1046),
  inference(resolution,[],[f39376,f474])).
fof(f37434,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl964),
  inference(cnf_transformation,[],[f37434_D])).
fof(f37434_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl964),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl964])])).
fof(f40210,plain,(
  ( ! [X83,X84] : (p(s(bool,X83)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X84) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1046)),
  inference(resolution,[],[f39804,f14646])).
fof(f37431,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl960),
  inference(cnf_transformation,[],[f37431_D])).
fof(f37431_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl960),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl960])])).
fof(f40209,plain,(
  ( ! [X81,X82] : (p(s(bool,X81)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X82) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1046)),
  inference(resolution,[],[f39804,f14947])).
fof(f37428,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl956),
  inference(cnf_transformation,[],[f37428_D])).
fof(f37428_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl956),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl956])])).
fof(f40208,plain,(
  ( ! [X80,X79] : (p(s(bool,X79)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X80) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl1046)),
  inference(resolution,[],[f39804,f13576])).
fof(f37795,plain,(
  ( ! [X90] : (s(bool,'T_0') = s(bool,X90) | s(bool,X90) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl988),
  inference(cnf_transformation,[],[f37795_D])).
fof(f37795_D,plain,(
  ( ! [X90] : (s(bool,'T_0') = s(bool,X90) | s(bool,X90) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl988),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl988])])).
fof(f40200,plain,(
  ( ! [X62,X63] : (p(s(bool,X62)) | s(bool,'T_0') = s(bool,X63) | s(bool,X63) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl1046)),
  inference(resolution,[],[f39804,f14347])).
fof(f37794,plain,(
  ( ! [X88] : (s(bool,'T_0') = s(bool,X88) | s(bool,X88) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl986),
  inference(cnf_transformation,[],[f37794_D])).
fof(f37794_D,plain,(
  ( ! [X88] : (s(bool,'T_0') = s(bool,X88) | s(bool,X88) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl986),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl986])])).
fof(f40199,plain,(
  ( ! [X61,X60] : (p(s(bool,X60)) | s(bool,'T_0') = s(bool,X61) | s(bool,X61) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1046)),
  inference(resolution,[],[f39804,f14645])).
fof(f37793,plain,(
  ( ! [X86] : (s(bool,'T_0') = s(bool,X86) | s(bool,X86) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl984),
  inference(cnf_transformation,[],[f37793_D])).
fof(f37793_D,plain,(
  ( ! [X86] : (s(bool,'T_0') = s(bool,X86) | s(bool,X86) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl984),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl984])])).
fof(f40198,plain,(
  ( ! [X59,X58] : (p(s(bool,X58)) | s(bool,'T_0') = s(bool,X59) | s(bool,X59) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1046)),
  inference(resolution,[],[f39804,f14946])).
fof(f37792,plain,(
  ( ! [X84] : (s(bool,'T_0') = s(bool,X84) | s(bool,X84) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl982),
  inference(cnf_transformation,[],[f37792_D])).
fof(f37792_D,plain,(
  ( ! [X84] : (s(bool,'T_0') = s(bool,X84) | s(bool,X84) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl982),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl982])])).
fof(f40197,plain,(
  ( ! [X57,X56] : (p(s(bool,X56)) | s(bool,'T_0') = s(bool,X57) | s(bool,X57) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl1046)),
  inference(resolution,[],[f39804,f13575])).
fof(f40084,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X8,X9))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X10),s(X8,X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X10)))))) ) | $spl1056),
  inference(cnf_transformation,[],[f40084_D])).
fof(f40084_D,plain,(
  ( ! [X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X8,X9))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X10),s(X8,X11))) | p(s(bool,X13)) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X10)))))) ) <=> ~$spl1056),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1056])])).
fof(f40008,plain,(
  ( ! [X644,X640,X642,X645,X641,X643] : (s('type.pair.prod'('type.typeSystem.tenv_val',X640),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X640,X641))) != s('type.pair.prod'('type.typeSystem.tenv_val',X640),'const.pair.,_2'(s('type.typeSystem.tenv_val',X642),s(X640,X643))) | p(s(bool,X644)) | p(s(bool,X645)) | s(bool,X645) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X642)))))) )),
  inference(resolution,[],[f894,f737])).
fof(f894,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X20)))))) | s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X21,X23))) != s('type.pair.prod'('type.typeSystem.tenv_val',X21),'const.pair.,_2'(s('type.typeSystem.tenv_val',X20),s(X21,X22)))) )),
  inference(superposition,[],[f455,f727])).
fof(f39905,plain,(
  ( ! [X61,X59,X57,X62,X60,X58,X63] : (s('type.pair.prod'('type.typeSystem.tenv_val',X57),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X57,X58))) != s('type.pair.prod'('type.typeSystem.tenv_val',X57),'const.pair.,_2'(s('type.typeSystem.tenv_val',X59),s(X57,X60))) | p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X59))))) | s(bool,X62) != s(bool,X63)) )),
  inference(resolution,[],[f894,f472])).
fof(f39902,plain,(
  ( ! [X39,X37,X41,X38,X36,X42,X40] : (s('type.pair.prod'('type.typeSystem.tenv_val',X36),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X36,X37))) != s('type.pair.prod'('type.typeSystem.tenv_val',X36),'const.pair.,_2'(s('type.typeSystem.tenv_val',X38),s(X36,X39))) | p(s(bool,X40)) | ~p(s(bool,X41)) | p(s(bool,X42)) | s(bool,X42) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X38)))))) )),
  inference(resolution,[],[f894,f471])).
fof(f39901,plain,(
  ( ! [X30,X35,X33,X31,X29,X34,X32] : (s('type.pair.prod'('type.typeSystem.tenv_val',X29),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X29,X30))) != s('type.pair.prod'('type.typeSystem.tenv_val',X29),'const.pair.,_2'(s('type.typeSystem.tenv_val',X31),s(X29,X32))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X31)))))) )),
  inference(resolution,[],[f894,f470])).
fof(f39900,plain,(
  ( ! [X28,X26,X24,X23,X27,X25,X22] : (s('type.pair.prod'('type.typeSystem.tenv_val',X22),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X22,X23))) != s('type.pair.prod'('type.typeSystem.tenv_val',X22),'const.pair.,_2'(s('type.typeSystem.tenv_val',X24),s(X22,X25))) | p(s(bool,X26)) | ~p(s(bool,X27)) | s(bool,X26) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X24))))) | s(bool,X27) != s(bool,X28)) )),
  inference(resolution,[],[f894,f468])).
fof(f39898,plain,(
  ( ! [X14,X12,X10,X8,X13,X11,X9] : (s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'),s(X8,X9))) != s('type.pair.prod'('type.typeSystem.tenv_val',X8),'const.pair.,_2'(s('type.typeSystem.tenv_val',X10),s(X8,X11))) | p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val',X10)))))) )),
  inference(resolution,[],[f894,f466])).
fof(f39644,plain,(
  ( ! [X41] : (p(s(bool,X41)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl1048)),
  inference(resolution,[],[f39603,f14347])).
fof(f39603,plain,(
  ( ! [X15,X16] : (~sP0('F_0',X16,X15) | p(s(bool,X15)) | s(bool,'F_0') != s(bool,X16)) ) | $spl1048),
  inference(duplicate_literal_removal,[],[f39585])).
fof(f39585,plain,(
  ( ! [X15,X16] : (p(s(bool,X15)) | ~sP0('F_0',X16,X15) | p(s(bool,X15)) | s(bool,'F_0') != s(bool,X16)) ) | $spl1048),
  inference(resolution,[],[f39455,f495])).
fof(f39455,plain,(
  ( ! [X4,X5] : (sP3(X4,X5,'F_0') | p(s(bool,X4)) | ~sP0('F_0',X5,X4)) ) | $spl1048),
  inference(subsumption_resolution,[],[f39444,f483])).
fof(f39444,plain,(
  ( ! [X4,X5] : (sP3(X4,X5,'F_0') | p(s(bool,X4)) | ~sP2(X4,'F_0',X5) | ~sP0('F_0',X5,X4)) ) | $spl1048),
  inference(resolution,[],[f39433,f479])).
fof(f39433,plain,(
  ( ! [X8,X7] : (sP1(X8,'F_0',X7)) ) | $spl1048),
  inference(subsumption_resolution,[],[f39432,f485])).
fof(f39432,plain,(
  ( ! [X8,X7] : (p(s(bool,X7)) | sP1(X8,'F_0',X7)) ) | $spl1048),
  inference(subsumption_resolution,[],[f39405,f487])).
fof(f39405,plain,(
  ( ! [X8,X7] : (p(s(bool,X7)) | ~p(s(bool,X8)) | sP1(X8,'F_0',X7)) ) | $spl1048),
  inference(resolution,[],[f39379,f474])).
fof(f39643,plain,(
  ( ! [X40] : (p(s(bool,X40)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1048)),
  inference(resolution,[],[f39603,f14645])).
fof(f39642,plain,(
  ( ! [X39] : (p(s(bool,X39)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl1048)),
  inference(resolution,[],[f39603,f14946])).
fof(f39641,plain,(
  ( ! [X38] : (p(s(bool,X38)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl1048)),
  inference(resolution,[],[f39603,f13575])).
fof(f39385,plain,(
  ( ! [X47,X45,X46] : (sP3(X47,X46,X45) | p(s(bool,X47)) | s(bool,'F_0') != s(bool,X45) | ~p(s(bool,X46))) ) | $spl1054),
  inference(cnf_transformation,[],[f39385_D])).
fof(f39385_D,plain,(
  ( ! [X47,X45,X46] : (sP3(X47,X46,X45) | p(s(bool,X47)) | s(bool,'F_0') != s(bool,X45) | ~p(s(bool,X46))) ) <=> ~$spl1054),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1054])])).
fof(f39387,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'F_0') != s(bool,X65) | p(s(bool,X64)) | ~p(s(bool,X66)) | sP3(X67,X66,X65) | p(s(bool,X67))) ) | $spl6),
  inference(subsumption_resolution,[],[f39348,f513])).
fof(f39348,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'F_0') != s(bool,X65) | p(s(bool,X64)) | ~p(s(bool,X66)) | sP3(X67,X66,X65) | p(s(bool,X67)) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(superposition,[],[f1795,f517])).
fof(f39369,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') != s(bool,X49) | p(s(bool,X48)) | ~p(s(bool,X50)) | sP3(X51,X50,X49) | p(s(bool,X51))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f39344])).
fof(f39344,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') != s(bool,X49) | p(s(bool,X48)) | ~p(s(bool,X50)) | sP3(X51,X50,X49) | p(s(bool,X51)) | p(s(bool,X48))) ) | $spl6),
  inference(superposition,[],[f1795,f512])).
fof(f39370,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') != s(bool,X45) | p(s(bool,X44)) | ~p(s(bool,X46)) | sP3(X47,X46,X45) | p(s(bool,X47))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f39343])).
fof(f39343,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') != s(bool,X45) | p(s(bool,X44)) | ~p(s(bool,X46)) | sP3(X47,X46,X45) | p(s(bool,X47)) | p(s(bool,X44))) ) | $spl6),
  inference(superposition,[],[f1795,f510])).
fof(f39384,plain,(
  ( ! [X99,X100] : (sP3(X100,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X100)) | ~p(s(bool,X99))) ) | $spl1052),
  inference(cnf_transformation,[],[f39384_D])).
fof(f39384_D,plain,(
  ( ! [X99,X100] : (sP3(X100,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X100)) | ~p(s(bool,X99))) ) <=> ~$spl1052),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1052])])).
fof(f39383,plain,(
  ( ! [X99,X100,X98] : (p(s(bool,X98)) | ~p(s(bool,X99)) | sP3(X100,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X100))) ) | ($spl6 | $spl446)),
  inference(subsumption_resolution,[],[f39324,f510])).
fof(f39324,plain,(
  ( ! [X99,X100,X98] : (s(bool,'F_0') != s(bool,X98) | p(s(bool,X98)) | ~p(s(bool,X99)) | sP3(X100,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X100))) ) | ($spl6 | $spl446)),
  inference(superposition,[],[f1795,f18947])).
fof(f39379,plain,(
  ( ! [X83,X82] : (sP3(X83,X82,'F_0') | p(s(bool,X83)) | ~p(s(bool,X82))) ) | $spl1048),
  inference(cnf_transformation,[],[f39379_D])).
fof(f39379_D,plain,(
  ( ! [X83,X82] : (sP3(X83,X82,'F_0') | p(s(bool,X83)) | ~p(s(bool,X82))) ) <=> ~$spl1048),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1048])])).
fof(f39382,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X89)) | ~p(s(bool,X90)) | sP3(X91,X90,'F_0') | p(s(bool,X91))) ) | $spl6),
  inference(subsumption_resolution,[],[f39321,f931])).
fof(f39321,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X89) | p(s(bool,X89)) | ~p(s(bool,X90)) | sP3(X91,X90,'F_0') | p(s(bool,X91)) | p(s(bool,X88))) ) | $spl6),
  inference(superposition,[],[f1795,f510])).
fof(f39381,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,X84) != s(bool,X85) | p(s(bool,X85)) | ~p(s(bool,X86)) | sP3(X87,X86,'F_0') | p(s(bool,X87))) ) | $spl6),
  inference(subsumption_resolution,[],[f39320,f931])).
fof(f39320,plain,(
  ( ! [X87,X85,X86,X84] : (s(bool,X84) != s(bool,X85) | p(s(bool,X85)) | ~p(s(bool,X86)) | sP3(X87,X86,'F_0') | p(s(bool,X87)) | p(s(bool,X84))) ) | $spl6),
  inference(superposition,[],[f1795,f512])).
fof(f39380,plain,(
  ( ! [X80,X81] : (s(bool,X80) != s(bool,X81) | s(bool,'T_0') = s(bool,X80)) ) | $spl1050),
  inference(cnf_transformation,[],[f39380_D])).
fof(f39380_D,plain,(
  ( ! [X80,X81] : (s(bool,X80) != s(bool,X81) | s(bool,'T_0') = s(bool,X80)) ) <=> ~$spl1050),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1050])])).
fof(f39378,plain,(
  ( ! [X80,X83,X81,X82] : (s(bool,X80) != s(bool,X81) | ~p(s(bool,X82)) | sP3(X83,X82,'F_0') | p(s(bool,X83)) | s(bool,'T_0') = s(bool,X80)) ) | $spl6),
  inference(subsumption_resolution,[],[f39319,f1833])).
fof(f1833,plain,(
  ( ! [X41,X40] : (s(bool,X40) != s(bool,X41) | ~p(s(bool,X41)) | s(bool,'T_0') = s(bool,X40)) ) | $spl6),
  inference(subsumption_resolution,[],[f1780,f650])).
fof(f1780,plain,(
  ( ! [X41,X40] : (s(bool,X40) != s(bool,X41) | p(s(bool,'F_0')) | ~p(s(bool,X41)) | s(bool,'T_0') = s(bool,X40)) ) | $spl6),
  inference(superposition,[],[f931,f517])).
fof(f39319,plain,(
  ( ! [X80,X83,X81,X82] : (s(bool,X80) != s(bool,X81) | p(s(bool,X81)) | ~p(s(bool,X82)) | sP3(X83,X82,'F_0') | p(s(bool,X83)) | s(bool,'T_0') = s(bool,X80)) ) | $spl6),
  inference(superposition,[],[f1795,f517])).
fof(f39376,plain,(
  ( ! [X66,X64,X67] : (sP3(X67,X66,X64) | s(bool,'T_0') = s(bool,X64) | p(s(bool,X67)) | ~p(s(bool,X66))) ) | $spl1046),
  inference(cnf_transformation,[],[f39376_D])).
fof(f39376_D,plain,(
  ( ! [X66,X64,X67] : (sP3(X67,X66,X64) | s(bool,'T_0') = s(bool,X64) | p(s(bool,X67)) | ~p(s(bool,X66))) ) <=> ~$spl1046),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1046])])).
fof(f39375,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,X65)) | ~p(s(bool,X66)) | sP3(X67,X66,X64) | p(s(bool,X67)) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(subsumption_resolution,[],[f39315,f510])).
fof(f39315,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'F_0') != s(bool,X65) | p(s(bool,X65)) | ~p(s(bool,X66)) | sP3(X67,X66,X64) | p(s(bool,X67)) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(superposition,[],[f1795,f517])).
fof(f39222,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl1044),
  inference(cnf_transformation,[],[f39222_D])).
fof(f39222_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl1044),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1044])])).
fof(f39219,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | $spl1040),
  inference(cnf_transformation,[],[f39219_D])).
fof(f39219_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) <=> ~$spl1040),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1040])])).
fof(f39081,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl48),
  inference(superposition,[],[f1160,f736])).
fof(f39220,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl1042),
  inference(cnf_transformation,[],[f39220_D])).
fof(f39220_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) <=> ~$spl1042),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1042])])).
fof(f39078,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl48),
  inference(superposition,[],[f1160,f531])).
fof(f39077,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl48),
  inference(superposition,[],[f1160,f529])).
fof(f39217,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl1039),
  inference(cnf_transformation,[],[f39217_D])).
fof(f39217_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl1039),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1039])])).
fof(f39076,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl48),
  inference(superposition,[],[f1160,f525])).
fof(f39075,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl48),
  inference(superposition,[],[f1160,f523])).
fof(f38979,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl1036),
  inference(cnf_transformation,[],[f38979_D])).
fof(f38979_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl1036),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1036])])).
fof(f38976,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | $spl1032),
  inference(cnf_transformation,[],[f38976_D])).
fof(f38976_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) <=> ~$spl1032),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1032])])).
fof(f38834,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl40),
  inference(superposition,[],[f1148,f736])).
fof(f38977,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl1034),
  inference(cnf_transformation,[],[f38977_D])).
fof(f38977_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) <=> ~$spl1034),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1034])])).
fof(f38831,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl40),
  inference(superposition,[],[f1148,f531])).
fof(f38830,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl40),
  inference(superposition,[],[f1148,f529])).
fof(f38974,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl1031),
  inference(cnf_transformation,[],[f38974_D])).
fof(f38974_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl1031),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1031])])).
fof(f38829,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl40),
  inference(superposition,[],[f1148,f525])).
fof(f38828,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl40),
  inference(superposition,[],[f1148,f523])).
fof(f1148,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl40),
  inference(cnf_transformation,[],[f1148_D])).
fof(f1148_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f38821,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl1028),
  inference(cnf_transformation,[],[f38821_D])).
fof(f38821_D,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl1028),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1028])])).
fof(f38805,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24386,f736])).
fof(f24386,plain,(
  ( ! [X128,X129] : (sP8('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X128,X129)) ) | $spl119),
  inference(resolution,[],[f3185,f581])).
fof(f38785,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl1026),
  inference(cnf_transformation,[],[f38785_D])).
fof(f38785_D,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl1026),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1026])])).
fof(f38769,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24385,f736])).
fof(f24385,plain,(
  ( ! [X127,X126] : (sP8(X126,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X127)) ) | $spl119),
  inference(resolution,[],[f3185,f580])).
fof(f38749,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl1024),
  inference(cnf_transformation,[],[f38749_D])).
fof(f38749_D,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl1024),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1024])])).
fof(f38732,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24372,f736])).
fof(f24372,plain,(
  ( ! [X101,X100] : (sP6('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X100,X101)) ) | $spl119),
  inference(resolution,[],[f3185,f564])).
fof(f38628,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl1022),
  inference(cnf_transformation,[],[f38628_D])).
fof(f38628_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl1022),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1022])])).
fof(f38625,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | $spl1018),
  inference(cnf_transformation,[],[f38625_D])).
fof(f38625_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) <=> ~$spl1018),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1018])])).
fof(f38487,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl28),
  inference(superposition,[],[f954,f736])).
fof(f38626,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl1020),
  inference(cnf_transformation,[],[f38626_D])).
fof(f38626_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) <=> ~$spl1020),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1020])])).
fof(f38484,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl28),
  inference(superposition,[],[f954,f531])).
fof(f38483,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl28),
  inference(superposition,[],[f954,f529])).
fof(f38623,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl1017),
  inference(cnf_transformation,[],[f38623_D])).
fof(f38623_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl1017),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1017])])).
fof(f38482,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl28),
  inference(superposition,[],[f954,f525])).
fof(f38481,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl28),
  inference(superposition,[],[f954,f523])).
fof(f38474,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl1014),
  inference(cnf_transformation,[],[f38474_D])).
fof(f38474_D,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl1014),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1014])])).
fof(f38458,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24356,f736])).
fof(f24356,plain,(
  ( ! [X68,X69] : (sP4('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X68,X69)) ) | $spl119),
  inference(resolution,[],[f3185,f547])).
fof(f38438,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl1012),
  inference(cnf_transformation,[],[f38438_D])).
fof(f38438_D,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl1012),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1012])])).
fof(f38422,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24355,f736])).
fof(f24355,plain,(
  ( ! [X66,X67] : (sP4(X66,X67,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f545])).
fof(f18621,plain,(
  ( ! [X33,X32] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X32,X33)) ) | $spl406),
  inference(cnf_transformation,[],[f18621_D])).
fof(f18621_D,plain,(
  ( ! [X33,X32] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X32,X33)) ) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f38385,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24337,f736])).
fof(f24337,plain,(
  ( ! [X41,X40] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X40,X41)) ) | $spl119),
  inference(resolution,[],[f3185,f487])).
fof(f24859,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl637),
  inference(cnf_transformation,[],[f24859_D])).
fof(f24859_D,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl637),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl637])])).
fof(f38402,plain,(
  ( ! [X12,X13] : (sP3(X12,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X13) | p(s(bool,X12))) ) | $spl1010),
  inference(cnf_transformation,[],[f38402_D])).
fof(f38402_D,plain,(
  ( ! [X12,X13] : (sP3(X12,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X13) | p(s(bool,X12))) ) <=> ~$spl1010),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1010])])).
fof(f38368,plain,(
  ( ! [X14,X15] : (sP3(X14,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X15) | p(s(bool,X14)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl898)),
  inference(resolution,[],[f24337,f35632])).
fof(f16149,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl356),
  inference(cnf_transformation,[],[f16149_D])).
fof(f16149_D,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f38367,plain,(
  ( ! [X12,X13] : (sP3(X12,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X13) | p(s(bool,X12)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl890)),
  inference(resolution,[],[f24337,f35531])).
fof(f38019,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,X25) | s(bool,X25) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl994),
  inference(cnf_transformation,[],[f38019_D])).
fof(f38019_D,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,X25) | s(bool,X25) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl994),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl994])])).
fof(f38366,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,'T_0') != s(bool,X11) | s(bool,X11) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24337,f21579])).
fof(f38365,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | p(s(bool,X9)) | s(bool,X8) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24337,f20225])).
fof(f38360,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl1008),
  inference(cnf_transformation,[],[f38360_D])).
fof(f38360_D,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl1008),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1008])])).
fof(f38342,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24336,f736])).
fof(f24336,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X39)) ) | $spl119),
  inference(resolution,[],[f3185,f486])).
fof(f38329,plain,(
  ( ! [X20] : (p(s(bool,X20)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl892)),
  inference(resolution,[],[f24336,f35315])).
fof(f38359,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16))) ) | $spl1006),
  inference(cnf_transformation,[],[f38359_D])).
fof(f38359_D,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16))) ) <=> ~$spl1006),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1006])])).
fof(f38326,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl910)),
  inference(resolution,[],[f24336,f36297])).
fof(f29493,plain,(
  ( ! [X64] : (s(bool,X64) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl746),
  inference(cnf_transformation,[],[f29493_D])).
fof(f29493_D,plain,(
  ( ! [X64] : (s(bool,X64) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl746),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl746])])).
fof(f38323,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X11) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24336,f21579])).
fof(f38317,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl1004),
  inference(cnf_transformation,[],[f38317_D])).
fof(f38317_D,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl1004),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1004])])).
fof(f38299,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24334,f736])).
fof(f24334,plain,(
  ( ! [X35,X34] : (sP2('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X34,X35)) ) | $spl119),
  inference(resolution,[],[f3185,f483])).
fof(f38177,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl1002),
  inference(cnf_transformation,[],[f38177_D])).
fof(f38177_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl1002),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1002])])).
fof(f38174,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | $spl998),
  inference(cnf_transformation,[],[f38174_D])).
fof(f38174_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) <=> ~$spl998),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl998])])).
fof(f38032,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl20),
  inference(superposition,[],[f942,f736])).
fof(f38175,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl1000),
  inference(cnf_transformation,[],[f38175_D])).
fof(f38175_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) <=> ~$spl1000),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1000])])).
fof(f38029,plain,(
  ( ! [X2,X3] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl20),
  inference(superposition,[],[f942,f531])).
fof(f38028,plain,(
  ( ! [X0,X1] : (s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl20),
  inference(superposition,[],[f942,f529])).
fof(f38172,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl997),
  inference(cnf_transformation,[],[f38172_D])).
fof(f38172_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl997),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl997])])).
fof(f38027,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl20),
  inference(superposition,[],[f942,f525])).
fof(f38026,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl20),
  inference(superposition,[],[f942,f523])).
fof(f24861,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl640),
  inference(cnf_transformation,[],[f24861_D])).
fof(f24861_D,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl640),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl640])])).
fof(f38001,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24333,f736])).
fof(f37986,plain,(
  ( ! [X28,X27] : (~p(s(bool,X27)) | s(bool,X28) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,X28)) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f28860])).
fof(f24860,plain,(
  ( ! [X16] : (sP3(X16,'F_0','const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl638),
  inference(cnf_transformation,[],[f24860_D])).
fof(f24860_D,plain,(
  ( ! [X16] : (sP3(X16,'F_0','const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl638),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl638])])).
fof(f37985,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') != s(bool,X25) | sP3(X26,'F_0','const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X25) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f28729])).
fof(f37984,plain,(
  ( ! [X24] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X24))) ) | $spl119),
  inference(resolution,[],[f24333,f19686])).
fof(f37981,plain,(
  ( ! [X21] : (sP3(X21,'F_0','const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f19374])).
fof(f38018,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X17))) ) | $spl992),
  inference(cnf_transformation,[],[f38018_D])).
fof(f38018_D,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X17))) ) <=> ~$spl992),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl992])])).
fof(f37978,plain,(
  ( ! [X17,X16] : (sP3(X16,X17,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X17)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl910)),
  inference(resolution,[],[f24333,f36296])).
fof(f37976,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X13))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f21565])).
fof(f24857,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl634),
  inference(cnf_transformation,[],[f24857_D])).
fof(f24857_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl634),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl634])])).
fof(f37975,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X11))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f20314])).
fof(f37909,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f737])).
fof(f37806,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl119),
  inference(resolution,[],[f3185,f472])).
fof(f37804,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f471])).
fof(f37802,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f470])).
fof(f37801,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl119),
  inference(resolution,[],[f3185,f468])).
fof(f37799,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f466])).
fof(f37796,plain,(
  ( ! [X92] : (s(bool,'T_0') = s(bool,X92) | s(bool,X92) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl990),
  inference(cnf_transformation,[],[f37796_D])).
fof(f37796_D,plain,(
  ( ! [X92] : (s(bool,'T_0') = s(bool,X92) | s(bool,X92) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl990),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl990])])).
fof(f37783,plain,(
  ( ! [X92,X91] : (p(s(bool,X91)) | s(bool,'T_0') = s(bool,X92) | s(bool,X92) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl942)),
  inference(resolution,[],[f37700,f26988])).
fof(f26988,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl118),
  inference(resolution,[],[f3184,f491])).
fof(f37700,plain,(
  ( ! [X17,X15,X16] : (~sP0(X17,X15,X16) | p(s(bool,X16)) | s(bool,'T_0') = s(bool,X15) | s(bool,X15) != s(bool,X17)) ) | $spl942),
  inference(duplicate_literal_removal,[],[f37678])).
fof(f37678,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') = s(bool,X15) | p(s(bool,X16)) | ~sP0(X17,X15,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl942),
  inference(resolution,[],[f37373,f495])).
fof(f37373,plain,(
  ( ! [X6,X8,X7] : (sP3(X7,X6,X8) | s(bool,'T_0') = s(bool,X6) | p(s(bool,X7)) | ~sP0(X8,X6,X7)) ) | $spl942),
  inference(subsumption_resolution,[],[f37359,f483])).
fof(f37359,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') = s(bool,X6) | sP3(X7,X6,X8) | p(s(bool,X7)) | ~sP2(X7,X8,X6) | ~sP0(X8,X6,X7)) ) | $spl942),
  inference(resolution,[],[f37352,f479])).
fof(f37352,plain,(
  ( ! [X4,X5,X3] : (sP1(X3,X5,X4) | s(bool,'T_0') = s(bool,X3)) ) | $spl942),
  inference(subsumption_resolution,[],[f37351,f485])).
fof(f37351,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,X3) | p(s(bool,X4)) | sP1(X3,X5,X4)) ) | $spl942),
  inference(subsumption_resolution,[],[f37322,f486])).
fof(f37322,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,X3) | p(s(bool,X4)) | ~p(s(bool,X5)) | sP1(X3,X5,X4)) ) | $spl942),
  inference(resolution,[],[f37065,f474])).
fof(f37782,plain,(
  ( ! [X90,X89] : (p(s(bool,X89)) | s(bool,'T_0') = s(bool,X90) | s(bool,X90) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl942)),
  inference(resolution,[],[f37700,f14348])).
fof(f37781,plain,(
  ( ! [X88,X87] : (p(s(bool,X87)) | s(bool,'T_0') = s(bool,X88) | s(bool,X88) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl942)),
  inference(resolution,[],[f37700,f14646])).
fof(f37780,plain,(
  ( ! [X85,X86] : (p(s(bool,X85)) | s(bool,'T_0') = s(bool,X86) | s(bool,X86) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl942)),
  inference(resolution,[],[f37700,f14947])).
fof(f37779,plain,(
  ( ! [X83,X84] : (p(s(bool,X83)) | s(bool,'T_0') = s(bool,X84) | s(bool,X84) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl942)),
  inference(resolution,[],[f37700,f13576])).
fof(f24858,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl636),
  inference(cnf_transformation,[],[f24858_D])).
fof(f24858_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl636),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl636])])).
fof(f37771,plain,(
  ( ! [X66,X67] : (p(s(bool,X66)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X67) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl942)),
  inference(resolution,[],[f37700,f26987])).
fof(f26987,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl118),
  inference(resolution,[],[f3184,f490])).
fof(f37770,plain,(
  ( ! [X64,X65] : (p(s(bool,X64)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X65) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl942)),
  inference(resolution,[],[f37700,f14347])).
fof(f37769,plain,(
  ( ! [X62,X63] : (p(s(bool,X62)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X63) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl942)),
  inference(resolution,[],[f37700,f14645])).
fof(f37768,plain,(
  ( ! [X61,X60] : (p(s(bool,X60)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X61) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl942)),
  inference(resolution,[],[f37700,f14946])).
fof(f37767,plain,(
  ( ! [X59,X58] : (p(s(bool,X58)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X59) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl942)),
  inference(resolution,[],[f37700,f13575])).
fof(f1160,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl48),
  inference(cnf_transformation,[],[f1160_D])).
fof(f1160_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f37662,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl981),
  inference(cnf_transformation,[],[f37662_D])).
fof(f37662_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl981),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl981])])).
fof(f37592,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl101),
  inference(superposition,[],[f2995,f736])).
fof(f37654,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl978),
  inference(cnf_transformation,[],[f37654_D])).
fof(f37654_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl978),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl978])])).
fof(f37552,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl101),
  inference(resolution,[],[f2995,f737])).
fof(f37449,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl101),
  inference(resolution,[],[f2995,f472])).
fof(f37447,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl101),
  inference(resolution,[],[f2995,f471])).
fof(f37445,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl101),
  inference(resolution,[],[f2995,f470])).
fof(f37444,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl101),
  inference(resolution,[],[f2995,f468])).
fof(f37442,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl101),
  inference(resolution,[],[f2995,f466])).
fof(f37651,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl975),
  inference(cnf_transformation,[],[f37651_D])).
fof(f37651_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl975),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl975])])).
fof(f37653,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl977),
  inference(cnf_transformation,[],[f37653_D])).
fof(f37653_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl977),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl977])])).
fof(f37441,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl101),
  inference(resolution,[],[f2995,f710])).
fof(f37439,plain,(
  ( ! [X28,X29] : (sP3(X28,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X29) | ~p(s(bool,X29))) ) | $spl972),
  inference(cnf_transformation,[],[f37439_D])).
fof(f37439_D,plain,(
  ( ! [X28,X29] : (sP3(X28,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X29) | ~p(s(bool,X29))) ) <=> ~$spl972),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl972])])).
fof(f37422,plain,(
  ( ! [X28,X29] : (sP3(X28,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X29) | ~p(s(bool,X29)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl942)),
  inference(resolution,[],[f37372,f26982])).
fof(f26982,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl118),
  inference(resolution,[],[f3184,f481])).
fof(f37372,plain,(
  ( ! [X2,X0,X1] : (~sP2(X1,X2,X0) | sP3(X1,X0,X2) | ~p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl942),
  inference(subsumption_resolution,[],[f37357,f491])).
fof(f37357,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | sP3(X1,X0,X2) | ~p(s(bool,X2)) | ~sP2(X1,X2,X0) | ~sP0(X2,X0,X1)) ) | $spl942),
  inference(resolution,[],[f37352,f477])).
fof(f37438,plain,(
  ( ! [X26,X27] : (sP3(X26,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X27) | ~p(s(bool,X27))) ) | $spl970),
  inference(cnf_transformation,[],[f37438_D])).
fof(f37438_D,plain,(
  ( ! [X26,X27] : (sP3(X26,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X27) | ~p(s(bool,X27))) ) <=> ~$spl970),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl970])])).
fof(f37421,plain,(
  ( ! [X26,X27] : (sP3(X26,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X27) | ~p(s(bool,X27)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl942)),
  inference(resolution,[],[f37372,f14342])).
fof(f37435,plain,(
  ( ! [X24,X25] : (sP3(X24,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X25) | ~p(s(bool,X25))) ) | $spl966),
  inference(cnf_transformation,[],[f37435_D])).
fof(f37435_D,plain,(
  ( ! [X24,X25] : (sP3(X24,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X25) | ~p(s(bool,X25))) ) <=> ~$spl966),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl966])])).
fof(f37420,plain,(
  ( ! [X24,X25] : (sP3(X24,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X25) | ~p(s(bool,X25)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl942)),
  inference(resolution,[],[f37372,f14640])).
fof(f37432,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23))) ) | $spl962),
  inference(cnf_transformation,[],[f37432_D])).
fof(f37432_D,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23))) ) <=> ~$spl962),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl962])])).
fof(f37419,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl942)),
  inference(resolution,[],[f37372,f14941])).
fof(f37429,plain,(
  ( ! [X21,X20] : (sP3(X20,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X21) | ~p(s(bool,X21))) ) | $spl958),
  inference(cnf_transformation,[],[f37429_D])).
fof(f37429_D,plain,(
  ( ! [X21,X20] : (sP3(X20,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X21) | ~p(s(bool,X21))) ) <=> ~$spl958),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl958])])).
fof(f37418,plain,(
  ( ! [X21,X20] : (sP3(X20,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X21) | ~p(s(bool,X21)) | s(bool,'T_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl942)),
  inference(resolution,[],[f37372,f13570])).
fof(f37305,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl955),
  inference(cnf_transformation,[],[f37305_D])).
fof(f37305_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl955),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl955])])).
fof(f37234,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl95),
  inference(superposition,[],[f2985,f736])).
fof(f2995,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl101),
  inference(cnf_transformation,[],[f2995_D])).
fof(f2995_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f37208,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl95),
  inference(superposition,[],[f2985,f736])).
fof(f37296,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl952),
  inference(cnf_transformation,[],[f37296_D])).
fof(f37296_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl952),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl952])])).
fof(f37199,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl95),
  inference(resolution,[],[f2985,f737])).
fof(f37096,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X21) != s(bool,X23)) ) | $spl95),
  inference(resolution,[],[f2985,f472])).
fof(f37094,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl95),
  inference(resolution,[],[f2985,f471])).
fof(f37092,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl95),
  inference(resolution,[],[f2985,f470])).
fof(f37091,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X6) != s(bool,X8)) ) | $spl95),
  inference(resolution,[],[f2985,f468])).
fof(f37089,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl95),
  inference(resolution,[],[f2985,f466])).
fof(f37293,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl949),
  inference(cnf_transformation,[],[f37293_D])).
fof(f37293_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl949),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl949])])).
fof(f37295,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl951),
  inference(cnf_transformation,[],[f37295_D])).
fof(f37295_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl951),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl951])])).
fof(f37088,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl95),
  inference(resolution,[],[f2985,f710])).
fof(f37071,plain,(
  ( ! [X47,X45,X46] : (sP3(X47,X45,X46) | p(s(bool,X47)) | s(bool,'F_0') != s(bool,X45) | ~p(s(bool,X46))) ) | $spl946),
  inference(cnf_transformation,[],[f37071_D])).
fof(f37071_D,plain,(
  ( ! [X47,X45,X46] : (sP3(X47,X45,X46) | p(s(bool,X47)) | s(bool,'F_0') != s(bool,X45) | ~p(s(bool,X46))) ) <=> ~$spl946),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl946])])).
fof(f37073,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'F_0') != s(bool,X65) | p(s(bool,X64)) | ~p(s(bool,X66)) | sP3(X67,X65,X66) | p(s(bool,X67))) ) | $spl6),
  inference(subsumption_resolution,[],[f37037,f513])).
fof(f37037,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'F_0') != s(bool,X65) | p(s(bool,X64)) | ~p(s(bool,X66)) | sP3(X67,X65,X66) | p(s(bool,X67)) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(superposition,[],[f1794,f517])).
fof(f37058,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') != s(bool,X49) | p(s(bool,X48)) | ~p(s(bool,X50)) | sP3(X51,X49,X50) | p(s(bool,X51))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f37033])).
fof(f37033,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') != s(bool,X49) | p(s(bool,X48)) | ~p(s(bool,X50)) | sP3(X51,X49,X50) | p(s(bool,X51)) | p(s(bool,X48))) ) | $spl6),
  inference(superposition,[],[f1794,f512])).
fof(f37059,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') != s(bool,X45) | p(s(bool,X44)) | ~p(s(bool,X46)) | sP3(X47,X45,X46) | p(s(bool,X47))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f37032])).
fof(f37032,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') != s(bool,X45) | p(s(bool,X44)) | ~p(s(bool,X46)) | sP3(X47,X45,X46) | p(s(bool,X47)) | p(s(bool,X44))) ) | $spl6),
  inference(superposition,[],[f1794,f510])).
fof(f37070,plain,(
  ( ! [X99,X100] : (sP3(X100,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X99) | p(s(bool,X100)) | ~p(s(bool,X99))) ) | $spl944),
  inference(cnf_transformation,[],[f37070_D])).
fof(f37070_D,plain,(
  ( ! [X99,X100] : (sP3(X100,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X99) | p(s(bool,X100)) | ~p(s(bool,X99))) ) <=> ~$spl944),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl944])])).
fof(f37069,plain,(
  ( ! [X99,X100,X98] : (p(s(bool,X98)) | ~p(s(bool,X99)) | sP3(X100,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X99) | p(s(bool,X100))) ) | ($spl6 | $spl446)),
  inference(subsumption_resolution,[],[f37013,f510])).
fof(f37013,plain,(
  ( ! [X99,X100,X98] : (s(bool,'F_0') != s(bool,X98) | p(s(bool,X98)) | ~p(s(bool,X99)) | sP3(X100,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X99) | p(s(bool,X100))) ) | ($spl6 | $spl446)),
  inference(superposition,[],[f1794,f18947])).
fof(f37065,plain,(
  ( ! [X66,X64,X67] : (sP3(X67,X64,X66) | s(bool,'T_0') = s(bool,X64) | p(s(bool,X67)) | ~p(s(bool,X66))) ) | $spl942),
  inference(cnf_transformation,[],[f37065_D])).
fof(f37065_D,plain,(
  ( ! [X66,X64,X67] : (sP3(X67,X64,X66) | s(bool,'T_0') = s(bool,X64) | p(s(bool,X67)) | ~p(s(bool,X66))) ) <=> ~$spl942),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl942])])).
fof(f37064,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,X65)) | ~p(s(bool,X66)) | sP3(X67,X64,X66) | p(s(bool,X67)) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(subsumption_resolution,[],[f37004,f510])).
fof(f37004,plain,(
  ( ! [X66,X64,X67,X65] : (s(bool,'F_0') != s(bool,X65) | p(s(bool,X65)) | ~p(s(bool,X66)) | sP3(X67,X64,X66) | p(s(bool,X67)) | s(bool,'T_0') = s(bool,X64)) ) | $spl6),
  inference(superposition,[],[f1794,f517])).
fof(f36702,plain,(
  ( ! [X16] : (sP3(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'T_0') | p(s(bool,X16))) ) | $spl940),
  inference(cnf_transformation,[],[f36702_D])).
fof(f36702_D,plain,(
  ( ! [X16] : (sP3(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'T_0') | p(s(bool,X16))) ) <=> ~$spl940),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl940])])).
fof(f36682,plain,(
  ( ! [X16] : (sP3(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'T_0') | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl912)),
  inference(superposition,[],[f35933,f736])).
fof(f35933,plain,(
  ( ! [X23] : (sP3(X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'T_0') | p(s(bool,X23))) ) | ($spl45 | $spl912)),
  inference(resolution,[],[f35896,f3044])).
fof(f3044,plain,(
  ( ! [X41,X40] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X40,X41)) ) | $spl45),
  inference(resolution,[],[f1152,f487])).
fof(f35896,plain,(
  ( ! [X10,X11] : (~sP1(X11,'T_0',X10) | p(s(bool,X10)) | sP3(X10,X11,'T_0')) ) | $spl912),
  inference(subsumption_resolution,[],[f35892,f483])).
fof(f35892,plain,(
  ( ! [X10,X11] : (sP3(X10,X11,'T_0') | p(s(bool,X10)) | ~sP2(X10,'T_0',X11) | ~sP1(X11,'T_0',X10)) ) | $spl912),
  inference(resolution,[],[f35824,f479])).
fof(f35824,plain,(
  ( ! [X0,X1] : (sP0('T_0',X1,X0)) ) | $spl912),
  inference(subsumption_resolution,[],[f35823,f489])).
fof(f35823,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP0('T_0',X1,X0)) ) | $spl912),
  inference(subsumption_resolution,[],[f35799,f490])).
fof(f35799,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | sP0('T_0',X1,X0)) ) | $spl912),
  inference(resolution,[],[f35772,f473])).
fof(f36661,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16,'T_0') | p(s(bool,X16))) ) | $spl938),
  inference(cnf_transformation,[],[f36661_D])).
fof(f36661_D,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16,'T_0') | p(s(bool,X16))) ) <=> ~$spl938),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl938])])).
fof(f36623,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16,'T_0') | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl912)),
  inference(superposition,[],[f35910,f736])).
fof(f35910,plain,(
  ( ! [X17] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X17,'T_0') | p(s(bool,X17))) ) | ($spl45 | $spl912)),
  inference(resolution,[],[f35895,f3041])).
fof(f3041,plain,(
  ( ! [X35,X34] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X34,X35)) ) | $spl45),
  inference(resolution,[],[f1152,f483])).
fof(f35895,plain,(
  ( ! [X8,X9] : (~sP2(X8,'T_0',X9) | p(s(bool,X9)) | sP3(X8,X9,'T_0')) ) | $spl912),
  inference(subsumption_resolution,[],[f35891,f487])).
fof(f35891,plain,(
  ( ! [X8,X9] : (sP3(X8,X9,'T_0') | p(s(bool,X9)) | ~sP2(X8,'T_0',X9) | ~sP1(X9,'T_0',X8)) ) | $spl912),
  inference(resolution,[],[f35824,f478])).
fof(f16653,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl376),
  inference(cnf_transformation,[],[f16653_D])).
fof(f16653_D,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f36600,plain,(
  ( ! [X43,X44] : (sP3(X43,X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X43))) ) | $spl936),
  inference(cnf_transformation,[],[f36600_D])).
fof(f36600_D,plain,(
  ( ! [X43,X44] : (sP3(X43,X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X43))) ) <=> ~$spl936),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl936])])).
fof(f36591,plain,(
  ( ! [X43,X44] : (sP3(X43,X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X43)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl910)),
  inference(resolution,[],[f36297,f24055])).
fof(f24055,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X39)) ) | $spl121),
  inference(resolution,[],[f3187,f486])).
fof(f36572,plain,(
  ( ! [X33,X32] : (sP3(X32,X33,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X33))) ) | $spl934),
  inference(cnf_transformation,[],[f36572_D])).
fof(f36572_D,plain,(
  ( ! [X33,X32] : (sP3(X32,X33,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X33))) ) <=> ~$spl934),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl934])])).
fof(f36565,plain,(
  ( ! [X33,X32] : (sP3(X32,X33,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X33)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl910)),
  inference(resolution,[],[f36296,f24052])).
fof(f36173,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | $spl920),
  inference(cnf_transformation,[],[f36173_D])).
fof(f36173_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) <=> ~$spl920),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl920])])).
fof(f36512,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl66),
  inference(forward_demodulation,[],[f36445,f527])).
fof(f36445,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl66),
  inference(superposition,[],[f1999,f736])).
fof(f36511,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f36442,f527])).
fof(f36442,plain,(
  ( ! [X2,X3] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl66),
  inference(superposition,[],[f1999,f531])).
fof(f36510,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl66),
  inference(forward_demodulation,[],[f36441,f527])).
fof(f36441,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl66),
  inference(superposition,[],[f1999,f529])).
fof(f942,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl20),
  inference(cnf_transformation,[],[f942_D])).
fof(f942_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f36509,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl66),
  inference(forward_demodulation,[],[f36508,f527])).
fof(f36508,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl66),
  inference(forward_demodulation,[],[f36430,f533])).
fof(f533,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f182])).
fof(f182,plain,(
  ! [X0,X1] : ! [X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f86])).
fof(f86,axiom,(
  ! [X15,X29] : ! [X40] : s('type.list.list'(X29),'const.list.NIL_0') = s('type.list.list'(X29),'const.list.MAP_2'(s(fun(X15,X29),X40),s('type.list.list'(X15),'const.list.NIL_0')))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.MAP|split|0')).
fof(f36430,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl66),
  inference(superposition,[],[f1999,f736])).
fof(f36506,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,X4) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl932),
  inference(cnf_transformation,[],[f36506_D])).
fof(f36506_D,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s(bool,X4) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) <=> ~$spl932),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl932])])).
fof(f36413,plain,(
  ( ! [X196,X195] : (p(s(bool,X195)) | p(s(bool,X196)) | s(bool,X196) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl66),
  inference(resolution,[],[f1999,f737])).
fof(f36310,plain,(
  ( ! [X26,X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | s(bool,X24) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s(bool,X25) != s(bool,X26)) ) | $spl66),
  inference(resolution,[],[f1999,f472])).
fof(f36307,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17)) | s(bool,X17) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl66),
  inference(resolution,[],[f1999,f471])).
fof(f36306,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | p(s(bool,X13)) | s(bool,X12) != s(bool,X14) | s(bool,X13) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl66),
  inference(resolution,[],[f1999,f470])).
fof(f36305,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s(bool,X10) != s(bool,X11)) ) | $spl66),
  inference(resolution,[],[f1999,f468])).
fof(f36303,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | p(s(bool,X4)) | s(bool,X3) != s(bool,X5) | s(bool,X4) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl66),
  inference(resolution,[],[f1999,f466])).
fof(f36505,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char'))))))) | $spl931),
  inference(cnf_transformation,[],[f36505_D])).
fof(f36505_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char'))))))) <=> ~$spl931),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl931])])).
fof(f2001,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X13))))) ) | $spl68),
  inference(cnf_transformation,[],[f2001_D])).
fof(f2001_D,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X13))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f36299,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X1)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char')))))))) ) | $spl66),
  inference(resolution,[],[f1999,f536])).
fof(f536,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,X0)),s('type.list.list'(X0),sK19(X1,X0))))))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f362])).
fof(f362,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK19(X1,X0))))) & ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,X0)),s('type.list.list'(X0),sK19(X1,X0)))))))) | ! [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19,sK20])],[f361])).
fof(f361,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X3] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X3)))) & ? [X4] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X3))))))) | ! [X2] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f279])).
fof(f279,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) & ? [X3] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))))))) | ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f278])).
fof(f278,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) | ? [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) & ? [X3] : ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) | ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(ennf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) => ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(flattening,[],[f186])).
fof(f186,plain,(
  ! [X0] : ! [X1] : ((p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) & ! [X2] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) => ! [X3] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2)))))))) => ! [X4] : p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X4)))))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X15] : ! [X33] : ((p(s(bool,happ(s(fun('type.list.list'(X15),bool),X33),s('type.list.list'(X15),'const.list.NIL_0')))) & ! [X14] : (p(s(bool,happ(s(fun('type.list.list'(X15),bool),X33),s('type.list.list'(X15),X14)))) => ! [X56] : p(s(bool,happ(s(fun('type.list.list'(X15),bool),X33),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,X56),s('type.list.list'(X15),X14)))))))) => ! [X41] : p(s(bool,happ(s(fun('type.list.list'(X15),bool),X33),s('type.list.list'(X15),X41)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.list_INDUCT')).
fof(f36503,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char'))))) | $spl928),
  inference(cnf_transformation,[],[f36503_D])).
fof(f36503_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char'))))) <=> ~$spl928),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl928])])).
fof(f36298,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X0)))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),'type.string.char')))))) ) | $spl66),
  inference(resolution,[],[f1999,f535])).
fof(f535,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),X2)))) | p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),sK19(X1,X0))))) | ~p(s(bool,happ(s(fun('type.list.list'(X0),bool),X1),s('type.list.list'(X0),'const.list.NIL_0'))))) )),
  inference(cnf_transformation,[],[f362])).
fof(f36295,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') != s(bool,X2) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) ) | $spl926),
  inference(cnf_transformation,[],[f36295_D])).
fof(f36295_D,plain,(
  ( ! [X2,X0] : (s(bool,'F_0') != s(bool,X2) | s(bool,X0) != s(bool,X2) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl926),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl926])])).
fof(f36287,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X1)) | s(bool,'F_0') != s(bool,X2) | s(bool,X0) != s(bool,X2)) ) | ($spl176 | $spl910)),
  inference(resolution,[],[f36282,f21607])).
fof(f21607,plain,(
  ( ! [X17,X15,X16] : (~sP0(X17,X15,X16) | p(s(bool,X16)) | s(bool,'F_0') != s(bool,X15) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(duplicate_literal_removal,[],[f21600])).
fof(f21600,plain,(
  ( ! [X17,X15,X16] : (s(bool,'F_0') != s(bool,X15) | p(s(bool,X16)) | ~sP0(X17,X15,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(resolution,[],[f19296,f495])).
fof(f19296,plain,(
  ( ! [X10,X11,X9] : (sP3(X10,X9,X11) | s(bool,'F_0') != s(bool,X9) | p(s(bool,X10)) | ~sP0(X11,X9,X10)) ) | $spl176),
  inference(subsumption_resolution,[],[f19293,f483])).
fof(f19293,plain,(
  ( ! [X10,X11,X9] : (s(bool,'F_0') != s(bool,X9) | sP3(X10,X9,X11) | p(s(bool,X10)) | ~sP2(X10,X11,X9) | ~sP0(X11,X9,X10)) ) | $spl176),
  inference(resolution,[],[f18610,f479])).
fof(f36174,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | $spl921),
  inference(cnf_transformation,[],[f36174_D])).
fof(f36174_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) <=> ~$spl921),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl921])])).
fof(f36178,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl67),
  inference(forward_demodulation,[],[f36109,f527])).
fof(f36109,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)),'type.list.list'('type.string.char'))))) | $spl67),
  inference(superposition,[],[f2000,f736])).
fof(f36177,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl67),
  inference(forward_demodulation,[],[f36106,f527])).
fof(f36106,plain,(
  ( ! [X2,X3] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl67),
  inference(superposition,[],[f2000,f531])).
fof(f36175,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl67),
  inference(forward_demodulation,[],[f36105,f527])).
fof(f36105,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))))) ) | $spl67),
  inference(superposition,[],[f2000,f529])).
fof(f36172,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl67),
  inference(forward_demodulation,[],[f36171,f527])).
fof(f36171,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl67),
  inference(forward_demodulation,[],[f36094,f533])).
fof(f36094,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl67),
  inference(superposition,[],[f2000,f736])).
fof(f36166,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl918),
  inference(cnf_transformation,[],[f36166_D])).
fof(f36166_D,plain,(
  ( ! [X2] : (~p(s(bool,X2)) | s(bool,X2) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) <=> ~$spl918),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl918])])).
fof(f36079,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | ~p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl67),
  inference(resolution,[],[f2000,f737])).
fof(f35976,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s(bool,X22) != s(bool,X24)) ) | $spl67),
  inference(resolution,[],[f2000,f472])).
fof(f35974,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | ~p(s(bool,X18)) | s(bool,X17) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl67),
  inference(resolution,[],[f2000,f471])).
fof(f35972,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,X12) | s(bool,X11) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl67),
  inference(resolution,[],[f2000,f470])).
fof(f35971,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,X7)) | ~p(s(bool,X8)) | s(bool,X8) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | s(bool,X7) != s(bool,X9)) ) | $spl67),
  inference(resolution,[],[f2000,f468])).
fof(f35969,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X2) != s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) ) | $spl67),
  inference(resolution,[],[f2000,f466])).
fof(f34762,plain,(
  ( ! [X60] : (s(bool,'F_0') = s(bool,X60)) ) | $spl900),
  inference(cnf_transformation,[],[f34762_D])).
fof(f34762_D,plain,(
  ( ! [X60] : (s(bool,'F_0') = s(bool,X60)) ) <=> ~$spl900),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl900])])).
fof(f35780,plain,(
  ( ! [X54,X55,X53] : (sP3(X55,X54,X53) | p(s(bool,X55)) | s(bool,'T_0') != s(bool,X53) | p(s(bool,X54))) ) | $spl916),
  inference(cnf_transformation,[],[f35780_D])).
fof(f35780_D,plain,(
  ( ! [X54,X55,X53] : (sP3(X55,X54,X53) | p(s(bool,X55)) | s(bool,'T_0') != s(bool,X53) | p(s(bool,X54))) ) <=> ~$spl916),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl916])])).
fof(f35781,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | sP3(X63,X62,X61) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(subsumption_resolution,[],[f35736,f510])).
fof(f35736,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | ~p(s(bool,X60)) | sP3(X63,X62,X61) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(superposition,[],[f1767,f517])).
fof(f35758,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | sP3(X59,X58,X57) | p(s(bool,X59))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f35735])).
fof(f35735,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | sP3(X59,X58,X57) | p(s(bool,X59)) | ~p(s(bool,X56))) ) | $spl6),
  inference(superposition,[],[f1767,f516])).
fof(f35759,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X52)) | sP3(X55,X54,X53) | p(s(bool,X55))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f35734])).
fof(f35734,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X52)) | sP3(X55,X54,X53) | p(s(bool,X55)) | ~p(s(bool,X52))) ) | $spl6),
  inference(superposition,[],[f1767,f514])).
fof(f31184,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl802),
  inference(cnf_transformation,[],[f31184_D])).
fof(f31184_D,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl802),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl802])])).
fof(f35777,plain,(
  ( ! [X97,X95,X96] : (s(bool,'T_0') != s(bool,X95) | p(s(bool,X96)) | sP3(X97,X96,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X97))) ) | ($spl6 | $spl24)),
  inference(subsumption_resolution,[],[f35712,f513])).
fof(f35712,plain,(
  ( ! [X97,X95,X96] : (s(bool,'T_0') != s(bool,X95) | p(s(bool,X96)) | ~p(s(bool,X95)) | sP3(X97,X96,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X97))) ) | ($spl6 | $spl24)),
  inference(superposition,[],[f1767,f3662])).
fof(f35776,plain,(
  ( ! [X94,X93] : (p(s(bool,X93)) | p(s(bool,X94)) | sP3(X94,X93,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl914),
  inference(cnf_transformation,[],[f35776_D])).
fof(f35776_D,plain,(
  ( ! [X94,X93] : (p(s(bool,X93)) | p(s(bool,X94)) | sP3(X94,X93,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl914),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl914])])).
fof(f35775,plain,(
  ( ! [X94,X92,X93] : (s(bool,'T_0') != s(bool,X92) | p(s(bool,X93)) | sP3(X94,X93,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X94))) ) | ($spl6 | $spl76)),
  inference(subsumption_resolution,[],[f35711,f513])).
fof(f35711,plain,(
  ( ! [X94,X92,X93] : (s(bool,'T_0') != s(bool,X92) | p(s(bool,X93)) | ~p(s(bool,X92)) | sP3(X94,X93,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X94))) ) | ($spl6 | $spl76)),
  inference(superposition,[],[f1767,f4315])).
fof(f4315,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl76),
  inference(resolution,[],[f2216,f514])).
fof(f35772,plain,(
  ( ! [X70,X71] : (sP3(X71,X70,'T_0') | p(s(bool,X71)) | p(s(bool,X70))) ) | $spl912),
  inference(cnf_transformation,[],[f35772_D])).
fof(f35772_D,plain,(
  ( ! [X70,X71] : (sP3(X71,X70,'T_0') | p(s(bool,X71)) | p(s(bool,X70))) ) <=> ~$spl912),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl912])])).
fof(f35774,plain,(
  ( ! [X78,X76,X79,X77] : (s(bool,X76) != s(bool,X77) | p(s(bool,X78)) | sP3(X79,X78,'T_0') | p(s(bool,X79)) | ~p(s(bool,X76))) ) | $spl6),
  inference(subsumption_resolution,[],[f35707,f931])).
fof(f35707,plain,(
  ( ! [X78,X76,X79,X77] : (s(bool,X76) != s(bool,X77) | p(s(bool,X78)) | ~p(s(bool,X77)) | sP3(X79,X78,'T_0') | p(s(bool,X79)) | ~p(s(bool,X76))) ) | $spl6),
  inference(superposition,[],[f1767,f514])).
fof(f35773,plain,(
  ( ! [X74,X72,X75,X73] : (s(bool,X72) != s(bool,X73) | p(s(bool,X74)) | sP3(X75,X74,'T_0') | p(s(bool,X75)) | ~p(s(bool,X72))) ) | $spl6),
  inference(subsumption_resolution,[],[f35706,f931])).
fof(f35706,plain,(
  ( ! [X74,X72,X75,X73] : (s(bool,X72) != s(bool,X73) | p(s(bool,X74)) | ~p(s(bool,X73)) | sP3(X75,X74,'T_0') | p(s(bool,X75)) | ~p(s(bool,X72))) ) | $spl6),
  inference(superposition,[],[f1767,f516])).
fof(f34751,plain,(
  ( ! [X68,X69] : (s(bool,X68) != s(bool,X69) | s(bool,'F_0') = s(bool,X68)) ) | $spl894),
  inference(cnf_transformation,[],[f34751_D])).
fof(f34751_D,plain,(
  ( ! [X68,X69] : (s(bool,X68) != s(bool,X69) | s(bool,'F_0') = s(bool,X68)) ) <=> ~$spl894),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl894])])).
fof(f35771,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,X70)) | sP3(X71,X70,'T_0') | p(s(bool,X71)) | s(bool,'F_0') = s(bool,X68)) ) | $spl6),
  inference(subsumption_resolution,[],[f35705,f1843])).
fof(f1843,plain,(
  ( ! [X47,X46] : (s(bool,X46) != s(bool,X47) | p(s(bool,X47)) | s(bool,'F_0') = s(bool,X46)) ) | $spl6),
  inference(subsumption_resolution,[],[f1811,f738])).
fof(f1811,plain,(
  ( ! [X47,X46] : (s(bool,X46) != s(bool,X47) | p(s(bool,X47)) | ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X46)) ) | $spl6),
  inference(superposition,[],[f931,f517])).
fof(f35705,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,X70)) | ~p(s(bool,X69)) | sP3(X71,X70,'T_0') | p(s(bool,X71)) | s(bool,'F_0') = s(bool,X68)) ) | $spl6),
  inference(superposition,[],[f1767,f517])).
fof(f35770,plain,(
  ( ! [X62,X60,X63] : (sP3(X63,X62,X60) | s(bool,'F_0') = s(bool,X60) | p(s(bool,X63)) | p(s(bool,X62))) ) | $spl910),
  inference(cnf_transformation,[],[f35770_D])).
fof(f35770_D,plain,(
  ( ! [X62,X60,X63] : (sP3(X63,X62,X60) | s(bool,'F_0') = s(bool,X60) | p(s(bool,X63)) | p(s(bool,X62))) ) <=> ~$spl910),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl910])])).
fof(f35769,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | sP3(X63,X62,X60) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(subsumption_resolution,[],[f35703,f513])).
fof(f35703,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | ~p(s(bool,X61)) | sP3(X63,X62,X60) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(superposition,[],[f1767,f517])).
fof(f35763,plain,(
  ( ! [X37,X38,X34] : (p(s(bool,X37)) | ~p(s(bool,X34)) | p(s(bool,X38)) | sP3(X38,X37,X34)) ) | $spl908),
  inference(cnf_transformation,[],[f35763_D])).
fof(f35763_D,plain,(
  ( ! [X37,X38,X34] : (p(s(bool,X37)) | ~p(s(bool,X34)) | p(s(bool,X38)) | sP3(X38,X37,X34)) ) <=> ~$spl908),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl908])])).
fof(f35768,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | sP3(X59,X58,X56) | p(s(bool,X59)) | ~p(s(bool,X56))) ) | $spl6),
  inference(subsumption_resolution,[],[f35702,f513])).
fof(f35702,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X57)) | sP3(X59,X58,X56) | p(s(bool,X59)) | ~p(s(bool,X56))) ) | $spl6),
  inference(superposition,[],[f1767,f516])).
fof(f35767,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | sP3(X55,X54,X52) | p(s(bool,X55)) | ~p(s(bool,X52))) ) | $spl6),
  inference(subsumption_resolution,[],[f35701,f513])).
fof(f35701,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X53)) | sP3(X55,X54,X52) | p(s(bool,X55)) | ~p(s(bool,X52))) ) | $spl6),
  inference(superposition,[],[f1767,f514])).
fof(f35764,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,X40) != s(bool,X41) | p(s(bool,X42)) | sP3(X43,X42,X39) | p(s(bool,X43)) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(subsumption_resolution,[],[f35698,f931])).
fof(f35698,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,X40) != s(bool,X41) | p(s(bool,X42)) | ~p(s(bool,X41)) | sP3(X43,X42,X39) | p(s(bool,X43)) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(superposition,[],[f1767,f500])).
fof(f500,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X26,X27] : ((p(s(bool,X26)) => p(s(bool,X27))) => ((p(s(bool,X27)) => p(s(bool,X26))) => s(bool,X26) = s(bool,X27)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.IMP_ANTISYM_AX')).
fof(f35762,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,X35) != s(bool,X36) | p(s(bool,X37)) | sP3(X38,X37,X34) | p(s(bool,X38)) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f35697,f931])).
fof(f35697,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,X35) != s(bool,X36) | p(s(bool,X37)) | ~p(s(bool,X36)) | sP3(X38,X37,X34) | p(s(bool,X38)) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f1767,f500])).
fof(f24256,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl619),
  inference(cnf_transformation,[],[f24256_D])).
fof(f24256_D,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl619),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl619])])).
fof(f35661,plain,(
  ( ! [X52,X51] : (sP3(X51,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X52) | p(s(bool,X51))) ) | $spl906),
  inference(cnf_transformation,[],[f35661_D])).
fof(f35661_D,plain,(
  ( ! [X52,X51] : (sP3(X51,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X52) | p(s(bool,X51))) ) <=> ~$spl906),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl906])])).
fof(f35684,plain,(
  ( ! [X52,X51] : (sP3(X51,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X52) | p(s(bool,X51)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl898)),
  inference(resolution,[],[f35632,f24056])).
fof(f24056,plain,(
  ( ! [X41,X40] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X40,X41)) ) | $spl121),
  inference(resolution,[],[f3187,f487])).
fof(f35655,plain,(
  ( ! [X52,X51] : (sP3(X51,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X52) | p(s(bool,X51)) | s(bool,'F_0') = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl890)),
  inference(resolution,[],[f35531,f24056])).
fof(f35432,plain,(
  ( ! [X25] : (p(s(bool,X25)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl892)),
  inference(resolution,[],[f35315,f24055])).
fof(f35409,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | s(bool,'F_0') = s(bool,X36)) ) | ($spl176 | $spl894)),
  inference(subsumption_resolution,[],[f35373,f5713])).
fof(f35373,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | s(bool,'F_0') = s(bool,X37) | s(bool,'F_0') = s(bool,X36)) ) | $spl894),
  inference(superposition,[],[f34751,f517])).
fof(f35408,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,X34))) ) | ($spl176 | $spl894)),
  inference(subsumption_resolution,[],[f35372,f5713])).
fof(f35372,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,X35) | s(bool,'F_0') = s(bool,X35) | ~p(s(bool,X34))) ) | $spl894),
  inference(superposition,[],[f34751,f516])).
fof(f35407,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,X33) | ~p(s(bool,X32))) ) | ($spl176 | $spl894)),
  inference(subsumption_resolution,[],[f35371,f5713])).
fof(f35371,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,X33) | s(bool,'F_0') = s(bool,X33) | ~p(s(bool,X32))) ) | $spl894),
  inference(superposition,[],[f34751,f514])).
fof(f1445,plain,(
  ( ! [X29] : (s(bool,'F_0') != s(bool,X29)) ) | $spl50),
  inference(cnf_transformation,[],[f1445_D])).
fof(f1445_D,plain,(
  ( ! [X29] : (s(bool,'F_0') != s(bool,X29)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f35400,plain,(
  ( ! [X39,X38] : (s(bool,'F_0') != s(bool,X39) | s(bool,'F_0') = s(bool,X38)) ) | $spl894),
  inference(subsumption_resolution,[],[f35341,f34751])).
fof(f35341,plain,(
  ( ! [X39,X38] : (s(bool,'F_0') != s(bool,X39) | s(bool,'F_0') = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) ) | $spl894),
  inference(superposition,[],[f34751,f517])).
fof(f35395,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | s(bool,'F_0') = s(bool,X36)) ) | $spl894),
  inference(duplicate_literal_removal,[],[f35340])).
fof(f35340,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | s(bool,'F_0') = s(bool,X36) | s(bool,'F_0') = s(bool,X36)) ) | $spl894),
  inference(superposition,[],[f34751,f517])).
fof(f35399,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,X34))) ) | $spl894),
  inference(subsumption_resolution,[],[f35339,f509])).
fof(f35339,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,X35) | s(bool,'F_0') = s(bool,X34) | ~p(s(bool,X34))) ) | $spl894),
  inference(superposition,[],[f34751,f516])).
fof(f35398,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,X33) | ~p(s(bool,X32))) ) | $spl894),
  inference(subsumption_resolution,[],[f35338,f509])).
fof(f35338,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,X33) | s(bool,'F_0') = s(bool,X32) | ~p(s(bool,X32))) ) | $spl894),
  inference(superposition,[],[f34751,f514])).
fof(f35397,plain,(
  ( ! [X26,X27,X25] : (s(bool,X26) != s(bool,X27) | ~p(s(bool,X26)) | ~p(s(bool,X25))) ) | $spl894),
  inference(subsumption_resolution,[],[f35335,f509])).
fof(f35335,plain,(
  ( ! [X26,X27,X25] : (s(bool,X26) != s(bool,X27) | s(bool,'F_0') = s(bool,X25) | ~p(s(bool,X26)) | ~p(s(bool,X25))) ) | $spl894),
  inference(superposition,[],[f34751,f500])).
fof(f35396,plain,(
  ( ! [X24,X23,X22] : (s(bool,X23) != s(bool,X24) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl894),
  inference(subsumption_resolution,[],[f35334,f509])).
fof(f35334,plain,(
  ( ! [X24,X23,X22] : (s(bool,X23) != s(bool,X24) | s(bool,'F_0') = s(bool,X22) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl894),
  inference(superposition,[],[f34751,f500])).
fof(f35254,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl904),
  inference(cnf_transformation,[],[f35254_D])).
fof(f35254_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl904),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl904])])).
fof(f35253,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f35212,f717])).
fof(f35212,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1119,f736])).
fof(f1119,plain,(
  ( ! [X4,X5] : (~sP3(X5,X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X5)) | p(s(bool,X4))) )),
  inference(superposition,[],[f457,f494])).
fof(f35252,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl902),
  inference(cnf_transformation,[],[f35252_D])).
fof(f35252_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl902),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl902])])).
fof(f35199,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1119,f736])).
fof(f35160,plain,(
  $false | ($spl52 | $spl76)),
  inference(trivial_inequality_removal,[],[f35143])).
fof(f35143,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl52 | $spl76)),
  inference(superposition,[],[f1447,f4315])).
fof(f35159,plain,(
  $false | ($spl24 | $spl52)),
  inference(trivial_inequality_removal,[],[f35144])).
fof(f35144,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl24 | $spl52)),
  inference(superposition,[],[f1447,f3662])).
fof(f35158,plain,(
  $false | $spl52),
  inference(trivial_inequality_removal,[],[f35146])).
fof(f35146,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl52),
  inference(superposition,[],[f1447,f775])).
fof(f35157,plain,(
  $false | $spl52),
  inference(trivial_inequality_removal,[],[f35147])).
fof(f35147,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl52),
  inference(superposition,[],[f1447,f986])).
fof(f986,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))),
  inference(resolution,[],[f457,f514])).
fof(f35156,plain,(
  $false | $spl52),
  inference(equality_resolution,[],[f1447])).
fof(f35094,plain,(
  $false | ($spl50 | $spl446)),
  inference(trivial_inequality_removal,[],[f35082])).
fof(f35082,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl50 | $spl446)),
  inference(superposition,[],[f1445,f18947])).
fof(f35093,plain,(
  $false | $spl50),
  inference(equality_resolution,[],[f1445])).
fof(f35035,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f34904,f1509])).
fof(f1509,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl8),
  inference(equality_resolution,[],[f932])).
fof(f34904,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(resolution,[],[f1509,f704])).
fof(f35034,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f34903,f1509])).
fof(f34903,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(resolution,[],[f1509,f702])).
fof(f35033,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f34898,f1509])).
fof(f34898,plain,(
  ( ! [X300] : (p(s(bool,X300))) ) | $spl8),
  inference(resolution,[],[f1509,f661])).
fof(f35032,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f34896,f1509])).
fof(f34896,plain,(
  ( ! [X298] : (p(s(bool,X298))) ) | $spl8),
  inference(resolution,[],[f1509,f658])).
fof(f35031,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f34894,f1509])).
fof(f34894,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(resolution,[],[f1509,f655])).
fof(f35030,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f34893,f1509])).
fof(f34893,plain,(
  ( ! [X296] : (p(s(bool,X296))) ) | $spl8),
  inference(resolution,[],[f1509,f652])).
fof(f34905,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f706])).
fof(f34906,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f707])).
fof(f34907,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f738])).
fof(f34916,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f712])).
fof(f34917,plain,(
  $false | ($spl8 | $spl16)),
  inference(resolution,[],[f1509,f939])).
fof(f34918,plain,(
  $false | ($spl8 | $spl36)),
  inference(resolution,[],[f1509,f1145])).
fof(f34922,plain,(
  $false | ($spl8 | $spl76)),
  inference(resolution,[],[f1509,f4288])).
fof(f34923,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f959])).
fof(f34924,plain,(
  $false | ($spl8 | $spl80)),
  inference(resolution,[],[f1509,f2379])).
fof(f34925,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f748])).
fof(f34929,plain,(
  $false | ($spl8 | $spl76)),
  inference(resolution,[],[f1509,f4287])).
fof(f34930,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f958])).
fof(f34931,plain,(
  $false | ($spl8 | $spl118)),
  inference(resolution,[],[f1509,f3184])).
fof(f34932,plain,(
  $false | ($spl8 | $spl24)),
  inference(resolution,[],[f1509,f3634])).
fof(f34933,plain,(
  $false | $spl8),
  inference(resolution,[],[f1509,f747])).
fof(f1515,plain,(
  ( ! [X39,X38] : (s(bool,'F_0') != s(bool,X39) | ~p(s(bool,X38))) ) | $spl8),
  inference(subsumption_resolution,[],[f1466,f932])).
fof(f1466,plain,(
  ( ! [X39,X38] : (s(bool,'F_0') != s(bool,X39) | ~p(s(bool,X38)) | s(bool,'T_0') = s(bool,X38)) ) | $spl8),
  inference(superposition,[],[f932,f517])).
fof(f1510,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,X34))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f1464])).
fof(f1464,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,X34)) | ~p(s(bool,X34))) ) | $spl8),
  inference(superposition,[],[f932,f516])).
fof(f1511,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,X33) | ~p(s(bool,X32))) ) | $spl8),
  inference(duplicate_literal_removal,[],[f1463])).
fof(f1463,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,X33) | ~p(s(bool,X32)) | ~p(s(bool,X32))) ) | $spl8),
  inference(superposition,[],[f932,f514])).
fof(f1514,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | ~p(s(bool,X36))) ) | $spl8),
  inference(subsumption_resolution,[],[f1465,f932])).
fof(f1465,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | ~p(s(bool,X36)) | s(bool,'F_0') = s(bool,X36)) ) | $spl8),
  inference(superposition,[],[f932,f517])).
fof(f34760,plain,(
  ( ! [X54,X55,X53] : (sP3(X55,X53,X54) | p(s(bool,X55)) | s(bool,'T_0') != s(bool,X53) | p(s(bool,X54))) ) | $spl898),
  inference(cnf_transformation,[],[f34760_D])).
fof(f34760_D,plain,(
  ( ! [X54,X55,X53] : (sP3(X55,X53,X54) | p(s(bool,X55)) | s(bool,'T_0') != s(bool,X53) | p(s(bool,X54))) ) <=> ~$spl898),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl898])])).
fof(f34761,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | sP3(X63,X61,X62) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(subsumption_resolution,[],[f34716,f510])).
fof(f34716,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | ~p(s(bool,X60)) | sP3(X63,X61,X62) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(superposition,[],[f1766,f517])).
fof(f34738,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | sP3(X59,X57,X58) | p(s(bool,X59))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f34715])).
fof(f34715,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X56)) | sP3(X59,X57,X58) | p(s(bool,X59)) | ~p(s(bool,X56))) ) | $spl6),
  inference(superposition,[],[f1766,f516])).
fof(f34739,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X52)) | sP3(X55,X53,X54) | p(s(bool,X55))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f34714])).
fof(f34714,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X52)) | sP3(X55,X53,X54) | p(s(bool,X55)) | ~p(s(bool,X52))) ) | $spl6),
  inference(superposition,[],[f1766,f514])).
fof(f31346,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl806),
  inference(cnf_transformation,[],[f31346_D])).
fof(f31346_D,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl806),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl806])])).
fof(f34757,plain,(
  ( ! [X97,X95,X96] : (s(bool,'T_0') != s(bool,X95) | p(s(bool,X96)) | sP3(X97,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X96) | p(s(bool,X97))) ) | ($spl6 | $spl24)),
  inference(subsumption_resolution,[],[f34692,f513])).
fof(f34692,plain,(
  ( ! [X97,X95,X96] : (s(bool,'T_0') != s(bool,X95) | p(s(bool,X96)) | ~p(s(bool,X95)) | sP3(X97,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X96) | p(s(bool,X97))) ) | ($spl6 | $spl24)),
  inference(superposition,[],[f1766,f3662])).
fof(f34756,plain,(
  ( ! [X94,X93] : (p(s(bool,X93)) | p(s(bool,X94)) | sP3(X94,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X93)) ) | $spl896),
  inference(cnf_transformation,[],[f34756_D])).
fof(f34756_D,plain,(
  ( ! [X94,X93] : (p(s(bool,X93)) | p(s(bool,X94)) | sP3(X94,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X93)) ) <=> ~$spl896),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl896])])).
fof(f34755,plain,(
  ( ! [X94,X92,X93] : (s(bool,'T_0') != s(bool,X92) | p(s(bool,X93)) | sP3(X94,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X93) | p(s(bool,X94))) ) | ($spl6 | $spl76)),
  inference(subsumption_resolution,[],[f34691,f513])).
fof(f34691,plain,(
  ( ! [X94,X92,X93] : (s(bool,'T_0') != s(bool,X92) | p(s(bool,X93)) | ~p(s(bool,X92)) | sP3(X94,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X93) | p(s(bool,X94))) ) | ($spl6 | $spl76)),
  inference(superposition,[],[f1766,f4315])).
fof(f34750,plain,(
  ( ! [X70,X71] : (sP3(X71,'T_0',X70) | p(s(bool,X71)) | p(s(bool,X70))) ) | $spl892),
  inference(cnf_transformation,[],[f34750_D])).
fof(f34750_D,plain,(
  ( ! [X70,X71] : (sP3(X71,'T_0',X70) | p(s(bool,X71)) | p(s(bool,X70))) ) <=> ~$spl892),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl892])])).
fof(f34753,plain,(
  ( ! [X78,X76,X79,X77] : (s(bool,X76) != s(bool,X77) | p(s(bool,X78)) | sP3(X79,'T_0',X78) | p(s(bool,X79)) | ~p(s(bool,X76))) ) | $spl6),
  inference(subsumption_resolution,[],[f34687,f931])).
fof(f34687,plain,(
  ( ! [X78,X76,X79,X77] : (s(bool,X76) != s(bool,X77) | p(s(bool,X78)) | ~p(s(bool,X77)) | sP3(X79,'T_0',X78) | p(s(bool,X79)) | ~p(s(bool,X76))) ) | $spl6),
  inference(superposition,[],[f1766,f514])).
fof(f34752,plain,(
  ( ! [X74,X72,X75,X73] : (s(bool,X72) != s(bool,X73) | p(s(bool,X74)) | sP3(X75,'T_0',X74) | p(s(bool,X75)) | ~p(s(bool,X72))) ) | $spl6),
  inference(subsumption_resolution,[],[f34686,f931])).
fof(f34686,plain,(
  ( ! [X74,X72,X75,X73] : (s(bool,X72) != s(bool,X73) | p(s(bool,X74)) | ~p(s(bool,X73)) | sP3(X75,'T_0',X74) | p(s(bool,X75)) | ~p(s(bool,X72))) ) | $spl6),
  inference(superposition,[],[f1766,f516])).
fof(f34749,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,X70)) | sP3(X71,'T_0',X70) | p(s(bool,X71)) | s(bool,'F_0') = s(bool,X68)) ) | $spl6),
  inference(subsumption_resolution,[],[f34685,f1843])).
fof(f34685,plain,(
  ( ! [X70,X68,X71,X69] : (s(bool,X68) != s(bool,X69) | p(s(bool,X70)) | ~p(s(bool,X69)) | sP3(X71,'T_0',X70) | p(s(bool,X71)) | s(bool,'F_0') = s(bool,X68)) ) | $spl6),
  inference(superposition,[],[f1766,f517])).
fof(f34748,plain,(
  ( ! [X62,X60,X63] : (sP3(X63,X60,X62) | s(bool,'F_0') = s(bool,X60) | p(s(bool,X63)) | p(s(bool,X62))) ) | $spl890),
  inference(cnf_transformation,[],[f34748_D])).
fof(f34748_D,plain,(
  ( ! [X62,X60,X63] : (sP3(X63,X60,X62) | s(bool,'F_0') = s(bool,X60) | p(s(bool,X63)) | p(s(bool,X62))) ) <=> ~$spl890),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl890])])).
fof(f34747,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | sP3(X63,X60,X62) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(subsumption_resolution,[],[f34683,f513])).
fof(f34683,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'T_0') != s(bool,X61) | p(s(bool,X62)) | ~p(s(bool,X61)) | sP3(X63,X60,X62) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X60)) ) | $spl6),
  inference(superposition,[],[f1766,f517])).
fof(f34743,plain,(
  ( ! [X37,X38,X34] : (p(s(bool,X37)) | ~p(s(bool,X34)) | p(s(bool,X38)) | sP3(X38,X34,X37)) ) | $spl888),
  inference(cnf_transformation,[],[f34743_D])).
fof(f34743_D,plain,(
  ( ! [X37,X38,X34] : (p(s(bool,X37)) | ~p(s(bool,X34)) | p(s(bool,X38)) | sP3(X38,X34,X37)) ) <=> ~$spl888),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl888])])).
fof(f34746,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | sP3(X59,X56,X58) | p(s(bool,X59)) | ~p(s(bool,X56))) ) | $spl6),
  inference(subsumption_resolution,[],[f34682,f513])).
fof(f34682,plain,(
  ( ! [X59,X57,X58,X56] : (s(bool,'T_0') != s(bool,X57) | p(s(bool,X58)) | ~p(s(bool,X57)) | sP3(X59,X56,X58) | p(s(bool,X59)) | ~p(s(bool,X56))) ) | $spl6),
  inference(superposition,[],[f1766,f516])).
fof(f34745,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | sP3(X55,X52,X54) | p(s(bool,X55)) | ~p(s(bool,X52))) ) | $spl6),
  inference(subsumption_resolution,[],[f34681,f513])).
fof(f34681,plain,(
  ( ! [X54,X52,X55,X53] : (s(bool,'T_0') != s(bool,X53) | p(s(bool,X54)) | ~p(s(bool,X53)) | sP3(X55,X52,X54) | p(s(bool,X55)) | ~p(s(bool,X52))) ) | $spl6),
  inference(superposition,[],[f1766,f514])).
fof(f34744,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,X40) != s(bool,X41) | p(s(bool,X42)) | sP3(X43,X39,X42) | p(s(bool,X43)) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(subsumption_resolution,[],[f34678,f931])).
fof(f34678,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,X40) != s(bool,X41) | p(s(bool,X42)) | ~p(s(bool,X41)) | sP3(X43,X39,X42) | p(s(bool,X43)) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(superposition,[],[f1766,f500])).
fof(f34742,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,X35) != s(bool,X36) | p(s(bool,X37)) | sP3(X38,X34,X37) | p(s(bool,X38)) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f34677,f931])).
fof(f34677,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,X35) != s(bool,X36) | p(s(bool,X37)) | ~p(s(bool,X36)) | sP3(X38,X34,X37) | p(s(bool,X38)) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f1766,f500])).
fof(f34670,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl886),
  inference(cnf_transformation,[],[f34670_D])).
fof(f34670_D,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl886),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl886])])).
fof(f34669,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f34637,f717])).
fof(f34637,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1118,f736])).
fof(f1118,plain,(
  ( ! [X2,X3] : (sP3(X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | p(s(bool,X2)) | p(s(bool,X3))) )),
  inference(superposition,[],[f457,f492])).
fof(f34668,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl884),
  inference(cnf_transformation,[],[f34668_D])).
fof(f34668_D,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl884),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl884])])).
fof(f34624,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1118,f736])).
fof(f34599,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl882),
  inference(cnf_transformation,[],[f34599_D])).
fof(f34599_D,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl882),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl882])])).
fof(f34598,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f34565,f717])).
fof(f34565,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1117,f736])).
fof(f1117,plain,(
  ( ! [X0,X1] : (sP3(X1,X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(superposition,[],[f457,f492])).
fof(f34597,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl880),
  inference(cnf_transformation,[],[f34597_D])).
fof(f34597_D,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl880),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl880])])).
fof(f34552,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1117,f736])).
fof(f34525,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) | $spl878),
  inference(cnf_transformation,[],[f34525_D])).
fof(f34525_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) <=> ~$spl878),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl878])])).
fof(f34524,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f34523,f30768])).
fof(f30768,plain,(
  ( ! [X302,X303] : (~sP9(X302,X303,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X302))) ) | $spl446),
  inference(subsumption_resolution,[],[f30467,f650])).
fof(f30467,plain,(
  ( ! [X302,X303] : (p(s(bool,'F_0')) | ~p(s(bool,X302)) | ~sP9(X302,X303,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(superposition,[],[f572,f18947])).
fof(f34523,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f34480,f717])).
fof(f34480,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1032,f736])).
fof(f1032,plain,(
  ( ! [X142,X143] : (~sP9(X142,X143,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X143)) | p(s(bool,X142))) )),
  inference(resolution,[],[f457,f587])).
fof(f587,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f385])).
fof(f34522,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl876),
  inference(cnf_transformation,[],[f34522_D])).
fof(f34522_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl876),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl876])])).
fof(f34467,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1032,f736])).
fof(f34445,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl874),
  inference(cnf_transformation,[],[f34445_D])).
fof(f34445_D,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl874),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl874])])).
fof(f34429,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24105,f736])).
fof(f24105,plain,(
  ( ! [X128,X129] : (sP8('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X128,X129)) ) | $spl121),
  inference(resolution,[],[f3187,f581])).
fof(f34409,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl872),
  inference(cnf_transformation,[],[f34409_D])).
fof(f34409_D,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl872),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl872])])).
fof(f34393,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24104,f736])).
fof(f24104,plain,(
  ( ! [X127,X126] : (sP8(X126,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X127)) ) | $spl121),
  inference(resolution,[],[f3187,f580])).
fof(f34373,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23))) ) | $spl870),
  inference(cnf_transformation,[],[f34373_D])).
fof(f34373_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23))) ) <=> ~$spl870),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl870])])).
fof(f34372,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f34371,f30770])).
fof(f30770,plain,(
  ( ! [X306,X307] : (~sP9(X306,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X307) | ~p(s(bool,X306))) ) | $spl446),
  inference(subsumption_resolution,[],[f30469,f650])).
fof(f30469,plain,(
  ( ! [X306,X307] : (p(s(bool,'F_0')) | ~p(s(bool,X306)) | ~sP9(X306,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X307)) ) | $spl446),
  inference(superposition,[],[f573,f18947])).
fof(f34371,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f34328,f717])).
fof(f34328,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1031,f736])).
fof(f1031,plain,(
  ( ! [X140,X141] : (~sP9(X140,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X141) | ~p(s(bool,X141)) | p(s(bool,X140))) )),
  inference(resolution,[],[f457,f587])).
fof(f34370,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl868),
  inference(cnf_transformation,[],[f34370_D])).
fof(f34370_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl868),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl868])])).
fof(f34315,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1031,f736])).
fof(f34293,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl866),
  inference(cnf_transformation,[],[f34293_D])).
fof(f34293_D,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl866),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl866])])).
fof(f34276,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24091,f736])).
fof(f24091,plain,(
  ( ! [X101,X100] : (sP6('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X100,X101)) ) | $spl121),
  inference(resolution,[],[f3187,f564])).
fof(f34258,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl864),
  inference(cnf_transformation,[],[f34258_D])).
fof(f34258_D,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl864),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl864])])).
fof(f34242,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24075,f736])).
fof(f24075,plain,(
  ( ! [X68,X69] : (sP4('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X68,X69)) ) | $spl121),
  inference(resolution,[],[f3187,f547])).
fof(f34222,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl862),
  inference(cnf_transformation,[],[f34222_D])).
fof(f34222_D,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl862),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl862])])).
fof(f34206,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24074,f736])).
fof(f24074,plain,(
  ( ! [X66,X67] : (sP4(X66,X67,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f545])).
fof(f18618,plain,(
  ( ! [X26,X27] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X26,X27)) ) | $spl400),
  inference(cnf_transformation,[],[f18618_D])).
fof(f18618_D,plain,(
  ( ! [X26,X27] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X26,X27)) ) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f34170,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24056,f736])).
fof(f34151,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24056,f20225])).
fof(f33993,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,X21) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl854),
  inference(cnf_transformation,[],[f33993_D])).
fof(f33993_D,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,X21) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl854),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl854])])).
fof(f34150,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X1) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24056,f21579])).
fof(f34149,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl860),
  inference(cnf_transformation,[],[f34149_D])).
fof(f34149_D,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl860),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl860])])).
fof(f34132,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24055,f736])).
fof(f29490,plain,(
  ( ! [X58] : (s(bool,X58) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl740),
  inference(cnf_transformation,[],[f29490_D])).
fof(f29490_D,plain,(
  ( ! [X58] : (s(bool,X58) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f34112,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24055,f21579])).
fof(f25193,plain,(
  ( ! [X4,X5] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5)) ) | $spl662),
  inference(cnf_transformation,[],[f25193_D])).
fof(f25193_D,plain,(
  ( ! [X4,X5] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5)) ) <=> ~$spl662),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl662])])).
fof(f34111,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f34110,f30780])).
fof(f30780,plain,(
  ( ! [X341,X340] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X340,X341) | p(s(bool,X340))) ) | $spl446),
  inference(subsumption_resolution,[],[f30486,f665])).
fof(f30486,plain,(
  ( ! [X341,X340] : (p(s(bool,'F_0')) | sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X340,X341) | p(s(bool,X340))) ) | $spl446),
  inference(superposition,[],[f583,f18947])).
fof(f34110,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f34109,f30778])).
fof(f30778,plain,(
  ( ! [X337,X336] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X336,X337) | p(s(bool,X337))) ) | $spl446),
  inference(subsumption_resolution,[],[f30484,f665])).
fof(f30484,plain,(
  ( ! [X337,X336] : (p(s(bool,'F_0')) | sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X336,X337) | p(s(bool,X337))) ) | $spl446),
  inference(superposition,[],[f582,f18947])).
fof(f34109,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f34073,f717])).
fof(f34073,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1028,f736])).
fof(f1028,plain,(
  ( ! [X134,X135] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X134,X135) | ~p(s(bool,X134)) | ~p(s(bool,X135))) )),
  inference(resolution,[],[f457,f584])).
fof(f584,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f385])).
fof(f34108,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl858),
  inference(cnf_transformation,[],[f34108_D])).
fof(f34108_D,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl858),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl858])])).
fof(f34060,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1028,f736])).
fof(f34041,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl856),
  inference(cnf_transformation,[],[f34041_D])).
fof(f34041_D,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl856),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl856])])).
fof(f34023,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24053,f736])).
fof(f24053,plain,(
  ( ! [X35,X34] : (sP2('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X34,X35)) ) | $spl121),
  inference(resolution,[],[f3187,f483])).
fof(f24258,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl622),
  inference(cnf_transformation,[],[f24258_D])).
fof(f24258_D,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl622),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl622])])).
fof(f33976,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24052,f736])).
fof(f33961,plain,(
  ( ! [X24,X23] : (~p(s(bool,X23)) | s(bool,X24) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,X24)) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f28860])).
fof(f24257,plain,(
  ( ! [X16] : (sP3(X16,'F_0','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl620),
  inference(cnf_transformation,[],[f24257_D])).
fof(f24257_D,plain,(
  ( ! [X16] : (sP3(X16,'F_0','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl620),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl620])])).
fof(f33960,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') != s(bool,X21) | sP3(X22,'F_0','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f28729])).
fof(f33959,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X20))) ) | $spl121),
  inference(resolution,[],[f24052,f19686])).
fof(f33956,plain,(
  ( ! [X17] : (sP3(X17,'F_0','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f19374])).
fof(f33953,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X13))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f21565])).
fof(f24254,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl616),
  inference(cnf_transformation,[],[f24254_D])).
fof(f24254_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl616),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl616])])).
fof(f33952,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X11))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f20314])).
fof(f33886,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f737])).
fof(f33783,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl121),
  inference(resolution,[],[f3187,f472])).
fof(f33781,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f471])).
fof(f33779,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f470])).
fof(f33778,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl121),
  inference(resolution,[],[f3187,f468])).
fof(f33776,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f466])).
fof(f24038,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'F_0',X16) | ~p(s(bool,X16))) ) | $spl612),
  inference(cnf_transformation,[],[f24038_D])).
fof(f24038_D,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'F_0',X16) | ~p(s(bool,X16))) ) <=> ~$spl612),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl612])])).
fof(f33739,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'F_0',X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl176)),
  inference(superposition,[],[f29562,f736])).
fof(f29562,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'F_0',X16) | ~p(s(bool,X16))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3041,f19372])).
fof(f33715,plain,(
  ( ! [X23,X22] : (~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33714,f30768])).
fof(f33714,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33672,f717])).
fof(f33672,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1027,f736])).
fof(f1027,plain,(
  ( ! [X132,X133] : (sP9(X132,X133,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X133)) | ~p(s(bool,X132))) )),
  inference(resolution,[],[f457,f584])).
fof(f33713,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl852),
  inference(cnf_transformation,[],[f33713_D])).
fof(f33713_D,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl852),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl852])])).
fof(f33659,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1027,f736])).
fof(f33636,plain,(
  ( ! [X23,X22] : (~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33635,f30770])).
fof(f33635,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33593,f717])).
fof(f33593,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1026,f736])).
fof(f1026,plain,(
  ( ! [X130,X131] : (sP9(X130,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X131) | ~p(s(bool,X131)) | ~p(s(bool,X130))) )),
  inference(resolution,[],[f457,f584])).
fof(f33634,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl850),
  inference(cnf_transformation,[],[f33634_D])).
fof(f33634_D,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl850),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl850])])).
fof(f33580,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1026,f736])).
fof(f33557,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f33556,f3092])).
fof(f3092,plain,(
  ( ! [X127,X126] : (sP8(X126,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X127)) ) | $spl45),
  inference(resolution,[],[f1152,f580])).
fof(f33556,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33525,f717])).
fof(f33525,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1024,f736])).
fof(f1024,plain,(
  ( ! [X127,X126] : (~sP8(X126,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X127) | p(s(bool,X127)) | ~p(s(bool,X126))) )),
  inference(resolution,[],[f457,f578])).
fof(f578,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f383])).
fof(f33555,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl848),
  inference(cnf_transformation,[],[f33555_D])).
fof(f33555_D,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl848),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl848])])).
fof(f33512,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1024,f736])).
fof(f33491,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f33490,f3093])).
fof(f3093,plain,(
  ( ! [X128,X129] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X128,X129)) ) | $spl45),
  inference(resolution,[],[f1152,f581])).
fof(f33490,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33459,f717])).
fof(f33459,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1023,f736])).
fof(f1023,plain,(
  ( ! [X125,X124] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X124,X125) | p(s(bool,X125)) | ~p(s(bool,X124))) )),
  inference(resolution,[],[f457,f578])).
fof(f33489,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl846),
  inference(cnf_transformation,[],[f33489_D])).
fof(f33489_D,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl846),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl846])])).
fof(f33446,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1023,f736])).
fof(f33425,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl844),
  inference(cnf_transformation,[],[f33425_D])).
fof(f33425_D,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl844),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl844])])).
fof(f33424,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33423,f30747])).
fof(f30747,plain,(
  ( ! [X246,X247] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X246,X247) | ~p(s(bool,X246))) ) | $spl446),
  inference(subsumption_resolution,[],[f30439,f650])).
fof(f30439,plain,(
  ( ! [X246,X247] : (p(s(bool,'F_0')) | ~p(s(bool,X246)) | ~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X246,X247)) ) | $spl446),
  inference(superposition,[],[f555,f18947])).
fof(f33423,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33422,f30745])).
fof(f30745,plain,(
  ( ! [X243,X242] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X243,X242) | ~p(s(bool,X242))) ) | $spl446),
  inference(subsumption_resolution,[],[f30437,f650])).
fof(f30437,plain,(
  ( ! [X243,X242] : (p(s(bool,'F_0')) | ~p(s(bool,X242)) | ~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X243,X242)) ) | $spl446),
  inference(superposition,[],[f554,f18947])).
fof(f33422,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33387,f717])).
fof(f33387,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1014,f736])).
fof(f1014,plain,(
  ( ! [X107,X106] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X106,X107) | p(s(bool,X107)) | p(s(bool,X106))) )),
  inference(resolution,[],[f457,f568])).
fof(f568,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f378])).
fof(f378,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f377])).
fof(f377,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f319])).
fof(f319,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f191,f318,f317])).
fof(f191,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X32,X30,X31] : ((p(s(bool,X31)) <=> (p(s(bool,X30)) | p(s(bool,X32)))) <=> ((p(s(bool,X31)) | ~p(s(bool,X30))) & (p(s(bool,X31)) | ~p(s(bool,X32))) & (p(s(bool,X30)) | p(s(bool,X32)) | ~p(s(bool,X31)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.sat.sat_25_prove_ltb')).
fof(f33421,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl842),
  inference(cnf_transformation,[],[f33421_D])).
fof(f33421_D,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl842),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl842])])).
fof(f33374,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1014,f736])).
fof(f33350,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f33349,f3079])).
fof(f3079,plain,(
  ( ! [X101,X100] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X100,X101)) ) | $spl45),
  inference(resolution,[],[f1152,f564])).
fof(f33349,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33316,f717])).
fof(f33316,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1007,f736])).
fof(f1007,plain,(
  ( ! [X92,X93] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X92,X93) | p(s(bool,X93)) | p(s(bool,X92))) )),
  inference(resolution,[],[f457,f561])).
fof(f561,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f376])).
fof(f33348,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl840),
  inference(cnf_transformation,[],[f33348_D])).
fof(f33348_D,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl840),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl840])])).
fof(f33303,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1007,f736])).
fof(f33274,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl838),
  inference(cnf_transformation,[],[f33274_D])).
fof(f33274_D,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl838),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl838])])).
fof(f33273,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33272,f30726])).
fof(f30726,plain,(
  ( ! [X182,X183] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X183,X182) | p(s(bool,X182))) ) | $spl446),
  inference(subsumption_resolution,[],[f30407,f665])).
fof(f30407,plain,(
  ( ! [X182,X183] : (p(s(bool,'F_0')) | p(s(bool,X182)) | ~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X183,X182)) ) | $spl446),
  inference(superposition,[],[f537,f18947])).
fof(f33272,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33271,f30728])).
fof(f30728,plain,(
  ( ! [X187,X186] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X186,X187) | ~p(s(bool,X186))) ) | $spl446),
  inference(subsumption_resolution,[],[f30409,f650])).
fof(f30409,plain,(
  ( ! [X187,X186] : (p(s(bool,'F_0')) | ~p(s(bool,X186)) | ~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X186,X187)) ) | $spl446),
  inference(superposition,[],[f538,f18947])).
fof(f33271,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33233,f717])).
fof(f33233,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1001,f736])).
fof(f1001,plain,(
  ( ! [X80,X81] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X80,X81) | ~p(s(bool,X81)) | p(s(bool,X80))) )),
  inference(resolution,[],[f457,f551])).
fof(f551,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP5(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f370])).
fof(f33270,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl836),
  inference(cnf_transformation,[],[f33270_D])).
fof(f33270_D,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl836),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl836])])).
fof(f33220,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1001,f736])).
fof(f33197,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f33196,f29734])).
fof(f29734,plain,(
  ( ! [X2,X3] : (sP5(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2))) ) | $spl45),
  inference(resolution,[],[f3062,f739])).
fof(f739,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~sP4(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f540])).
fof(f540,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,X1,X2) | ~sP4(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f365])).
fof(f3062,plain,(
  ( ! [X66,X67] : (sP4(X66,X67,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f545])).
fof(f33196,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f33146,f717])).
fof(f33146,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1000,f736])).
fof(f1000,plain,(
  ( ! [X78,X79] : (~sP5(X79,X78,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X79)) | p(s(bool,X78))) )),
  inference(resolution,[],[f457,f551])).
fof(f33195,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl834),
  inference(cnf_transformation,[],[f33195_D])).
fof(f33195_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl834),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl834])])).
fof(f33133,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1000,f736])).
fof(f22871,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22))) ) | $spl572),
  inference(cnf_transformation,[],[f22871_D])).
fof(f22871_D,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22))) ) <=> ~$spl572),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl572])])).
fof(f33078,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30797,f736])).
fof(f30797,plain,(
  ( ! [X403,X402] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X402,X403) | p(s(bool,X402))) ) | $spl446),
  inference(subsumption_resolution,[],[f30517,f665])).
fof(f30517,plain,(
  ( ! [X403,X402] : (p(s(bool,'F_0')) | p(s(bool,X402)) | ~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X402,X403)) ) | $spl446),
  inference(superposition,[],[f605,f18947])).
fof(f33052,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f33028,f4377])).
fof(f4377,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl76),
  inference(resolution,[],[f2216,f610])).
fof(f610,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f397])).
fof(f397,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & (~p(s(bool,X1)) | ~p(s(bool,X2)))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))))),
  inference(flattening,[],[f396])).
fof(f396,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & (~p(s(bool,X1)) | ~p(s(bool,X2)))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | (p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f326])).
fof(f326,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f196,f325])).
fof(f196,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(rectify,[],[f80])).
fof(f80,axiom,(
  ! [X15,X29,X57] : ((p(s(bool,X15)) | (p(s(bool,X29)) & p(s(bool,X57)))) <=> ((p(s(bool,X15)) | p(s(bool,X29))) & (p(s(bool,X15)) | p(s(bool,X57)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.LEFT_OR_OVER_AND')).
fof(f33028,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30796,f736])).
fof(f30796,plain,(
  ( ! [X401,X400] : (~sP11(X400,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X401) | p(s(bool,X400))) ) | $spl446),
  inference(subsumption_resolution,[],[f30516,f665])).
fof(f30516,plain,(
  ( ! [X401,X400] : (p(s(bool,'F_0')) | p(s(bool,X400)) | ~sP11(X400,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X401)) ) | $spl446),
  inference(superposition,[],[f605,f18947])).
fof(f33007,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl446),
  inference(subsumption_resolution,[],[f33006,f30727])).
fof(f30727,plain,(
  ( ! [X185,X184] : (~sP5(X184,X185,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X184))) ) | $spl446),
  inference(subsumption_resolution,[],[f30408,f665])).
fof(f30408,plain,(
  ( ! [X185,X184] : (p(s(bool,'F_0')) | p(s(bool,X184)) | ~sP5(X184,X185,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(superposition,[],[f537,f18947])).
fof(f33006,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f32962,f717])).
fof(f32962,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f996,f736])).
fof(f996,plain,(
  ( ! [X70,X71] : (sP5(X70,X71,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X71)) | p(s(bool,X70))) )),
  inference(resolution,[],[f457,f548])).
fof(f548,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f370])).
fof(f33005,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl832),
  inference(cnf_transformation,[],[f33005_D])).
fof(f33005_D,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl832),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl832])])).
fof(f32949,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f996,f736])).
fof(f22778,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23))) ) | $spl570),
  inference(cnf_transformation,[],[f22778_D])).
fof(f22778_D,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23))) ) <=> ~$spl570),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl570])])).
fof(f32901,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30795,f736])).
fof(f30795,plain,(
  ( ! [X399,X398] : (~sP11(X399,X398,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X398))) ) | $spl446),
  inference(subsumption_resolution,[],[f30515,f665])).
fof(f30515,plain,(
  ( ! [X399,X398] : (p(s(bool,'F_0')) | p(s(bool,X398)) | ~sP11(X399,X398,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(superposition,[],[f604,f18947])).
fof(f32875,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32851,f4377])).
fof(f32851,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30794,f736])).
fof(f30794,plain,(
  ( ! [X397,X396] : (~sP11(X397,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X396) | p(s(bool,X396))) ) | $spl446),
  inference(subsumption_resolution,[],[f30514,f665])).
fof(f30514,plain,(
  ( ! [X397,X396] : (p(s(bool,'F_0')) | p(s(bool,X396)) | ~sP11(X397,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X396)) ) | $spl446),
  inference(superposition,[],[f604,f18947])).
fof(f32830,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f32829,f3062])).
fof(f32829,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f32798,f717])).
fof(f32798,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f994,f736])).
fof(f994,plain,(
  ( ! [X66,X67] : (~sP4(X66,X67,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X67)) | ~p(s(bool,X66))) )),
  inference(resolution,[],[f457,f544])).
fof(f544,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f368])).
fof(f32828,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl830),
  inference(cnf_transformation,[],[f32828_D])).
fof(f32828_D,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl830),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl830])])).
fof(f32785,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f994,f736])).
fof(f32764,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32740,f4370])).
fof(f4370,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl76),
  inference(resolution,[],[f2216,f601])).
fof(f601,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X2,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0,X1,X2] : ((((~p(s(bool,X1)) | ~p(s(bool,X2))) & ~p(s(bool,X0))) | sP10(X0,X2,X1)) & (~sP10(X0,X2,X1) | (p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))))),
  inference(flattening,[],[f391])).
fof(f391,plain,(
  ! [X0,X1,X2] : ((((~p(s(bool,X1)) | ~p(s(bool,X2))) & ~p(s(bool,X0))) | sP10(X0,X2,X1)) & (~sP10(X0,X2,X1) | ((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f324])).
fof(f324,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))) <=> sP10(X0,X2,X1))),
  inference(definition_folding,[],[f195,f323])).
fof(f195,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X15,X29,X57] : (((p(s(bool,X29)) & p(s(bool,X57))) | p(s(bool,X15))) <=> ((p(s(bool,X29)) | p(s(bool,X15))) & (p(s(bool,X57)) | p(s(bool,X15)))))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.bool.RIGHT_OR_OVER_AND')).
fof(f32740,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30789,f736])).
fof(f30789,plain,(
  ( ! [X368,X369] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X368,X369) | p(s(bool,X368))) ) | $spl446),
  inference(subsumption_resolution,[],[f30500,f665])).
fof(f30500,plain,(
  ( ! [X368,X369] : (p(s(bool,'F_0')) | p(s(bool,X368)) | ~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X368,X369)) ) | $spl446),
  inference(superposition,[],[f595,f18947])).
fof(f22640,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) | $spl568),
  inference(cnf_transformation,[],[f22640_D])).
fof(f22640_D,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) <=> ~$spl568),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl568])])).
fof(f32691,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30788,f736])).
fof(f30788,plain,(
  ( ! [X366,X367] : (~sP10(X366,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X367) | p(s(bool,X366))) ) | $spl446),
  inference(subsumption_resolution,[],[f30499,f665])).
fof(f30499,plain,(
  ( ! [X366,X367] : (p(s(bool,'F_0')) | p(s(bool,X366)) | ~sP10(X366,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X367)) ) | $spl446),
  inference(superposition,[],[f595,f18947])).
fof(f22586,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) | $spl566),
  inference(cnf_transformation,[],[f22586_D])).
fof(f22586_D,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) <=> ~$spl566),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl566])])).
fof(f32637,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30787,f736])).
fof(f30787,plain,(
  ( ! [X364,X365] : (~sP10(X364,X365,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X364))) ) | $spl446),
  inference(subsumption_resolution,[],[f30498,f665])).
fof(f30498,plain,(
  ( ! [X364,X365] : (p(s(bool,'F_0')) | p(s(bool,X364)) | ~sP10(X364,X365,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(superposition,[],[f594,f18947])).
fof(f32611,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32587,f4370])).
fof(f32587,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30786,f736])).
fof(f30786,plain,(
  ( ! [X362,X363] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X363,X362) | p(s(bool,X362))) ) | $spl446),
  inference(subsumption_resolution,[],[f30497,f665])).
fof(f30497,plain,(
  ( ! [X362,X363] : (p(s(bool,'F_0')) | p(s(bool,X362)) | ~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X363,X362)) ) | $spl446),
  inference(superposition,[],[f594,f18947])).
fof(f32566,plain,(
  ( ! [X23,X22] : (~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f32565,f3063])).
fof(f3063,plain,(
  ( ! [X68,X69] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X68,X69)) ) | $spl45),
  inference(resolution,[],[f1152,f547])).
fof(f32565,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f32534,f717])).
fof(f32534,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f993,f736])).
fof(f993,plain,(
  ( ! [X64,X65] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X64,X65) | ~p(s(bool,X65)) | p(s(bool,X64))) )),
  inference(resolution,[],[f457,f544])).
fof(f32564,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl828),
  inference(cnf_transformation,[],[f32564_D])).
fof(f32564_D,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl828),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl828])])).
fof(f32521,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f993,f736])).
fof(f32500,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32468,f4347])).
fof(f4347,plain,(
  ( ! [X114,X115] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X114,X115) | p(s(bool,X114))) ) | $spl76),
  inference(resolution,[],[f2216,f573])).
fof(f32468,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30780,f736])).
fof(f32451,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32419,f4346])).
fof(f4346,plain,(
  ( ! [X112,X113] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X113,X112) | p(s(bool,X112))) ) | $spl76),
  inference(resolution,[],[f2216,f572])).
fof(f32419,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30778,f736])).
fof(f32402,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f32401,f3043])).
fof(f3043,plain,(
  ( ! [X39,X38] : (sP1(X38,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X39)) ) | $spl45),
  inference(resolution,[],[f1152,f486])).
fof(f32401,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f32366,f717])).
fof(f32366,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f975,f736])).
fof(f975,plain,(
  ( ! [X39,X38] : (~sP1(X38,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X39) | p(s(bool,X39)) | ~p(s(bool,X38))) )),
  inference(resolution,[],[f457,f484])).
fof(f484,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP1(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f343])).
fof(f32400,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl826),
  inference(cnf_transformation,[],[f32400_D])).
fof(f32400_D,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl826),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl826])])).
fof(f32353,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f975,f736])).
fof(f22299,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22))) ) | $spl560),
  inference(cnf_transformation,[],[f22299_D])).
fof(f22299_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22))) ) <=> ~$spl560),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl560])])).
fof(f32305,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30770,f736])).
fof(f22266,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) | $spl558),
  inference(cnf_transformation,[],[f22266_D])).
fof(f22266_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) <=> ~$spl558),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl558])])).
fof(f32264,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30768,f736])).
fof(f32246,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f32245,f3044])).
fof(f32245,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f32211,f717])).
fof(f32211,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f974,f736])).
fof(f974,plain,(
  ( ! [X37,X36] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X36,X37) | p(s(bool,X37)) | ~p(s(bool,X36))) )),
  inference(resolution,[],[f457,f484])).
fof(f32244,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl824),
  inference(cnf_transformation,[],[f32244_D])).
fof(f32244_D,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl824),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl824])])).
fof(f32198,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f974,f736])).
fof(f32173,plain,(
  ( ! [X22] : (~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32133,f4342])).
fof(f4342,plain,(
  ( ! [X105,X104] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X104,X105) | ~p(s(bool,X104))) ) | $spl76),
  inference(resolution,[],[f2216,f567])).
fof(f567,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f378])).
fof(f32133,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30747,f736])).
fof(f32111,plain,(
  ( ! [X23] : (~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f32071,f4340])).
fof(f4340,plain,(
  ( ! [X101,X100] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X100,X101) | ~p(s(bool,X101))) ) | $spl76),
  inference(resolution,[],[f2216,f566])).
fof(f566,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f378])).
fof(f32071,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30745,f736])).
fof(f32049,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f32048,f3040])).
fof(f3040,plain,(
  ( ! [X33,X32] : (sP2(X32,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X33)) ) | $spl45),
  inference(resolution,[],[f1152,f482])).
fof(f32048,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f32017,f717])).
fof(f32017,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f972,f736])).
fof(f972,plain,(
  ( ! [X33,X32] : (~sP2(X32,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X33) | p(s(bool,X33)) | ~p(s(bool,X32))) )),
  inference(resolution,[],[f457,f480])).
fof(f480,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f340])).
fof(f32047,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl822),
  inference(cnf_transformation,[],[f32047_D])).
fof(f32047_D,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl822),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl822])])).
fof(f32004,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f972,f736])).
fof(f31983,plain,(
  ( ! [X22] : (~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f31946,f4328])).
fof(f4328,plain,(
  ( ! [X76,X77] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X76,X77) | ~p(s(bool,X76))) ) | $spl76),
  inference(resolution,[],[f2216,f550])).
fof(f550,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f370])).
fof(f31946,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30728,f736])).
fof(f22017,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) | $spl554),
  inference(cnf_transformation,[],[f22017_D])).
fof(f22017_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) <=> ~$spl554),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl554])])).
fof(f31896,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30727,f736])).
fof(f31869,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f31832,f4326])).
fof(f4326,plain,(
  ( ! [X72,X73] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X72,X73) | p(s(bool,X73))) ) | $spl76),
  inference(resolution,[],[f2216,f549])).
fof(f31832,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30726,f736])).
fof(f31812,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) ) | $spl45),
  inference(subsumption_resolution,[],[f31811,f3041])).
fof(f31811,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f31780,f717])).
fof(f31780,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f971,f736])).
fof(f971,plain,(
  ( ! [X30,X31] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X30,X31) | p(s(bool,X31)) | ~p(s(bool,X30))) )),
  inference(resolution,[],[f457,f480])).
fof(f31810,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl820),
  inference(cnf_transformation,[],[f31810_D])).
fof(f31810_D,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl820),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl820])])).
fof(f31767,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f971,f736])).
fof(f22441,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) | $spl564),
  inference(cnf_transformation,[],[f22441_D])).
fof(f22441_D,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) <=> ~$spl564),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl564])])).
fof(f31719,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f29856,f736])).
fof(f29856,plain,(
  ( ! [X8,X9] : (sP9(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X8))) ) | $spl45),
  inference(resolution,[],[f3093,f741])).
fof(f741,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | p(s(bool,X0)) | ~sP8(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f577])).
fof(f577,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP8(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f381])).
fof(f22347,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) | $spl562),
  inference(cnf_transformation,[],[f22347_D])).
fof(f22347_D,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) <=> ~$spl562),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl562])])).
fof(f31670,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f29826,f736])).
fof(f29826,plain,(
  ( ! [X8,X9] : (sP9(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X8))) ) | $spl45),
  inference(resolution,[],[f3092,f741])).
fof(f31648,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl818),
  inference(cnf_transformation,[],[f31648_D])).
fof(f31648_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl818),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl818])])).
fof(f31647,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f31608,f717])).
fof(f31608,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f969,f736])).
fof(f969,plain,(
  ( ! [X26,X27] : (~sP3(X26,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X27) | p(s(bool,X27)) | ~p(s(bool,X26))) )),
  inference(resolution,[],[f457,f476])).
fof(f476,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f337])).
fof(f31646,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl816),
  inference(cnf_transformation,[],[f31646_D])).
fof(f31646_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl816),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl816])])).
fof(f31595,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f969,f736])).
fof(f22109,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) | $spl556),
  inference(cnf_transformation,[],[f22109_D])).
fof(f22109_D,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) <=> ~$spl556),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl556])])).
fof(f31550,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f29734,f736])).
fof(f31532,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl814),
  inference(cnf_transformation,[],[f31532_D])).
fof(f31532_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl814),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl814])])).
fof(f31531,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f31471,f717])).
fof(f31471,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f968,f736])).
fof(f968,plain,(
  ( ! [X24,X25] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X24,X25) | p(s(bool,X25)) | ~p(s(bool,X24))) )),
  inference(resolution,[],[f457,f476])).
fof(f31530,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl812),
  inference(cnf_transformation,[],[f31530_D])).
fof(f31530_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl812),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl812])])).
fof(f31458,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f968,f736])).
fof(f954,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl28),
  inference(cnf_transformation,[],[f954_D])).
fof(f954_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f31428,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl810),
  inference(cnf_transformation,[],[f31428_D])).
fof(f31428_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl810),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl810])])).
fof(f31427,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f31388,f717])).
fof(f31388,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f908,f736])).
fof(f908,plain,(
  ( ! [X4,X5] : (~sP3(X5,X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X5)) | p(s(bool,X4))) )),
  inference(superposition,[],[f455,f494])).
fof(f31426,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl808),
  inference(cnf_transformation,[],[f31426_D])).
fof(f31426_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl808),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl808])])).
fof(f31375,plain,(
  ( ! [X23,X22] : (~sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f908,f736])).
fof(f31345,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f31315,f717])).
fof(f31315,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f907,f736])).
fof(f907,plain,(
  ( ! [X2,X3] : (sP3(X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | p(s(bool,X2)) | p(s(bool,X3))) )),
  inference(superposition,[],[f455,f492])).
fof(f31344,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl804),
  inference(cnf_transformation,[],[f31344_D])).
fof(f31344_D,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl804),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl804])])).
fof(f31302,plain,(
  ( ! [X23,X22] : (sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f907,f736])).
fof(f31279,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl124 | $spl446)),
  inference(subsumption_resolution,[],[f31254,f3246])).
fof(f31254,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30815,f736])).
fof(f30815,plain,(
  ( ! [X447] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X447) | p(s(bool,X447))) ) | $spl446),
  inference(subsumption_resolution,[],[f30648,f665])).
fof(f30648,plain,(
  ( ! [X447] : (p(s(bool,'F_0')) | p(s(bool,X447)) | ~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X447)) ) | $spl446),
  inference(duplicate_literal_removal,[],[f30548])).
fof(f30548,plain,(
  ( ! [X447] : (p(s(bool,'F_0')) | p(s(bool,'F_0')) | p(s(bool,X447)) | ~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X447)) ) | $spl446),
  inference(superposition,[],[f630,f18947])).
fof(f31232,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl84 | $spl446)),
  inference(subsumption_resolution,[],[f31206,f2414])).
fof(f31206,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30814,f736])).
fof(f30814,plain,(
  ( ! [X446] : (~sP13(X446,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X446))) ) | $spl446),
  inference(subsumption_resolution,[],[f30649,f665])).
fof(f30649,plain,(
  ( ! [X446] : (p(s(bool,'F_0')) | p(s(bool,X446)) | ~sP13(X446,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(duplicate_literal_removal,[],[f30547])).
fof(f30547,plain,(
  ( ! [X446] : (p(s(bool,'F_0')) | p(s(bool,'F_0')) | p(s(bool,X446)) | ~sP13(X446,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(superposition,[],[f630,f18947])).
fof(f31183,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f31150,f717])).
fof(f31150,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f906,f736])).
fof(f906,plain,(
  ( ! [X0,X1] : (sP3(X1,X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(superposition,[],[f455,f492])).
fof(f31182,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl800),
  inference(cnf_transformation,[],[f31182_D])).
fof(f31182_D,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl800),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl800])])).
fof(f31137,plain,(
  ( ! [X23,X22] : (sP3(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f906,f736])).
fof(f31112,plain,(
  ( ! [X16] : (~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f31079,f4380])).
fof(f4380,plain,(
  ( ! [X180] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X180) | ~p(s(bool,X180))) ) | $spl76),
  inference(resolution,[],[f2216,f615])).
fof(f615,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP12(X0,X1)) )),
  inference(cnf_transformation,[],[f400])).
fof(f31079,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30806,f736])).
fof(f30806,plain,(
  ( ! [X436] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X436) | ~p(s(bool,X436))) ) | $spl446),
  inference(subsumption_resolution,[],[f30537,f650])).
fof(f30537,plain,(
  ( ! [X436] : (p(s(bool,'F_0')) | sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X436) | ~p(s(bool,X436))) ) | $spl446),
  inference(superposition,[],[f619,f18947])).
fof(f31062,plain,(
  ( ! [X16] : (~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f31029,f4381])).
fof(f4381,plain,(
  ( ! [X181] : (~sP12(X181,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X181))) ) | $spl76),
  inference(resolution,[],[f2216,f615])).
fof(f31029,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30804,f736])).
fof(f30804,plain,(
  ( ! [X434] : (sP12(X434,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X434))) ) | $spl446),
  inference(subsumption_resolution,[],[f30535,f650])).
fof(f30535,plain,(
  ( ! [X434] : (p(s(bool,'F_0')) | sP12(X434,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X434))) ) | $spl446),
  inference(superposition,[],[f616,f18947])).
fof(f31012,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl798),
  inference(cnf_transformation,[],[f31012_D])).
fof(f31012_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl798),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl798])])).
fof(f31011,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f30976,f717])).
fof(f30976,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f821,f736])).
fof(f821,plain,(
  ( ! [X142,X143] : (~sP9(X142,X143,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X143)) | p(s(bool,X142))) )),
  inference(resolution,[],[f455,f587])).
fof(f31010,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl796),
  inference(cnf_transformation,[],[f31010_D])).
fof(f31010_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl796),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl796])])).
fof(f30963,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f821,f736])).
fof(f30946,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f30919,f4382])).
fof(f4382,plain,(
  ( ! [X182] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X182) | p(s(bool,X182))) ) | $spl76),
  inference(resolution,[],[f2216,f616])).
fof(f30919,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30803,f736])).
fof(f30803,plain,(
  ( ! [X431] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X431) | p(s(bool,X431))) ) | $spl446),
  inference(subsumption_resolution,[],[f30532,f665])).
fof(f30532,plain,(
  ( ! [X431] : (p(s(bool,'F_0')) | p(s(bool,X431)) | ~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X431)) ) | $spl446),
  inference(superposition,[],[f614,f18947])).
fof(f30904,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl76 | $spl446)),
  inference(subsumption_resolution,[],[f30877,f4383])).
fof(f4383,plain,(
  ( ! [X183] : (sP12(X183,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X183))) ) | $spl76),
  inference(resolution,[],[f2216,f619])).
fof(f30877,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl446),
  inference(superposition,[],[f30802,f736])).
fof(f30802,plain,(
  ( ! [X430] : (~sP12(X430,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X430))) ) | $spl446),
  inference(subsumption_resolution,[],[f30531,f665])).
fof(f30531,plain,(
  ( ! [X430] : (p(s(bool,'F_0')) | p(s(bool,X430)) | ~sP12(X430,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl446),
  inference(superposition,[],[f614,f18947])).
fof(f30270,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl794),
  inference(cnf_transformation,[],[f30270_D])).
fof(f30270_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl794),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl794])])).
fof(f30269,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f30234,f717])).
fof(f30234,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f820,f736])).
fof(f820,plain,(
  ( ! [X140,X141] : (~sP9(X140,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X141) | ~p(s(bool,X141)) | p(s(bool,X140))) )),
  inference(resolution,[],[f455,f587])).
fof(f30268,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl792),
  inference(cnf_transformation,[],[f30268_D])).
fof(f30268_D,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl792),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl792])])).
fof(f30221,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f820,f736])).
fof(f30204,plain,(
  $false | ($spl445 | $spl447)),
  inference(subsumption_resolution,[],[f30194,f18942])).
fof(f30194,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl447),
  inference(trivial_inequality_removal,[],[f30187])).
fof(f30187,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl447),
  inference(superposition,[],[f18948,f517])).
fof(f30203,plain,(
  $false | ($spl445 | $spl447)),
  inference(subsumption_resolution,[],[f30195,f20490])).
fof(f20490,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl445),
  inference(trivial_inequality_removal,[],[f20480])).
fof(f20480,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl445),
  inference(superposition,[],[f18942,f516])).
fof(f30195,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl447),
  inference(trivial_inequality_removal,[],[f30183])).
fof(f30183,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl447),
  inference(superposition,[],[f18948,f512])).
fof(f30202,plain,(
  $false | ($spl445 | $spl447)),
  inference(subsumption_resolution,[],[f30196,f20490])).
fof(f30196,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl447),
  inference(trivial_inequality_removal,[],[f30182])).
fof(f30182,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl447),
  inference(superposition,[],[f18948,f510])).
fof(f3188,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl122),
  inference(cnf_transformation,[],[f3188_D])).
fof(f3188_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f30048,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl445),
  inference(resolution,[],[f20490,f737])).
fof(f29945,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl445),
  inference(resolution,[],[f20490,f472])).
fof(f29943,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl445),
  inference(resolution,[],[f20490,f471])).
fof(f29941,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl445),
  inference(resolution,[],[f20490,f470])).
fof(f29940,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl445),
  inference(resolution,[],[f20490,f468])).
fof(f29938,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl445),
  inference(resolution,[],[f20490,f466])).
fof(f29936,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl790),
  inference(cnf_transformation,[],[f29936_D])).
fof(f29936_D,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl790),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl790])])).
fof(f29935,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f29909,f717])).
fof(f29909,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f817,f736])).
fof(f817,plain,(
  ( ! [X134,X135] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X134,X135) | ~p(s(bool,X134)) | ~p(s(bool,X135))) )),
  inference(resolution,[],[f455,f584])).
fof(f29934,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl788),
  inference(cnf_transformation,[],[f29934_D])).
fof(f29934_D,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl788),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl788])])).
fof(f29896,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f817,f736])).
fof(f20082,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl516),
  inference(cnf_transformation,[],[f20082_D])).
fof(f20082_D,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl516),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl516])])).
fof(f29864,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3093,f736])).
fof(f20054,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl514),
  inference(cnf_transformation,[],[f20054_D])).
fof(f20054_D,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl514),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl514])])).
fof(f29834,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3092,f736])).
fof(f20026,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl512),
  inference(cnf_transformation,[],[f20026_D])).
fof(f20026_D,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl512),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl512])])).
fof(f29804,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3079,f736])).
fof(f19997,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl510),
  inference(cnf_transformation,[],[f19997_D])).
fof(f19997_D,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl510),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl510])])).
fof(f29775,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3063,f736])).
fof(f19969,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl508),
  inference(cnf_transformation,[],[f19969_D])).
fof(f19969_D,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl508),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl508])])).
fof(f29745,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3062,f736])).
fof(f29732,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl776),
  inference(cnf_transformation,[],[f29732_D])).
fof(f29732_D,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl776),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl776])])).
fof(f29731,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f29691,f717])).
fof(f29691,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f816,f736])).
fof(f816,plain,(
  ( ! [X132,X133] : (sP9(X132,X133,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X133)) | ~p(s(bool,X132))) )),
  inference(resolution,[],[f455,f584])).
fof(f29730,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl774),
  inference(cnf_transformation,[],[f29730_D])).
fof(f29730_D,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl774),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl774])])).
fof(f29678,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f816,f736])).
fof(f19869,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl502),
  inference(cnf_transformation,[],[f19869_D])).
fof(f19869_D,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl502),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl502])])).
fof(f29641,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3044,f736])).
fof(f29629,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3044,f20225])).
fof(f29553,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,X21) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl764),
  inference(cnf_transformation,[],[f29553_D])).
fof(f29553_D,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,X21) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl764),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl764])])).
fof(f29628,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X1) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3044,f21579])).
fof(f19840,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl500),
  inference(cnf_transformation,[],[f19840_D])).
fof(f19840_D,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl500),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl500])])).
fof(f29609,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3043,f736])).
fof(f25043,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl652),
  inference(cnf_transformation,[],[f25043_D])).
fof(f25043_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl652),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl652])])).
fof(f18942,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl445),
  inference(cnf_transformation,[],[f18942_D])).
fof(f18942_D,plain,(
  s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl445),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl445])])).
fof(f29596,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3043,f21579])).
fof(f19811,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl498),
  inference(cnf_transformation,[],[f19811_D])).
fof(f19811_D,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl498),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl498])])).
fof(f29576,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3041,f736])).
fof(f1153,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl44),
  inference(cnf_transformation,[],[f1153_D])).
fof(f1153_D,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f29593,plain,(
  ( ! [X4,X5] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~sP0(X5,X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl766),
  inference(cnf_transformation,[],[f29593_D])).
fof(f29593_D,plain,(
  ( ! [X4,X5] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~sP0(X5,X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl766),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl766])])).
fof(f29556,plain,(
  ( ! [X4,X5] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~sP0(X5,X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f3041,f479])).
fof(f19777,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl496),
  inference(cnf_transformation,[],[f19777_D])).
fof(f19777_D,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl496),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl496])])).
fof(f29534,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3040,f736])).
fof(f29526,plain,(
  ( ! [X24,X23] : (~p(s(bool,X23)) | s(bool,X24) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,X24)) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3040,f28860])).
fof(f19776,plain,(
  ( ! [X8] : (sP3(X8,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl494),
  inference(cnf_transformation,[],[f19776_D])).
fof(f19776_D,plain,(
  ( ! [X8] : (sP3(X8,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl494),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl494])])).
fof(f29525,plain,(
  ( ! [X21,X22] : (s(bool,'T_0') != s(bool,X21) | sP3(X22,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3040,f28729])).
fof(f29524,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X20))) ) | $spl45),
  inference(resolution,[],[f3040,f19686])).
fof(f29521,plain,(
  ( ! [X17] : (sP3(X17,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3040,f19374])).
fof(f29518,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X13))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3040,f21565])).
fof(f29552,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl762),
  inference(cnf_transformation,[],[f29552_D])).
fof(f29552_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl762),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl762])])).
fof(f29517,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X11))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3040,f20314])).
fof(f3187,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl121),
  inference(cnf_transformation,[],[f3187_D])).
fof(f3187_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f26968,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl118),
  inference(resolution,[],[f3184,f710])).
fof(f29508,plain,(
  $false | ($spl121 | $spl444)),
  inference(subsumption_resolution,[],[f29507,f707])).
fof(f29507,plain,(
  ~p(s(bool,'T_0')) | ($spl121 | $spl444)),
  inference(forward_demodulation,[],[f24039,f18943])).
fof(f24039,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl121),
  inference(resolution,[],[f3187,f709])).
fof(f29504,plain,(
  ( ! [X91] : (s(bool,'F_0') != s(bool,X91) | s(bool,X91) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl758),
  inference(cnf_transformation,[],[f29504_D])).
fof(f29504_D,plain,(
  ( ! [X91] : (s(bool,'F_0') != s(bool,X91) | s(bool,X91) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl758),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl758])])).
fof(f29474,plain,(
  ( ! [X90,X91] : (p(s(bool,X90)) | s(bool,'F_0') != s(bool,X91) | s(bool,X91) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl176)),
  inference(resolution,[],[f21607,f26988])).
fof(f29473,plain,(
  ( ! [X88,X89] : (p(s(bool,X88)) | s(bool,'F_0') != s(bool,X89) | s(bool,X89) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f21607,f14348])).
fof(f29472,plain,(
  ( ! [X87,X86] : (p(s(bool,X86)) | s(bool,'F_0') != s(bool,X87) | s(bool,X87) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f21607,f14646])).
fof(f29501,plain,(
  ( ! [X85] : (s(bool,'F_0') != s(bool,X85) | s(bool,X85) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl752),
  inference(cnf_transformation,[],[f29501_D])).
fof(f29501_D,plain,(
  ( ! [X85] : (s(bool,'F_0') != s(bool,X85) | s(bool,X85) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl752),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl752])])).
fof(f29471,plain,(
  ( ! [X85,X84] : (p(s(bool,X84)) | s(bool,'F_0') != s(bool,X85) | s(bool,X85) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl120 | $spl176)),
  inference(resolution,[],[f21607,f24513])).
fof(f24513,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl120),
  inference(resolution,[],[f3186,f491])).
fof(f29470,plain,(
  ( ! [X83,X82] : (p(s(bool,X82)) | s(bool,'F_0') != s(bool,X83) | s(bool,X83) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f21607,f14947])).
fof(f29469,plain,(
  ( ! [X80,X81] : (p(s(bool,X80)) | s(bool,'F_0') != s(bool,X81) | s(bool,X81) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f21607,f13576])).
fof(f16150,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl357),
  inference(cnf_transformation,[],[f16150_D])).
fof(f16150_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl357),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl357])])).
fof(f29461,plain,(
  ( ! [X64,X63] : (p(s(bool,X63)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X64) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl176)),
  inference(resolution,[],[f21607,f26987])).
fof(f29460,plain,(
  ( ! [X61,X62] : (p(s(bool,X61)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X62) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f21607,f14347])).
fof(f29459,plain,(
  ( ! [X59,X60] : (p(s(bool,X59)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X60) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f21607,f14645])).
fof(f16654,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl377),
  inference(cnf_transformation,[],[f16654_D])).
fof(f16654_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl377),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl377])])).
fof(f29458,plain,(
  ( ! [X57,X58] : (p(s(bool,X57)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X58) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl120 | $spl176)),
  inference(resolution,[],[f21607,f24512])).
fof(f24512,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl120),
  inference(resolution,[],[f3186,f490])).
fof(f29457,plain,(
  ( ! [X56,X55] : (p(s(bool,X55)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X56) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f21607,f14946])).
fof(f29456,plain,(
  ( ! [X54,X53] : (p(s(bool,X53)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X54) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f21607,f13575])).
fof(f29432,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl734),
  inference(cnf_transformation,[],[f29432_D])).
fof(f29432_D,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl734),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl734])])).
fof(f29431,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f29388,f717])).
fof(f29388,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f815,f736])).
fof(f815,plain,(
  ( ! [X130,X131] : (sP9(X130,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X131) | ~p(s(bool,X131)) | ~p(s(bool,X130))) )),
  inference(resolution,[],[f455,f584])).
fof(f29430,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl732),
  inference(cnf_transformation,[],[f29430_D])).
fof(f29430_D,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl732),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl732])])).
fof(f29375,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f815,f736])).
fof(f29325,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl730),
  inference(cnf_transformation,[],[f29325_D])).
fof(f29325_D,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl730),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl730])])).
fof(f29324,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f29294,f717])).
fof(f29294,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f813,f736])).
fof(f813,plain,(
  ( ! [X127,X126] : (~sP8(X126,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X127) | p(s(bool,X127)) | ~p(s(bool,X126))) )),
  inference(resolution,[],[f455,f578])).
fof(f29323,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl728),
  inference(cnf_transformation,[],[f29323_D])).
fof(f29323_D,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl728),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl728])])).
fof(f29281,plain,(
  ( ! [X23,X22] : (~sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f813,f736])).
fof(f29251,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl726),
  inference(cnf_transformation,[],[f29251_D])).
fof(f29251_D,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl726),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl726])])).
fof(f29250,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f29220,f717])).
fof(f29220,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f812,f736])).
fof(f812,plain,(
  ( ! [X125,X124] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X124,X125) | p(s(bool,X125)) | ~p(s(bool,X124))) )),
  inference(resolution,[],[f455,f578])).
fof(f29249,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl724),
  inference(cnf_transformation,[],[f29249_D])).
fof(f29249_D,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl724),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl724])])).
fof(f29207,plain,(
  ( ! [X23,X22] : (~sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f812,f736])).
fof(f29022,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl722),
  inference(cnf_transformation,[],[f29022_D])).
fof(f29022_D,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl722),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl722])])).
fof(f29021,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f28984,f717])).
fof(f28984,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f803,f736])).
fof(f803,plain,(
  ( ! [X107,X106] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X106,X107) | p(s(bool,X107)) | p(s(bool,X106))) )),
  inference(resolution,[],[f455,f568])).
fof(f29020,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl720),
  inference(cnf_transformation,[],[f29020_D])).
fof(f29020_D,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl720),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl720])])).
fof(f28971,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f803,f736])).
fof(f28835,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl718),
  inference(cnf_transformation,[],[f28835_D])).
fof(f28835_D,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl718),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl718])])).
fof(f28834,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f28799,f717])).
fof(f28799,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f796,f736])).
fof(f796,plain,(
  ( ! [X92,X93] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X92,X93) | p(s(bool,X93)) | p(s(bool,X92))) )),
  inference(resolution,[],[f455,f561])).
fof(f28833,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl716),
  inference(cnf_transformation,[],[f28833_D])).
fof(f28833_D,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl716),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl716])])).
fof(f28786,plain,(
  ( ! [X23,X22] : (~sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f796,f736])).
fof(f28675,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl714),
  inference(cnf_transformation,[],[f28675_D])).
fof(f28675_D,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl714),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl714])])).
fof(f28674,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f28640,f717])).
fof(f28640,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f790,f736])).
fof(f790,plain,(
  ( ! [X80,X81] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X80,X81) | ~p(s(bool,X81)) | p(s(bool,X80))) )),
  inference(resolution,[],[f455,f551])).
fof(f28673,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl712),
  inference(cnf_transformation,[],[f28673_D])).
fof(f28673_D,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl712),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl712])])).
fof(f28627,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f790,f736])).
fof(f28445,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl710),
  inference(cnf_transformation,[],[f28445_D])).
fof(f28445_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl710])])).
fof(f28444,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f28389,f717])).
fof(f28389,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f789,f736])).
fof(f789,plain,(
  ( ! [X78,X79] : (~sP5(X79,X78,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X79)) | p(s(bool,X78))) )),
  inference(resolution,[],[f455,f551])).
fof(f28443,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl708),
  inference(cnf_transformation,[],[f28443_D])).
fof(f28443_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) <=> ~$spl708),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl708])])).
fof(f28376,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f789,f736])).
fof(f28219,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl706),
  inference(cnf_transformation,[],[f28219_D])).
fof(f28219_D,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl706),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl706])])).
fof(f28218,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f28177,f717])).
fof(f28177,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f785,f736])).
fof(f785,plain,(
  ( ! [X70,X71] : (sP5(X70,X71,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X71)) | p(s(bool,X70))) )),
  inference(resolution,[],[f455,f548])).
fof(f28217,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) | $spl704),
  inference(cnf_transformation,[],[f28217_D])).
fof(f28217_D,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl704),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl704])])).
fof(f28164,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f785,f736])).
fof(f28048,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl176)),
  inference(resolution,[],[f26988,f19470])).
fof(f19470,plain,(
  ( ! [X10,X11] : (~sP0(X11,'F_0',X10) | p(s(bool,X10)) | s(bool,'F_0') != s(bool,X11)) ) | $spl176),
  inference(duplicate_literal_removal,[],[f19469])).
fof(f19469,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | ~sP0(X11,'F_0',X10) | p(s(bool,X10)) | s(bool,'F_0') != s(bool,X11)) ) | $spl176),
  inference(resolution,[],[f19458,f495])).
fof(f19458,plain,(
  ( ! [X6,X7] : (sP3(X6,'F_0',X7) | p(s(bool,X6)) | ~sP0(X7,'F_0',X6)) ) | $spl176),
  inference(subsumption_resolution,[],[f19456,f483])).
fof(f19456,plain,(
  ( ! [X6,X7] : (sP3(X6,'F_0',X7) | p(s(bool,X6)) | ~sP2(X6,X7,'F_0') | ~sP0(X7,'F_0',X6)) ) | $spl176),
  inference(resolution,[],[f19452,f479])).
fof(f13957,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl294),
  inference(cnf_transformation,[],[f13957_D])).
fof(f13957_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f28043,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl118 | $spl176)),
  inference(resolution,[],[f26988,f20315])).
fof(f20315,plain,(
  ( ! [X17,X15,X16] : (~sP0(X17,X15,X16) | p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(subsumption_resolution,[],[f20309,f483])).
fof(f20309,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~sP2(X16,X17,X15) | ~sP0(X17,X15,X16) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17)) ) | $spl176),
  inference(resolution,[],[f19295,f495])).
fof(f27974,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl702),
  inference(cnf_transformation,[],[f27974_D])).
fof(f27974_D,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl702),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl702])])).
fof(f27973,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f27943,f717])).
fof(f27943,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f783,f736])).
fof(f783,plain,(
  ( ! [X66,X67] : (~sP4(X66,X67,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X67)) | ~p(s(bool,X66))) )),
  inference(resolution,[],[f455,f544])).
fof(f27972,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl700),
  inference(cnf_transformation,[],[f27972_D])).
fof(f27972_D,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl700),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl700])])).
fof(f27930,plain,(
  ( ! [X23,X22] : (~sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f783,f736])).
fof(f27844,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X15))) ) | ($spl118 | $spl176 | $spl394)),
  inference(resolution,[],[f26982,f21594])).
fof(f21594,plain,(
  ( ! [X14,X12,X13] : (~sP2(X14,X13,X12) | ~p(s(bool,X13)) | s(bool,'F_0') != s(bool,X12) | ~p(s(bool,X14))) ) | ($spl176 | $spl394)),
  inference(subsumption_resolution,[],[f21585,f18593])).
fof(f21585,plain,(
  ( ! [X14,X12,X13] : (s(bool,'F_0') != s(bool,X12) | ~p(s(bool,X13)) | ~sP2(X14,X13,X12) | s(bool,X12) = s(bool,X13) | ~p(s(bool,X14))) ) | $spl176),
  inference(resolution,[],[f19294,f494])).
fof(f19294,plain,(
  ( ! [X4,X5,X3] : (sP3(X4,X3,X5) | s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X5)) | ~sP2(X4,X5,X3)) ) | $spl176),
  inference(subsumption_resolution,[],[f19291,f491])).
fof(f19291,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,X3) | sP3(X4,X3,X5) | ~p(s(bool,X5)) | ~sP2(X4,X5,X3) | ~sP0(X5,X3,X4)) ) | $spl176),
  inference(resolution,[],[f18610,f477])).
fof(f18912,plain,(
  ( ! [X28] : (~p(s(bool,X28)) | s(bool,X28) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl418),
  inference(cnf_transformation,[],[f18912_D])).
fof(f18912_D,plain,(
  ( ! [X28] : (~p(s(bool,X28)) | s(bool,X28) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f27841,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | s(bool,X8) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X9))) ) | ($spl118 | $spl176)),
  inference(resolution,[],[f26982,f20224])).
fof(f20224,plain,(
  ( ! [X14,X12,X13] : (~sP2(X13,X12,X14) | ~p(s(bool,X12)) | s(bool,X12) = s(bool,X14) | ~p(s(bool,X13))) ) | $spl176),
  inference(subsumption_resolution,[],[f20217,f485])).
fof(f20217,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X12)) | ~sP2(X13,X12,X14) | ~sP1(X14,X12,X13) | s(bool,X12) = s(bool,X14) | ~p(s(bool,X13))) ) | $spl176),
  inference(resolution,[],[f19218,f494])).
fof(f27836,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl698),
  inference(cnf_transformation,[],[f27836_D])).
fof(f27836_D,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl698),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl698])])).
fof(f27835,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f27805,f717])).
fof(f27805,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f782,f736])).
fof(f782,plain,(
  ( ! [X64,X65] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X64,X65) | ~p(s(bool,X65)) | p(s(bool,X64))) )),
  inference(resolution,[],[f455,f544])).
fof(f27834,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) | $spl696),
  inference(cnf_transformation,[],[f27834_D])).
fof(f27834_D,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | ~p(s(bool,X23))) ) <=> ~$spl696),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl696])])).
fof(f27792,plain,(
  ( ! [X23,X22] : (~sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f782,f736])).
fof(f27611,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl694),
  inference(cnf_transformation,[],[f27611_D])).
fof(f27611_D,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl694),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl694])])).
fof(f27610,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f27578,f717])).
fof(f27578,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f764,f736])).
fof(f764,plain,(
  ( ! [X39,X38] : (~sP1(X38,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X39) | p(s(bool,X39)) | ~p(s(bool,X38))) )),
  inference(resolution,[],[f455,f484])).
fof(f27609,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl692),
  inference(cnf_transformation,[],[f27609_D])).
fof(f27609_D,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl692),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl692])])).
fof(f27565,plain,(
  ( ! [X23,X22] : (~sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f764,f736])).
fof(f27478,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl120 | $spl176)),
  inference(resolution,[],[f24513,f19470])).
fof(f14193,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl300),
  inference(cnf_transformation,[],[f14193_D])).
fof(f14193_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f27473,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl120 | $spl176)),
  inference(resolution,[],[f24513,f20315])).
fof(f27370,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl690),
  inference(cnf_transformation,[],[f27370_D])).
fof(f27370_D,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl690),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl690])])).
fof(f27369,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f27337,f717])).
fof(f27337,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f763,f736])).
fof(f763,plain,(
  ( ! [X37,X36] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X36,X37) | p(s(bool,X37)) | ~p(s(bool,X36))) )),
  inference(resolution,[],[f455,f484])).
fof(f27368,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl688),
  inference(cnf_transformation,[],[f27368_D])).
fof(f27368_D,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl688),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl688])])).
fof(f27324,plain,(
  ( ! [X23,X22] : (~sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f763,f736])).
fof(f27272,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X15))) ) | ($spl120 | $spl176 | $spl394)),
  inference(resolution,[],[f24507,f21594])).
fof(f24507,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl120),
  inference(resolution,[],[f3186,f481])).
fof(f18910,plain,(
  ( ! [X24] : (~p(s(bool,X24)) | s(bool,X24) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl414),
  inference(cnf_transformation,[],[f18910_D])).
fof(f18910_D,plain,(
  ( ! [X24] : (~p(s(bool,X24)) | s(bool,X24) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f27269,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | s(bool,X8) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X9))) ) | ($spl120 | $spl176)),
  inference(resolution,[],[f24507,f20224])).
fof(f27202,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl686),
  inference(cnf_transformation,[],[f27202_D])).
fof(f27202_D,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl686),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl686])])).
fof(f27201,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f27171,f717])).
fof(f27171,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f761,f736])).
fof(f761,plain,(
  ( ! [X33,X32] : (~sP2(X32,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X33) | p(s(bool,X33)) | ~p(s(bool,X32))) )),
  inference(resolution,[],[f455,f480])).
fof(f27200,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl684),
  inference(cnf_transformation,[],[f27200_D])).
fof(f27200_D,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl684),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl684])])).
fof(f27158,plain,(
  ( ! [X23,X22] : (~sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f761,f736])).
fof(f27079,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl118),
  inference(resolution,[],[f3184,f737])).
fof(f26976,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl118),
  inference(resolution,[],[f3184,f472])).
fof(f26973,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl118),
  inference(resolution,[],[f3184,f471])).
fof(f26972,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl118),
  inference(resolution,[],[f3184,f470])).
fof(f26971,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl118),
  inference(resolution,[],[f3184,f468])).
fof(f26969,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl118),
  inference(resolution,[],[f3184,f466])).
fof(f26913,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl682),
  inference(cnf_transformation,[],[f26913_D])).
fof(f26913_D,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl682),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl682])])).
fof(f26912,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f26882,f717])).
fof(f26882,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f760,f736])).
fof(f760,plain,(
  ( ! [X30,X31] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X30,X31) | p(s(bool,X31)) | ~p(s(bool,X30))) )),
  inference(resolution,[],[f455,f480])).
fof(f26911,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl680),
  inference(cnf_transformation,[],[f26911_D])).
fof(f26911_D,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl680),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl680])])).
fof(f26869,plain,(
  ( ! [X23,X22] : (~sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f760,f736])).
fof(f26795,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl678),
  inference(cnf_transformation,[],[f26795_D])).
fof(f26795_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl678),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl678])])).
fof(f26794,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f26755,f717])).
fof(f26755,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f758,f736])).
fof(f758,plain,(
  ( ! [X26,X27] : (~sP3(X26,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X27) | p(s(bool,X27)) | ~p(s(bool,X26))) )),
  inference(resolution,[],[f455,f476])).
fof(f26793,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl676),
  inference(cnf_transformation,[],[f26793_D])).
fof(f26793_D,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl676),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl676])])).
fof(f26742,plain,(
  ( ! [X23,X22] : (~sP3(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f758,f736])).
fof(f26649,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl674),
  inference(cnf_transformation,[],[f26649_D])).
fof(f26649_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl674),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl674])])).
fof(f26648,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f26600,f717])).
fof(f26600,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f757,f736])).
fof(f757,plain,(
  ( ! [X24,X25] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X24,X25) | p(s(bool,X25)) | ~p(s(bool,X24))) )),
  inference(resolution,[],[f455,f476])).
fof(f26647,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) | $spl672),
  inference(cnf_transformation,[],[f26647_D])).
fof(f26647_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | p(s(bool,X23))) ) <=> ~$spl672),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl672])])).
fof(f26587,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f757,f736])).
fof(f26092,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) = s(bool,X23)) ) | $spl670),
  inference(cnf_transformation,[],[f26092_D])).
fof(f26092_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) = s(bool,X23)) ) <=> ~$spl670),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl670])])).
fof(f26091,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) = s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f26040,f717])).
fof(f26040,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f981,f736])).
fof(f981,plain,(
  ( ! [X50,X51] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X51,X50) | s(bool,X50) = s(bool,X51)) )),
  inference(resolution,[],[f457,f494])).
fof(f26090,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23)) ) | $spl668),
  inference(cnf_transformation,[],[f26090_D])).
fof(f26090_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23)) ) <=> ~$spl668),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl668])])).
fof(f26027,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f981,f736])).
fof(f25964,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) != s(bool,X23)) ) | $spl666),
  inference(cnf_transformation,[],[f25964_D])).
fof(f25964_D,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) != s(bool,X23)) ) <=> ~$spl666),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl666])])).
fof(f25963,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) != s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f25935,f717])).
fof(f25935,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f980,f736])).
fof(f980,plain,(
  ( ! [X48,X49] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X48,X49) | s(bool,X48) != s(bool,X49)) )),
  inference(resolution,[],[f457,f493])).
fof(f493,plain,(
  ( ! [X2,X0,X1] : (sP3(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f346])).
fof(f25962,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23)) ) | $spl664),
  inference(cnf_transformation,[],[f25962_D])).
fof(f25962_D,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23)) ) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f25922,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f980,f736])).
fof(f18948,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl447),
  inference(cnf_transformation,[],[f18948_D])).
fof(f18948_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl447),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl447])])).
fof(f25053,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f2600,f19470])).
fof(f2600,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl44),
  inference(resolution,[],[f1153,f491])).
fof(f2739,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl86),
  inference(cnf_transformation,[],[f2739_D])).
fof(f2739_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f25048,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f2600,f20315])).
fof(f24928,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X15))) ) | ($spl44 | $spl176 | $spl394)),
  inference(resolution,[],[f2594,f21594])).
fof(f2594,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f481])).
fof(f24953,plain,(
  ( ! [X8] : (~p(s(bool,X8)) | s(bool,X8) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl644),
  inference(cnf_transformation,[],[f24953_D])).
fof(f24953_D,plain,(
  ( ! [X8] : (~p(s(bool,X8)) | s(bool,X8) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl644),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl644])])).
fof(f24925,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | s(bool,X8) = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X9))) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f2594,f20224])).
fof(f3185,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl119),
  inference(cnf_transformation,[],[f3185_D])).
fof(f3185_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f24493,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl120),
  inference(resolution,[],[f3186,f710])).
fof(f1152,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl45),
  inference(cnf_transformation,[],[f1152_D])).
fof(f1152_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f20493,plain,(
  ( ! [X10] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,X10))) ) | $spl445),
  inference(subsumption_resolution,[],[f20475,f514])).
fof(f20475,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,X10))) ) | $spl445),
  inference(superposition,[],[f18942,f500])).
fof(f20494,plain,(
  ( ! [X11] : (~p(s(bool,X11)) | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) ) | $spl445),
  inference(subsumption_resolution,[],[f20476,f514])).
fof(f20476,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X11)) | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) ) | $spl445),
  inference(superposition,[],[f18942,f500])).
fof(f23974,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl113),
  inference(forward_demodulation,[],[f23902,f464])).
fof(f464,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f143])).
fof(f143,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f133])).
fof(f133,axiom,(
  ! [X15] : ! [X41] : s('type.list.list'(X15),X41) = s('type.list.list'(X15),'const.list.APPEND_2'(s('type.list.list'(X15),'const.list.NIL_0'),s('type.list.list'(X15),X41)))),
  file('thm.inferProps.tenv_alpha_bind_var_list2','thm.list.APPEND|split|0')).
fof(f23902,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl113),
  inference(superposition,[],[f3014,f736])).
fof(f24840,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl119),
  inference(superposition,[],[f24333,f736])).
fof(f24824,plain,(
  ( ! [X17] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X17))) ) | $spl119),
  inference(resolution,[],[f24333,f19686])).
fof(f24823,plain,(
  ( ! [X16] : (sP3(X16,'F_0','const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f19374])).
fof(f24821,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X13))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f21565])).
fof(f24820,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X11))) ) | ($spl119 | $spl176)),
  inference(resolution,[],[f24333,f20314])).
fof(f24814,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) = s(bool,X23)) ) | $spl632),
  inference(cnf_transformation,[],[f24814_D])).
fof(f24814_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) = s(bool,X23)) ) <=> ~$spl632),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl632])])).
fof(f24813,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) = s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f24762,f717])).
fof(f24762,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f770,f736])).
fof(f770,plain,(
  ( ! [X50,X51] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X51,X50) | s(bool,X50) = s(bool,X51)) )),
  inference(resolution,[],[f455,f494])).
fof(f24812,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23)) ) | $spl630),
  inference(cnf_transformation,[],[f24812_D])).
fof(f24812_D,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23)) ) <=> ~$spl630),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl630])])).
fof(f24749,plain,(
  ( ! [X23,X22] : (~sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) = s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f770,f736])).
fof(f24604,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl120),
  inference(resolution,[],[f3186,f737])).
fof(f24501,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl120),
  inference(resolution,[],[f3186,f472])).
fof(f24498,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl120),
  inference(resolution,[],[f3186,f471])).
fof(f24497,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl120),
  inference(resolution,[],[f3186,f470])).
fof(f24496,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl120),
  inference(resolution,[],[f3186,f468])).
fof(f24494,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl120),
  inference(resolution,[],[f3186,f466])).
fof(f24431,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f737])).
fof(f24328,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl119),
  inference(resolution,[],[f3185,f472])).
fof(f24326,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f471])).
fof(f24324,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f470])).
fof(f24323,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl119),
  inference(resolution,[],[f3185,f468])).
fof(f24321,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl119),
  inference(resolution,[],[f3185,f466])).
fof(f24319,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) != s(bool,X23)) ) | $spl626),
  inference(cnf_transformation,[],[f24319_D])).
fof(f24319_D,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) != s(bool,X23)) ) <=> ~$spl626),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl626])])).
fof(f24318,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s(bool,X22) != s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f24290,f717])).
fof(f24290,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f769,f736])).
fof(f769,plain,(
  ( ! [X48,X49] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X48,X49) | s(bool,X48) != s(bool,X49)) )),
  inference(resolution,[],[f455,f493])).
fof(f24317,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23)) ) | $spl624),
  inference(cnf_transformation,[],[f24317_D])).
fof(f24317_D,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23)) ) <=> ~$spl624),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl624])])).
fof(f24277,plain,(
  ( ! [X23,X22] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s(bool,X22) != s(bool,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f769,f736])).
fof(f24237,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl121),
  inference(superposition,[],[f24052,f736])).
fof(f24221,plain,(
  ( ! [X17] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X17))) ) | $spl121),
  inference(resolution,[],[f24052,f19686])).
fof(f24220,plain,(
  ( ! [X16] : (sP3(X16,'F_0','const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f19374])).
fof(f24218,plain,(
  ( ! [X12,X13] : (p(s(bool,X12)) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X13))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f21565])).
fof(f24217,plain,(
  ( ! [X10,X11] : (p(s(bool,X10)) | s(bool,X10) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X11))) ) | ($spl121 | $spl176)),
  inference(resolution,[],[f24052,f20314])).
fof(f24150,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f737])).
fof(f24047,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl121),
  inference(resolution,[],[f3187,f472])).
fof(f24045,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f471])).
fof(f24043,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f470])).
fof(f24042,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl121),
  inference(resolution,[],[f3187,f468])).
fof(f24040,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl121),
  inference(resolution,[],[f3187,f466])).
fof(f24011,plain,(
  ( ! [X16] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'F_0',X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl176)),
  inference(superposition,[],[f19786,f736])).
fof(f19786,plain,(
  ( ! [X12] : (sP3('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),'F_0',X12) | ~p(s(bool,X12))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3041,f19372])).
fof(f23915,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl113),
  inference(superposition,[],[f3014,f736])).
fof(f23969,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl608),
  inference(cnf_transformation,[],[f23969_D])).
fof(f23969_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl608),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl608])])).
fof(f23893,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl113),
  inference(resolution,[],[f3014,f737])).
fof(f23790,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl113),
  inference(resolution,[],[f3014,f472])).
fof(f23788,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl113),
  inference(resolution,[],[f3014,f471])).
fof(f23786,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl113),
  inference(resolution,[],[f3014,f470])).
fof(f23785,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl113),
  inference(resolution,[],[f3014,f468])).
fof(f23783,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl113),
  inference(resolution,[],[f3014,f466])).
fof(f23966,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl605),
  inference(cnf_transformation,[],[f23966_D])).
fof(f23966_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl605),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl605])])).
fof(f23968,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl607),
  inference(cnf_transformation,[],[f23968_D])).
fof(f23968_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl607),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl607])])).
fof(f23782,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl113),
  inference(resolution,[],[f3014,f710])).
fof(f3186,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl120),
  inference(cnf_transformation,[],[f3186_D])).
fof(f3186_D,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f23778,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f23726,f717])).
fof(f23726,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f959,f736])).
fof(f23777,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl602),
  inference(cnf_transformation,[],[f23777_D])).
fof(f23777_D,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl602),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl602])])).
fof(f23713,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f959,f736])).
fof(f23774,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl600),
  inference(cnf_transformation,[],[f23774_D])).
fof(f23774_D,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl600),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl600])])).
fof(f23696,plain,(
  ( ! [X196,X197] : (p(s(bool,X196)) | p(s(bool,X197)) | s(bool,X197) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f959,f737])).
fof(f23593,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X26) != s(bool,X27)) )),
  inference(resolution,[],[f959,f472])).
fof(f23590,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f959,f471])).
fof(f23589,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f959,f470])).
fof(f23588,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f959,f468])).
fof(f23586,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f959,f466])).
fof(f23572,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | $spl591),
  inference(cnf_transformation,[],[f23572_D])).
fof(f23572_D,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) <=> ~$spl591),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl591])])).
fof(f23771,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) ) | $spl598),
  inference(cnf_transformation,[],[f23771_D])).
fof(f23771_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) ) <=> ~$spl598),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl598])])).
fof(f23583,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(resolution,[],[f959,f460])).
fof(f3184,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl118),
  inference(cnf_transformation,[],[f3184_D])).
fof(f3184_D,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f23579,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f23526,f717])).
fof(f23526,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f958,f736])).
fof(f23578,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl596),
  inference(cnf_transformation,[],[f23578_D])).
fof(f23578_D,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl596),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl596])])).
fof(f23513,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f958,f736])).
fof(f23575,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl594),
  inference(cnf_transformation,[],[f23575_D])).
fof(f23575_D,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl594),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl594])])).
fof(f23496,plain,(
  ( ! [X196,X197] : (p(s(bool,X196)) | p(s(bool,X197)) | s(bool,X197) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f958,f737])).
fof(f23393,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X26) != s(bool,X27)) )),
  inference(resolution,[],[f958,f472])).
fof(f23390,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f958,f471])).
fof(f23389,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f958,f470])).
fof(f23388,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f958,f468])).
fof(f23386,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f958,f466])).
fof(f23573,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) ) | $spl592),
  inference(cnf_transformation,[],[f23573_D])).
fof(f23573_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) ) <=> ~$spl592),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl592])])).
fof(f23383,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))))) != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),X0),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),X1),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))) )),
  inference(resolution,[],[f958,f459])).
fof(f23378,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl588),
  inference(cnf_transformation,[],[f23378_D])).
fof(f23378_D,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl588),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl588])])).
fof(f23314,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f748,f736])).
fof(f23375,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl586),
  inference(cnf_transformation,[],[f23375_D])).
fof(f23375_D,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f23297,plain,(
  ( ! [X196,X197] : (p(s(bool,X196)) | p(s(bool,X197)) | s(bool,X197) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f748,f737])).
fof(f23194,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X26) != s(bool,X27)) )),
  inference(resolution,[],[f748,f472])).
fof(f23191,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f748,f471])).
fof(f23190,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f748,f470])).
fof(f23189,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f748,f468])).
fof(f23187,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f748,f466])).
fof(f23179,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl584),
  inference(cnf_transformation,[],[f23179_D])).
fof(f23179_D,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl584),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl584])])).
fof(f23116,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f747,f736])).
fof(f23176,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl582),
  inference(cnf_transformation,[],[f23176_D])).
fof(f23176_D,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,X5) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl582),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl582])])).
fof(f23099,plain,(
  ( ! [X196,X197] : (p(s(bool,X196)) | p(s(bool,X197)) | s(bool,X197) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f747,f737])).
fof(f22996,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | s(bool,X25) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X26) != s(bool,X27)) )),
  inference(resolution,[],[f747,f472])).
fof(f22993,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,X16)) | ~p(s(bool,X17)) | p(s(bool,X18)) | s(bool,X18) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f747,f471])).
fof(f22992,plain,(
  ( ! [X14,X15,X13] : (p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X14) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f747,f470])).
fof(f22991,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X11) != s(bool,X12)) )),
  inference(resolution,[],[f747,f468])).
fof(f22989,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X4) != s(bool,X6) | s(bool,X5) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f747,f466])).
fof(f22985,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) | $spl580),
  inference(cnf_transformation,[],[f22985_D])).
fof(f22985_D,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) <=> ~$spl580),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl580])])).
fof(f22984,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f22955,f717])).
fof(f22955,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1047,f736])).
fof(f1047,plain,(
  ( ! [X173,X172] : (sP11(X172,X173,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X172))) )),
  inference(resolution,[],[f457,f609])).
fof(f609,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f395])).
fof(f22983,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) | $spl578),
  inference(cnf_transformation,[],[f22983_D])).
fof(f22983_D,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) <=> ~$spl578),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl578])])).
fof(f22942,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1047,f736])).
fof(f22928,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23))) ) | $spl576),
  inference(cnf_transformation,[],[f22928_D])).
fof(f22928_D,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl576),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl576])])).
fof(f22927,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f22898,f717])).
fof(f22898,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1046,f736])).
fof(f1046,plain,(
  ( ! [X171,X170] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X170,X171) | ~p(s(bool,X171))) )),
  inference(resolution,[],[f457,f609])).
fof(f22926,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) | $spl574),
  inference(cnf_transformation,[],[f22926_D])).
fof(f22926_D,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl574),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl574])])).
fof(f22885,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1046,f736])).
fof(f22844,plain,(
  ( ! [X23,X22] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19113,f736])).
fof(f19113,plain,(
  ( ! [X167,X166] : (~sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X166,X167) | p(s(bool,X166))) ) | $spl45),
  inference(resolution,[],[f1152,f605])).
fof(f22820,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22797,f4377])).
fof(f22797,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19112,f736])).
fof(f19112,plain,(
  ( ! [X165,X164] : (~sP11(X164,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X165) | p(s(bool,X164))) ) | $spl45),
  inference(resolution,[],[f1152,f605])).
fof(f22751,plain,(
  ( ! [X23,X22] : (~sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19111,f736])).
fof(f19111,plain,(
  ( ! [X163,X162] : (~sP11(X163,X162,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X162))) ) | $spl45),
  inference(resolution,[],[f1152,f604])).
fof(f22727,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22704,f4377])).
fof(f22704,plain,(
  ( ! [X23,X22] : (~sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19110,f736])).
fof(f19110,plain,(
  ( ! [X161,X160] : (~sP11(X161,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160) | p(s(bool,X160))) ) | $spl45),
  inference(resolution,[],[f1152,f604])).
fof(f22685,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22661,f4370])).
fof(f22661,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19105,f736])).
fof(f19105,plain,(
  ( ! [X151,X150] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X150,X151) | p(s(bool,X150))) ) | $spl45),
  inference(resolution,[],[f1152,f595])).
fof(f22611,plain,(
  ( ! [X23,X22] : (~sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19104,f736])).
fof(f19104,plain,(
  ( ! [X149,X148] : (~sP10(X148,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X149) | p(s(bool,X148))) ) | $spl45),
  inference(resolution,[],[f1152,f595])).
fof(f22557,plain,(
  ( ! [X23,X22] : (~sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19103,f736])).
fof(f19103,plain,(
  ( ! [X146,X147] : (~sP10(X146,X147,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X146))) ) | $spl45),
  inference(resolution,[],[f1152,f594])).
fof(f22532,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22508,f4370])).
fof(f22508,plain,(
  ( ! [X23,X22] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19102,f736])).
fof(f19102,plain,(
  ( ! [X144,X145] : (~sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X145,X144) | p(s(bool,X144))) ) | $spl45),
  inference(resolution,[],[f1152,f594])).
fof(f22487,plain,(
  ( ! [X22] : (p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22456,f4347])).
fof(f22456,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19098,f736])).
fof(f19098,plain,(
  ( ! [X136,X137] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X136,X137) | p(s(bool,X136))) ) | $spl45),
  inference(resolution,[],[f1152,f583])).
fof(f22416,plain,(
  ( ! [X23,X22] : (sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19097,f736])).
fof(f19097,plain,(
  ( ! [X134,X135] : (sP9(X134,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X135) | p(s(bool,X134))) ) | $spl45),
  inference(resolution,[],[f1152,f583])).
fof(f22393,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22362,f4346])).
fof(f22362,plain,(
  ( ! [X23,X22] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19096,f736])).
fof(f19096,plain,(
  ( ! [X132,X133] : (sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X132,X133) | p(s(bool,X133))) ) | $spl45),
  inference(resolution,[],[f1152,f582])).
fof(f22322,plain,(
  ( ! [X23,X22] : (sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19095,f736])).
fof(f19095,plain,(
  ( ! [X130,X131] : (sP9(X130,X131,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X130))) ) | $spl45),
  inference(resolution,[],[f1152,f582])).
fof(f22280,plain,(
  ( ! [X23,X22] : (~sP9(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19089,f736])).
fof(f19089,plain,(
  ( ! [X118,X119] : (~sP9(X118,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X119) | ~p(s(bool,X118))) ) | $spl45),
  inference(resolution,[],[f1152,f573])).
fof(f22247,plain,(
  ( ! [X23,X22] : (~sP9(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19088,f736])).
fof(f19088,plain,(
  ( ! [X116,X117] : (~sP9(X116,X117,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X116))) ) | $spl45),
  inference(resolution,[],[f1152,f572])).
fof(f22233,plain,(
  ( ! [X22] : (~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22193,f4342])).
fof(f22193,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19073,f736])).
fof(f19073,plain,(
  ( ! [X87,X86] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X86,X87) | ~p(s(bool,X86))) ) | $spl45),
  inference(resolution,[],[f1152,f555])).
fof(f22171,plain,(
  ( ! [X23] : (~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22131,f4340])).
fof(f22131,plain,(
  ( ! [X23,X22] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19072,f736])).
fof(f19072,plain,(
  ( ! [X85,X84] : (~sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X85,X84) | ~p(s(bool,X84))) ) | $spl45),
  inference(resolution,[],[f1152,f554])).
fof(f22091,plain,(
  ( ! [X23,X22] : (sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19067,f736])).
fof(f19067,plain,(
  ( ! [X74,X75] : (sP5(X74,X75,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X74))) ) | $spl45),
  inference(resolution,[],[f1152,f549])).
fof(f22071,plain,(
  ( ! [X22] : (~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f22035,f4328])).
fof(f22035,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19059,f736])).
fof(f19059,plain,(
  ( ! [X59,X58] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X58,X59) | ~p(s(bool,X58))) ) | $spl45),
  inference(resolution,[],[f1152,f538])).
fof(f21986,plain,(
  ( ! [X23,X22] : (~sP5(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19058,f736])).
fof(f19058,plain,(
  ( ! [X57,X56] : (~sP5(X56,X57,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X56))) ) | $spl45),
  inference(resolution,[],[f1152,f537])).
fof(f21960,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f21924,f4326])).
fof(f21924,plain,(
  ( ! [X23,X22] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19057,f736])).
fof(f19057,plain,(
  ( ! [X54,X55] : (~sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X55,X54) | p(s(bool,X54))) ) | $spl45),
  inference(resolution,[],[f1152,f537])).
fof(f21881,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) | $spl552),
  inference(cnf_transformation,[],[f21881_D])).
fof(f21881_D,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) <=> ~$spl552),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl552])])).
fof(f21880,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f21854,f717])).
fof(f21854,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1034,f736])).
fof(f1034,plain,(
  ( ! [X146,X147] : (sP10(X146,X147,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X147))) )),
  inference(resolution,[],[f457,f596])).
fof(f596,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f390])).
fof(f21879,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23))) ) | $spl550),
  inference(cnf_transformation,[],[f21879_D])).
fof(f21879_D,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23))) ) <=> ~$spl550),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl550])])).
fof(f21841,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1034,f736])).
fof(f21799,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X27))) ) | ($spl24 | $spl176 | $spl394)),
  inference(resolution,[],[f21594,f14342])).
fof(f21798,plain,(
  ( ! [X24,X25] : (~p(s(bool,X24)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X25))) ) | ($spl76 | $spl176 | $spl394)),
  inference(resolution,[],[f21594,f14640])).
fof(f21797,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) | ($spl76 | $spl176 | $spl394)),
  inference(resolution,[],[f21594,f14941])).
fof(f21796,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X21))) ) | ($spl80 | $spl176 | $spl394)),
  inference(resolution,[],[f21594,f13570])).
fof(f21755,plain,(
  ( ! [X64,X63] : (p(s(bool,X63)) | p(s(bool,X64)) | s(bool,X63) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f20315,f14348])).
fof(f21754,plain,(
  ( ! [X61,X62] : (p(s(bool,X61)) | p(s(bool,X62)) | s(bool,X61) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f20315,f14646])).
fof(f21753,plain,(
  ( ! [X59,X60] : (p(s(bool,X59)) | p(s(bool,X60)) | s(bool,X59) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f20315,f14947])).
fof(f21752,plain,(
  ( ! [X57,X58] : (p(s(bool,X57)) | p(s(bool,X58)) | s(bool,X57) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f20315,f13576])).
fof(f21704,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23))) ) | $spl548),
  inference(cnf_transformation,[],[f21704_D])).
fof(f21704_D,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23))) ) <=> ~$spl548),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl548])])).
fof(f21703,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f21677,f717])).
fof(f21677,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1033,f736])).
fof(f1033,plain,(
  ( ! [X144,X145] : (sP10(X144,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X145) | ~p(s(bool,X145))) )),
  inference(resolution,[],[f457,f596])).
fof(f21702,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23))) ) | $spl546),
  inference(cnf_transformation,[],[f21702_D])).
fof(f21702_D,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23))) ) <=> ~$spl546),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl546])])).
fof(f21664,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1033,f736])).
fof(f18913,plain,(
  ( ! [X30] : (~p(s(bool,X30)) | s(bool,X30) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl420),
  inference(cnf_transformation,[],[f18913_D])).
fof(f18913_D,plain,(
  ( ! [X30] : (~p(s(bool,X30)) | s(bool,X30) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f21619,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | s(bool,X26) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X27))) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f20224,f14342])).
fof(f18914,plain,(
  ( ! [X32] : (~p(s(bool,X32)) | s(bool,X32) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl422),
  inference(cnf_transformation,[],[f18914_D])).
fof(f18914_D,plain,(
  ( ! [X32] : (~p(s(bool,X32)) | s(bool,X32) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f21618,plain,(
  ( ! [X24,X25] : (~p(s(bool,X24)) | s(bool,X24) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X25))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f20224,f14640])).
fof(f18911,plain,(
  ( ! [X26] : (~p(s(bool,X26)) | s(bool,X26) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl416),
  inference(cnf_transformation,[],[f18911_D])).
fof(f18911_D,plain,(
  ( ! [X26] : (~p(s(bool,X26)) | s(bool,X26) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f21617,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f20224,f14941])).
fof(f18909,plain,(
  ( ! [X22] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl412),
  inference(cnf_transformation,[],[f18909_D])).
fof(f18909_D,plain,(
  ( ! [X22] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f21616,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | s(bool,X20) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X21))) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f20224,f13570])).
fof(f21553,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22))) ) | $spl544),
  inference(cnf_transformation,[],[f21553_D])).
fof(f21553_D,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22))) ) <=> ~$spl544),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl544])])).
fof(f21552,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f21520,f717])).
fof(f21520,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1018,f736])).
fof(f1018,plain,(
  ( ! [X114,X115] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X114,X115) | p(s(bool,X114))) )),
  inference(resolution,[],[f457,f573])).
fof(f21551,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) | $spl542),
  inference(cnf_transformation,[],[f21551_D])).
fof(f21551_D,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) <=> ~$spl542),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl542])])).
fof(f21507,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1018,f736])).
fof(f21493,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23))) ) | $spl540),
  inference(cnf_transformation,[],[f21493_D])).
fof(f21493_D,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23))) ) <=> ~$spl540),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl540])])).
fof(f21492,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f21460,f717])).
fof(f21460,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1017,f736])).
fof(f1017,plain,(
  ( ! [X112,X113] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X113,X112) | p(s(bool,X112))) )),
  inference(resolution,[],[f457,f572])).
fof(f21491,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl538),
  inference(cnf_transformation,[],[f21491_D])).
fof(f21491_D,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f21447,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1017,f736])).
fof(f21433,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl124)),
  inference(subsumption_resolution,[],[f21408,f3246])).
fof(f21408,plain,(
  ( ! [X16] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19186,f736])).
fof(f19186,plain,(
  ( ! [X185] : (~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X185) | p(s(bool,X185))) ) | $spl45),
  inference(subsumption_resolution,[],[f19127,f665])).
fof(f19127,plain,(
  ( ! [X185] : (p(s(bool,'F_0')) | p(s(bool,X185)) | ~sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X185)) ) | $spl45),
  inference(resolution,[],[f1152,f630])).
fof(f21387,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl84)),
  inference(subsumption_resolution,[],[f21361,f2414])).
fof(f21361,plain,(
  ( ! [X16] : (~sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19185,f736])).
fof(f19185,plain,(
  ( ! [X184] : (~sP13(X184,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X184))) ) | $spl45),
  inference(subsumption_resolution,[],[f19126,f665])).
fof(f19126,plain,(
  ( ! [X184] : (p(s(bool,'F_0')) | p(s(bool,X184)) | ~sP13(X184,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f630])).
fof(f21340,plain,(
  ( ! [X16] : (~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f21307,f4380])).
fof(f21307,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19121,f736])).
fof(f19121,plain,(
  ( ! [X179] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X179) | ~p(s(bool,X179))) ) | $spl45),
  inference(resolution,[],[f1152,f619])).
fof(f21290,plain,(
  ( ! [X16] : (~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f21257,f4381])).
fof(f21257,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19120,f736])).
fof(f19120,plain,(
  ( ! [X178] : (sP12(X178,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X178))) ) | $spl45),
  inference(resolution,[],[f1152,f616])).
fof(f21240,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f21213,f4382])).
fof(f21213,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19119,f736])).
fof(f19119,plain,(
  ( ! [X177] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X177) | p(s(bool,X177))) ) | $spl45),
  inference(resolution,[],[f1152,f614])).
fof(f21198,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | ($spl45 | $spl76)),
  inference(subsumption_resolution,[],[f21171,f4383])).
fof(f21171,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f19118,f736])).
fof(f19118,plain,(
  ( ! [X176] : (~sP12(X176,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X176))) ) | $spl45),
  inference(resolution,[],[f1152,f614])).
fof(f21156,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22))) ) | $spl536),
  inference(cnf_transformation,[],[f21156_D])).
fof(f21156_D,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl536),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl536])])).
fof(f21155,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f21112,f717])).
fof(f21112,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1013,f736])).
fof(f1013,plain,(
  ( ! [X105,X104] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X104,X105) | ~p(s(bool,X104))) )),
  inference(resolution,[],[f457,f567])).
fof(f21154,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) | $spl534),
  inference(cnf_transformation,[],[f21154_D])).
fof(f21154_D,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl534),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl534])])).
fof(f21099,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1013,f736])).
fof(f20889,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl45),
  inference(subsumption_resolution,[],[f20537,f650])).
fof(f20537,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl45),
  inference(superposition,[],[f710,f19053])).
fof(f19053,plain,(
  s(bool,'F_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl45),
  inference(resolution,[],[f1152,f510])).
fof(f20447,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22))) ) | $spl532),
  inference(cnf_transformation,[],[f20447_D])).
fof(f20447_D,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22))) ) <=> ~$spl532),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl532])])).
fof(f20446,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f20420,f717])).
fof(f20420,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1012,f736])).
fof(f1012,plain,(
  ( ! [X103,X102] : (sP7(X102,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X103) | ~p(s(bool,X102))) )),
  inference(resolution,[],[f457,f567])).
fof(f20445,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) | $spl530),
  inference(cnf_transformation,[],[f20445_D])).
fof(f20445_D,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) <=> ~$spl530),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl530])])).
fof(f20407,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1012,f736])).
fof(f20303,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23))) ) | $spl528),
  inference(cnf_transformation,[],[f20303_D])).
fof(f20303_D,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl528),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl528])])).
fof(f20302,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f20259,f717])).
fof(f20259,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1011,f736])).
fof(f1011,plain,(
  ( ! [X101,X100] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X100,X101) | ~p(s(bool,X101))) )),
  inference(resolution,[],[f457,f566])).
fof(f20301,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) | $spl526),
  inference(cnf_transformation,[],[f20301_D])).
fof(f20301_D,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl526),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl526])])).
fof(f20246,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1011,f736])).
fof(f20212,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) | $spl524),
  inference(cnf_transformation,[],[f20212_D])).
fof(f20212_D,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22))) ) <=> ~$spl524),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl524])])).
fof(f20211,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f20185,f717])).
fof(f20185,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1010,f736])).
fof(f1010,plain,(
  ( ! [X99,X98] : (sP7(X98,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X98))) )),
  inference(resolution,[],[f457,f566])).
fof(f20210,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) | $spl522),
  inference(cnf_transformation,[],[f20210_D])).
fof(f20210_D,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) <=> ~$spl522),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl522])])).
fof(f20172,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1010,f736])).
fof(f20154,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) | $spl520),
  inference(cnf_transformation,[],[f20154_D])).
fof(f20154_D,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) <=> ~$spl520),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl520])])).
fof(f20153,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f20118,f717])).
fof(f20118,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1004,f736])).
fof(f1004,plain,(
  ( ! [X87,X86] : (~sP7(X86,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X87) | p(s(bool,X86))) )),
  inference(resolution,[],[f457,f555])).
fof(f20152,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl518),
  inference(cnf_transformation,[],[f20152_D])).
fof(f20152_D,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl518),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl518])])).
fof(f20105,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1004,f736])).
fof(f20066,plain,(
  ( ! [X23,X22] : (sP8('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3093,f736])).
fof(f20038,plain,(
  ( ! [X23,X22] : (sP8(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3092,f736])).
fof(f20009,plain,(
  ( ! [X23,X22] : (sP6('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3079,f736])).
fof(f19981,plain,(
  ( ! [X23,X22] : (sP4('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3063,f736])).
fof(f19953,plain,(
  ( ! [X23,X22] : (sP4(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3062,f736])).
fof(f19941,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) | $spl506),
  inference(cnf_transformation,[],[f19941_D])).
fof(f19941_D,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22))) ) <=> ~$spl506),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl506])])).
fof(f19940,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f19905,f717])).
fof(f19905,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1003,f736])).
fof(f1003,plain,(
  ( ! [X85,X84] : (~sP7(X84,X85,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X84))) )),
  inference(resolution,[],[f457,f554])).
fof(f19939,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) | $spl504),
  inference(cnf_transformation,[],[f19939_D])).
fof(f19939_D,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) <=> ~$spl504),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl504])])).
fof(f19892,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1003,f736])).
fof(f19851,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3044,f736])).
fof(f19822,plain,(
  ( ! [X23,X22] : (sP1(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3043,f736])).
fof(f19793,plain,(
  ( ! [X23,X22] : (sP2('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3041,f736])).
fof(f19759,plain,(
  ( ! [X23,X22] : (sP2(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl45),
  inference(superposition,[],[f3040,f736])).
fof(f19749,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X9))) ) | $spl45),
  inference(resolution,[],[f3040,f19686])).
fof(f19748,plain,(
  ( ! [X8] : (sP3(X8,'F_0','const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,'T_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl45 | $spl176)),
  inference(resolution,[],[f3040,f19374])).
fof(f19733,plain,(
  ( ! [X26] : (p(s(bool,X26)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f19470,f14348])).
fof(f19732,plain,(
  ( ! [X25] : (p(s(bool,X25)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f19470,f14646])).
fof(f19731,plain,(
  ( ! [X24] : (p(s(bool,X24)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f19470,f14947])).
fof(f19730,plain,(
  ( ! [X23] : (p(s(bool,X23)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f19470,f13576])).
fof(f19666,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22))) ) | $spl492),
  inference(cnf_transformation,[],[f19666_D])).
fof(f19666_D,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl492),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl492])])).
fof(f19665,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f19626,f717])).
fof(f19626,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f999,f736])).
fof(f999,plain,(
  ( ! [X76,X77] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X76,X77) | ~p(s(bool,X76))) )),
  inference(resolution,[],[f457,f550])).
fof(f19664,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) | $spl490),
  inference(cnf_transformation,[],[f19664_D])).
fof(f19664_D,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl490),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl490])])).
fof(f19613,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f999,f736])).
fof(f19524,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22))) ) | $spl488),
  inference(cnf_transformation,[],[f19524_D])).
fof(f19524_D,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22))) ) <=> ~$spl488),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl488])])).
fof(f19523,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f19497,f717])).
fof(f19497,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f998,f736])).
fof(f998,plain,(
  ( ! [X74,X75] : (sP5(X74,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X75) | ~p(s(bool,X74))) )),
  inference(resolution,[],[f457,f550])).
fof(f19522,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) | $spl486),
  inference(cnf_transformation,[],[f19522_D])).
fof(f19522_D,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) <=> ~$spl486),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl486])])).
fof(f19484,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f998,f736])).
fof(f19439,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23))) ) | $spl484),
  inference(cnf_transformation,[],[f19439_D])).
fof(f19439_D,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23))) ) <=> ~$spl484),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl484])])).
fof(f19438,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f19404,f717])).
fof(f19404,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f997,f736])).
fof(f997,plain,(
  ( ! [X72,X73] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X72,X73) | p(s(bool,X73))) )),
  inference(resolution,[],[f457,f549])).
fof(f19437,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl482),
  inference(cnf_transformation,[],[f19437_D])).
fof(f19437_D,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl482),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl482])])).
fof(f19391,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f997,f736])).
fof(f19289,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) | $spl480),
  inference(cnf_transformation,[],[f19289_D])).
fof(f19289_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22))) ) <=> ~$spl480),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl480])])).
fof(f19288,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f19253,f717])).
fof(f19253,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f988,f736])).
fof(f988,plain,(
  ( ! [X54,X55] : (~sP5(X54,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X55) | p(s(bool,X54))) )),
  inference(resolution,[],[f457,f538])).
fof(f19287,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl478),
  inference(cnf_transformation,[],[f19287_D])).
fof(f19287_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl478),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl478])])).
fof(f19240,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f988,f736])).
fof(f5713,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,X2) | s(bool,'T_0') != s(bool,X2)) ) | $spl176),
  inference(cnf_transformation,[],[f5713_D])).
fof(f5713_D,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,X2) | s(bool,'T_0') != s(bool,X2)) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f18417,plain,(
  ( ! [X47,X48] : (s(bool,'T_0') != s(bool,X48) | s(bool,'F_0') != s(bool,X48) | p(s(bool,X47))) ) | $spl392),
  inference(trivial_inequality_removal,[],[f18402])).
fof(f18402,plain,(
  ( ! [X47,X48] : (s(bool,X47) != s(bool,X47) | s(bool,'T_0') != s(bool,X48) | s(bool,'F_0') != s(bool,X48) | p(s(bool,X47))) ) | $spl392),
  inference(superposition,[],[f18345,f510])).
fof(f18418,plain,(
  ( ! [X45,X46] : (s(bool,'T_0') != s(bool,X46) | s(bool,'F_0') != s(bool,X46) | p(s(bool,X45))) ) | $spl392),
  inference(trivial_inequality_removal,[],[f18401])).
fof(f18401,plain,(
  ( ! [X45,X46] : (s(bool,X45) != s(bool,X45) | s(bool,'T_0') != s(bool,X46) | s(bool,'F_0') != s(bool,X46) | p(s(bool,X45))) ) | $spl392),
  inference(superposition,[],[f18345,f512])).
fof(f18989,plain,(
  ( ! [X43] : (s(bool,'T_0') = s(bool,X43)) ) | $spl474),
  inference(cnf_transformation,[],[f18989_D])).
fof(f18989_D,plain,(
  ( ! [X43] : (s(bool,'T_0') = s(bool,X43)) ) <=> ~$spl474),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl474])])).
fof(f18419,plain,(
  ( ! [X43,X44] : (s(bool,'T_0') != s(bool,X44) | s(bool,'F_0') != s(bool,X44) | s(bool,'T_0') = s(bool,X43)) ) | $spl392),
  inference(trivial_inequality_removal,[],[f18400])).
fof(f18400,plain,(
  ( ! [X43,X44] : (s(bool,X43) != s(bool,X43) | s(bool,'T_0') != s(bool,X44) | s(bool,'F_0') != s(bool,X44) | s(bool,'T_0') = s(bool,X43)) ) | $spl392),
  inference(superposition,[],[f18345,f517])).
fof(f19200,plain,(
  ( ! [X10,X11] : (s(bool,'T_0') != s(bool,X10) | p(s(bool,X11)) | s(bool,'F_0') != s(bool,X10)) )),
  inference(duplicate_literal_removal,[],[f19199])).
fof(f19199,plain,(
  ( ! [X10,X11] : (s(bool,'T_0') != s(bool,X10) | p(s(bool,X11)) | p(s(bool,X11)) | s(bool,'F_0') != s(bool,X10)) )),
  inference(resolution,[],[f19006,f495])).
fof(f19006,plain,(
  ( ! [X4,X3] : (sP3(X4,X3,'F_0') | s(bool,'T_0') != s(bool,X3) | p(s(bool,X4))) )),
  inference(superposition,[],[f10934,f492])).
fof(f19139,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f737])).
fof(f19036,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl45),
  inference(resolution,[],[f1152,f472])).
fof(f19034,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f471])).
fof(f19032,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f470])).
fof(f19031,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl45),
  inference(resolution,[],[f1152,f468])).
fof(f19029,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f466])).
fof(f19028,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl45),
  inference(resolution,[],[f1152,f710])).
fof(f18991,plain,(
  ( ! [X21,X19] : (s(bool,'T_0') != s(bool,X21) | p(s(bool,X19)) | s(bool,X19) != s(bool,X21)) ) | $spl476),
  inference(cnf_transformation,[],[f18991_D])).
fof(f18991_D,plain,(
  ( ! [X21,X19] : (s(bool,'T_0') != s(bool,X21) | p(s(bool,X19)) | s(bool,X19) != s(bool,X21)) ) <=> ~$spl476),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl476])])).
fof(f18992,plain,(
  ( ! [X17,X18,X16] : (s(bool,'T_0') != s(bool,X18) | s(bool,X16) != s(bool,X18) | p(s(bool,X17)) | p(s(bool,X16))) ) | $spl392),
  inference(subsumption_resolution,[],[f18390,f510])).
fof(f18390,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X17) | s(bool,'T_0') != s(bool,X18) | s(bool,X16) != s(bool,X18) | p(s(bool,X17)) | p(s(bool,X16))) ) | $spl392),
  inference(superposition,[],[f18345,f497])).
fof(f497,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f276])).
fof(f18990,plain,(
  ( ! [X21,X19,X20] : (s(bool,'T_0') != s(bool,X21) | s(bool,X19) != s(bool,X21) | p(s(bool,X19)) | p(s(bool,X20))) ) | $spl392),
  inference(subsumption_resolution,[],[f18391,f510])).
fof(f18391,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,X20) | s(bool,'T_0') != s(bool,X21) | s(bool,X19) != s(bool,X21) | p(s(bool,X19)) | p(s(bool,X20))) ) | $spl392),
  inference(superposition,[],[f18345,f497])).
fof(f18988,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl472),
  inference(cnf_transformation,[],[f18988_D])).
fof(f18988_D,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl472),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl472])])).
fof(f4804,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f4774,f717])).
fof(f4774,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1059,f736])).
fof(f1059,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f631])).
fof(f631,plain,(
  ( ! [X0,X1] : (sP13(X0,X1) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f405])).
fof(f18987,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16)) ) | $spl470),
  inference(cnf_transformation,[],[f18987_D])).
fof(f18987_D,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16)) ) <=> ~$spl470),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl470])])).
fof(f4856,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f4826,f717])).
fof(f4826,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1060,f736])).
fof(f1060,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X189)) )),
  inference(resolution,[],[f457,f632])).
fof(f632,plain,(
  ( ! [X0,X1] : (sP13(X0,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f405])).
fof(f18977,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl468),
  inference(cnf_transformation,[],[f18977_D])).
fof(f18977_D,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl468),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl468])])).
fof(f8066,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f8036,f717])).
fof(f8036,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f973,f736])).
fof(f973,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f481])).
fof(f18967,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl466),
  inference(cnf_transformation,[],[f18967_D])).
fof(f18967_D,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl466),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl466])])).
fof(f8745,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f8715,f717])).
fof(f8715,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f976,f736])).
fof(f976,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f485])).
fof(f18966,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl464),
  inference(cnf_transformation,[],[f18966_D])).
fof(f18966_D,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl464),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl464])])).
fof(f8924,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f8893,f717])).
fof(f8893,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f977,f736])).
fof(f977,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f489])).
fof(f18965,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl462),
  inference(cnf_transformation,[],[f18965_D])).
fof(f18965_D,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl462),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl462])])).
fof(f8980,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f8949,f717])).
fof(f8949,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f978,f736])).
fof(f978,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X45)) )),
  inference(resolution,[],[f457,f490])).
fof(f18964,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl460),
  inference(cnf_transformation,[],[f18964_D])).
fof(f18964_D,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl460),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl460])])).
fof(f9039,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9006,f717])).
fof(f9006,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f979,f736])).
fof(f979,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X46,X47)) )),
  inference(resolution,[],[f457,f491])).
fof(f18963,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl458),
  inference(cnf_transformation,[],[f18963_D])).
fof(f18963_D,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl458),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl458])])).
fof(f9093,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9064,f717])).
fof(f9064,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f995,f736])).
fof(f995,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X69)) )),
  inference(resolution,[],[f457,f546])).
fof(f546,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f368])).
fof(f18962,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl456),
  inference(cnf_transformation,[],[f18962_D])).
fof(f18962_D,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl456),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl456])])).
fof(f9147,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9118,f717])).
fof(f9118,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1008,f736])).
fof(f1008,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f562])).
fof(f562,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f376])).
fof(f18961,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl454),
  inference(cnf_transformation,[],[f18961_D])).
fof(f18961_D,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl454])])).
fof(f9201,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9172,f717])).
fof(f9172,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1009,f736])).
fof(f1009,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X97)) )),
  inference(resolution,[],[f457,f563])).
fof(f563,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f376])).
fof(f18960,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl452),
  inference(cnf_transformation,[],[f18960_D])).
fof(f18960_D,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl452),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl452])])).
fof(f9256,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9226,f717])).
fof(f9226,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1025,f736])).
fof(f1025,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f579])).
fof(f579,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f383])).
fof(f18959,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl450),
  inference(cnf_transformation,[],[f18959_D])).
fof(f18959_D,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f9410,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9382,f717])).
fof(f9382,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1041,f736])).
fof(f1041,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X160,X161)) )),
  inference(resolution,[],[f457,f601])).
fof(f18958,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl448),
  inference(cnf_transformation,[],[f18958_D])).
fof(f18958_D,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl448),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl448])])).
fof(f9597,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f9569,f717])).
fof(f9569,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1048,f736])).
fof(f1048,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X175)) )),
  inference(resolution,[],[f457,f610])).
fof(f18921,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl425),
  inference(cnf_transformation,[],[f18921_D])).
fof(f18921_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl425),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl425])])).
fof(f10877,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))) | $spl24),
  inference(forward_demodulation,[],[f10876,f3662])).
fof(f10876,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f10828,f717])).
fof(f10828,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f773,f736])).
fof(f12569,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f12521,f717])).
fof(f12521,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f984,f736])).
fof(f984,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))),
  inference(resolution,[],[f457,f509])).
fof(f18943,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl444),
  inference(cnf_transformation,[],[f18943_D])).
fof(f18943_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f12966,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f12594,f717])).
fof(f12594,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f986,f736])).
fof(f18935,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16))) ) | $spl442),
  inference(cnf_transformation,[],[f18935_D])).
fof(f18935_D,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16))) ) <=> ~$spl442),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl442])])).
fof(f13191,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f13151,f717])).
fof(f13151,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1051,f736])).
fof(f1051,plain,(
  ( ! [X180] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X180) | ~p(s(bool,X180))) )),
  inference(resolution,[],[f457,f615])).
fof(f18934,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16))) ) | $spl440),
  inference(cnf_transformation,[],[f18934_D])).
fof(f18934_D,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16))) ) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f13259,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f13219,f717])).
fof(f13219,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1052,f736])).
fof(f1052,plain,(
  ( ! [X181] : (~sP12(X181,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X181))) )),
  inference(resolution,[],[f457,f615])).
fof(f18933,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16))) ) | $spl438),
  inference(cnf_transformation,[],[f18933_D])).
fof(f18933_D,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16))) ) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f13321,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f13289,f717])).
fof(f13289,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1053,f736])).
fof(f1053,plain,(
  ( ! [X182] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X182) | p(s(bool,X182))) )),
  inference(resolution,[],[f457,f616])).
fof(f18932,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16))) ) | $spl436),
  inference(cnf_transformation,[],[f18932_D])).
fof(f18932_D,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16))) ) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f13383,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(forward_demodulation,[],[f13351,f717])).
fof(f13351,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))) )),
  inference(superposition,[],[f1054,f736])).
fof(f1054,plain,(
  ( ! [X183] : (sP12(X183,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X183))) )),
  inference(resolution,[],[f457,f619])).
fof(f18931,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X32) != s(bool,X33) | ~p(s(bool,X32))) ) | ($spl6 | $spl392)),
  inference(subsumption_resolution,[],[f18396,f1833])).
fof(f18396,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X33) | s(bool,X32) != s(bool,X33) | ~p(s(bool,X32))) ) | $spl392),
  inference(superposition,[],[f18345,f514])).
fof(f18930,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X34) != s(bool,X35) | ~p(s(bool,X34))) ) | ($spl6 | $spl392)),
  inference(subsumption_resolution,[],[f18397,f1833])).
fof(f18397,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X35) | s(bool,X34) != s(bool,X35) | ~p(s(bool,X34))) ) | $spl392),
  inference(superposition,[],[f18345,f516])).
fof(f18929,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | s(bool,X36) != s(bool,X37)) ) | $spl434),
  inference(cnf_transformation,[],[f18929_D])).
fof(f18929_D,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | s(bool,X36) != s(bool,X37)) ) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f18928,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X37) | s(bool,X36) != s(bool,X37)) ) | $spl392),
  inference(subsumption_resolution,[],[f18398,f18345])).
fof(f18398,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X37) | s(bool,X36) != s(bool,X37) | s(bool,'F_0') = s(bool,X36)) ) | $spl392),
  inference(superposition,[],[f18345,f517])).
fof(f18927,plain,(
  ( ! [X50] : (s(bool,'T_0') != s(bool,X50) | s(bool,X50) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl432),
  inference(cnf_transformation,[],[f18927_D])).
fof(f18927_D,plain,(
  ( ! [X50] : (s(bool,'T_0') != s(bool,X50) | s(bool,X50) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f18404,plain,(
  ( ! [X50] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X50) | s(bool,X50) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl392)),
  inference(superposition,[],[f18345,f3662])).
fof(f18926,plain,(
  ( ! [X51] : (s(bool,'T_0') != s(bool,X51) | s(bool,X51) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl430),
  inference(cnf_transformation,[],[f18926_D])).
fof(f18926_D,plain,(
  ( ! [X51] : (s(bool,'T_0') != s(bool,X51) | s(bool,X51) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f18405,plain,(
  ( ! [X51] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X51) | s(bool,X51) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl76 | $spl392)),
  inference(superposition,[],[f18345,f4315])).
fof(f18925,plain,(
  ( ! [X52] : (s(bool,'T_0') != s(bool,X52) | s(bool,X52) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl428),
  inference(cnf_transformation,[],[f18925_D])).
fof(f18925_D,plain,(
  ( ! [X52] : (s(bool,'T_0') != s(bool,X52) | s(bool,X52) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f18406,plain,(
  ( ! [X52] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X52) | s(bool,X52) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl392),
  inference(superposition,[],[f18345,f775])).
fof(f18924,plain,(
  ( ! [X53] : (s(bool,'T_0') != s(bool,X53) | s(bool,X53) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl426),
  inference(cnf_transformation,[],[f18924_D])).
fof(f18924_D,plain,(
  ( ! [X53] : (s(bool,'T_0') != s(bool,X53) | s(bool,X53) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f18407,plain,(
  ( ! [X53] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') != s(bool,X53) | s(bool,X53) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl392),
  inference(superposition,[],[f18345,f986])).
fof(f18923,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X33)) | ~p(s(bool,X32))) ) | $spl394),
  inference(subsumption_resolution,[],[f18679,f500])).
fof(f18679,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X32) != s(bool,X33) | ~p(s(bool,X33)) | ~p(s(bool,X32))) ) | $spl394),
  inference(superposition,[],[f18593,f514])).
fof(f18922,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X35)) | ~p(s(bool,X34))) ) | $spl394),
  inference(subsumption_resolution,[],[f18680,f500])).
fof(f18680,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X34) != s(bool,X35) | ~p(s(bool,X35)) | ~p(s(bool,X34))) ) | $spl394),
  inference(superposition,[],[f18593,f516])).
fof(f18919,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X36) != s(bool,X37) | ~p(s(bool,X37))) ) | $spl394),
  inference(subsumption_resolution,[],[f18681,f18593])).
fof(f18681,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X36) != s(bool,X37) | ~p(s(bool,X37)) | s(bool,'F_0') = s(bool,X36)) ) | $spl394),
  inference(superposition,[],[f18593,f517])).
fof(f18903,plain,(
  ( ! [X33,X32] : (~p(s(bool,X32)) | s(bool,X32) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X33))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f18574,f14640])).
fof(f18574,plain,(
  ( ! [X2,X0,X1] : (~sP2(X1,X0,X2) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X2) | ~p(s(bool,X1))) ) | $spl176),
  inference(subsumption_resolution,[],[f18561,f485])).
fof(f18561,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP2(X1,X0,X2) | ~sP1(X2,X0,X1) | s(bool,X0) = s(bool,X2) | ~p(s(bool,X1))) ) | $spl176),
  inference(resolution,[],[f18559,f494])).
fof(f18559,plain,(
  ( ! [X4,X5,X3] : (sP3(X4,X5,X3) | ~p(s(bool,X3)) | ~sP2(X4,X3,X5) | ~sP1(X5,X3,X4)) ) | $spl176),
  inference(subsumption_resolution,[],[f18554,f514])).
fof(f18554,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,X3) | sP3(X4,X5,X3) | ~p(s(bool,X3)) | ~sP2(X4,X3,X5) | ~sP1(X5,X3,X4)) ) | $spl176),
  inference(resolution,[],[f18552,f477])).
fof(f18902,plain,(
  ( ! [X30,X31] : (~p(s(bool,X30)) | s(bool,X30) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X31))) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f18574,f14342])).
fof(f18901,plain,(
  ( ! [X28,X29] : (~p(s(bool,X28)) | s(bool,X28) = s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X29))) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f18574,f13805])).
fof(f13805,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f481])).
fof(f3247,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl44),
  inference(resolution,[],[f1153,f708])).
fof(f18900,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | s(bool,X26) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X27))) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f18574,f14941])).
fof(f18899,plain,(
  ( ! [X24,X25] : (~p(s(bool,X24)) | s(bool,X24) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X25))) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f18574,f14040])).
fof(f14040,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f481])).
fof(f3248,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl44),
  inference(resolution,[],[f1153,f709])).
fof(f18898,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | s(bool,X22) = s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23))) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f18574,f13570])).
fof(f18887,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) | $spl410),
  inference(cnf_transformation,[],[f18887_D])).
fof(f18887_D,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f18849,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f836,f736])).
fof(f836,plain,(
  ( ! [X173,X172] : (sP11(X172,X173,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X172))) )),
  inference(resolution,[],[f455,f609])).
fof(f18759,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) | $spl408),
  inference(cnf_transformation,[],[f18759_D])).
fof(f18759_D,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl408),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl408])])).
fof(f18721,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f835,f736])).
fof(f835,plain,(
  ( ! [X171,X170] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X170,X171) | ~p(s(bool,X171))) )),
  inference(resolution,[],[f455,f609])).
fof(f18609,plain,(
  ( ! [X33,X32] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X32,X33)) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f18594,f14640])).
fof(f18620,plain,(
  ( ! [X30,X31] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X30,X31)) ) | $spl404),
  inference(cnf_transformation,[],[f18620_D])).
fof(f18620_D,plain,(
  ( ! [X30,X31] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X30,X31)) ) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f18608,plain,(
  ( ! [X30,X31] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X30,X31)) ) | ($spl24 | $spl176)),
  inference(resolution,[],[f18594,f14342])).
fof(f18619,plain,(
  ( ! [X28,X29] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X28,X29)) ) | $spl402),
  inference(cnf_transformation,[],[f18619_D])).
fof(f18619_D,plain,(
  ( ! [X28,X29] : (sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X28,X29)) ) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f18607,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | sP1('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X28,X29)) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f18594,f13805])).
fof(f18606,plain,(
  ( ! [X26,X27] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X26,X27)) ) | ($spl76 | $spl176)),
  inference(resolution,[],[f18594,f14941])).
fof(f18617,plain,(
  ( ! [X24,X25] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X24,X25)) ) | $spl398),
  inference(cnf_transformation,[],[f18617_D])).
fof(f18617_D,plain,(
  ( ! [X24,X25] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X24,X25)) ) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f18605,plain,(
  ( ! [X24,X25] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X24,X25)) ) | ($spl44 | $spl176)),
  inference(resolution,[],[f18594,f14040])).
fof(f18616,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl396),
  inference(cnf_transformation,[],[f18616_D])).
fof(f18616_D,plain,(
  ( ! [X23,X22] : (sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f18604,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | sP1('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | ($spl80 | $spl176)),
  inference(resolution,[],[f18594,f13570])).
fof(f18593,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,X3) != s(bool,X4) | ~p(s(bool,X4))) ) | $spl394),
  inference(cnf_transformation,[],[f18593_D])).
fof(f18593_D,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,X3) != s(bool,X4) | ~p(s(bool,X4))) ) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f18592,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X3) != s(bool,X4)) ) | $spl176),
  inference(subsumption_resolution,[],[f18577,f483])).
fof(f18577,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,X3) | ~p(s(bool,X4)) | ~sP2(X5,X4,X3) | p(s(bool,X5)) | s(bool,X3) != s(bool,X4)) ) | $spl176),
  inference(resolution,[],[f18518,f495])).
fof(f18345,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X7) | s(bool,'T_0') != s(bool,X6) | s(bool,X6) != s(bool,X7)) ) | $spl392),
  inference(cnf_transformation,[],[f18345_D])).
fof(f18345_D,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X7) | s(bool,'T_0') != s(bool,X6) | s(bool,X6) != s(bool,X7)) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f18344,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X6) | s(bool,X6) != s(bool,X7) | p(s(bool,X8)) | s(bool,'F_0') != s(bool,X7)) ) | $spl176),
  inference(duplicate_literal_removal,[],[f18335])).
fof(f18335,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,X6) | s(bool,X6) != s(bool,X7) | p(s(bool,X8)) | p(s(bool,X8)) | s(bool,'F_0') != s(bool,X7)) ) | $spl176),
  inference(resolution,[],[f5784,f495])).
fof(f5784,plain,(
  ( ! [X6,X8,X7] : (sP3(X8,X6,'F_0') | s(bool,'T_0') != s(bool,X7) | s(bool,X6) != s(bool,X7) | p(s(bool,X8))) ) | $spl176),
  inference(superposition,[],[f5713,f492])).
fof(f18003,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl44 | $spl76)),
  inference(resolution,[],[f14947,f6001])).
fof(f6001,plain,(
  ( ! [X2,X3] : (~sP0(X3,'F_0',X2) | p(s(bool,X2)) | s(bool,'F_0') != s(bool,X3)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f5996])).
fof(f5996,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | ~sP0(X3,'F_0',X2) | p(s(bool,X2)) | s(bool,'F_0') != s(bool,X3)) ) | $spl44),
  inference(resolution,[],[f5935,f495])).
fof(f5935,plain,(
  ( ! [X6,X7] : (sP3(X6,'F_0',X7) | p(s(bool,X6)) | ~sP0(X7,'F_0',X6)) ) | $spl44),
  inference(subsumption_resolution,[],[f5933,f483])).
fof(f5933,plain,(
  ( ! [X6,X7] : (sP3(X6,'F_0',X7) | p(s(bool,X6)) | ~sP2(X6,X7,'F_0') | ~sP0(X7,'F_0',X6)) ) | $spl44),
  inference(resolution,[],[f5929,f479])).
fof(f5929,plain,(
  ( ! [X6,X7] : (sP1('F_0',X6,X7)) ) | $spl44),
  inference(subsumption_resolution,[],[f5928,f486])).
fof(f5928,plain,(
  ( ! [X6,X7] : (~p(s(bool,X6)) | sP1('F_0',X6,X7)) ) | $spl44),
  inference(subsumption_resolution,[],[f5924,f485])).
fof(f5924,plain,(
  ( ! [X6,X7] : (~p(s(bool,X6)) | p(s(bool,X7)) | sP1('F_0',X6,X7)) ) | $spl44),
  inference(resolution,[],[f5919,f474])).
fof(f5919,plain,(
  ( ! [X4,X5] : (sP3(X5,'F_0',X4) | ~p(s(bool,X4)) | p(s(bool,X5))) ) | $spl44),
  inference(resolution,[],[f5914,f483])).
fof(f5914,plain,(
  ( ! [X2,X3] : (~sP2(X3,X2,'F_0') | ~p(s(bool,X2)) | sP3(X3,'F_0',X2)) ) | $spl44),
  inference(subsumption_resolution,[],[f5913,f514])).
fof(f5913,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | sP3(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP2(X3,X2,'F_0')) ) | $spl44),
  inference(subsumption_resolution,[],[f5910,f5846])).
fof(f5846,plain,(
  ( ! [X4,X5] : (sP0(X4,'F_0',X5) | s(bool,'T_0') != s(bool,X4)) ) | $spl44),
  inference(subsumption_resolution,[],[f5841,f489])).
fof(f5841,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | p(s(bool,X5)) | sP0(X4,'F_0',X5)) ) | $spl44),
  inference(resolution,[],[f5685,f473])).
fof(f5685,plain,(
  ( ! [X6,X5] : (sP3(X6,'F_0',X5) | s(bool,'T_0') != s(bool,X5) | p(s(bool,X6))) ) | $spl44),
  inference(superposition,[],[f5678,f492])).
fof(f5678,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl44),
  inference(subsumption_resolution,[],[f5661,f1153])).
fof(f5661,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl44),
  inference(superposition,[],[f3273,f514])).
fof(f3273,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl44),
  inference(resolution,[],[f1153,f509])).
fof(f5910,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | sP3(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP2(X3,X2,'F_0') | ~sP0(X2,'F_0',X3)) ) | $spl44),
  inference(resolution,[],[f5847,f477])).
fof(f5847,plain,(
  ( ! [X6,X7] : (sP1('F_0',X6,X7) | s(bool,'T_0') != s(bool,X6)) ) | $spl44),
  inference(subsumption_resolution,[],[f5842,f485])).
fof(f5842,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,X6) | p(s(bool,X7)) | sP1('F_0',X6,X7)) ) | $spl44),
  inference(resolution,[],[f5685,f474])).
fof(f17845,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23))) ) | $spl388),
  inference(cnf_transformation,[],[f17845_D])).
fof(f17845_D,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f17807,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f823,f736])).
fof(f823,plain,(
  ( ! [X146,X147] : (sP10(X146,X147,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X147))) )),
  inference(resolution,[],[f455,f596])).
fof(f17648,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23))) ) | $spl386),
  inference(cnf_transformation,[],[f17648_D])).
fof(f17648_D,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f17610,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f822,f736])).
fof(f822,plain,(
  ( ! [X144,X145] : (sP10(X144,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X145) | ~p(s(bool,X145))) )),
  inference(resolution,[],[f455,f596])).
fof(f17485,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl44 | $spl76)),
  inference(resolution,[],[f14646,f6001])).
fof(f16407,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl372),
  inference(cnf_transformation,[],[f16407_D])).
fof(f16407_D,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f17314,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14417,f736])).
fof(f14417,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl24),
  inference(resolution,[],[f3634,f610])).
fof(f16375,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl370),
  inference(cnf_transformation,[],[f16375_D])).
fof(f16375_D,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f17283,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14410,f736])).
fof(f14410,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl24),
  inference(resolution,[],[f3634,f601])).
fof(f16343,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl368),
  inference(cnf_transformation,[],[f16343_D])).
fof(f16343_D,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f17252,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14394,f736])).
fof(f14394,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f579])).
fof(f16253,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl364),
  inference(cnf_transformation,[],[f16253_D])).
fof(f16253_D,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f17219,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14378,f736])).
fof(f14378,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X97)) ) | $spl24),
  inference(resolution,[],[f3634,f563])).
fof(f17200,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) | $spl382),
  inference(cnf_transformation,[],[f17200_D])).
fof(f17200_D,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f17156,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f807,f736])).
fof(f807,plain,(
  ( ! [X114,X115] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X114,X115) | p(s(bool,X114))) )),
  inference(resolution,[],[f455,f573])).
fof(f16219,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl362),
  inference(cnf_transformation,[],[f16219_D])).
fof(f16219_D,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f17127,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14377,f736])).
fof(f14377,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f562])).
fof(f16185,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl360),
  inference(cnf_transformation,[],[f16185_D])).
fof(f16185_D,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f17094,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14364,f736])).
fof(f14364,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X69)) ) | $spl24),
  inference(resolution,[],[f3634,f546])).
fof(f16151,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl358),
  inference(cnf_transformation,[],[f16151_D])).
fof(f16151_D,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f17057,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14348,f736])).
fof(f17043,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl44)),
  inference(resolution,[],[f14348,f6001])).
fof(f16112,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl354),
  inference(cnf_transformation,[],[f16112_D])).
fof(f16112_D,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f17022,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14347,f736])).
fof(f16001,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl350),
  inference(cnf_transformation,[],[f16001_D])).
fof(f16001_D,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f16989,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14346,f736])).
fof(f14346,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f489])).
fof(f16969,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl378),
  inference(cnf_transformation,[],[f16969_D])).
fof(f16969_D,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f16925,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f806,f736])).
fof(f806,plain,(
  ( ! [X112,X113] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X113,X112) | p(s(bool,X112))) )),
  inference(resolution,[],[f455,f572])).
fof(f15965,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl348),
  inference(cnf_transformation,[],[f15965_D])).
fof(f15965_D,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f16896,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14345,f736])).
fof(f14345,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f485])).
fof(f15932,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl346),
  inference(cnf_transformation,[],[f15932_D])).
fof(f15932_D,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f16864,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14342,f736])).
fof(f15842,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl342),
  inference(cnf_transformation,[],[f15842_D])).
fof(f15842_D,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f16833,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14115,f736])).
fof(f14115,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl44),
  inference(resolution,[],[f3248,f610])).
fof(f15810,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl340),
  inference(cnf_transformation,[],[f15810_D])).
fof(f15810_D,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f16802,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14108,f736])).
fof(f14108,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl44),
  inference(resolution,[],[f3248,f601])).
fof(f15778,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl338),
  inference(cnf_transformation,[],[f15778_D])).
fof(f15778_D,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f16771,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14092,f736])).
fof(f14092,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f579])).
fof(f15745,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl336),
  inference(cnf_transformation,[],[f15745_D])).
fof(f15745_D,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f16738,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14076,f736])).
fof(f14076,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X97)) ) | $spl44),
  inference(resolution,[],[f3248,f563])).
fof(f15711,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl334),
  inference(cnf_transformation,[],[f15711_D])).
fof(f15711_D,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f16705,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14075,f736])).
fof(f14075,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f562])).
fof(f15606,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl330),
  inference(cnf_transformation,[],[f15606_D])).
fof(f15606_D,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f16672,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14062,f736])).
fof(f14062,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X69)) ) | $spl44),
  inference(resolution,[],[f3248,f546])).
fof(f15572,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) | $spl328),
  inference(cnf_transformation,[],[f15572_D])).
fof(f15572_D,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23)) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f16635,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14046,f736])).
fof(f14046,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl44),
  inference(resolution,[],[f3248,f491])).
fof(f16621,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f14046,f6001])).
fof(f15533,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) | $spl324),
  inference(cnf_transformation,[],[f15533_D])).
fof(f15533_D,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23)) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f16600,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14045,f736])).
fof(f14045,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl44),
  inference(resolution,[],[f3248,f490])).
fof(f15499,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl322),
  inference(cnf_transformation,[],[f15499_D])).
fof(f15499_D,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f16567,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14044,f736])).
fof(f14044,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f489])).
fof(f15463,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl320),
  inference(cnf_transformation,[],[f15463_D])).
fof(f15463_D,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f16533,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14043,f736])).
fof(f14043,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f485])).
fof(f15359,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl316),
  inference(cnf_transformation,[],[f15359_D])).
fof(f15359_D,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f16501,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14040,f736])).
fof(f16483,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) | $spl374),
  inference(cnf_transformation,[],[f16483_D])).
fof(f16483_D,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f16428,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f802,f736])).
fof(f802,plain,(
  ( ! [X105,X104] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X104,X105) | ~p(s(bool,X104))) )),
  inference(resolution,[],[f455,f567])).
fof(f16392,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13880,f736])).
fof(f13880,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl44),
  inference(resolution,[],[f3247,f610])).
fof(f16360,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13873,f736])).
fof(f13873,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl44),
  inference(resolution,[],[f3247,f601])).
fof(f16328,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13857,f736])).
fof(f13857,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f579])).
fof(f16309,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) | $spl366),
  inference(cnf_transformation,[],[f16309_D])).
fof(f16309_D,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f16271,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f801,f736])).
fof(f801,plain,(
  ( ! [X103,X102] : (sP7(X102,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X103) | ~p(s(bool,X102))) )),
  inference(resolution,[],[f455,f567])).
fof(f16237,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13841,f736])).
fof(f13841,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X97)) ) | $spl44),
  inference(resolution,[],[f3247,f563])).
fof(f16203,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13840,f736])).
fof(f13840,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f562])).
fof(f16169,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13827,f736])).
fof(f13827,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X69)) ) | $spl44),
  inference(resolution,[],[f3247,f546])).
fof(f16131,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13811,f736])).
fof(f13811,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl44),
  inference(resolution,[],[f3247,f491])).
fof(f16117,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f13811,f6001])).
fof(f16095,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13810,f736])).
fof(f13810,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl44),
  inference(resolution,[],[f3247,f490])).
fof(f16077,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) | $spl352),
  inference(cnf_transformation,[],[f16077_D])).
fof(f16077_D,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23))) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f16022,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f800,f736])).
fof(f800,plain,(
  ( ! [X101,X100] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X100,X101) | ~p(s(bool,X101))) )),
  inference(resolution,[],[f455,f566])).
fof(f15984,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13809,f736])).
fof(f13809,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f489])).
fof(f15949,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13808,f736])).
fof(f13808,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f485])).
fof(f15916,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13805,f736])).
fof(f15898,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) | $spl344),
  inference(cnf_transformation,[],[f15898_D])).
fof(f15898_D,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f15860,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f799,f736])).
fof(f799,plain,(
  ( ! [X99,X98] : (sP7(X98,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X98))) )),
  inference(resolution,[],[f455,f566])).
fof(f15827,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13645,f736])).
fof(f13645,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl80),
  inference(resolution,[],[f2379,f610])).
fof(f15795,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13638,f736])).
fof(f13638,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl80),
  inference(resolution,[],[f2379,f601])).
fof(f15763,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13622,f736])).
fof(f13622,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f579])).
fof(f15729,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13606,f736])).
fof(f13606,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X97)) ) | $spl80),
  inference(resolution,[],[f2379,f563])).
fof(f15695,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13605,f736])).
fof(f13605,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f562])).
fof(f15676,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl332),
  inference(cnf_transformation,[],[f15676_D])).
fof(f15676_D,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f15629,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f793,f736])).
fof(f793,plain,(
  ( ! [X87,X86] : (~sP7(X86,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X87) | p(s(bool,X86))) )),
  inference(resolution,[],[f455,f555])).
fof(f15590,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13592,f736])).
fof(f13592,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X69)) ) | $spl80),
  inference(resolution,[],[f2379,f546])).
fof(f15552,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13576,f736])).
fof(f15538,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl44 | $spl80)),
  inference(resolution,[],[f13576,f6001])).
fof(f15516,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13575,f736])).
fof(f15482,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13574,f736])).
fof(f13574,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f489])).
fof(f15447,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13573,f736])).
fof(f13573,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f485])).
fof(f15429,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) | $spl318),
  inference(cnf_transformation,[],[f15429_D])).
fof(f15429_D,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f15382,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f792,f736])).
fof(f792,plain,(
  ( ! [X85,X84] : (~sP7(X84,X85,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X84))) )),
  inference(resolution,[],[f455,f554])).
fof(f15343,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13570,f736])).
fof(f15207,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) | $spl314),
  inference(cnf_transformation,[],[f15207_D])).
fof(f15207_D,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22))) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f15156,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f788,f736])).
fof(f788,plain,(
  ( ! [X76,X77] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X76,X77) | ~p(s(bool,X76))) )),
  inference(resolution,[],[f455,f550])).
fof(f15038,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4288,f737])).
fof(f14935,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl76),
  inference(resolution,[],[f4288,f472])).
fof(f14932,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4288,f471])).
fof(f14931,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4288,f470])).
fof(f14930,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl76),
  inference(resolution,[],[f4288,f468])).
fof(f14928,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4288,f466])).
fof(f14889,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) | $spl310),
  inference(cnf_transformation,[],[f14889_D])).
fof(f14889_D,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f14851,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f787,f736])).
fof(f787,plain,(
  ( ! [X74,X75] : (sP5(X74,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X75) | ~p(s(bool,X74))) )),
  inference(resolution,[],[f455,f550])).
fof(f14737,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4287,f737])).
fof(f14634,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl76),
  inference(resolution,[],[f4287,f472])).
fof(f14631,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4287,f471])).
fof(f14630,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4287,f470])).
fof(f14629,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl76),
  inference(resolution,[],[f4287,f468])).
fof(f14627,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f4287,f466])).
fof(f14624,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) | $spl306),
  inference(cnf_transformation,[],[f14624_D])).
fof(f14624_D,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f14578,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f786,f736])).
fof(f786,plain,(
  ( ! [X72,X73] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X72,X73) | p(s(bool,X73))) )),
  inference(resolution,[],[f455,f549])).
fof(f14025,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16)) ) | $spl298),
  inference(cnf_transformation,[],[f14025_D])).
fof(f14025_D,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16)) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f14545,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14429,f736])).
fof(f14429,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X189)) ) | $spl24),
  inference(resolution,[],[f3634,f632])).
fof(f13993,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl296),
  inference(cnf_transformation,[],[f13993_D])).
fof(f13993_D,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f14514,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f14428,f736])).
fof(f14428,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f631])).
fof(f3572,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl126),
  inference(cnf_transformation,[],[f3572_D])).
fof(f3572_D,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f14456,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl24),
  inference(superposition,[],[f3634,f736])).
fof(f14439,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f737])).
fof(f14336,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl24),
  inference(resolution,[],[f3634,f472])).
fof(f14333,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f471])).
fof(f14332,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f470])).
fof(f14331,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl24),
  inference(resolution,[],[f3634,f468])).
fof(f14329,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f3634,f466])).
fof(f14326,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) | $spl302),
  inference(cnf_transformation,[],[f14326_D])).
fof(f14326_D,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22))) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f14279,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f777,f736])).
fof(f777,plain,(
  ( ! [X54,X55] : (~sP5(X54,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X55) | p(s(bool,X54))) )),
  inference(resolution,[],[f455,f538])).
fof(f13790,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16)) ) | $spl292),
  inference(cnf_transformation,[],[f13790_D])).
fof(f13790_D,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16)) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f14243,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14127,f736])).
fof(f14127,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X189)) ) | $spl44),
  inference(resolution,[],[f3248,f632])).
fof(f13758,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl290),
  inference(cnf_transformation,[],[f13758_D])).
fof(f13758_D,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f14212,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f14126,f736])).
fof(f14126,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f631])).
fof(f3574,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl128),
  inference(cnf_transformation,[],[f3574_D])).
fof(f3574_D,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f14154,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl44),
  inference(superposition,[],[f3248,f736])).
fof(f14137,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f737])).
fof(f14034,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl44),
  inference(resolution,[],[f3248,f472])).
fof(f14031,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f471])).
fof(f14030,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f470])).
fof(f14029,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl44),
  inference(resolution,[],[f3248,f468])).
fof(f14027,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3248,f466])).
fof(f14008,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13892,f736])).
fof(f13892,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X189)) ) | $spl44),
  inference(resolution,[],[f3247,f632])).
fof(f13976,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f13891,f736])).
fof(f13891,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f631])).
fof(f13919,plain,(
  p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl44),
  inference(superposition,[],[f3247,f736])).
fof(f13902,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f737])).
fof(f13799,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl44),
  inference(resolution,[],[f3247,f472])).
fof(f13796,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f471])).
fof(f13795,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f470])).
fof(f13794,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl44),
  inference(resolution,[],[f3247,f468])).
fof(f13792,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f3247,f466])).
fof(f13773,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13657,f736])).
fof(f13657,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X189)) ) | $spl80),
  inference(resolution,[],[f2379,f632])).
fof(f13741,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl80),
  inference(superposition,[],[f13656,f736])).
fof(f13656,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f631])).
fof(f13684,plain,(
  p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl80),
  inference(superposition,[],[f2379,f736])).
fof(f13667,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f737])).
fof(f13564,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl80),
  inference(resolution,[],[f2379,f472])).
fof(f13561,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f471])).
fof(f13560,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f470])).
fof(f13559,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl80),
  inference(resolution,[],[f2379,f468])).
fof(f13557,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl80),
  inference(resolution,[],[f2379,f466])).
fof(f13548,plain,(
  $false | ($spl24 | $spl81)),
  inference(subsumption_resolution,[],[f13547,f707])).
fof(f13547,plain,(
  ~p(s(bool,'T_0')) | ($spl24 | $spl81)),
  inference(forward_demodulation,[],[f13384,f3662])).
fof(f13384,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl81),
  inference(resolution,[],[f2380,f709])).
fof(f13382,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) | $spl286),
  inference(cnf_transformation,[],[f13382_D])).
fof(f13382_D,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f13338,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1054,f736])).
fof(f13320,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) | $spl284),
  inference(cnf_transformation,[],[f13320_D])).
fof(f13320_D,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f13276,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1053,f736])).
fof(f13258,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16))) ) | $spl282),
  inference(cnf_transformation,[],[f13258_D])).
fof(f13258_D,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f13206,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1052,f736])).
fof(f13190,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16))) ) | $spl280),
  inference(cnf_transformation,[],[f13190_D])).
fof(f13190_D,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f13138,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1051,f736])).
fof(f12965,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl278),
  inference(cnf_transformation,[],[f12965_D])).
fof(f12965_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f12581,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f986,f736])).
fof(f12568,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl277),
  inference(cnf_transformation,[],[f12568_D])).
fof(f12568_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl277),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl277])])).
fof(f12508,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f984,f736])).
fof(f12480,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f12407])).
fof(f12407,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl4),
  inference(superposition,[],[f930,f775])).
fof(f12479,plain,(
  $false | $spl4),
  inference(equality_resolution,[],[f930])).
fof(f12327,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) | $spl274),
  inference(cnf_transformation,[],[f12327_D])).
fof(f12327_D,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f12284,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f843,f736])).
fof(f843,plain,(
  ( ! [X183] : (sP12(X183,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | p(s(bool,X183))) )),
  inference(resolution,[],[f455,f619])).
fof(f12267,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) | $spl272),
  inference(cnf_transformation,[],[f12267_D])).
fof(f12267_D,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f12224,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f842,f736])).
fof(f842,plain,(
  ( ! [X182] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X182) | p(s(bool,X182))) )),
  inference(resolution,[],[f455,f616])).
fof(f12143,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16))) ) | $spl270),
  inference(cnf_transformation,[],[f12143_D])).
fof(f12143_D,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f12094,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f841,f736])).
fof(f841,plain,(
  ( ! [X181] : (~sP12(X181,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | ~p(s(bool,X181))) )),
  inference(resolution,[],[f455,f615])).
fof(f11944,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16))) ) | $spl268),
  inference(cnf_transformation,[],[f11944_D])).
fof(f11944_D,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f11895,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f840,f736])).
fof(f840,plain,(
  ( ! [X180] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X180) | ~p(s(bool,X180))) )),
  inference(resolution,[],[f455,f615])).
fof(f11326,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl266),
  inference(cnf_transformation,[],[f11326_D])).
fof(f11326_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f10942,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f775,f736])).
fof(f10080,plain,(
  ( ! [X0,X1] : (sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) | $spl262),
  inference(cnf_transformation,[],[f10080_D])).
fof(f10080_D,plain,(
  ( ! [X0,X1] : (sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f10917,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3723,f736])).
fof(f3723,plain,(
  ( ! [X173,X172] : (sP11(X172,X173,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X172))) ) | $spl24),
  inference(resolution,[],[f947,f609])).
fof(f10052,plain,(
  ( ! [X0,X1] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1))) ) | $spl260),
  inference(cnf_transformation,[],[f10052_D])).
fof(f10052_D,plain,(
  ( ! [X0,X1] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f10890,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3722,f736])).
fof(f3722,plain,(
  ( ! [X171,X170] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X170,X171) | ~p(s(bool,X171))) ) | $spl24),
  inference(resolution,[],[f947,f609])).
fof(f10875,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl265),
  inference(cnf_transformation,[],[f10875_D])).
fof(f10875_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl265),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl265])])).
fof(f10815,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f773,f736])).
fof(f9833,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X1))) ) | $spl256),
  inference(cnf_transformation,[],[f9833_D])).
fof(f9833_D,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X1))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f10768,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3710,f736])).
fof(f3710,plain,(
  ( ! [X146,X147] : (sP10(X146,X147,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X147))) ) | $spl24),
  inference(resolution,[],[f947,f596])).
fof(f9805,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X1))) ) | $spl254),
  inference(cnf_transformation,[],[f9805_D])).
fof(f9805_D,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X1))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f10741,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3709,f736])).
fof(f3709,plain,(
  ( ! [X144,X145] : (sP10(X144,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X145) | ~p(s(bool,X145))) ) | $spl24),
  inference(resolution,[],[f947,f596])).
fof(f9777,plain,(
  ( ! [X0,X1] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) | $spl252),
  inference(cnf_transformation,[],[f9777_D])).
fof(f9777_D,plain,(
  ( ! [X0,X1] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0))) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f10684,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3694,f736])).
fof(f3694,plain,(
  ( ! [X114,X115] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X114,X115) | p(s(bool,X114))) ) | $spl24),
  inference(resolution,[],[f947,f573])).
fof(f9740,plain,(
  ( ! [X0,X1] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) | $spl250),
  inference(cnf_transformation,[],[f9740_D])).
fof(f9740_D,plain,(
  ( ! [X0,X1] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f10648,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3693,f736])).
fof(f3693,plain,(
  ( ! [X112,X113] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X113,X112) | p(s(bool,X112))) ) | $spl24),
  inference(resolution,[],[f947,f572])).
fof(f9703,plain,(
  ( ! [X0,X1] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) | $spl248),
  inference(cnf_transformation,[],[f9703_D])).
fof(f9703_D,plain,(
  ( ! [X0,X1] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f10609,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3689,f736])).
fof(f3689,plain,(
  ( ! [X105,X104] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X104,X105) | ~p(s(bool,X104))) ) | $spl24),
  inference(resolution,[],[f947,f567])).
fof(f9666,plain,(
  ( ! [X0,X1] : (sP7(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0))) ) | $spl246),
  inference(cnf_transformation,[],[f9666_D])).
fof(f9666_D,plain,(
  ( ! [X0,X1] : (sP7(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f10552,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3688,f736])).
fof(f3688,plain,(
  ( ! [X103,X102] : (sP7(X102,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X103) | ~p(s(bool,X102))) ) | $spl24),
  inference(resolution,[],[f947,f567])).
fof(f9634,plain,(
  ( ! [X0,X1] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1))) ) | $spl244),
  inference(cnf_transformation,[],[f9634_D])).
fof(f9634_D,plain,(
  ( ! [X0,X1] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f10511,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3687,f736])).
fof(f3687,plain,(
  ( ! [X101,X100] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X100,X101) | ~p(s(bool,X101))) ) | $spl24),
  inference(resolution,[],[f947,f566])).
fof(f9545,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) | $spl240),
  inference(cnf_transformation,[],[f9545_D])).
fof(f9545_D,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f10478,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3686,f736])).
fof(f3686,plain,(
  ( ! [X99,X98] : (sP7(X98,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X98))) ) | $spl24),
  inference(resolution,[],[f947,f566])).
fof(f9513,plain,(
  ( ! [X0,X1] : (~sP7(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) | $spl238),
  inference(cnf_transformation,[],[f9513_D])).
fof(f9513_D,plain,(
  ( ! [X0,X1] : (~sP7(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f10441,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3680,f736])).
fof(f3680,plain,(
  ( ! [X87,X86] : (~sP7(X86,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X87) | p(s(bool,X86))) ) | $spl24),
  inference(resolution,[],[f947,f555])).
fof(f9479,plain,(
  ( ! [X0,X1] : (~sP7(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl236),
  inference(cnf_transformation,[],[f9479_D])).
fof(f9479_D,plain,(
  ( ! [X0,X1] : (~sP7(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f10403,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3679,f736])).
fof(f3679,plain,(
  ( ! [X85,X84] : (~sP7(X84,X85,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X84))) ) | $spl24),
  inference(resolution,[],[f947,f554])).
fof(f9445,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) | $spl234),
  inference(cnf_transformation,[],[f9445_D])).
fof(f9445_D,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f10339,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3675,f736])).
fof(f3675,plain,(
  ( ! [X76,X77] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X76,X77) | ~p(s(bool,X76))) ) | $spl24),
  inference(resolution,[],[f947,f550])).
fof(f937,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl15),
  inference(cnf_transformation,[],[f937_D])).
fof(f937_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f10334,plain,(
  ( ! [X2,X3] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3675,f525])).
fof(f10333,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3675,f523])).
fof(f9358,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0))) ) | $spl230),
  inference(cnf_transformation,[],[f9358_D])).
fof(f9358_D,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f10308,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3674,f736])).
fof(f3674,plain,(
  ( ! [X74,X75] : (sP5(X74,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X75) | ~p(s(bool,X74))) ) | $spl24),
  inference(resolution,[],[f947,f550])).
fof(f10303,plain,(
  ( ! [X2,X3] : (sP5(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3674,f525])).
fof(f10302,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3674,f523])).
fof(f9327,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) | $spl228),
  inference(cnf_transformation,[],[f9327_D])).
fof(f9327_D,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f10202,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3673,f736])).
fof(f3673,plain,(
  ( ! [X72,X73] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X72,X73) | p(s(bool,X73))) ) | $spl24),
  inference(resolution,[],[f947,f549])).
fof(f10197,plain,(
  ( ! [X2,X3] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3673,f525])).
fof(f10196,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3673,f523])).
fof(f9291,plain,(
  ( ! [X0,X1] : (~sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) | $spl226),
  inference(cnf_transformation,[],[f9291_D])).
fof(f9291_D,plain,(
  ( ! [X0,X1] : (~sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f10166,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3664,f736])).
fof(f3664,plain,(
  ( ! [X54,X55] : (~sP5(X54,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X55) | p(s(bool,X54))) ) | $spl24),
  inference(resolution,[],[f947,f538])).
fof(f10161,plain,(
  ( ! [X2,X3] : (~sP5(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3664,f525])).
fof(f10160,plain,(
  ( ! [X0,X1] : (~sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3664,f523])).
fof(f10063,plain,(
  ( ! [X23,X22] : (sP11(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3336,f736])).
fof(f3336,plain,(
  ( ! [X173,X172] : (sP11(X172,X173,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X172))) ) | $spl44),
  inference(resolution,[],[f1153,f609])).
fof(f1146,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl38),
  inference(cnf_transformation,[],[f1146_D])).
fof(f1146_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f10060,plain,(
  ( ! [X10,X8,X11,X9] : (sP11(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3336,f531])).
fof(f10059,plain,(
  ( ! [X6,X4,X7,X5] : (sP11(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3336,f529])).
fof(f1143,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl35),
  inference(cnf_transformation,[],[f1143_D])).
fof(f1143_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f10058,plain,(
  ( ! [X2,X3] : (sP11(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3336,f525])).
fof(f10057,plain,(
  ( ! [X0,X1] : (sP11(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3336,f523])).
fof(f10035,plain,(
  ( ! [X23,X22] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3335,f736])).
fof(f3335,plain,(
  ( ! [X171,X170] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X170,X171) | ~p(s(bool,X171))) ) | $spl44),
  inference(resolution,[],[f1153,f609])).
fof(f10032,plain,(
  ( ! [X10,X8,X11,X9] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3335,f531])).
fof(f10031,plain,(
  ( ! [X6,X4,X7,X5] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3335,f529])).
fof(f10030,plain,(
  ( ! [X2,X3] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3335,f525])).
fof(f10029,plain,(
  ( ! [X0,X1] : (sP11('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3335,f523])).
fof(f10020,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl258),
  inference(cnf_transformation,[],[f10020_D])).
fof(f10020_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f9946,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl36),
  inference(resolution,[],[f1145,f737])).
fof(f9843,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X22) != s(bool,X23)) ) | $spl36),
  inference(resolution,[],[f1145,f472])).
fof(f9840,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl36),
  inference(resolution,[],[f1145,f471])).
fof(f9839,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl36),
  inference(resolution,[],[f1145,f470])).
fof(f9838,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X7) != s(bool,X8)) ) | $spl36),
  inference(resolution,[],[f1145,f468])).
fof(f9836,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl36),
  inference(resolution,[],[f1145,f466])).
fof(f9816,plain,(
  ( ! [X23,X22] : (sP10(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3323,f736])).
fof(f3323,plain,(
  ( ! [X146,X147] : (sP10(X146,X147,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X147))) ) | $spl44),
  inference(resolution,[],[f1153,f596])).
fof(f9813,plain,(
  ( ! [X10,X8,X11,X9] : (sP10(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3323,f531])).
fof(f9812,plain,(
  ( ! [X6,X4,X7,X5] : (sP10(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3323,f529])).
fof(f9811,plain,(
  ( ! [X2,X3] : (sP10(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3323,f525])).
fof(f9810,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3323,f523])).
fof(f9788,plain,(
  ( ! [X23,X22] : (sP10(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3322,f736])).
fof(f3322,plain,(
  ( ! [X144,X145] : (sP10(X144,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X145) | ~p(s(bool,X145))) ) | $spl44),
  inference(resolution,[],[f1153,f596])).
fof(f9785,plain,(
  ( ! [X10,X8,X11,X9] : (sP10(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | ~p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3322,f531])).
fof(f9784,plain,(
  ( ! [X6,X4,X7,X5] : (sP10(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3322,f529])).
fof(f9783,plain,(
  ( ! [X2,X3] : (sP10(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | ~p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3322,f525])).
fof(f9782,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3322,f523])).
fof(f9754,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3307,f736])).
fof(f3307,plain,(
  ( ! [X114,X115] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X114,X115) | p(s(bool,X114))) ) | $spl44),
  inference(resolution,[],[f1153,f573])).
fof(f9751,plain,(
  ( ! [X10,X8,X11,X9] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3307,f531])).
fof(f9750,plain,(
  ( ! [X6,X4,X7,X5] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3307,f529])).
fof(f9749,plain,(
  ( ! [X2,X3] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3307,f525])).
fof(f9748,plain,(
  ( ! [X0,X1] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3307,f523])).
fof(f9717,plain,(
  ( ! [X23,X22] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3306,f736])).
fof(f3306,plain,(
  ( ! [X112,X113] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X113,X112) | p(s(bool,X112))) ) | $spl44),
  inference(resolution,[],[f1153,f572])).
fof(f9714,plain,(
  ( ! [X10,X8,X11,X9] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3306,f531])).
fof(f9713,plain,(
  ( ! [X6,X4,X7,X5] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3306,f529])).
fof(f9712,plain,(
  ( ! [X2,X3] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3306,f525])).
fof(f9711,plain,(
  ( ! [X0,X1] : (~sP9('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3306,f523])).
fof(f9681,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3302,f736])).
fof(f3302,plain,(
  ( ! [X105,X104] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X104,X105) | ~p(s(bool,X104))) ) | $spl44),
  inference(resolution,[],[f1153,f567])).
fof(f9678,plain,(
  ( ! [X10,X8,X11,X9] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3302,f531])).
fof(f9677,plain,(
  ( ! [X6,X4,X7,X5] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3302,f529])).
fof(f9676,plain,(
  ( ! [X2,X3] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3302,f525])).
fof(f9675,plain,(
  ( ! [X0,X1] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3302,f523])).
fof(f9649,plain,(
  ( ! [X23,X22] : (sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3301,f736])).
fof(f3301,plain,(
  ( ! [X103,X102] : (sP7(X102,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X103) | ~p(s(bool,X102))) ) | $spl44),
  inference(resolution,[],[f1153,f567])).
fof(f9646,plain,(
  ( ! [X10,X8,X11,X9] : (sP7(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3301,f531])).
fof(f9645,plain,(
  ( ! [X6,X4,X7,X5] : (sP7(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3301,f529])).
fof(f9644,plain,(
  ( ! [X2,X3] : (sP7(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3301,f525])).
fof(f9643,plain,(
  ( ! [X0,X1] : (sP7(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3301,f523])).
fof(f9612,plain,(
  ( ! [X23,X22] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3300,f736])).
fof(f3300,plain,(
  ( ! [X101,X100] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X100,X101) | ~p(s(bool,X101))) ) | $spl44),
  inference(resolution,[],[f1153,f566])).
fof(f9609,plain,(
  ( ! [X10,X8,X11,X9] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3300,f531])).
fof(f9608,plain,(
  ( ! [X6,X4,X7,X5] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3300,f529])).
fof(f9607,plain,(
  ( ! [X2,X3] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3300,f525])).
fof(f9606,plain,(
  ( ! [X0,X1] : (sP7('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3300,f523])).
fof(f9592,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl242),
  inference(cnf_transformation,[],[f9592_D])).
fof(f9592_D,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f9556,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1048,f736])).
fof(f9553,plain,(
  ( ! [X10,X8,X11,X9] : (sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1048,f531])).
fof(f9552,plain,(
  ( ! [X6,X4,X7,X5] : (sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1048,f529])).
fof(f9551,plain,(
  ( ! [X2,X3] : (sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1048,f525])).
fof(f9550,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1048,f523])).
fof(f9528,plain,(
  ( ! [X23,X22] : (sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3299,f736])).
fof(f3299,plain,(
  ( ! [X99,X98] : (sP7(X98,X99,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X98))) ) | $spl44),
  inference(resolution,[],[f1153,f566])).
fof(f9525,plain,(
  ( ! [X10,X8,X11,X9] : (sP7(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3299,f531])).
fof(f9524,plain,(
  ( ! [X6,X4,X7,X5] : (sP7(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3299,f529])).
fof(f9523,plain,(
  ( ! [X2,X3] : (sP7(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3299,f525])).
fof(f9522,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3299,f523])).
fof(f9493,plain,(
  ( ! [X23,X22] : (~sP7(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3293,f736])).
fof(f3293,plain,(
  ( ! [X87,X86] : (~sP7(X86,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X87) | p(s(bool,X86))) ) | $spl44),
  inference(resolution,[],[f1153,f555])).
fof(f9490,plain,(
  ( ! [X10,X8,X11,X9] : (~sP7(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3293,f531])).
fof(f9489,plain,(
  ( ! [X6,X4,X7,X5] : (~sP7(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3293,f529])).
fof(f9488,plain,(
  ( ! [X2,X3] : (~sP7(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3293,f525])).
fof(f9487,plain,(
  ( ! [X0,X1] : (~sP7(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3293,f523])).
fof(f9459,plain,(
  ( ! [X23,X22] : (~sP7(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3292,f736])).
fof(f3292,plain,(
  ( ! [X85,X84] : (~sP7(X84,X85,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X84))) ) | $spl44),
  inference(resolution,[],[f1153,f554])).
fof(f9456,plain,(
  ( ! [X10,X8,X11,X9] : (~sP7(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3292,f531])).
fof(f9455,plain,(
  ( ! [X6,X4,X7,X5] : (~sP7(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3292,f529])).
fof(f9454,plain,(
  ( ! [X2,X3] : (~sP7(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3292,f525])).
fof(f9453,plain,(
  ( ! [X0,X1] : (~sP7(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3292,f523])).
fof(f9424,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3288,f736])).
fof(f3288,plain,(
  ( ! [X76,X77] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X76,X77) | ~p(s(bool,X76))) ) | $spl44),
  inference(resolution,[],[f1153,f550])).
fof(f9421,plain,(
  ( ! [X10,X8,X11,X9] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3288,f531])).
fof(f9420,plain,(
  ( ! [X6,X4,X7,X5] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3288,f529])).
fof(f9419,plain,(
  ( ! [X2,X3] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3288,f525])).
fof(f9418,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3288,f523])).
fof(f9405,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl232),
  inference(cnf_transformation,[],[f9405_D])).
fof(f9405_D,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f9369,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1041,f736])).
fof(f9366,plain,(
  ( ! [X10,X8,X11,X9] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1041,f531])).
fof(f9365,plain,(
  ( ! [X6,X4,X7,X5] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1041,f529])).
fof(f9364,plain,(
  ( ! [X2,X3] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1041,f525])).
fof(f9363,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1041,f523])).
fof(f9341,plain,(
  ( ! [X23,X22] : (sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | ~p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3287,f736])).
fof(f3287,plain,(
  ( ! [X74,X75] : (sP5(X74,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X75) | ~p(s(bool,X74))) ) | $spl44),
  inference(resolution,[],[f1153,f550])).
fof(f9338,plain,(
  ( ! [X10,X8,X11,X9] : (sP5(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | ~p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3287,f531])).
fof(f9337,plain,(
  ( ! [X6,X4,X7,X5] : (sP5(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3287,f529])).
fof(f9336,plain,(
  ( ! [X2,X3] : (sP5(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | ~p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3287,f525])).
fof(f9335,plain,(
  ( ! [X0,X1] : (sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3287,f523])).
fof(f9305,plain,(
  ( ! [X23,X22] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | p(s(bool,X23)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3286,f736])).
fof(f3286,plain,(
  ( ! [X72,X73] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X72,X73) | p(s(bool,X73))) ) | $spl44),
  inference(resolution,[],[f1153,f549])).
fof(f9302,plain,(
  ( ! [X10,X8,X11,X9] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | p(s(bool,X9)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3286,f531])).
fof(f9301,plain,(
  ( ! [X6,X4,X7,X5] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3286,f529])).
fof(f9300,plain,(
  ( ! [X2,X3] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | p(s(bool,X3)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3286,f525])).
fof(f9299,plain,(
  ( ! [X0,X1] : (sP5('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3286,f523])).
fof(f9271,plain,(
  ( ! [X23,X22] : (~sP5(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | p(s(bool,X22)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3277,f736])).
fof(f3277,plain,(
  ( ! [X54,X55] : (~sP5(X54,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X55) | p(s(bool,X54))) ) | $spl44),
  inference(resolution,[],[f1153,f538])).
fof(f9268,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | p(s(bool,X8)) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3277,f531])).
fof(f9267,plain,(
  ( ! [X6,X4,X7,X5] : (~sP5(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X4)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3277,f529])).
fof(f9266,plain,(
  ( ! [X2,X3] : (~sP5(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | p(s(bool,X2)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3277,f525])).
fof(f9265,plain,(
  ( ! [X0,X1] : (~sP5(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3277,f523])).
fof(f9251,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl224),
  inference(cnf_transformation,[],[f9251_D])).
fof(f9251_D,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f9213,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1025,f736])).
fof(f9210,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1025,f531])).
fof(f9209,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1025,f529])).
fof(f9208,plain,(
  ( ! [X2,X3] : (sP8(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1025,f525])).
fof(f9207,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1025,f523])).
fof(f9196,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl222),
  inference(cnf_transformation,[],[f9196_D])).
fof(f9196_D,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f9159,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1009,f736])).
fof(f9156,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1009,f531])).
fof(f9155,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1009,f529])).
fof(f9154,plain,(
  ( ! [X2,X3] : (sP6(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1009,f525])).
fof(f9153,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1009,f523])).
fof(f9142,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl220),
  inference(cnf_transformation,[],[f9142_D])).
fof(f9142_D,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f9105,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1008,f736])).
fof(f9102,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1008,f531])).
fof(f9101,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1008,f529])).
fof(f9100,plain,(
  ( ! [X2,X3] : (sP6(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1008,f525])).
fof(f9099,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1008,f523])).
fof(f9088,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl218),
  inference(cnf_transformation,[],[f9088_D])).
fof(f9088_D,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f9051,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f995,f736])).
fof(f9048,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f995,f531])).
fof(f9047,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f995,f529])).
fof(f9046,plain,(
  ( ! [X2,X3] : (sP4(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f995,f525])).
fof(f9045,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f995,f523])).
fof(f9034,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl216),
  inference(cnf_transformation,[],[f9034_D])).
fof(f9034_D,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f8993,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f979,f736])).
fof(f8990,plain,(
  ( ! [X10,X8,X11,X9] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f979,f531])).
fof(f8989,plain,(
  ( ! [X6,X4,X7,X5] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f979,f529])).
fof(f8988,plain,(
  ( ! [X2,X3] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f979,f525])).
fof(f8987,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f979,f523])).
fof(f9033,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl215),
  inference(cnf_transformation,[],[f9033_D])).
fof(f9033_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl215),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl215])])).
fof(f8985,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl44),
  inference(resolution,[],[f979,f6001])).
fof(f8975,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl212),
  inference(cnf_transformation,[],[f8975_D])).
fof(f8975_D,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f8936,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f978,f736])).
fof(f8933,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f978,f531])).
fof(f8932,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f978,f529])).
fof(f8931,plain,(
  ( ! [X2,X3] : (sP0(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f978,f525])).
fof(f8930,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f978,f523])).
fof(f8919,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl210),
  inference(cnf_transformation,[],[f8919_D])).
fof(f8919_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f8880,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f977,f736])).
fof(f8877,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f977,f531])).
fof(f8876,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f977,f529])).
fof(f8875,plain,(
  ( ! [X2,X3] : (sP0(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f977,f525])).
fof(f8874,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f977,f523])).
fof(f8740,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl208),
  inference(cnf_transformation,[],[f8740_D])).
fof(f8740_D,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f8702,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f976,f736])).
fof(f8699,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f976,f531])).
fof(f8698,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f976,f529])).
fof(f8697,plain,(
  ( ! [X2,X3] : (sP1(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f976,f525])).
fof(f8696,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f976,f523])).
fof(f8061,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl206),
  inference(cnf_transformation,[],[f8061_D])).
fof(f8061_D,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f8023,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f973,f736])).
fof(f8020,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f973,f531])).
fof(f8019,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f973,f529])).
fof(f8018,plain,(
  ( ! [X2,X3] : (sP2(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f973,f525])).
fof(f8017,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f973,f523])).
fof(f6994,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) | $spl202),
  inference(cnf_transformation,[],[f6994_D])).
fof(f6994_D,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f7923,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3730,f736])).
fof(f3730,plain,(
  ( ! [X183] : (sP12(X183,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X183))) ) | $spl24),
  inference(resolution,[],[f947,f619])).
fof(f7918,plain,(
  ( ! [X1] : (sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3730,f525])).
fof(f7917,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3730,f523])).
fof(f6962,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0))) ) | $spl200),
  inference(cnf_transformation,[],[f6962_D])).
fof(f6962_D,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f7890,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3729,f736])).
fof(f3729,plain,(
  ( ! [X182] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X182) | p(s(bool,X182))) ) | $spl24),
  inference(resolution,[],[f947,f616])).
fof(f7885,plain,(
  ( ! [X1] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3729,f525])).
fof(f7884,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3729,f523])).
fof(f6930,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) | $spl198),
  inference(cnf_transformation,[],[f6930_D])).
fof(f6930_D,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f7855,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3728,f736])).
fof(f3728,plain,(
  ( ! [X181] : (~sP12(X181,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X181))) ) | $spl24),
  inference(resolution,[],[f947,f615])).
fof(f7850,plain,(
  ( ! [X1] : (~sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3728,f525])).
fof(f7849,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3728,f523])).
fof(f6900,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0))) ) | $spl196),
  inference(cnf_transformation,[],[f6900_D])).
fof(f6900_D,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f7770,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f3727,f736])).
fof(f3727,plain,(
  ( ! [X180] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X180) | ~p(s(bool,X180))) ) | $spl24),
  inference(resolution,[],[f947,f615])).
fof(f940,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl18),
  inference(cnf_transformation,[],[f940_D])).
fof(f940_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f7767,plain,(
  ( ! [X6,X7,X5] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3727,f531])).
fof(f7766,plain,(
  ( ! [X4,X2,X3] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3727,f529])).
fof(f7765,plain,(
  ( ! [X1] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3727,f525])).
fof(f7764,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3727,f523])).
fof(f6713,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl194),
  inference(cnf_transformation,[],[f6713_D])).
fof(f6713_D,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f7240,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl24),
  inference(superposition,[],[f3662,f736])).
fof(f7237,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3662,f531])).
fof(f7236,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3662,f529])).
fof(f7235,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f3662,f525])).
fof(f7234,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f3662,f523])).
fof(f5675,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl175),
  inference(cnf_transformation,[],[f5675_D])).
fof(f5675_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl175])])).
fof(f7192,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl24),
  inference(superposition,[],[f3660,f736])).
fof(f3660,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl24),
  inference(resolution,[],[f947,f509])).
fof(f7189,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3660,f531])).
fof(f7188,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f3660,f529])).
fof(f7187,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f3660,f525])).
fof(f7186,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f3660,f523])).
fof(f7181,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl204),
  inference(cnf_transformation,[],[f7181_D])).
fof(f7181_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f7107,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl16),
  inference(resolution,[],[f939,f737])).
fof(f7004,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X22) != s(bool,X23)) ) | $spl16),
  inference(resolution,[],[f939,f472])).
fof(f7001,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl16),
  inference(resolution,[],[f939,f471])).
fof(f7000,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl16),
  inference(resolution,[],[f939,f470])).
fof(f6999,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X7) != s(bool,X8)) ) | $spl16),
  inference(resolution,[],[f939,f468])).
fof(f6997,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl16),
  inference(resolution,[],[f939,f466])).
fof(f6975,plain,(
  ( ! [X16] : (sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3343,f736])).
fof(f3343,plain,(
  ( ! [X183] : (sP12(X183,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X183))) ) | $spl44),
  inference(resolution,[],[f1153,f619])).
fof(f6972,plain,(
  ( ! [X6,X7,X5] : (sP12(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3343,f531])).
fof(f6971,plain,(
  ( ! [X4,X2,X3] : (sP12(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3343,f529])).
fof(f6970,plain,(
  ( ! [X1] : (sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3343,f525])).
fof(f6969,plain,(
  ( ! [X0] : (sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3343,f523])).
fof(f6943,plain,(
  ( ! [X16] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3342,f736])).
fof(f3342,plain,(
  ( ! [X182] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X182) | p(s(bool,X182))) ) | $spl44),
  inference(resolution,[],[f1153,f616])).
fof(f6940,plain,(
  ( ! [X6,X7,X5] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3342,f531])).
fof(f6939,plain,(
  ( ! [X4,X2,X3] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3342,f529])).
fof(f6938,plain,(
  ( ! [X1] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3342,f525])).
fof(f6937,plain,(
  ( ! [X0] : (sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3342,f523])).
fof(f6911,plain,(
  ( ! [X16] : (~sP12(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3341,f736])).
fof(f3341,plain,(
  ( ! [X181] : (~sP12(X181,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X181))) ) | $spl44),
  inference(resolution,[],[f1153,f615])).
fof(f6908,plain,(
  ( ! [X6,X7,X5] : (~sP12(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3341,f531])).
fof(f6907,plain,(
  ( ! [X4,X2,X3] : (~sP12(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3341,f529])).
fof(f6906,plain,(
  ( ! [X1] : (~sP12(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3341,f525])).
fof(f6905,plain,(
  ( ! [X0] : (~sP12(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3341,f523])).
fof(f6881,plain,(
  ( ! [X16] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | ~p(s(bool,X16)) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f3340,f736])).
fof(f3340,plain,(
  ( ! [X180] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X180) | ~p(s(bool,X180))) ) | $spl44),
  inference(resolution,[],[f1153,f615])).
fof(f6878,plain,(
  ( ! [X6,X7,X5] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | ~p(s(bool,X5)) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3340,f531])).
fof(f6877,plain,(
  ( ! [X4,X2,X3] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | ~p(s(bool,X2)) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3340,f529])).
fof(f6876,plain,(
  ( ! [X1] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | ~p(s(bool,X1)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3340,f525])).
fof(f6875,plain,(
  ( ! [X0] : (~sP12('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | ~p(s(bool,X0)) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3340,f523])).
fof(f6350,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl44),
  inference(superposition,[],[f3275,f736])).
fof(f3275,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl44),
  inference(resolution,[],[f1153,f514])).
fof(f6347,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3275,f531])).
fof(f6346,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3275,f529])).
fof(f6345,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f3275,f525])).
fof(f6344,plain,(
  s(bool,'T_0') = s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f3275,f523])).
fof(f6336,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl192),
  inference(cnf_transformation,[],[f6336_D])).
fof(f6336_D,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f6300,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f837,f736])).
fof(f837,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X175)) )),
  inference(resolution,[],[f455,f610])).
fof(f6297,plain,(
  ( ! [X10,X8,X11,X9] : (sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f837,f531])).
fof(f6296,plain,(
  ( ! [X6,X4,X7,X5] : (sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f837,f529])).
fof(f6295,plain,(
  ( ! [X2,X3] : (sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f837,f525])).
fof(f6294,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f837,f523])).
fof(f6229,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | $spl191),
  inference(cnf_transformation,[],[f6229_D])).
fof(f6229_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f6222,plain,(
  ( ! [X17] : (p(s(bool,X17)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl44),
  inference(resolution,[],[f6001,f768])).
fof(f768,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X46,X47)) )),
  inference(resolution,[],[f455,f491])).
fof(f6221,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl44 | $spl76)),
  inference(resolution,[],[f6001,f4308])).
fof(f4308,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl76),
  inference(resolution,[],[f2216,f491])).
fof(f6227,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | $spl189),
  inference(cnf_transformation,[],[f6227_D])).
fof(f6227_D,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) <=> ~$spl189),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl189])])).
fof(f6219,plain,(
  ( ! [X14] : (p(s(bool,X14)) | s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | ($spl24 | $spl44)),
  inference(resolution,[],[f6001,f2074])).
fof(f2074,plain,(
  ( ! [X47,X46] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X46,X47)) ) | $spl24),
  inference(resolution,[],[f947,f491])).
fof(f6200,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl186),
  inference(cnf_transformation,[],[f6200_D])).
fof(f6200_D,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f6164,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f830,f736])).
fof(f830,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X160,X161)) )),
  inference(resolution,[],[f455,f601])).
fof(f6161,plain,(
  ( ! [X10,X8,X11,X9] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f830,f531])).
fof(f6160,plain,(
  ( ! [X6,X4,X7,X5] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f830,f529])).
fof(f6159,plain,(
  ( ! [X2,X3] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f830,f525])).
fof(f6158,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f830,f523])).
fof(f6092,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl184),
  inference(cnf_transformation,[],[f6092_D])).
fof(f6092_D,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f6054,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f814,f736])).
fof(f814,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f579])).
fof(f6051,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f814,f531])).
fof(f6050,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f814,f529])).
fof(f6049,plain,(
  ( ! [X2,X3] : (sP8(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f814,f525])).
fof(f6048,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f814,f523])).
fof(f5989,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl182),
  inference(cnf_transformation,[],[f5989_D])).
fof(f5989_D,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f5952,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f798,f736])).
fof(f798,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X97)) )),
  inference(resolution,[],[f455,f563])).
fof(f5949,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f798,f531])).
fof(f5948,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f798,f529])).
fof(f5947,plain,(
  ( ! [X2,X3] : (sP6(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f798,f525])).
fof(f5946,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f798,f523])).
fof(f5903,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl180),
  inference(cnf_transformation,[],[f5903_D])).
fof(f5903_D,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f5866,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f797,f736])).
fof(f797,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f562])).
fof(f5863,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f797,f531])).
fof(f5862,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f797,f529])).
fof(f5861,plain,(
  ( ! [X2,X3] : (sP6(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f797,f525])).
fof(f5860,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f797,f523])).
fof(f5764,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl178),
  inference(cnf_transformation,[],[f5764_D])).
fof(f5764_D,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f5727,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f784,f736])).
fof(f784,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X69)) )),
  inference(resolution,[],[f455,f546])).
fof(f5724,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f784,f531])).
fof(f5723,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f784,f529])).
fof(f5722,plain,(
  ( ! [X2,X3] : (sP4(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f784,f525])).
fof(f5721,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f784,f523])).
fof(f5712,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | s(bool,'F_0') != s(bool,X2)) ) | $spl44),
  inference(duplicate_literal_removal,[],[f5707])).
fof(f5707,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | p(s(bool,X3)) | s(bool,'F_0') != s(bool,X2)) ) | $spl44),
  inference(resolution,[],[f5684,f495])).
fof(f5684,plain,(
  ( ! [X4,X3] : (sP3(X4,X3,'F_0') | s(bool,'T_0') != s(bool,X3) | p(s(bool,X4))) ) | $spl44),
  inference(superposition,[],[f5678,f492])).
fof(f5636,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl44),
  inference(superposition,[],[f3273,f736])).
fof(f5633,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3273,f531])).
fof(f5632,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f3273,f529])).
fof(f5631,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f3273,f525])).
fof(f5630,plain,(
  s(bool,'F_0') != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f3273,f523])).
fof(f5624,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) | $spl172),
  inference(cnf_transformation,[],[f5624_D])).
fof(f5624_D,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1)) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5585,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f768,f736])).
fof(f5582,plain,(
  ( ! [X10,X8,X11,X9] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f768,f531])).
fof(f5581,plain,(
  ( ! [X6,X4,X7,X5] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f768,f529])).
fof(f5580,plain,(
  ( ! [X2,X3] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f768,f525])).
fof(f5579,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f768,f523])).
fof(f5391,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) | $spl170),
  inference(cnf_transformation,[],[f5391_D])).
fof(f5391_D,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1)) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f5352,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f767,f736])).
fof(f767,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X45)) )),
  inference(resolution,[],[f455,f490])).
fof(f5349,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f767,f531])).
fof(f5348,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f767,f529])).
fof(f5347,plain,(
  ( ! [X2,X3] : (sP0(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f767,f525])).
fof(f5346,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f767,f523])).
fof(f5177,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl168),
  inference(cnf_transformation,[],[f5177_D])).
fof(f5177_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f5138,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f766,f736])).
fof(f766,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f489])).
fof(f5135,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f766,f531])).
fof(f5134,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f766,f529])).
fof(f5133,plain,(
  ( ! [X2,X3] : (sP0(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f766,f525])).
fof(f5132,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f766,f523])).
fof(f4959,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl166),
  inference(cnf_transformation,[],[f4959_D])).
fof(f4959_D,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f4921,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f765,f736])).
fof(f765,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f485])).
fof(f4918,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f765,f531])).
fof(f4917,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f765,f529])).
fof(f4916,plain,(
  ( ! [X2,X3] : (sP1(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f765,f525])).
fof(f4915,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f765,f523])).
fof(f4905,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl164),
  inference(cnf_transformation,[],[f4905_D])).
fof(f4905_D,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f4867,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f762,f736])).
fof(f762,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f481])).
fof(f4864,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f762,f531])).
fof(f4863,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f762,f529])).
fof(f4862,plain,(
  ( ! [X2,X3] : (sP2(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f762,f525])).
fof(f4861,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f762,f523])).
fof(f4851,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0)) ) | $spl162),
  inference(cnf_transformation,[],[f4851_D])).
fof(f4851_D,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0)) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f4813,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1060,f736])).
fof(f4810,plain,(
  ( ! [X6,X7,X5] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1060,f531])).
fof(f4809,plain,(
  ( ! [X4,X2,X3] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1060,f529])).
fof(f4808,plain,(
  ( ! [X1] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1060,f525])).
fof(f4807,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1060,f523])).
fof(f4799,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl160),
  inference(cnf_transformation,[],[f4799_D])).
fof(f4799_D,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f4761,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f1059,f736])).
fof(f4758,plain,(
  ( ! [X6,X7,X5] : (sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1059,f531])).
fof(f4757,plain,(
  ( ! [X4,X2,X3] : (sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1059,f529])).
fof(f4756,plain,(
  ( ! [X1] : (sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1059,f525])).
fof(f4755,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f1059,f523])).
fof(f4234,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl154),
  inference(cnf_transformation,[],[f4234_D])).
fof(f4234_D,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f4738,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2669,f736])).
fof(f2669,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl44),
  inference(resolution,[],[f1153,f610])).
fof(f4735,plain,(
  ( ! [X10,X8,X11,X9] : (sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2669,f531])).
fof(f4734,plain,(
  ( ! [X6,X4,X7,X5] : (sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2669,f529])).
fof(f4733,plain,(
  ( ! [X2,X3] : (sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2669,f525])).
fof(f4732,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2669,f523])).
fof(f4208,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl152),
  inference(cnf_transformation,[],[f4208_D])).
fof(f4208_D,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f4713,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2662,f736])).
fof(f2662,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl44),
  inference(resolution,[],[f1153,f601])).
fof(f4710,plain,(
  ( ! [X10,X8,X11,X9] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2662,f531])).
fof(f4709,plain,(
  ( ! [X6,X4,X7,X5] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2662,f529])).
fof(f4708,plain,(
  ( ! [X2,X3] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2662,f525])).
fof(f4707,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2662,f523])).
fof(f4182,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl150),
  inference(cnf_transformation,[],[f4182_D])).
fof(f4182_D,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f4686,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2646,f736])).
fof(f2646,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f579])).
fof(f4683,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2646,f531])).
fof(f4682,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2646,f529])).
fof(f4681,plain,(
  ( ! [X2,X3] : (sP8(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2646,f525])).
fof(f4680,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2646,f523])).
fof(f4101,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl146),
  inference(cnf_transformation,[],[f4101_D])).
fof(f4101_D,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f4659,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2630,f736])).
fof(f2630,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X97)) ) | $spl44),
  inference(resolution,[],[f1153,f563])).
fof(f4656,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2630,f531])).
fof(f4655,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2630,f529])).
fof(f4654,plain,(
  ( ! [X2,X3] : (sP6(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2630,f525])).
fof(f4653,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2630,f523])).
fof(f4073,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl144),
  inference(cnf_transformation,[],[f4073_D])).
fof(f4073_D,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f4632,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2629,f736])).
fof(f2629,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f562])).
fof(f4629,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2629,f531])).
fof(f4628,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2629,f529])).
fof(f4627,plain,(
  ( ! [X2,X3] : (sP6(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2629,f525])).
fof(f4626,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2629,f523])).
fof(f4045,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl142),
  inference(cnf_transformation,[],[f4045_D])).
fof(f4045_D,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f4605,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2616,f736])).
fof(f2616,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X69)) ) | $spl44),
  inference(resolution,[],[f1153,f546])).
fof(f4602,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2616,f531])).
fof(f4601,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2616,f529])).
fof(f4600,plain,(
  ( ! [X2,X3] : (sP4(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2616,f525])).
fof(f4599,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2616,f523])).
fof(f4017,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) | $spl140),
  inference(cnf_transformation,[],[f4017_D])).
fof(f4017_D,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1)) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f4576,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2600,f736])).
fof(f4573,plain,(
  ( ! [X10,X8,X11,X9] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2600,f531])).
fof(f4572,plain,(
  ( ! [X6,X4,X7,X5] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2600,f529])).
fof(f4571,plain,(
  ( ! [X2,X3] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2600,f525])).
fof(f4570,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2600,f523])).
fof(f3988,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) | $spl138),
  inference(cnf_transformation,[],[f3988_D])).
fof(f3988_D,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1)) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f4548,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2599,f736])).
fof(f2599,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl44),
  inference(resolution,[],[f1153,f490])).
fof(f4545,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2599,f531])).
fof(f4544,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2599,f529])).
fof(f4543,plain,(
  ( ! [X2,X3] : (sP0(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2599,f525])).
fof(f4542,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2599,f523])).
fof(f3941,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl136),
  inference(cnf_transformation,[],[f3941_D])).
fof(f3941_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f4520,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2598,f736])).
fof(f2598,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f489])).
fof(f4517,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2598,f531])).
fof(f4516,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2598,f529])).
fof(f4515,plain,(
  ( ! [X2,X3] : (sP0(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2598,f525])).
fof(f4514,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2598,f523])).
fof(f3912,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl134),
  inference(cnf_transformation,[],[f3912_D])).
fof(f3912_D,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f4493,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2597,f736])).
fof(f2597,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f485])).
fof(f4490,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2597,f531])).
fof(f4489,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2597,f529])).
fof(f4488,plain,(
  ( ! [X2,X3] : (sP1(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2597,f525])).
fof(f4487,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2597,f523])).
fof(f3884,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl132),
  inference(cnf_transformation,[],[f3884_D])).
fof(f3884_D,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f4466,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2594,f736])).
fof(f4463,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2594,f531])).
fof(f4462,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2594,f529])).
fof(f4461,plain,(
  ( ! [X2,X3] : (sP2(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2594,f525])).
fof(f4460,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2594,f523])).
fof(f4452,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl158),
  inference(cnf_transformation,[],[f4452_D])).
fof(f4452_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f4399,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f2216,f737])).
fof(f4296,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl76),
  inference(resolution,[],[f2216,f472])).
fof(f4293,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f2216,f471])).
fof(f4292,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f2216,f470])).
fof(f4291,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl76),
  inference(resolution,[],[f2216,f468])).
fof(f4289,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl76),
  inference(resolution,[],[f2216,f466])).
fof(f4281,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0)) ) | $spl156),
  inference(cnf_transformation,[],[f4281_D])).
fof(f4281_D,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0)) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f4243,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f849,f736])).
fof(f849,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X189)) )),
  inference(resolution,[],[f455,f632])).
fof(f4240,plain,(
  ( ! [X6,X7,X5] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f849,f531])).
fof(f4239,plain,(
  ( ! [X4,X2,X3] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X2) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f849,f529])).
fof(f4238,plain,(
  ( ! [X1] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f849,f525])).
fof(f4237,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))),X0) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f849,f523])).
fof(f4219,plain,(
  ( ! [X23,X22] : (sP11(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2143,f736])).
fof(f2143,plain,(
  ( ! [X175,X174] : (sP11(X174,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X175)) ) | $spl24),
  inference(resolution,[],[f947,f610])).
fof(f4216,plain,(
  ( ! [X10,X8,X11,X9] : (sP11(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2143,f531])).
fof(f4215,plain,(
  ( ! [X6,X4,X7,X5] : (sP11(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2143,f529])).
fof(f4214,plain,(
  ( ! [X2,X3] : (sP11(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2143,f525])).
fof(f4213,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2143,f523])).
fof(f4193,plain,(
  ( ! [X23,X22] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2136,f736])).
fof(f2136,plain,(
  ( ! [X161,X160] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X160,X161)) ) | $spl24),
  inference(resolution,[],[f947,f601])).
fof(f4190,plain,(
  ( ! [X10,X8,X11,X9] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2136,f531])).
fof(f4189,plain,(
  ( ! [X6,X4,X7,X5] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2136,f529])).
fof(f4188,plain,(
  ( ! [X2,X3] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2136,f525])).
fof(f4187,plain,(
  ( ! [X0,X1] : (sP10('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2136,f523])).
fof(f4165,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2120,f736])).
fof(f2120,plain,(
  ( ! [X128,X129] : (sP8(X128,X129,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f579])).
fof(f4162,plain,(
  ( ! [X10,X8,X11,X9] : (sP8(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2120,f531])).
fof(f4161,plain,(
  ( ! [X6,X4,X7,X5] : (sP8(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2120,f529])).
fof(f4160,plain,(
  ( ! [X2,X3] : (sP8(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2120,f525])).
fof(f4159,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2120,f523])).
fof(f4148,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl148),
  inference(cnf_transformation,[],[f4148_D])).
fof(f4148_D,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f4110,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) )),
  inference(superposition,[],[f848,f736])).
fof(f848,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f631])).
fof(f4107,plain,(
  ( ! [X6,X7,X5] : (sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f848,f531])).
fof(f4106,plain,(
  ( ! [X4,X2,X3] : (sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f848,f529])).
fof(f4105,plain,(
  ( ! [X1] : (sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f848,f525])).
fof(f4104,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f848,f523])).
fof(f4085,plain,(
  ( ! [X23,X22] : (sP6(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2104,f736])).
fof(f2104,plain,(
  ( ! [X97,X96] : (sP6(X96,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X97)) ) | $spl24),
  inference(resolution,[],[f947,f563])).
fof(f4082,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2104,f531])).
fof(f4081,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2104,f529])).
fof(f4080,plain,(
  ( ! [X2,X3] : (sP6(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2104,f525])).
fof(f4079,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2104,f523])).
fof(f4057,plain,(
  ( ! [X23,X22] : (sP6(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2103,f736])).
fof(f2103,plain,(
  ( ! [X94,X95] : (sP6(X94,X95,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f562])).
fof(f4054,plain,(
  ( ! [X10,X8,X11,X9] : (sP6(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2103,f531])).
fof(f4053,plain,(
  ( ! [X6,X4,X7,X5] : (sP6(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2103,f529])).
fof(f4052,plain,(
  ( ! [X2,X3] : (sP6(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2103,f525])).
fof(f4051,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2103,f523])).
fof(f4029,plain,(
  ( ! [X23,X22] : (sP4(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2090,f736])).
fof(f2090,plain,(
  ( ! [X68,X69] : (sP4(X68,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X69)) ) | $spl24),
  inference(resolution,[],[f947,f546])).
fof(f4026,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2090,f531])).
fof(f4025,plain,(
  ( ! [X6,X4,X7,X5] : (sP4(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2090,f529])).
fof(f4024,plain,(
  ( ! [X2,X3] : (sP4(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2090,f525])).
fof(f4023,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2090,f523])).
fof(f3999,plain,(
  ( ! [X23,X22] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X22,X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2074,f736])).
fof(f3996,plain,(
  ( ! [X10,X8,X11,X9] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X8,X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2074,f531])).
fof(f3995,plain,(
  ( ! [X6,X4,X7,X5] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X4,X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2074,f529])).
fof(f3994,plain,(
  ( ! [X2,X3] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2,X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2074,f525])).
fof(f3993,plain,(
  ( ! [X0,X1] : (sP0('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0,X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2074,f523])).
fof(f3970,plain,(
  ( ! [X23,X22] : (sP0(X22,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X23) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2073,f736])).
fof(f2073,plain,(
  ( ! [X45,X44] : (sP0(X44,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X45)) ) | $spl24),
  inference(resolution,[],[f947,f490])).
fof(f3967,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X9) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2073,f531])).
fof(f3966,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2073,f529])).
fof(f3965,plain,(
  ( ! [X2,X3] : (sP0(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X3) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2073,f525])).
fof(f3964,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2073,f523])).
fof(f3923,plain,(
  ( ! [X23,X22] : (sP0(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2072,f736])).
fof(f2072,plain,(
  ( ! [X43,X42] : (sP0(X42,X43,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f489])).
fof(f3920,plain,(
  ( ! [X10,X8,X11,X9] : (sP0(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2072,f531])).
fof(f3919,plain,(
  ( ! [X6,X4,X7,X5] : (sP0(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2072,f529])).
fof(f3918,plain,(
  ( ! [X2,X3] : (sP0(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2072,f525])).
fof(f3917,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2072,f523])).
fof(f3895,plain,(
  ( ! [X23,X22] : (sP1(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2071,f736])).
fof(f2071,plain,(
  ( ! [X41,X40] : (sP1(X40,X41,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f485])).
fof(f3892,plain,(
  ( ! [X10,X8,X11,X9] : (sP1(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2071,f531])).
fof(f3891,plain,(
  ( ! [X6,X4,X7,X5] : (sP1(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2071,f529])).
fof(f3890,plain,(
  ( ! [X2,X3] : (sP1(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2071,f525])).
fof(f3889,plain,(
  ( ! [X0,X1] : (sP1(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2071,f523])).
fof(f3867,plain,(
  ( ! [X23,X22] : (sP2(X22,X23,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2068,f736])).
fof(f2068,plain,(
  ( ! [X35,X34] : (sP2(X34,X35,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f481])).
fof(f3864,plain,(
  ( ! [X10,X8,X11,X9] : (sP2(X8,X9,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X10),'const.list.NIL_0') != s('type.list.list'(X10),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X10),X11),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2068,f531])).
fof(f3863,plain,(
  ( ! [X6,X4,X7,X5] : (sP2(X4,X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2068,f529])).
fof(f3862,plain,(
  ( ! [X2,X3] : (sP2(X2,X3,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2068,f525])).
fof(f3861,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2068,f523])).
fof(f2216,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl76),
  inference(cnf_transformation,[],[f2216_D])).
fof(f2216_D,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f3856,plain,(
  ( ! [X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | p(s(bool,X1))) ) | $spl124),
  inference(subsumption_resolution,[],[f3828,f665])).
fof(f3828,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | p(s(bool,X1))) ) | $spl124),
  inference(resolution,[],[f3246,f630])).
fof(f3855,plain,(
  ( ! [X0] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | p(s(bool,X0))) ) | $spl124),
  inference(subsumption_resolution,[],[f3827,f665])).
fof(f3827,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | p(s(bool,X0))) ) | $spl124),
  inference(resolution,[],[f3246,f634])).
fof(f634,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP13(X0,X1)) )),
  inference(cnf_transformation,[],[f407])).
fof(f3826,plain,(
  ( ! [X1] : (p(s(bool,X1)) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) ) | $spl84),
  inference(subsumption_resolution,[],[f3798,f665])).
fof(f3798,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) ) | $spl84),
  inference(resolution,[],[f2414,f630])).
fof(f3825,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) ) | $spl84),
  inference(subsumption_resolution,[],[f3797,f665])).
fof(f3797,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) ) | $spl84),
  inference(resolution,[],[f2414,f634])).
fof(f3757,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl24),
  inference(superposition,[],[f947,f736])).
fof(f3754,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f947,f531])).
fof(f3753,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f947,f529])).
fof(f3752,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f947,f525])).
fof(f3751,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f947,f523])).
fof(f2213,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl74),
  inference(cnf_transformation,[],[f2213_D])).
fof(f2213_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f3746,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f737])).
fof(f3643,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl24),
  inference(resolution,[],[f947,f472])).
fof(f3640,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f471])).
fof(f3639,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f470])).
fof(f3638,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl24),
  inference(resolution,[],[f947,f468])).
fof(f3636,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f466])).
fof(f3246,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0)) ) | $spl124),
  inference(cnf_transformation,[],[f3246_D])).
fof(f3246_D,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0)) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f3617,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2155,f736])).
fof(f2155,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X189)) ) | $spl24),
  inference(resolution,[],[f947,f632])).
fof(f3614,plain,(
  ( ! [X6,X7,X5] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2155,f531])).
fof(f3613,plain,(
  ( ! [X4,X2,X3] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2155,f529])).
fof(f3612,plain,(
  ( ! [X1] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2155,f525])).
fof(f3611,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2155,f523])).
fof(f2414,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl84),
  inference(cnf_transformation,[],[f2414_D])).
fof(f2414_D,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f3592,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2154,f736])).
fof(f2154,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f631])).
fof(f3589,plain,(
  ( ! [X6,X7,X5] : (sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f531])).
fof(f3588,plain,(
  ( ! [X4,X2,X3] : (sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f529])).
fof(f3587,plain,(
  ( ! [X1] : (sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f525])).
fof(f3586,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f523])).
fof(f3576,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl130),
  inference(cnf_transformation,[],[f3576_D])).
fof(f3576_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f3521,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl77),
  inference(resolution,[],[f2215,f737])).
fof(f3418,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl77),
  inference(resolution,[],[f2215,f472])).
fof(f3416,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl77),
  inference(resolution,[],[f2215,f471])).
fof(f3414,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl77),
  inference(resolution,[],[f2215,f470])).
fof(f3413,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl77),
  inference(resolution,[],[f2215,f468])).
fof(f3411,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl77),
  inference(resolution,[],[f2215,f466])).
fof(f3573,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl127),
  inference(cnf_transformation,[],[f3573_D])).
fof(f3573_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f3575,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl129),
  inference(cnf_transformation,[],[f3575_D])).
fof(f3575_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl129),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl129])])).
fof(f3410,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl77),
  inference(resolution,[],[f2215,f710])).
fof(f3370,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl44),
  inference(superposition,[],[f1153,f736])).
fof(f3367,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f1153,f531])).
fof(f3366,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f1153,f529])).
fof(f3365,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f1153,f525])).
fof(f3364,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f1153,f523])).
fof(f3359,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f737])).
fof(f3256,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl44),
  inference(resolution,[],[f1153,f472])).
fof(f3253,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f471])).
fof(f3252,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f470])).
fof(f3251,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl44),
  inference(resolution,[],[f1153,f468])).
fof(f3249,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f466])).
fof(f3229,plain,(
  ( ! [X16] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X16) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2681,f736])).
fof(f2681,plain,(
  ( ! [X189] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X189)) ) | $spl44),
  inference(resolution,[],[f1153,f632])).
fof(f3226,plain,(
  ( ! [X6,X7,X5] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X5) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2681,f531])).
fof(f3225,plain,(
  ( ! [X4,X2,X3] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X2) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2681,f529])).
fof(f3224,plain,(
  ( ! [X1] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X1) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2681,f525])).
fof(f3223,plain,(
  ( ! [X0] : (sP13('const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')),X0) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2681,f523])).
fof(f3204,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl44),
  inference(superposition,[],[f2680,f736])).
fof(f2680,plain,(
  ( ! [X188] : (sP13(X188,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f631])).
fof(f3201,plain,(
  ( ! [X6,X7,X5] : (sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2680,f531])).
fof(f3200,plain,(
  ( ! [X4,X2,X3] : (sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2680,f529])).
fof(f3199,plain,(
  ( ! [X1] : (sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2680,f525])).
fof(f3198,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f2680,f523])).
fof(f2215,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl77),
  inference(cnf_transformation,[],[f2215_D])).
fof(f2215_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f3147,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl45),
  inference(superposition,[],[f1152,f736])).
fof(f3144,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl45),
  inference(superposition,[],[f1152,f531])).
fof(f3143,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl45),
  inference(superposition,[],[f1152,f529])).
fof(f3142,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl45),
  inference(superposition,[],[f1152,f525])).
fof(f3141,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl45),
  inference(superposition,[],[f1152,f523])).
fof(f3138,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f737])).
fof(f3035,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl45),
  inference(resolution,[],[f1152,f472])).
fof(f3033,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f471])).
fof(f3031,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f470])).
fof(f3030,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl45),
  inference(resolution,[],[f1152,f468])).
fof(f3028,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl45),
  inference(resolution,[],[f1152,f466])).
fof(f3027,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl45),
  inference(resolution,[],[f1152,f710])).
fof(f3014,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl113),
  inference(cnf_transformation,[],[f3014_D])).
fof(f3014_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f3021,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f2929,f717])).
fof(f2929,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f458,f736])).
fof(f3018,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f2926,f717])).
fof(f2926,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f458,f531])).
fof(f3016,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(forward_demodulation,[],[f2925,f717])).
fof(f2925,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))) )),
  inference(superposition,[],[f458,f529])).
fof(f3015,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(forward_demodulation,[],[f2924,f717])).
fof(f2924,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(superposition,[],[f458,f525])).
fof(f3010,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(forward_demodulation,[],[f2923,f717])).
fof(f2923,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))))),
  inference(superposition,[],[f458,f523])).
fof(f3009,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl109),
  inference(cnf_transformation,[],[f3009_D])).
fof(f3009_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl109])])).
fof(f2916,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f458,f736])).
fof(f1156,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) ) | $spl46),
  inference(cnf_transformation,[],[f1156_D])).
fof(f1156_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f2913,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) )),
  inference(superposition,[],[f458,f531])).
fof(f2912,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) )),
  inference(superposition,[],[f458,f529])).
fof(f1151,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) | $spl43),
  inference(cnf_transformation,[],[f1151_D])).
fof(f1151_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f2911,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))),
  inference(superposition,[],[f458,f525])).
fof(f2910,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))),
  inference(superposition,[],[f458,f523])).
fof(f3003,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl107),
  inference(cnf_transformation,[],[f3003_D])).
fof(f3003_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f3007,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f2903,f464])).
fof(f2903,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f458,f736])).
fof(f950,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) ) | $spl26),
  inference(cnf_transformation,[],[f950_D])).
fof(f950_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3006,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f2900,f464])).
fof(f2900,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(superposition,[],[f458,f531])).
fof(f3005,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f2899,f464])).
fof(f2899,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(superposition,[],[f458,f529])).
fof(f945,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) | $spl23),
  inference(cnf_transformation,[],[f945_D])).
fof(f945_D,plain,(
  s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f3004,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f2898,f464])).
fof(f2898,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f458,f525])).
fof(f3001,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f2897,f464])).
fof(f2897,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f458,f523])).
fof(f2890,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24('const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f458,f736])).
fof(f2887,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f458,f531])).
fof(f2886,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))) )),
  inference(superposition,[],[f458,f529])).
fof(f2885,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))),
  inference(superposition,[],[f458,f525])).
fof(f2884,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))))),
  inference(superposition,[],[f458,f523])).
fof(f2991,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl97),
  inference(cnf_transformation,[],[f2991_D])).
fof(f2991_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f2877,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f458,f736])).
fof(f2874,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f458,f531])).
fof(f2873,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f458,f529])).
fof(f2872,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))),
  inference(superposition,[],[f458,f525])).
fof(f2871,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))),
  inference(superposition,[],[f458,f523])).
fof(f2985,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl95),
  inference(cnf_transformation,[],[f2985_D])).
fof(f2985_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f2989,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(forward_demodulation,[],[f2864,f464])).
fof(f2864,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f458,f736])).
fof(f2988,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(forward_demodulation,[],[f2861,f464])).
fof(f2861,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f458,f531])).
fof(f2987,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(forward_demodulation,[],[f2860,f464])).
fof(f2860,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f458,f529])).
fof(f2986,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),
  inference(forward_demodulation,[],[f2859,f464])).
fof(f2859,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),
  inference(superposition,[],[f458,f525])).
fof(f2983,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),
  inference(forward_demodulation,[],[f2858,f464])).
fof(f2858,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),
  inference(superposition,[],[f458,f523])).
fof(f2855,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f458,f737])).
fof(f2752,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X21) != s(bool,X23)) )),
  inference(resolution,[],[f458,f472])).
fof(f2750,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f458,f471])).
fof(f2748,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f458,f470])).
fof(f2747,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X6) != s(bool,X8)) )),
  inference(resolution,[],[f458,f468])).
fof(f2745,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f458,f466])).
fof(f2744,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14))),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))))),
  inference(resolution,[],[f458,f710])).
fof(f2702,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl44),
  inference(superposition,[],[f1153,f736])).
fof(f2699,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f1153,f531])).
fof(f2698,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) ) | $spl44),
  inference(superposition,[],[f1153,f529])).
fof(f2697,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f1153,f525])).
fof(f2696,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16))) | $spl44),
  inference(superposition,[],[f1153,f523])).
fof(f2691,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f737])).
fof(f2588,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl44),
  inference(resolution,[],[f1153,f472])).
fof(f2585,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f471])).
fof(f2584,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f470])).
fof(f2583,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl44),
  inference(resolution,[],[f1153,f468])).
fof(f2581,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl44),
  inference(resolution,[],[f1153,f466])).
fof(f2535,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl25),
  inference(superposition,[],[f946,f736])).
fof(f946,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl25),
  inference(cnf_transformation,[],[f946_D])).
fof(f946_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f2532,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl25),
  inference(superposition,[],[f946,f531])).
fof(f2531,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl25),
  inference(superposition,[],[f946,f529])).
fof(f2530,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl25),
  inference(superposition,[],[f946,f525])).
fof(f2529,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl25),
  inference(superposition,[],[f946,f523])).
fof(f2381,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl82),
  inference(cnf_transformation,[],[f2381_D])).
fof(f2381_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2526,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f737])).
fof(f2423,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl25),
  inference(resolution,[],[f946,f472])).
fof(f2421,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f471])).
fof(f2419,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f470])).
fof(f2418,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl25),
  inference(resolution,[],[f946,f468])).
fof(f2416,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f466])).
fof(f2378,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl79),
  inference(cnf_transformation,[],[f2378_D])).
fof(f2378_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f2380,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl81),
  inference(cnf_transformation,[],[f2380_D])).
fof(f2380_D,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f2415,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl25),
  inference(resolution,[],[f946,f710])).
fof(f2397,plain,(
  ( ! [X16] : (sP13(X16,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))) ) | $spl24),
  inference(superposition,[],[f2154,f736])).
fof(f2394,plain,(
  ( ! [X6,X7,X5] : (sP13(X5,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X6),'const.list.NIL_0') != s('type.list.list'(X6),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X6),X7),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f531])).
fof(f2393,plain,(
  ( ! [X4,X2,X3] : (sP13(X2,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s('type.list.list'(X3),'const.list.NIL_0') != s('type.list.list'(X3),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X3),X4),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f529])).
fof(f2392,plain,(
  ( ! [X1] : (sP13(X1,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f525])).
fof(f2391,plain,(
  ( ! [X0] : (sP13(X0,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f2154,f523])).
fof(f2340,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl25),
  inference(superposition,[],[f946,f736])).
fof(f2337,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl25),
  inference(superposition,[],[f946,f531])).
fof(f2336,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl25),
  inference(superposition,[],[f946,f529])).
fof(f2335,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl25),
  inference(superposition,[],[f946,f525])).
fof(f2334,plain,(
  ~p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl25),
  inference(superposition,[],[f946,f523])).
fof(f2331,plain,(
  ( ! [X189,X188] : (p(s(bool,X188)) | ~p(s(bool,X189)) | s(bool,X189) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f737])).
fof(f2228,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X21) != s(bool,X23)) ) | $spl25),
  inference(resolution,[],[f946,f472])).
fof(f2226,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f471])).
fof(f2224,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f470])).
fof(f2223,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X6) != s(bool,X8)) ) | $spl25),
  inference(resolution,[],[f946,f468])).
fof(f2221,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl25),
  inference(resolution,[],[f946,f466])).
fof(f2220,plain,(
  ~p(s(bool,'const.inferProps.tenv_invC_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | ~p(s(bool,'const.inferProps.tenv_inv_3'(s('type.finite_map.fmap'('type.num.num','type.infer_t.infer_t'),'const.finite_map.FEMPTY_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl25),
  inference(resolution,[],[f946,f710])).
fof(f2176,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))))) | $spl24),
  inference(superposition,[],[f947,f736])).
fof(f2173,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f947,f531])).
fof(f2172,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) ) | $spl24),
  inference(superposition,[],[f947,f529])).
fof(f2171,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f947,f525])).
fof(f2170,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))) | $spl24),
  inference(superposition,[],[f947,f523])).
fof(f2165,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f737])).
fof(f2062,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X22) != s(bool,X23)) ) | $spl24),
  inference(resolution,[],[f947,f472])).
fof(f2059,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f471])).
fof(f2058,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f470])).
fof(f2057,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))) | s(bool,X7) != s(bool,X8)) ) | $spl24),
  inference(resolution,[],[f947,f468])).
fof(f2055,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) ) | $spl24),
  inference(resolution,[],[f947,f466])).
fof(f2011,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | $spl73),
  inference(cnf_transformation,[],[f2011_D])).
fof(f2011_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f2000,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | $spl67),
  inference(cnf_transformation,[],[f2000_D])).
fof(f2000_D,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f2015,plain,(
  ( ! [X18] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X18))))) )),
  inference(forward_demodulation,[],[f2014,f456])).
fof(f2014,plain,(
  ( ! [X18] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X18)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f1904,f456])).
fof(f1904,plain,(
  ( ! [X18] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X18)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f536,f456])).
fof(f2013,plain,(
  ( ! [X17] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X17)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))))))) )),
  inference(forward_demodulation,[],[f2012,f456])).
fof(f2012,plain,(
  ( ! [X17] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X17)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f1903,f456])).
fof(f1903,plain,(
  ( ! [X17] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),X17)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f536,f456])).
fof(f2009,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X16)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f2008,f456])).
fof(f2008,plain,(
  ( ! [X16] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X16)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))))))) )),
  inference(forward_demodulation,[],[f1902,f456])).
fof(f1902,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),X16)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',sK20('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))))))) )),
  inference(superposition,[],[f536,f456])).
fof(f2003,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | $spl70),
  inference(cnf_transformation,[],[f2003_D])).
fof(f2003_D,plain,(
  p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f2007,plain,(
  ( ! [X15] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X15))))) )),
  inference(forward_demodulation,[],[f2006,f456])).
fof(f2006,plain,(
  ( ! [X15] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X15)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f1901,f456])).
fof(f1901,plain,(
  ( ! [X15] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X15)))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f535,f456])).
fof(f2005,plain,(
  ( ! [X14] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X14)))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))))) )),
  inference(forward_demodulation,[],[f2004,f456])).
fof(f2004,plain,(
  ( ! [X14] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X14)))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f1900,f456])).
fof(f1900,plain,(
  ( ! [X14] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),X14)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(superposition,[],[f535,f456])).
fof(f1998,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char'))))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X13)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f1997,f456])).
fof(f1997,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),X13)))) | ~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))))) )),
  inference(forward_demodulation,[],[f1899,f456])).
fof(f1899,plain,(
  ( ! [X13] : (~p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),X13)))) | p(s(bool,happ(s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))),s('type.list.list'('type.string.char'),sK19('const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),'type.string.char')))))) )),
  inference(superposition,[],[f535,f456])).
fof(f1989,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') != s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) | $spl65),
  inference(cnf_transformation,[],[f1989_D])).
fof(f1989_D,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') != s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f1965,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | $spl54),
  inference(cnf_transformation,[],[f1965_D])).
fof(f1965_D,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f1897,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') != s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f524,f456])).
fof(f524,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f357])).
fof(f1988,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') = s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) | $spl64),
  inference(cnf_transformation,[],[f1988_D])).
fof(f1988_D,plain,(
  s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') = s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1964,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | $spl55),
  inference(cnf_transformation,[],[f1964_D])).
fof(f1964_D,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f1896,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') = s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f523,f456])).
fof(f1895,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') != s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f526,f456])).
fof(f526,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f358])).
fof(f1894,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') = s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f525,f456])).
fof(f1881,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') != s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f456,f524])).
fof(f1880,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0') != s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f456,f526])).
fof(f1985,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char')))))),
  inference(forward_demodulation,[],[f1872,f527])).
fof(f1872,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),sK23('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char'))),s('type.list.list'('type.list.list'('type.string.char')),sK24('const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),'type.list.list'('type.string.char')))))),
  inference(superposition,[],[f456,f736])).
fof(f1983,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))) ) | $spl60),
  inference(cnf_transformation,[],[f1983_D])).
fof(f1983_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f1984,plain,(
  ( ! [X2,X3] : (s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))) )),
  inference(forward_demodulation,[],[f1869,f527])).
fof(f1869,plain,(
  ( ! [X2,X3] : (s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X2),X3),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))) )),
  inference(superposition,[],[f456,f531])).
fof(f1982,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))) )),
  inference(forward_demodulation,[],[f1868,f527])).
fof(f1868,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.list.list'('type.string.char'),X0),X1),s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))) )),
  inference(superposition,[],[f456,f529])).
fof(f1980,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))) | $spl59),
  inference(cnf_transformation,[],[f1980_D])).
fof(f1980_D,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f1981,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))),
  inference(forward_demodulation,[],[f1867,f527])).
fof(f1867,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))),
  inference(superposition,[],[f456,f525])).
fof(f1978,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))),
  inference(forward_demodulation,[],[f1866,f527])).
fof(f1866,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') != s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))))),
  inference(superposition,[],[f456,f523])).
fof(f1976,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) | $spl57),
  inference(cnf_transformation,[],[f1976_D])).
fof(f1976_D,plain,(
  s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f1977,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),
  inference(forward_demodulation,[],[f1865,f527])).
fof(f1865,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),
  inference(superposition,[],[f456,f530])).
fof(f1974,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),
  inference(forward_demodulation,[],[f1864,f527])).
fof(f1864,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0') != s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)),
  inference(superposition,[],[f456,f532])).
fof(f1973,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f1972,f527])).
fof(f1972,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f1857,f533])).
fof(f1857,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f456,f736])).
fof(f1971,plain,(
  ( ! [X2,X3] : (s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f1970,f527])).
fof(f1970,plain,(
  ( ! [X2,X3] : (s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f1854,f533])).
fof(f1854,plain,(
  ( ! [X2,X3] : (s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(superposition,[],[f456,f531])).
fof(f1969,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f1968,f527])).
fof(f1968,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f1853,f533])).
fof(f1853,plain,(
  ( ! [X0,X1] : (s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(superposition,[],[f456,f529])).
fof(f1967,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f1966,f527])).
fof(f1966,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f1852,f533])).
fof(f1852,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f456,f525])).
fof(f1963,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.pred_set.EMPTY_0') = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f1962,f527])).
fof(f1962,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f1851,f533])).
fof(f1851,plain,(
  s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17))))) = s(fun('type.list.list'('type.string.char'),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),'type.list.list'('type.string.char')),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f456,f523])).
fof(f1761,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1644,f933])).
fof(f1644,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f933,f704])).
fof(f1760,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1643,f933])).
fof(f1643,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f933,f702])).
fof(f1759,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1638,f933])).
fof(f1638,plain,(
  ( ! [X300] : (p(s(bool,X300))) ) | $spl10),
  inference(resolution,[],[f933,f661])).
fof(f1758,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1636,f933])).
fof(f1636,plain,(
  ( ! [X298] : (p(s(bool,X298))) ) | $spl10),
  inference(resolution,[],[f933,f658])).
fof(f1757,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1634,f933])).
fof(f1634,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(resolution,[],[f933,f655])).
fof(f1756,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f1633,f933])).
fof(f1633,plain,(
  ( ! [X296] : (p(s(bool,X296))) ) | $spl10),
  inference(resolution,[],[f933,f652])).
fof(f1645,plain,(
  $false | $spl10),
  inference(resolution,[],[f933,f706])).
fof(f1646,plain,(
  $false | $spl10),
  inference(resolution,[],[f933,f707])).
fof(f1647,plain,(
  $false | $spl10),
  inference(resolution,[],[f933,f738])).
fof(f1656,plain,(
  $false | $spl10),
  inference(resolution,[],[f933,f712])).
fof(f1657,plain,(
  $false | $spl10),
  inference(resolution,[],[f933,f457])).
fof(f1658,plain,(
  $false | $spl10),
  inference(resolution,[],[f933,f455])).
fof(f1448,plain,(
  ( ! [X39,X38] : (s(bool,'F_0') != s(bool,X39) | p(s(bool,X38))) ) | $spl2),
  inference(subsumption_resolution,[],[f1397,f929])).
fof(f1397,plain,(
  ( ! [X39,X38] : (s(bool,'F_0') != s(bool,X39) | p(s(bool,X38)) | s(bool,'T_0') = s(bool,X38)) ) | $spl2),
  inference(superposition,[],[f929,f517])).
fof(f1446,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | p(s(bool,X36))) ) | $spl2),
  inference(subsumption_resolution,[],[f1396,f929])).
fof(f1396,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,X37) | p(s(bool,X36)) | s(bool,'F_0') = s(bool,X36)) ) | $spl2),
  inference(superposition,[],[f929,f517])).
fof(f1441,plain,(
  ( ! [X30,X31] : (s(bool,'F_0') != s(bool,X31) | p(s(bool,X30))) ) | $spl2),
  inference(duplicate_literal_removal,[],[f1393])).
fof(f1393,plain,(
  ( ! [X30,X31] : (s(bool,'F_0') != s(bool,X31) | p(s(bool,X30)) | p(s(bool,X30))) ) | $spl2),
  inference(superposition,[],[f929,f512])).
fof(f1442,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X29) | p(s(bool,X28))) ) | $spl2),
  inference(duplicate_literal_removal,[],[f1392])).
fof(f1392,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') != s(bool,X29) | p(s(bool,X28)) | p(s(bool,X28))) ) | $spl2),
  inference(superposition,[],[f929,f510])).
fof(f1383,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f1293,f934])).
fof(f1293,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(resolution,[],[f934,f705])).
fof(f1382,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f1292,f934])).
fof(f1292,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(resolution,[],[f934,f703])).
fof(f1381,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f1284,f934])).
fof(f1284,plain,(
  ( ! [X314] : (~p(s(bool,X314))) ) | $spl12),
  inference(resolution,[],[f934,f650])).
fof(f1291,plain,(
  $false | $spl12),
  inference(resolution,[],[f934,f701])).
fof(f1158,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f1094,f717])).
fof(f1094,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK14,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f457,f736])).
fof(f1157,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) )),
  inference(forward_demodulation,[],[f1091,f717])).
fof(f1091,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) )),
  inference(superposition,[],[f457,f531])).
fof(f1155,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) )),
  inference(forward_demodulation,[],[f1090,f717])).
fof(f1090,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))) )),
  inference(superposition,[],[f457,f529])).
fof(f1154,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))),
  inference(forward_demodulation,[],[f1089,f717])).
fof(f1089,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))),
  inference(superposition,[],[f457,f525])).
fof(f1149,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))),
  inference(forward_demodulation,[],[f1088,f717])).
fof(f1088,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14)))),
  inference(superposition,[],[f457,f523])).
fof(f1145,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl36),
  inference(cnf_transformation,[],[f1145_D])).
fof(f1145_D,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1081,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK16,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f457,f736])).
fof(f1078,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f457,f531])).
fof(f1077,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))) )),
  inference(superposition,[],[f457,f529])).
fof(f1076,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))),
  inference(superposition,[],[f457,f525])).
fof(f1075,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16)))),
  inference(superposition,[],[f457,f523])).
fof(f1139,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl30),
  inference(cnf_transformation,[],[f1139_D])).
fof(f1139_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1070,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f737])).
fof(f967,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X22) != s(bool,X23)) )),
  inference(resolution,[],[f457,f472])).
fof(f1140,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl32),
  inference(cnf_transformation,[],[f1140_D])).
fof(f1140_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f931,plain,(
  ( ! [X4,X3] : (s(bool,X3) != s(bool,X4) | p(s(bool,X3)) | ~p(s(bool,X4))) ) | $spl6),
  inference(cnf_transformation,[],[f931_D])).
fof(f931_D,plain,(
  ( ! [X4,X3] : (s(bool,X3) != s(bool,X4) | p(s(bool,X3)) | ~p(s(bool,X4))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f966,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X19) | s(bool,X20) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f472])).
fof(f964,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f471])).
fof(f963,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f470])).
fof(f962,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X7) != s(bool,X8)) )),
  inference(resolution,[],[f457,f468])).
fof(f961,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | s(bool,X5) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f468])).
fof(f960,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK16),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK14),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f457,f466])).
fof(f947,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | $spl24),
  inference(cnf_transformation,[],[f947_D])).
fof(f947_D,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f952,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(forward_demodulation,[],[f883,f717])).
fof(f883,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),sK23(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK24(sK15,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))))))),
  inference(superposition,[],[f455,f736])).
fof(f951,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f880,f717])).
fof(f880,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(superposition,[],[f455,f531])).
fof(f949,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(forward_demodulation,[],[f879,f717])).
fof(f879,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))) )),
  inference(superposition,[],[f455,f529])).
fof(f948,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f878,f717])).
fof(f878,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f455,f525])).
fof(f943,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(forward_demodulation,[],[f877,f717])).
fof(f877,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15)))),
  inference(superposition,[],[f455,f523])).
fof(f939,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | $spl16),
  inference(cnf_transformation,[],[f939_D])).
fof(f939_D,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f870,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17) = s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),sK23(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK24(sK17,'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))))))),
  inference(superposition,[],[f455,f736])).
fof(f867,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X2),X3),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f455,f531])).
fof(f866,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),X0),X1),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))) )),
  inference(superposition,[],[f455,f529])).
fof(f865,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),
  inference(superposition,[],[f455,f525])).
fof(f864,plain,(
  p(s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),'const.list.NIL_0'),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) | s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.pred_set.EMPTY_0') != s(fun('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t')),bool),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17)))),
  inference(superposition,[],[f455,f523])).
fof(f928,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl0),
  inference(cnf_transformation,[],[f928_D])).
fof(f928_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f859,plain,(
  ( ! [X192,X193] : (p(s(bool,X192)) | p(s(bool,X193)) | s(bool,X193) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f737])).
fof(f756,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X22) != s(bool,X23)) )),
  inference(resolution,[],[f455,f472])).
fof(f930,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) | $spl4),
  inference(cnf_transformation,[],[f930_D])).
fof(f930_D,plain,(
  ( ! [X5] : (s(bool,X5) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f755,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | s(bool,X18) != s(bool,X19) | s(bool,X20) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f472])).
fof(f753,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f471])).
fof(f752,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f470])).
fof(f751,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0'))))) | s(bool,X7) != s(bool,X8)) )),
  inference(resolution,[],[f455,f468])).
fof(f750,plain,(
  ( ! [X4,X5,X3] : (p(s(bool,X3)) | ~p(s(bool,X4)) | s(bool,X3) != s(bool,X4) | s(bool,X5) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f468])).
fof(f749,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.inferProps.tenv_alpha_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.infer_t.infer_t'))),sK17),s('type.typeSystem.tenv_val','const.typeSystem.bind_var_list2_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t'))),sK15),s('type.typeSystem.tenv_val','const.typeSystem.Empty_0')))))) )),
  inference(resolution,[],[f455,f466])).
% SZS output end Proof for thm.inferProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1225
% Passive clauses: 29399
% Generated clauses: 71935
% Final active clauses: 964
% Final passive clauses: 22224
% Input formulas: 133
% Initial clauses: 282
% 
% Selected by SInE selection: 92
% SInE iterations: 1
% 
% Duplicate literals: 1913
% Trivial inequalities: 311
% Fw subsumption resolutions: 5773
% Fw demodulations: 7209
% Bw demodulations: 23
% 
% Simple tautologies: 4100
% Equational tautologies: 37
% Forward subsumptions: 21395
% 
% Binary resolution: 19064
% Forward superposition: 31297
% Backward superposition: 5632
% Equality resolution: 32
% 
% Split clauses: 1921
% Split components: 3984
% SAT solver clauses: 2047
% SAT solver unit clauses: 38
% SAT solver binary clauses: 846
% 
% Sat splits: 1921
% Sat splitting refutations: 107
% 
% Memory used [KB]: 26865
% Time elapsed: 1.886 s
% ------------------------------
% ------------------------------
% Success in time 13.68 s
