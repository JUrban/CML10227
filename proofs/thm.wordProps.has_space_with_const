Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordProps
% (94643)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 140
% Passive clauses: 1612
% Generated clauses: 22532
% Final active clauses: 136
% Final passive clauses: 1338
% Input formulas: 69
% Initial clauses: 85
% 
% Duplicate literals: 1520
% Trivial inequalities: 185
% Fw subsumption resolutions: 2716
% Fw demodulations: 3444
% Bw demodulations: 2
% 
% Simple tautologies: 315
% Equational tautologies: 25
% Forward subsumptions: 11511
% 
% Binary resolution: 10
% Forward superposition: 8537
% Backward superposition: 5540
% Self superposition: 185
% Equality factoring: 69
% Equality resolution: 20
% 
% Split clauses: 637
% Split components: 1290
% SAT solver clauses: 1332
% SAT solver unit clauses: 36
% SAT solver binary clauses: 220
% 
% Sat splits: 637
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1327
% TWLsolver calls for satisfiability: 129
% 
% Memory used [KB]: 14072
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordProps
% (94656)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 113
% Passive clauses: 631
% Generated clauses: 15881
% Final active clauses: 109
% Final passive clauses: 481
% Input formulas: 69
% Initial clauses: 85
% 
% Duplicate literals: 1068
% Trivial inequalities: 144
% Fw subsumption resolutions: 1249
% Fw demodulations: 1557
% Bw demodulations: 37
% Condensations: 1863
% Global subsumptions: 4
% 
% Simple tautologies: 229
% Equational tautologies: 24
% Forward subsumptions: 7855
% 
% Binary resolution: 8
% Forward superposition: 5178
% Backward superposition: 3697
% Self superposition: 163
% Equality factoring: 67
% Equality resolution: 18
% 
% Split clauses: 62
% Split components: 135
% SAT solver clauses: 1276
% SAT solver unit clauses: 158
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 8
% 
% Sat splits: 62
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1260
% TWLsolver calls for satisfiability: 7957
% 
% Memory used [KB]: 15351
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordProps
% SZS output start Proof for thm.wordProps
fof(f64483,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f64447])).
fof(f64447,plain,(
  s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(sK2),sK6),s('type.wordSem.state'(sK3,sK4),sK5))) != s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(sK2),sK6),s('type.wordSem.state'(sK3,sK4),sK5)))),
  inference(superposition,[],[f218,f48606])).
fof(f48606,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X4),X5),s('type.wordSem.state'(X0,X1),X3))) = s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X4),X5),s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.wordSem.state'(X0,X1),X3)))))) )),
  inference(forward_demodulation,[],[f48548,f285])).
fof(f285,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X1),X3),s('type.wordSem.state'(X2,X0),X4))) = s('type.option.option'(bool),happ(s(fun(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'type.option.option'(bool)),happ(s(fun('type.pair.prod'('type.wordSem.word_loc'(X1),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),fun(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.wordSem.word_loc'(X1),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),'const.pair.,_2'(s('type.wordSem.word_loc'(X1),X3),s('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'const.pair.,_2'(s('type.option.option'('type.wordSem.word_loc'(X2)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X2)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X2,X0),X4))),s('type.wordLang.store_name','const.wordLang.NextFree_0'))),s('type.option.option'('type.wordSem.word_loc'(X2)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X2)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X2,X0),X4))),s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'))))))))),s(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'_dst_x00x10x01x00_4'(s(fun('type.wordSem.word_loc'(X1),fun(fun('type.fcp.cart'(bool,X1),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.wordSem.word_loc'(X1),'type.wordSem.word_loc'(X1)),'_i_0_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),fun('type.fcp.cart'(bool,X1),'type.option.option'(bool))),'_dst_x00x10x01_3'(s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),fun(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),'_i_0_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X2),fun(fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X2),fun(fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)))),'_dst_x000x111_2'(s(fun(bool,'type.option.option'(bool)),'const.option.SOME_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),bool))),'_dst_x000x100x011_3'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.<=_0'),s(fun('type.fcp.cart'(bool,X1),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.num.num')),'_dst_x00x11_2'(s(fun('type.fcp.cart'(bool,X2),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2))),'_dst_x01x10_2'(s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2))),'const.words.word_sub_0'),s(fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2)),'_i_0_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0')))))))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X1),X3),s('type.wordSem.state'(X2,X0),X4))) = s('type.option.option'(bool),happ(s(fun(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'type.option.option'(bool)),happ(s(fun('type.pair.prod'('type.wordSem.word_loc'(X1),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),fun(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.wordSem.word_loc'(X1),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),'const.pair.,_2'(s('type.wordSem.word_loc'(X1),X3),s('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'const.pair.,_2'(s('type.option.option'('type.wordSem.word_loc'(X2)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X2)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X2,X0),X4))),s('type.wordLang.store_name','const.wordLang.NextFree_0'))),s('type.option.option'('type.wordSem.word_loc'(X2)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X2)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X2,X0),X4))),s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'))))))))),s(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'_dst_x00x10x01x00_4'(s(fun('type.wordSem.word_loc'(X1),fun(fun('type.fcp.cart'(bool,X1),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.wordSem.word_loc'(X1),'type.wordSem.word_loc'(X1)),'_i_0_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),fun('type.fcp.cart'(bool,X1),'type.option.option'(bool))),'_dst_x00x10x01_3'(s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),fun(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),'_i_0_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X2),fun(fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X2),fun(fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)))),'_dst_x000x111_2'(s(fun(bool,'type.option.option'(bool)),'const.option.SOME_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),bool))),'_dst_x000x100x011_3'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.<=_0'),s(fun('type.fcp.cart'(bool,X1),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.num.num')),'_dst_x00x11_2'(s(fun('type.fcp.cart'(bool,X2),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2))),'_dst_x01x10_2'(s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2))),'const.words.word_sub_0'),s(fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2)),'_i_0_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0')))))))))),
  inference(flattening,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ! [X3,X4] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X1),X3),s('type.wordSem.state'(X2,X0),X4))) = s('type.option.option'(bool),happ(s(fun(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'type.option.option'(bool)),happ(s(fun('type.pair.prod'('type.wordSem.word_loc'(X1),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),fun(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.wordSem.word_loc'(X1),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),'const.pair.,_2'(s('type.wordSem.word_loc'(X1),X3),s('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'const.pair.,_2'(s('type.option.option'('type.wordSem.word_loc'(X2)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X2)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X2,X0),X4))),s('type.wordLang.store_name','const.wordLang.NextFree_0'))),s('type.option.option'('type.wordSem.word_loc'(X2)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X2)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X2,X0),X4))),s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'))))))))),s(fun('type.wordSem.word_loc'(X1),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.option.option'(bool))),'_dst_x00x10x01x00_4'(s(fun('type.wordSem.word_loc'(X1),fun(fun('type.fcp.cart'(bool,X1),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.wordSem.word_loc'(X1),'type.wordSem.word_loc'(X1)),'_i_0_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),fun('type.fcp.cart'(bool,X1),'type.option.option'(bool))),'_dst_x00x10x01_3'(s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),fun(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2)))),'_i_0_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X2),fun(fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X2)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X2)),'type.option.option'('type.wordSem.word_loc'(X2))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.wordSem.word_loc'(X2),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X2),fun(fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.option.option'(bool)))),'_dst_x000x111_2'(s(fun(bool,'type.option.option'(bool)),'const.option.SOME_0'),s(fun('type.fcp.cart'(bool,X1),fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),bool))),'_dst_x000x100x011_3'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.<=_0'),s(fun('type.fcp.cart'(bool,X1),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.num.num')),'_dst_x00x11_2'(s(fun('type.fcp.cart'(bool,X2),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2))),'_dst_x01x10_2'(s(fun('type.fcp.cart'(bool,X2),fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2))),'const.words.word_sub_0'),s(fun('type.fcp.cart'(bool,X2),'type.fcp.cart'(bool,X2)),'_i_0_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0')))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8,X6,X7] : ! [X12,X13] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X6),X12),s('type.wordSem.state'(X7,X8),X13))) = s('type.option.option'(bool),happ(s(fun(fun('type.wordSem.word_loc'(X6),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'type.option.option'(bool))),'type.option.option'(bool)),happ(s(fun('type.pair.prod'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7)))),fun(fun('type.wordSem.word_loc'(X6),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.wordSem.word_loc'(X6),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7)))),'const.pair.,_2'(s('type.wordSem.word_loc'(X6),X12),s('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'const.pair.,_2'(s('type.option.option'('type.wordSem.word_loc'(X7)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X7,X8),X13))),s('type.wordLang.store_name','const.wordLang.NextFree_0'))),s('type.option.option'('type.wordSem.word_loc'(X7)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X7)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X7,X8),X13))),s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'))))))))),s(fun('type.wordSem.word_loc'(X6),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'type.option.option'(bool))),'_dst_x00x10x01x00_4'(s(fun('type.wordSem.word_loc'(X6),fun(fun('type.fcp.cart'(bool,X6),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.wordSem.word_loc'(X6),'type.wordSem.word_loc'(X6)),'_i_0_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),fun('type.fcp.cart'(bool,X6),'type.option.option'(bool))),'_dst_x00x10x01_3'(s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),fun(fun('type.option.option'('type.wordSem.word_loc'(X7)),fun('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7)))),'_i_0_0'),s(fun('type.fcp.cart'(bool,X6),fun('type.option.option'('type.wordSem.word_loc'(X7)),fun('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X7)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X7),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X6),fun('type.option.option'('type.wordSem.word_loc'(X7)),fun('type.wordSem.word_loc'(X7),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X7),fun(fun('type.fcp.cart'(bool,X7),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X6),fun('type.option.option'('type.wordSem.word_loc'(X7)),fun('type.fcp.cart'(bool,X7),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X7)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X7),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X7)),'type.option.option'('type.wordSem.word_loc'(X7))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X6),fun('type.fcp.cart'(bool,X7),fun('type.wordSem.word_loc'(X7),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X7),fun(fun('type.fcp.cart'(bool,X7),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X6),fun('type.fcp.cart'(bool,X7),fun('type.fcp.cart'(bool,X7),'type.option.option'(bool)))),'_dst_x000x111_2'(s(fun(bool,'type.option.option'(bool)),'const.option.SOME_0'),s(fun('type.fcp.cart'(bool,X6),fun('type.fcp.cart'(bool,X7),fun('type.fcp.cart'(bool,X7),bool))),'_dst_x000x100x011_3'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.<=_0'),s(fun('type.fcp.cart'(bool,X6),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X7),fun('type.fcp.cart'(bool,X7),'type.num.num')),'_dst_x00x11_2'(s(fun('type.fcp.cart'(bool,X7),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X7),fun('type.fcp.cart'(bool,X7),'type.fcp.cart'(bool,X7))),'_dst_x01x10_2'(s(fun('type.fcp.cart'(bool,X7),fun('type.fcp.cart'(bool,X7),'type.fcp.cart'(bool,X7))),'const.words.word_sub_0'),s(fun('type.fcp.cart'(bool,X7),'type.fcp.cart'(bool,X7)),'_i_0_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0')))))))))),
  file('thm.wordProps.has_space_with_const','thm.wordSem.has_space_def')).
fof(f48548,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X4),X5),s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.wordSem.state'(X0,X1),X3))))) = s('type.option.option'(bool),happ(s(fun(fun('type.wordSem.word_loc'(X4),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'type.option.option'(bool))),'type.option.option'(bool)),happ(s(fun('type.pair.prod'('type.wordSem.word_loc'(X4),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0)))),fun(fun('type.wordSem.word_loc'(X4),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.wordSem.word_loc'(X4),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0)))),'const.pair.,_2'(s('type.wordSem.word_loc'(X4),X5),s('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'const.pair.,_2'(s('type.option.option'('type.wordSem.word_loc'(X0)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))),s('type.wordLang.store_name','const.wordLang.NextFree_0'))),s('type.option.option'('type.wordSem.word_loc'(X0)),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X3))),s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'))))))))),s(fun('type.wordSem.word_loc'(X4),fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'type.option.option'(bool))),'_dst_x00x10x01x00_4'(s(fun('type.wordSem.word_loc'(X4),fun(fun('type.fcp.cart'(bool,X4),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.wordSem.word_loc'(X4),'type.wordSem.word_loc'(X4)),'_i_0_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),fun('type.fcp.cart'(bool,X4),'type.option.option'(bool))),'_dst_x00x10x01_3'(s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),fun(fun('type.option.option'('type.wordSem.word_loc'(X0)),fun('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'(bool))),'type.option.option'(bool))),'const.pair.pair_CASE_0'),s(fun('type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'type.pair.prod'('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0)))),'_i_0_0'),s(fun('type.fcp.cart'(bool,X4),fun('type.option.option'('type.wordSem.word_loc'(X0)),fun('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X0),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X4),fun('type.option.option'('type.wordSem.word_loc'(X0)),fun('type.wordSem.word_loc'(X0),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X0),fun(fun('type.fcp.cart'(bool,X0),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X4),fun('type.option.option'('type.wordSem.word_loc'(X0)),fun('type.fcp.cart'(bool,X0),'type.option.option'(bool)))),'_dst_x000x010x000x101_4'(s(fun('type.option.option'('type.wordSem.word_loc'(X0)),fun('type.option.option'(bool),fun(fun('type.wordSem.word_loc'(X0),'type.option.option'(bool)),'type.option.option'(bool)))),'const.option.option_CASE_0'),s(fun('type.option.option'('type.wordSem.word_loc'(X0)),'type.option.option'('type.wordSem.word_loc'(X0))),'_i_0_0'),s('type.option.option'(bool),'const.option.NONE_0'),s(fun('type.fcp.cart'(bool,X4),fun('type.fcp.cart'(bool,X0),fun('type.wordSem.word_loc'(X0),'type.option.option'(bool)))),'_dst_x001x110x000_3'(s(fun('type.wordSem.word_loc'(X0),fun(fun('type.fcp.cart'(bool,X0),'type.option.option'(bool)),fun(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'type.option.option'(bool)))),'const.wordSem.word_loc_CASE_0'),s(fun('type.fcp.cart'(bool,X4),fun('type.fcp.cart'(bool,X0),fun('type.fcp.cart'(bool,X0),'type.option.option'(bool)))),'_dst_x000x111_2'(s(fun(bool,'type.option.option'(bool)),'const.option.SOME_0'),s(fun('type.fcp.cart'(bool,X4),fun('type.fcp.cart'(bool,X0),fun('type.fcp.cart'(bool,X0),bool))),'_dst_x000x100x011_3'(s(fun('type.num.num',fun('type.num.num',bool)),'const.arithmetic.<=_0'),s(fun('type.fcp.cart'(bool,X4),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X0),fun('type.fcp.cart'(bool,X0),'type.num.num')),'_dst_x00x11_2'(s(fun('type.fcp.cart'(bool,X0),'type.num.num'),'const.words.w2n_0'),s(fun('type.fcp.cart'(bool,X0),fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0))),'_dst_x01x10_2'(s(fun('type.fcp.cart'(bool,X0),fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0))),'const.words.word_sub_0'),s(fun('type.fcp.cart'(bool,X0),'type.fcp.cart'(bool,X0)),'_i_0_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0'))))))))))),s(fun('type.num.num',fun('type.num.num','type.option.option'(bool))),'_dst_x0_1'(s(fun('type.num.num','type.option.option'(bool)),'_dst_x0_1'(s('type.option.option'(bool),'const.option.NONE_0')))))))))) )),
  inference(superposition,[],[f285,f259])).
fof(f259,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),X2))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X0)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X0,X1),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X3),s('type.wordSem.state'(X0,X1),X2)))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X6,X16] : ! [X13,X84] : s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X16),X13))) = s('type.finite_map.fmap'('type.wordLang.store_name','type.wordSem.word_loc'(X6)),'const.wordSem.state_store_1'(s('type.wordSem.state'(X6,X16),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X84),s('type.wordSem.state'(X6,X16),X13)))))),
  file('thm.wordProps.has_space_with_const','thm.wordSem.wordSem_88_prove_ltb')).
fof(f218,plain,(
  s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(sK2),sK6),s('type.wordSem.state'(sK3,sK4),sK5))) != s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(sK2),sK6),s('type.wordSem.state'(sK3,sK4),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK7))),s('type.wordSem.state'(sK3,sK4),sK5)))))),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(sK2),sK6),s('type.wordSem.state'(sK3,sK4),sK5))) != s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(sK2),sK6),s('type.wordSem.state'(sK3,sK4),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK7))),s('type.wordSem.state'(sK3,sK4),sK5)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3,sK4,sK5,sK6,sK7])],[f199])).
fof(f199,plain,(
  ? [X0,X1,X2,X3,X4,X5] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X0),X4),s('type.wordSem.state'(X1,X2),X3))) != s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X0),X4),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X0),X4),s('type.wordSem.state'(X1,X2),X3))) = s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X0),X4),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X0),X4),s('type.wordSem.state'(X1,X2),X3))) = s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X0),X4),s('type.wordSem.state'(X1,X2),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X5))),s('type.wordSem.state'(X1,X2),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X6),X10),s('type.wordSem.state'(X7,X8),X9))) = s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X6),X10),s('type.wordSem.state'(X7,X8),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X7,X8),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11] : s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X6),X10),s('type.wordSem.state'(X7,X8),X9))) = s('type.option.option'(bool),'const.wordSem.has_space_2'(s('type.wordSem.word_loc'(X6),X10),s('type.wordSem.state'(X7,X8),'const.wordSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X11))),s('type.wordSem.state'(X7,X8),X9)))))),
  file('thm.wordProps.has_space_with_const','thm.wordProps.has_space_with_const')).
% SZS output end Proof for thm.wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 260
% Passive clauses: 3961
% Generated clauses: 64771
% Final active clauses: 167
% Final passive clauses: 1489
% Input formulas: 69
% Initial clauses: 85
% Discarded non-redundant clauses: 771
% 
% Duplicate literals: 3180
% Trivial inequalities: 519
% Fw subsumption resolutions: 4135
% Fw demodulations: 6527
% Bw demodulations: 1500
% Condensations: 5913
% Global subsumptions: 11
% 
% Simple tautologies: 832
% Equational tautologies: 340
% Forward subsumptions: 39113
% Fw demodulations to eq. taut.: 20
% Bw demodulations to eq. taut.: 68
% 
% Unit resulting resolution: 2009
% Forward superposition: 21124
% Backward superposition: 17699
% Self superposition: 518
% Equality factoring: 147
% Equality resolution: 51
% 
% Split clauses: 112
% Split components: 235
% SAT solver clauses: 4236
% SAT solver unit clauses: 713
% SAT solver binary clauses: 509
% 
% Sat splits: 112
% Sat splitting refutations: 38
% 
% Memory used [KB]: 89294
% Time elapsed: 4.715 s
% ------------------------------
% ------------------------------
% Success in time 6.05 s
