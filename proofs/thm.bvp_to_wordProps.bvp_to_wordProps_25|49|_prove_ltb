Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvp_to_wordProps
% (8837)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 112
% Passive clauses: 1974
% Generated clauses: 21689
% Final active clauses: 92
% Final passive clauses: 1692
% Input formulas: 21
% Initial clauses: 48
% 
% Duplicate literals: 1108
% Trivial inequalities: 322
% Fw subsumption resolutions: 3583
% Fw demodulations: 2601
% Bw demodulations: 14
% 
% Simple tautologies: 360
% Equational tautologies: 66
% Forward subsumptions: 9651
% Bw demodulations to eq. taut.: 4
% 
% Binary resolution: 161
% Factoring: 2
% Forward superposition: 7327
% Backward superposition: 5977
% Self superposition: 264
% Equality factoring: 189
% Equality resolution: 20
% 
% Split clauses: 1373
% Split components: 2783
% SAT solver clauses: 2197
% SAT solver unit clauses: 23
% SAT solver binary clauses: 158
% 
% Sat splits: 1373
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2190
% TWLsolver calls for satisfiability: 164
% 
% Memory used [KB]: 9722
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.bvp_to_wordProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvp_to_wordProps
% SZS output start Proof for thm.bvp_to_wordProps
fof(f255,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f254,f85,f141,f122,f155,f168,f170,f83,f139,f87,f143,f88,f144,f224,f225,f84,f137,f218,f220,f123,f154])).
fof(f154,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK3(X2,X1,X0))))) ) | $spl10),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK3(X2,X1,X0))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f123,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK3(X2,X1,X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK3(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X2,X1,X0)),s('type.list.list'(X0),sK5(X2,X1,X0)))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK3(X2,X1,X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5])],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X12] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ? [X13,X14,X15] : (s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),X15))))) & s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X13)))))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_25|49|_prove_ltb','thm.bvp_to_wordProps.LESS_LENGTH')).
fof(f220,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)))) | $spl40),
  inference(cnf_transformation,[],[f220_D])).
fof(f220_D,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f218,plain,(
  s('type.num.num',sK2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)))) | ($spl4 | $spl10 | $spl24)),
  inference(subsumption_resolution,[],[f215,f141])).
fof(f215,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num',sK2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)))) | ($spl10 | $spl24)),
  inference(superposition,[],[f154,f170])).
fof(f137,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num',sK2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),X5)))))) ) | $spl0),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num',sK2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),X5)))))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f84,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num',sK2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),X5)))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) & ! [X3,X4,X5] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),X5))))) | s('type.num.num',sK2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & ! [X3,X4,X5] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => ? [X3,X4,X5] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X5))))) & s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ? [X9,X10,X11] : (s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X11))))) & s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => ? [X9,X10,X11] : (s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),X11))))) & s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_25|49|_prove_ltb','thm.bvp_to_wordProps.bvp_to_wordProps_25|49|_prove_ltb')).
fof(f225,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))))) ) | $spl42),
  inference(cnf_transformation,[],[f225_D])).
fof(f225_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f224,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))))) ) | ($spl0 | $spl40)),
  inference(trivial_inequality_removal,[],[f221])).
fof(f221,plain,(
  ( ! [X0,X1] : (s('type.num.num',sK2) != s('type.num.num',sK2) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),X1)))))) ) | ($spl0 | $spl40)),
  inference(superposition,[],[f137,f220])).
fof(f144,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f88,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_25|49|_prove_ltb',aHL_BOOL_CASES)).
fof(f143,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f87,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_25|49|_prove_ltb',aHL_FALSITY)).
fof(f139,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) | $spl2),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f83,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))))),
  inference(cnf_transformation,[],[f58])).
fof(f170,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | $spl24),
  inference(cnf_transformation,[],[f170_D])).
fof(f170_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f168,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | ($spl2 | $spl7 | $spl8)),
  inference(subsumption_resolution,[],[f163,f143])).
fof(f163,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))) | ($spl2 | $spl8)),
  inference(superposition,[],[f139,f144])).
fof(f155,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK3(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X2,X1,X0)),s('type.list.list'(X0),sK5(X2,X1,X0))))))) ) | $spl12),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK3(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X2,X1,X0)),s('type.list.list'(X0),sK5(X2,X1,X0))))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK3(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK4(X2,X1,X0)),s('type.list.list'(X0),sK5(X2,X1,X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f141,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f85,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.bvp_to_wordProps.bvp_to_wordProps_25|49|_prove_ltb',aHL_TRUTH)).
fof(f254,plain,(
  $false | ($spl4 | $spl12 | $spl24 | $spl42)),
  inference(subsumption_resolution,[],[f253,f225])).
fof(f253,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK2,sK1,sK0)),s('type.list.list'(sK0),sK5(sK2,sK1,sK0)))))) | ($spl4 | $spl12 | $spl24)),
  inference(subsumption_resolution,[],[f248,f141])).
fof(f248,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4(sK2,sK1,sK0)),s('type.list.list'(sK0),sK5(sK2,sK1,sK0)))))) | ($spl12 | $spl24)),
  inference(superposition,[],[f155,f170])).
% SZS output end Proof for thm.bvp_to_wordProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 31
% Generated clauses: 165
% Final active clauses: 16
% Final passive clauses: 10
% Input formulas: 21
% Initial clauses: 48
% 
% Duplicate literals: 2
% Trivial inequalities: 2
% Fw subsumption resolutions: 9
% Fw demodulations: 4
% Bw demodulations: 4
% Condensations: 4
% Global subsumptions: 9
% 
% Simple tautologies: 24
% Equational tautologies: 4
% Forward subsumptions: 23
% 
% Binary resolution: 11
% Factoring: 1
% Forward superposition: 26
% Backward superposition: 7
% Self superposition: 2
% Equality factoring: 2
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 121
% SAT solver unit clauses: 61
% SAT solver binary clauses: 14
% SAT solver learnt clauses: 19
% 
% Sat splits: 3
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 84
% TWLsolver calls for satisfiability: 124
% 
% Memory used [KB]: 895
% Time elapsed: 0.006 s
% ------------------------------
% ------------------------------
% Success in time 0.627 s
