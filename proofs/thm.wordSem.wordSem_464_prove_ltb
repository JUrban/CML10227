Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.wordSem
% (36822)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 280
% Passive clauses: 2107
% Generated clauses: 27272
% Final active clauses: 278
% Final passive clauses: 1613
% Input formulas: 21
% Initial clauses: 369
% 
% Duplicate literals: 1124
% Trivial inequalities: 1311
% Fw subsumption resolutions: 4321
% Fw demodulations: 3273
% 
% Simple tautologies: 852
% Equational tautologies: 28
% Forward subsumptions: 12993
% 
% Binary resolution: 61
% Forward superposition: 9131
% Backward superposition: 7302
% Self superposition: 134
% Equality factoring: 87
% Equality resolution: 59
% 
% Split clauses: 476
% Split components: 952
% SAT solver clauses: 1394
% SAT solver unit clauses: 25
% SAT solver binary clauses: 180
% 
% Sat splits: 476
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1394
% TWLsolver calls for satisfiability: 140
% 
% Memory used [KB]: 9338
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.wordSem
% (36871)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 240
% Passive clauses: 778
% Generated clauses: 22372
% Final active clauses: 231
% Final passive clauses: 448
% Input formulas: 21
% Initial clauses: 369
% 
% Duplicate literals: 1206
% Trivial inequalities: 802
% Fw subsumption resolutions: 2479
% Fw demodulations: 1922
% Bw demodulations: 98
% Condensations: 1918
% Global subsumptions: 7
% 
% Simple tautologies: 650
% Equational tautologies: 28
% Forward subsumptions: 10991
% 
% Binary resolution: 21
% Forward superposition: 6117
% Backward superposition: 6383
% Self superposition: 126
% Equality factoring: 85
% Equality resolution: 48
% 
% Split clauses: 35
% Split components: 70
% SAT solver clauses: 1403
% SAT solver unit clauses: 369
% SAT solver binary clauses: 195
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 22
% 
% Sat splits: 35
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1383
% TWLsolver calls for satisfiability: 10066
% 
% Memory used [KB]: 11897
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.wordSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.wordSem
% SZS output start Proof for thm.wordSem
fof(f110655,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f248,f273])).
fof(f273,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X0),X3),s('type.num.num',X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),sK47(X3,X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK48(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2,X3] : s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X0),X3),s('type.num.num',X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2))) = s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),sK47(X3,X2,X1,X0)),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK48(X3,X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK47,sK48])],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5))) = s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X0),X3),s('type.num.num',X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2,X3] : ? [X4,X5] : s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X0),X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X5))) = s('type.pair.prod'('type.ffi.ffi_state'(X0),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X0),X3),s('type.num.num',X1),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X13] : ! [X8,X14,X15] : ? [X11,X12] : s('type.pair.prod'('type.ffi.ffi_state'(X13),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X13),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X12))) = s('type.pair.prod'('type.ffi.ffi_state'(X13),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X13),X15),s('type.num.num',X8),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X14)))),
  file('thm.wordSem.wordSem_464_prove_ltb','thm.targetProps.targetProps_8_prove_ltb')).
fof(f248,plain,(
  ( ! [X6,X5] : (s('type.pair.prod'('type.ffi.ffi_state'(sK42),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK42),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(sK42),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK42),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK41,sK42),sK44))),s('type.num.num',sK45),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK43)))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(sK42),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(sK42),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(sK42),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(sK42),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(sK41,sK42),sK44))),s('type.num.num',sK45),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),sK43)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK41,sK42,sK43,sK44,sK45])],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2,X3,X4] : ! [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) != s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4] : ? [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : ? [X5,X6] : s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X1),X5),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X6))) = s('type.pair.prod'('type.ffi.ffi_state'(X1),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X1),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X0,X1),X3))),s('type.num.num',X4),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : ? [X11,X12] : s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X7),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X12))) = s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X7),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X6,X7),X9))),s('type.num.num',X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : ? [X11,X12] : s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.pair.,_2'(s('type.ffi.ffi_state'(X7),X11),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X12))) = s('type.pair.prod'('type.ffi.ffi_state'(X7),'type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))))),'const.ffi.call_FFI_3'(s('type.ffi.ffi_state'(X7),'const.wordSem.state_ffi_1'(s('type.wordSem.state'(X6,X7),X9))),s('type.num.num',X10),s('type.list.list'('type.fcp.cart'(bool,'type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))),X8)))),
  file('thm.wordSem.wordSem_464_prove_ltb','thm.wordSem.wordSem_464_prove_ltb')).
% SZS output end Proof for thm.wordSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 560
% Passive clauses: 2199
% Generated clauses: 110051
% Final active clauses: 481
% Final passive clauses: 1364
% Input formulas: 21
% Initial clauses: 369
% 
% Duplicate literals: 3078
% Trivial inequalities: 3134
% Fw subsumption resolutions: 13587
% Fw demodulations: 16690
% Bw demodulations: 346
% Condensations: 6989
% Global subsumptions: 116
% 
% Simple tautologies: 2279
% Equational tautologies: 1106
% Forward subsumptions: 60717
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 13651
% Forward superposition: 30571
% Backward superposition: 20659
% Self superposition: 220
% Equality factoring: 123
% Equality resolution: 162
% 
% Split clauses: 28
% Split components: 56
% SAT solver clauses: 2497
% SAT solver unit clauses: 199
% SAT solver binary clauses: 640
% 
% Sat splits: 28
% Sat splitting refutations: 124
% 
% Memory used [KB]: 18933
% Time elapsed: 4.651 s
% ------------------------------
% ------------------------------
% Success in time 6 s
