Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.patProps
% (52007)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 778
% Passive clauses: 6677
% Generated clauses: 22497
% Final active clauses: 742
% Final passive clauses: 5610
% Input formulas: 77
% Initial clauses: 200
% 
% Duplicate literals: 305
% Trivial inequalities: 119
% Fw subsumption resolutions: 1692
% Fw demodulations: 1777
% Bw demodulations: 111
% 
% Simple tautologies: 223
% Equational tautologies: 57
% Forward subsumptions: 11464
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 6904
% Factoring: 1294
% Forward superposition: 4967
% Backward superposition: 5018
% Self superposition: 46
% Equality factoring: 26
% Equality resolution: 21
% 
% Split clauses: 247
% Split components: 495
% SAT solver clauses: 473
% SAT solver unit clauses: 11
% SAT solver binary clauses: 70
% 
% Sat splits: 247
% 
% TWLsolver clauses: 473
% TWLsolver calls for satisfiability: 327
% 
% Memory used [KB]: 10746
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.patProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.patProps
% SZS output start Proof for thm.patProps
fof(f11613,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f11583,f294,f501,f663,f666,f299,f511,f370,f555,f11468,f11471,f6584,f9407,f293,f503,f306,f520,f373,f557,f374,f558])).
fof(f558,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X1),s('type.patSem.state'(X0),X2),s('type.list.list'('type.patLang.exp'),X3))) != s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X5))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X3)))) ) | $spl84),
  inference(cnf_transformation,[],[f558_D])).
fof(f558_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X1),s('type.patSem.state'(X0),X2),s('type.list.list'('type.patLang.exp'),X3))) != s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X5))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X3)))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f374,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X3))) | s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X1),s('type.patSem.state'(X0),X2),s('type.list.list'('type.patLang.exp'),X3))) != s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X5)))))) )),
  inference(cnf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X1),s('type.patSem.state'(X0),X2),s('type.list.list'('type.patLang.exp'),X3))) != s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X5))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X3))))),
  inference(ennf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X1),s('type.patSem.state'(X0),X2),s('type.list.list'('type.patLang.exp'),X3))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X5))))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X3))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0] : ! [X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X1),s('type.patSem.state'(X0),X2),s('type.list.list'('type.patLang.exp'),X3))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X4),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X5))))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X5))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X3))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X6] : ! [X10,X9,X21,X8,X7] : (s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X10),s('type.patSem.state'(X6),X9),s('type.list.list'('type.patLang.exp'),X21))) = s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X6),X8),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X7))))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X7))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),X21))))),
  file('thm.patProps.evaluate_sing','thm.patProps.evaluate_length')).
fof(f557,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) | $spl82),
  inference(cnf_transformation,[],[f557_D])).
fof(f557_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f373,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X17,X15] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X15))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),X15)))))),
  file('thm.patProps.evaluate_sing','thm.list.LENGTH|split|1')).
fof(f520,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl16),
  inference(cnf_transformation,[],[f520_D])).
fof(f520_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f306,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.patProps.evaluate_sing','thm.list.LENGTH|split|0')).
fof(f503,plain,(
  s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) = s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),sK16),s('type.patSem.state'(sK12),sK15),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK17),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) | $spl2),
  inference(cnf_transformation,[],[f503_D])).
fof(f503_D,plain,(
  s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) = s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),sK16),s('type.patSem.state'(sK12),sK15),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK17),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f293,plain,(
  s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) = s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),sK16),s('type.patSem.state'(sK12),sK15),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK17),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) = s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),sK16),s('type.patSem.state'(sK12),sK15),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK17),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) & ! [X6] : s('type.list.list'('type.patSem.v'),sK13) != s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17])],[f176])).
fof(f176,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X2),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1))))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X4),s('type.patSem.state'(X0),X3),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X5),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) & ! [X6] : s('type.list.list'('type.patSem.v'),X1) != s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))))),
  inference(ennf_transformation,[],[f80])).
fof(f80,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X2),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1))))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X4),s('type.patSem.state'(X0),X3),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X5),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) => ? [X6] : s('type.list.list'('type.patSem.v'),X1) = s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ~! [X0] : ! [X1,X2,X3,X4,X5] : (s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X0),X2),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1))))) = s('type.pair.prod'('type.patSem.state'(X0),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X4),s('type.patSem.state'(X0),X3),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X5),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) => ? [X6] : s('type.list.list'('type.patSem.v'),X1) = s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10,X11] : (s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X6),X8),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X7))))) = s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X10),s('type.patSem.state'(X6),X9),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X11),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) => ? [X12] : s('type.list.list'('type.patSem.v'),X7) = s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X12),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10,X11] : (s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(X6),X8),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X7))))) = s('type.pair.prod'('type.patSem.state'(X6),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.patSem.evaluate_3'(s('type.list.list'('type.patSem.v'),X10),s('type.patSem.state'(X6),X9),s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',X11),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) => ? [X12] : s('type.list.list'('type.patSem.v'),X7) = s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X12),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))))),
  file('thm.patProps.evaluate_sing','thm.patProps.evaluate_sing')).
fof(f9407,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) != s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),X0),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X1)))) ) | $spl2770),
  inference(cnf_transformation,[],[f9407_D])).
fof(f9407_D,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) != s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),X0),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X1)))) ) <=> ~$spl2770),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2770])])).
fof(f6584,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X1))) | s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) != s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),X0),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1)))))) ) | ($spl2 | $spl16 | $spl82 | $spl84)),
  inference(forward_demodulation,[],[f6583,f520])).
fof(f6583,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),'const.list.NIL_0'))))) | s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) != s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),X0),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1)))))) ) | ($spl2 | $spl82 | $spl84)),
  inference(forward_demodulation,[],[f6579,f557])).
fof(f6579,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),sK14),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),sK13))))) != s('type.pair.prod'('type.patSem.state'(sK12),'type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v')),'const.pair.,_2'(s('type.patSem.state'(sK12),X0),s('type.semanticPrimitives.result'('type.list.list'('type.patSem.v'),'type.patSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.patSem.v'),X1))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patLang.exp'),'const.list.CONS_2'(s('type.patLang.exp',sK17),s('type.list.list'('type.patLang.exp'),'const.list.NIL_0')))))) ) | ($spl2 | $spl84)),
  inference(superposition,[],[f558,f503])).
fof(f11471,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),sK13))) | $spl3138),
  inference(cnf_transformation,[],[f11471_D])).
fof(f11471_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),sK13))) <=> ~$spl3138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3138])])).
fof(f11468,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.patSem.v'),sK13))) | $spl2770),
  inference(equality_resolution,[],[f9407])).
fof(f555,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl78),
  inference(cnf_transformation,[],[f555_D])).
fof(f555_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f370,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1] : ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0')))))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0'))) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X18] : (s('type.list.list'(X6),X18) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,'const.list.HD_1'(s('type.list.list'(X6),X18))),s('type.list.list'(X6),'const.list.NIL_0'))) <=> s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X18))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),
  file('thm.patProps.evaluate_sing','thm.misc.SING_HD|split|1')).
fof(f511,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl10),
  inference(cnf_transformation,[],[f511_D])).
fof(f511_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f299,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f39])).
fof(f39,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.patProps.evaluate_sing','thm.numeral.numeral_distrib|split|13')).
fof(f666,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl270),
  inference(cnf_transformation,[],[f666_D])).
fof(f666_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0')))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f663,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,'const.list.HD_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.NIL_0')))) ) | ($spl10 | $spl78)),
  inference(backward_demodulation,[],[f511,f555])).
fof(f501,plain,(
  ( ! [X6] : (s('type.list.list'('type.patSem.v'),sK13) != s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))) ) | $spl0),
  inference(cnf_transformation,[],[f501_D])).
fof(f501_D,plain,(
  ( ! [X6] : (s('type.list.list'('type.patSem.v'),sK13) != s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f294,plain,(
  ( ! [X6] : (s('type.list.list'('type.patSem.v'),sK13) != s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v',X6),s('type.list.list'('type.patSem.v'),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f222])).
fof(f11583,plain,(
  $false | ($spl0 | $spl270 | $spl3138)),
  inference(subsumption_resolution,[],[f11582,f501])).
fof(f11582,plain,(
  s('type.list.list'('type.patSem.v'),sK13) = s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v','const.list.HD_1'(s('type.list.list'('type.patSem.v'),sK13))),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))) | ($spl270 | $spl3138)),
  inference(trivial_inequality_removal,[],[f11472])).
fof(f11472,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.list.list'('type.patSem.v'),sK13) = s('type.list.list'('type.patSem.v'),'const.list.CONS_2'(s('type.patSem.v','const.list.HD_1'(s('type.list.list'('type.patSem.v'),sK13))),s('type.list.list'('type.patSem.v'),'const.list.NIL_0'))) | ($spl270 | $spl3138)),
  inference(superposition,[],[f666,f11471])).
% SZS output end Proof for thm.patProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 495
% Passive clauses: 1589
% Generated clauses: 11303
% Final active clauses: 469
% Final passive clauses: 1020
% Input formulas: 77
% Initial clauses: 200
% 
% Duplicate literals: 114
% Trivial inequalities: 58
% Fw subsumption resolutions: 801
% Fw demodulations: 965
% Bw demodulations: 86
% Condensations: 121
% Global subsumptions: 13
% 
% Simple tautologies: 201
% Equational tautologies: 8
% Forward subsumptions: 5707
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 2107
% Factoring: 303
% Forward superposition: 2564
% Backward superposition: 2299
% Self superposition: 27
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 1945
% SAT solver unit clauses: 251
% SAT solver binary clauses: 78
% SAT solver learnt clauses: 28
% SAT solver learnt literals: 11
% 
% Sat splits: 8
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 1891
% TWLsolver calls for satisfiability: 1722
% 
% Memory used [KB]: 9210
% Time elapsed: 0.297 s
% ------------------------------
% ------------------------------
% Success in time 1.01 s
