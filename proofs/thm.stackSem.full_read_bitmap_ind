Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.stackSem
% (81462)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 134
% Passive clauses: 1827
% Generated clauses: 13081
% Final active clauses: 125
% Final passive clauses: 1539
% Input formulas: 18
% Initial clauses: 26
% 
% Duplicate literals: 857
% Trivial inequalities: 90
% Fw subsumption resolutions: 1572
% Fw demodulations: 1950
% Bw demodulations: 8
% 
% Simple tautologies: 243
% Equational tautologies: 19
% Forward subsumptions: 5789
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 294
% Forward superposition: 5060
% Backward superposition: 2965
% Self superposition: 95
% Equality factoring: 32
% Equality resolution: 22
% 
% Split clauses: 386
% Split components: 777
% SAT solver clauses: 771
% SAT solver unit clauses: 9
% SAT solver binary clauses: 101
% 
% Sat splits: 386
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 771
% TWLsolver calls for satisfiability: 162
% 
% Memory used [KB]: 11897
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.stackSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.stackSem
% SZS output start Proof for thm.stackSem
fof(f524,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f523,f122,f125,f67,f93,f78,f104,f180,f183,f181,f72,f101,f73,f103,f194,f70,f99,f512,f518,f135,f136,f65,f95,f74,f102,f506,f508,f324,f325,f82,f107,f138,f139,f66,f94])).
fof(f94,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X5))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X6),s('type.num.num',X7))))))) ) | $spl2),
  inference(cnf_transformation,[],[f94_D])).
fof(f94_D,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X5))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X6),s('type.num.num',X7))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f66,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X5))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X6),s('type.num.num',X7))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X8))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X9)))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X5))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X6),s('type.num.num',X7)))))) & ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2] : (! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X8))),s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X9)))))) & ! [X5,X6,X7] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X5))),s('type.wordSem.word_loc'(X1),'const.wordSem.Loc_2'(s('type.num.num',X6),s('type.num.num',X7)))))) & ? [X3,X4] : ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X3))),s('type.wordSem.word_loc'(X1),X4)))))),
  inference(rectify,[],[f47])).
fof(f47,plain,(
  ? [X0,X1,X2] : (! [X6,X7] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X6))),s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X7)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X3))),s('type.wordSem.word_loc'(X1),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5)))))) & ? [X8,X9] : ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X8))),s('type.wordSem.word_loc'(X1),X9)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ? [X0,X1,X2] : ((! [X6,X7] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X6))),s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X7)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X3))),s('type.wordSem.word_loc'(X1),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5))))))) & ? [X8,X9] : ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X8))),s('type.wordSem.word_loc'(X1),X9)))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2] : ((! [X6,X7] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X6))),s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X7)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X3))),s('type.wordSem.word_loc'(X1),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5))))))) => ! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X8))),s('type.wordSem.word_loc'(X1),X9)))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1] : ! [X2] : ((! [X6,X7] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X6))),s('type.wordSem.word_loc'(X1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X1),X7)))))) & ! [X3,X4,X5] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X3))),s('type.wordSem.word_loc'(X1),'const.wordSem.Loc_2'(s('type.num.num',X4),s('type.num.num',X5))))))) => ! [X8,X9] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X0)),fun('type.wordSem.word_loc'(X1),bool)),X2),s('type.list.list'('type.fcp.cart'(bool,X0)),X8))),s('type.wordSem.word_loc'(X1),X9)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : ((! [X9,X10] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X7),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun('type.wordSem.word_loc'(X7),bool)),X8),s('type.list.list'('type.fcp.cart'(bool,X6)),X9))),s('type.wordSem.word_loc'(X7),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X7),X10)))))) & ! [X9,X11,X12] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X7),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun('type.wordSem.word_loc'(X7),bool)),X8),s('type.list.list'('type.fcp.cart'(bool,X6)),X9))),s('type.wordSem.word_loc'(X7),'const.wordSem.Loc_2'(s('type.num.num',X11),s('type.num.num',X12))))))) => ! [X13,X14] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X7),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun('type.wordSem.word_loc'(X7),bool)),X8),s('type.list.list'('type.fcp.cart'(bool,X6)),X13))),s('type.wordSem.word_loc'(X7),X14)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : ((! [X9,X10] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X7),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun('type.wordSem.word_loc'(X7),bool)),X8),s('type.list.list'('type.fcp.cart'(bool,X6)),X9))),s('type.wordSem.word_loc'(X7),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X7),X10)))))) & ! [X9,X11,X12] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X7),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun('type.wordSem.word_loc'(X7),bool)),X8),s('type.list.list'('type.fcp.cart'(bool,X6)),X9))),s('type.wordSem.word_loc'(X7),'const.wordSem.Loc_2'(s('type.num.num',X11),s('type.num.num',X12))))))) => ! [X13,X14] : p(s(bool,happ(s(fun('type.wordSem.word_loc'(X7),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,X6)),fun('type.wordSem.word_loc'(X7),bool)),X8),s('type.list.list'('type.fcp.cart'(bool,X6)),X13))),s('type.wordSem.word_loc'(X7),X14)))))),
  file('thm.stackSem.full_read_bitmap_ind','thm.stackSem.full_read_bitmap_ind')).
fof(f139,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X0))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl48),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X0))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f138,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X0))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Loc_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | ($spl2 | $spl14)),
  inference(resolution,[],[f94,f102])).
fof(f107,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK6(X1,X0)),s('type.num.num',sK7(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK5(X1,X0))))) ) | $spl24),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK6(X1,X0)),s('type.num.num',sK7(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK5(X1,X0))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f82,plain,(
  ( ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK6(X1,X0)),s('type.num.num',sK7(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK5(X1,X0))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),sK5(X1,X0)))) | s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',sK6(X1,X0)),s('type.num.num',sK7(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5,sK6,sK7])],[f33])).
fof(f33,plain,(
  ! [X0,X1] : (? [X4] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4))) | ? [X2,X3] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1] : (? [X4] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X0),X4))) | ? [X2,X3] : s('type.wordSem.word_loc'(X0),X1) = s('type.wordSem.word_loc'(X0),'const.wordSem.Loc_2'(s('type.num.num',X2),s('type.num.num',X3))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X24] : (? [X25] : s('type.wordSem.word_loc'(X6),X24) = s('type.wordSem.word_loc'(X6),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,X6),X25))) | ? [X26,X27] : s('type.wordSem.word_loc'(X6),X24) = s('type.wordSem.word_loc'(X6),'const.wordSem.Loc_2'(s('type.num.num',X26),s('type.num.num',X27))))),
  file('thm.stackSem.full_read_bitmap_ind','thm.wordSem.word_loc_nchotomy')).
fof(f325,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X1))),s('type.wordSem.word_loc'(sK1),X0))) | s('type.wordSem.word_loc'(sK1),X0) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(X0,sK1))))) ) | $spl88),
  inference(cnf_transformation,[],[f325_D])).
fof(f325_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X1))),s('type.wordSem.word_loc'(sK1),X0))) | s('type.wordSem.word_loc'(sK1),X0) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(X0,sK1))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f324,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X1))),s('type.wordSem.word_loc'(sK1),X0))) | s('type.wordSem.word_loc'(sK1),X0) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(X0,sK1))))) ) | ($spl24 | $spl48)),
  inference(superposition,[],[f139,f107])).
fof(f508,plain,(
  s('type.wordSem.word_loc'(sK1),sK4) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(sK4,sK1)))) | $spl124),
  inference(cnf_transformation,[],[f508_D])).
fof(f508_D,plain,(
  s('type.wordSem.word_loc'(sK1),sK4) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(sK4,sK1)))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f506,plain,(
  s('type.wordSem.word_loc'(sK1),sK4) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(sK4,sK1)))) | ($spl44 | $spl57 | $spl88)),
  inference(subsumption_resolution,[],[f483,f183])).
fof(f483,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.wordSem.word_loc'(sK1),sK4) = s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),sK5(sK4,sK1)))) | ($spl44 | $spl88)),
  inference(superposition,[],[f325,f125])).
fof(f102,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f74,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X15] : (s(bool,'T_0') = s(bool,X15) <=> p(s(bool,X15)))),
  file('thm.stackSem.full_read_bitmap_ind','thm.bool.EQ_CLAUSES|split|0')).
fof(f95,plain,(
  ( ! [X8,X9] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X8))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X9))))))) ) | $spl4),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  ( ! [X8,X9] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X8))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X9))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f65,plain,(
  ( ! [X8,X9] : (p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X8))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X9))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f136,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X0))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X1)))))) ) | $spl46),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X0))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X1)))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f135,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X0))),s('type.wordSem.word_loc'(sK1),'const.wordSem.Word_1'(s('type.fcp.cart'(bool,sK1),X1)))))) ) | ($spl4 | $spl14)),
  inference(resolution,[],[f95,f102])).
fof(f518,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X2))),s('type.wordSem.word_loc'(sK1),sK4)))) ) | $spl130),
  inference(cnf_transformation,[],[f518_D])).
fof(f518_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X2))),s('type.wordSem.word_loc'(sK1),sK4)))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f512,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),X2))),s('type.wordSem.word_loc'(sK1),sK4)))) ) | ($spl46 | $spl124)),
  inference(superposition,[],[f136,f508])).
fof(f99,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f70,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.stackSem.full_read_bitmap_ind',aHL_FALSITY)).
fof(f194,plain,(
  $false | ($spl9 | $spl54)),
  inference(resolution,[],[f181,f99])).
fof(f103,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) ) | $spl16),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f73,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f54])).
fof(f101,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f72,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.stackSem.full_read_bitmap_ind',aHL_BOOL_CASES)).
fof(f181,plain,(
  ( ! [X2] : (p(s(bool,X2))) ) | $spl54),
  inference(cnf_transformation,[],[f181_D])).
fof(f181_D,plain,(
  ( ! [X2] : (p(s(bool,X2))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f183,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl57),
  inference(cnf_transformation,[],[f183_D])).
fof(f183_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f180,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X2))) ) | ($spl12 | $spl16)),
  inference(subsumption_resolution,[],[f167,f103])).
fof(f167,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X2)) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f103,f101])).
fof(f104,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f78,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.stackSem.full_read_bitmap_ind','thm.bool.EQ_CLAUSES|split|2')).
fof(f93,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4)))) | $spl1),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f67,plain,(
  ~p(s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4))))),
  inference(cnf_transformation,[],[f53])).
fof(f125,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4))) | $spl44),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f122,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.wordSem.word_loc'(sK1),bool),happ(s(fun('type.list.list'('type.fcp.cart'(bool,sK0)),fun('type.wordSem.word_loc'(sK1),bool)),sK2),s('type.list.list'('type.fcp.cart'(bool,sK0)),sK3))),s('type.wordSem.word_loc'(sK1),sK4))) | ($spl1 | $spl18)),
  inference(resolution,[],[f104,f93])).
fof(f523,plain,(
  $false | ($spl44 | $spl57 | $spl130)),
  inference(subsumption_resolution,[],[f522,f183])).
fof(f522,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl44 | $spl130)),
  inference(backward_demodulation,[],[f518,f125])).
% SZS output end Proof for thm.stackSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 79
% Generated clauses: 470
% Final active clauses: 26
% Final passive clauses: 29
% Input formulas: 18
% Initial clauses: 26
% 
% Duplicate literals: 5
% Trivial inequalities: 13
% Fw subsumption resolutions: 22
% Fw demodulations: 35
% Bw demodulations: 18
% Condensations: 2
% 
% Simple tautologies: 12
% Equational tautologies: 4
% Forward subsumptions: 208
% 
% Binary resolution: 15
% Forward superposition: 124
% Backward superposition: 104
% Self superposition: 9
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 112
% SAT solver unit clauses: 37
% SAT solver binary clauses: 17
% SAT solver learnt clauses: 1
% 
% Sat splits: 5
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 111
% TWLsolver calls for satisfiability: 144
% 
% Memory used [KB]: 1663
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 0.67 s
