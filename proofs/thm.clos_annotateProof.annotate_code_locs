Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 150 next slice time: 5
dis+11_7_3 on thm.clos_annotateProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_annotateProof
% SZS output start Proof for thm.clos_annotateProof
fof(f902,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f901])).
fof(f901,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0))) != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0)))),
  inference(superposition,[],[f39,f748])).
fof(f748,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X0)))))) )),
  inference(forward_demodulation,[],[f745,f43])).
fof(f43,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X0)))))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X0)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X8))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X8)))))))),
  file('thm.clos_annotateProof.annotate_code_locs','thm.clos_annotateProof.clos_annotateProof_3|48|_prove_ltb')).
fof(f745,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X0))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X0)))))))) )),
  inference(superposition,[],[f56,f44])).
fof(f44,plain,(
  ( ! [X0] : (s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X0))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0')))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0] : s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X0))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8] : s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X8))) = s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),X8))))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0')))),
  file('thm.clos_annotateProof.annotate_code_locs','thm.clos_annotate.annotate_def')).
fof(f56,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),X0),s('type.num.num',X1),s('type.num.num',X2),s('type.sptree.spt'('type.num.num'),X3)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),X0),s('type.num.num',X1),s('type.num.num',X2),s('type.sptree.spt'('type.num.num'),X3)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8,X9,X10,X11] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X8))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),X8),s('type.num.num',X9),s('type.num.num',X10),s('type.sptree.spt'('type.num.num'),X11)))))),
  file('thm.clos_annotateProof.annotate_code_locs','thm.clos_annotateProof.clos_annotateProof_29_prove_ltb')).
fof(f39,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0))) != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),sK0)))))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),sK0))) != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f31])).
fof(f31,plain,(
  ? [X0] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) != s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X0)))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X0))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X6))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),X6))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),X6)))))),
  file('thm.clos_annotateProof.annotate_code_locs','thm.clos_annotateProof.annotate_code_locs')).
% SZS output end Proof for thm.clos_annotateProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 131
% Generated clauses: 824
% Final active clauses: 31
% Final passive clauses: 69
% Input formulas: 14
% Initial clauses: 18
% 
% Duplicate literals: 90
% Trivial inequalities: 24
% Fw subsumption resolutions: 75
% Fw demodulations: 28
% Bw demodulations: 5
% 
% Simple tautologies: 56
% Equational tautologies: 17
% Forward subsumptions: 396
% 
% Binary resolution: 22
% Forward superposition: 291
% Backward superposition: 196
% Self superposition: 28
% Equality factoring: 28
% Equality resolution: 7
% 
% Split clauses: 20
% Split components: 46
% SAT solver clauses: 28
% SAT solver unit clauses: 2
% SAT solver binary clauses: 6
% 
% Sat splits: 20
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 27
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 1023
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 0.027 s
