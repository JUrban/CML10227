Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.bvpProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bvpProps
% SZS output start Proof for thm.bvpProps
fof(f3139,plain,(
  $false),
  inference(subsumption_resolution,[],[f3138,f73])).
fof(f73,plain,(
  s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',sK3),s('type.list.list'('type.bvlSem.v'),sK1),s('type.bvpSem.state'(sK0),sK2))) & s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f54])).
fof(f54,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) & s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) != s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X9),s('type.list.list'('type.bvlSem.v'),X7),s('type.bvpSem.state'(X6),X8))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X9),s('type.list.list'('type.bvlSem.v'),X7),s('type.bvpSem.state'(X6),X8))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  file('thm.bvpProps.do_app_Rerr','thm.bvpProps.do_app_Rerr')).
fof(f3138,plain,(
  s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))),
  inference(equality_resolution,[],[f1491])).
fof(f1491,plain,(
  ( ! [X0] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X0))) | s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X0) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))) )),
  inference(superposition,[],[f84,f72])).
fof(f72,plain,(
  s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),sK4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(sK0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',sK3),s('type.list.list'('type.bvlSem.v'),sK1),s('type.bvpSem.state'(sK0),sK2)))),
  inference(cnf_transformation,[],[f64])).
fof(f84,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) | s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) != s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) | s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X0)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X3),s('type.list.list'('type.bvlSem.v'),X1),s('type.bvpSem.state'(X0),X2))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X4) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11,X12,X9,X10] : (s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.bvlSem.v','type.bvpSem.state'(X6)),'type.bvlSem.v'),'const.bvpSem.do_app_3'(s('type.closLang.op',X9),s('type.list.list'('type.bvlSem.v'),X11),s('type.bvpSem.state'(X6),X12))) => s('type.semanticPrimitives.error_result'('type.bvlSem.v'),X10) = s('type.semanticPrimitives.error_result'('type.bvlSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))),
  file('thm.bvpProps.do_app_Rerr','thm.bvpProps.do_app_err')).
% SZS output end Proof for thm.bvpProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 64
% Passive clauses: 758
% Generated clauses: 2981
% Final active clauses: 55
% Final passive clauses: 601
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 149
% Trivial inequalities: 51
% Fw subsumption resolutions: 368
% Fw demodulations: 89
% Bw demodulations: 1
% 
% Simple tautologies: 94
% Equational tautologies: 30
% Forward subsumptions: 1342
% 
% Binary resolution: 138
% Factoring: 1
% Forward superposition: 1091
% Backward superposition: 850
% Self superposition: 108
% Equality factoring: 52
% Equality resolution: 12
% 
% Split clauses: 82
% Split components: 178
% SAT solver clauses: 152
% SAT solver unit clauses: 3
% SAT solver binary clauses: 25
% 
% Sat splits: 82
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 149
% TWLsolver calls for satisfiability: 60
% 
% Memory used [KB]: 4093
% Time elapsed: 0.219 s
% ------------------------------
% ------------------------------
% Success in time 0.23 s
