Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.ImplicitQueue
% (134435)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 345
% Passive clauses: 4375
% Generated clauses: 33062
% Final active clauses: 272
% Final passive clauses: 3455
% Input formulas: 90
% Initial clauses: 164
% 
% Duplicate literals: 821
% Trivial inequalities: 684
% Fw subsumption resolutions: 2200
% Fw demodulations: 7833
% Bw demodulations: 48
% 
% Simple tautologies: 503
% Equational tautologies: 74
% Forward subsumptions: 15498
% Fw demodulations to eq. taut.: 8
% Bw demodulations to eq. taut.: 12
% 
% Binary resolution: 209
% Factoring: 1
% Forward superposition: 11780
% Backward superposition: 8821
% Self superposition: 186
% Equality factoring: 120
% Equality resolution: 101
% 
% Split clauses: 226
% Split components: 456
% SAT solver clauses: 507
% SAT solver unit clauses: 8
% SAT solver binary clauses: 91
% 
% Sat splits: 226
% Sat splitting refutations: 10
% 
% TWLsolver clauses: 506
% TWLsolver calls for satisfiability: 128
% 
% Memory used [KB]: 17654
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.ImplicitQueue
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.ImplicitQueue
% SZS output start Proof for thm.ImplicitQueue
fof(f17067,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f17066,f287,f469,f16684,f16816,f11584,f11598,f286,f471,f391,f549,f16538,f16556,f16555,f13207,f13230,f285,f473,f395,f554,f16571,f16573,f16582])).
fof(f16582,plain,(
  $false | $spl2114),
  inference(equality_resolution,[],[f16573])).
fof(f16573,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X0)))) ) | $spl2114),
  inference(cnf_transformation,[],[f16573_D])).
fof(f16573_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X0)))) ) <=> ~$spl2114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2114])])).
fof(f16571,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X0)))) ) | ($spl2 | $spl2112)),
  inference(superposition,[],[f16556,f471])).
fof(f554,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3)) ) | $spl120),
  inference(cnf_transformation,[],[f554_D])).
fof(f554_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3)) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f395,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & (s('type.list.list'(X0),X1) != s('type.list.list'(X0),X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))),
  inference(flattening,[],[f265])).
fof(f265,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) | (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))) & ((s('type.list.list'(X0),X1) != s('type.list.list'(X0),X3) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4)) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))))))),
  inference(nnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) <=> (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))))),
  inference(ennf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) => (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) <=> (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) => (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) <=> (s('type.list.list'(X0),X1) = s('type.list.list'(X0),X3) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X27,X28,X35,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X35))) => (s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X27),s('type.list.list'(X6),X28))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X35),s('type.list.list'(X6),X36))) <=> (s('type.list.list'(X6),X27) = s('type.list.list'(X6),X35) & s('type.list.list'(X6),X28) = s('type.list.list'(X6),X36))))),
  file('thm.ImplicitQueue.ImplicitQueue_|49||49|8_prove_ltb','thm.list.APPEND_|49||49|_LENGTH|split|0')).
fof(f473,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl4),
  inference(cnf_transformation,[],[f473_D])).
fof(f473_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f285,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) & s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))) & s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK4)),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f198])).
fof(f198,plain,(
  ? [X0,X1,X2,X3,X4] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4))) & s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4))),
  inference(flattening,[],[f197])).
fof(f197,plain,(
  ? [X0,X1,X2,X3,X4] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) & s('type.list.list'(X0),X2) != s('type.list.list'(X0),X4))),
  inference(ennf_transformation,[],[f93])).
fof(f93,plain,(
  ~! [X0,X1,X2,X3,X4] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) => s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X4)))) => s('type.list.list'(X0),X2) = s('type.list.list'(X0),X4))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))) => s('type.list.list'(X6),X8) = s('type.list.list'(X6),X10))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X9),s('type.list.list'(X6),X10)))) => s('type.list.list'(X6),X8) = s('type.list.list'(X6),X10))),
  file('thm.ImplicitQueue.ImplicitQueue_|49||49|8_prove_ltb','thm.ImplicitQueue.ImplicitQueue_|49||49|8_prove_ltb')).
fof(f13230,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))) | s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X11))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X10),s('type.list.list'(sK0),X12))) | s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),X10)) ) | $spl1890),
  inference(cnf_transformation,[],[f13230_D])).
fof(f13230_D,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))) | s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X11))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X10),s('type.list.list'(sK0),X12))) | s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),X10)) ) <=> ~$spl1890),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1890])])).
fof(f13207,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X10))) | s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X11))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X10),s('type.list.list'(sK0),X12))) | s('type.list.list'(sK0),sK3) = s('type.list.list'(sK0),X10)) ) | ($spl4 | $spl120)),
  inference(superposition,[],[f554,f473])).
fof(f16555,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),sK3) | $spl2110),
  inference(cnf_transformation,[],[f16555_D])).
fof(f16555_D,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),sK3) <=> ~$spl2110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2110])])).
fof(f16556,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X1))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0)))) ) | $spl2112),
  inference(cnf_transformation,[],[f16556_D])).
fof(f16556_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X1))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0)))) ) <=> ~$spl2112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2112])])).
fof(f16538,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X1))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),sK3)) ) | $spl1890),
  inference(equality_resolution,[],[f13230])).
fof(f549,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) ) | $spl110),
  inference(cnf_transformation,[],[f549_D])).
fof(f549_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f391,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3)) & (s('type.list.list'(X0),X2) != s('type.list.list'(X0),X3) | s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))))),
  inference(nnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3))) <=> s('type.list.list'(X0),X2) = s('type.list.list'(X0),X3))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ! [X27,X28,X34] : (s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X27),s('type.list.list'(X6),X28))) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X27),s('type.list.list'(X6),X34))) <=> s('type.list.list'(X6),X28) = s('type.list.list'(X6),X34))),
  file('thm.ImplicitQueue.ImplicitQueue_|49||49|8_prove_ltb','thm.list.APPEND_|49||49||split|0')).
fof(f471,plain,(
  s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))) | $spl2),
  inference(cnf_transformation,[],[f471_D])).
fof(f471_D,plain,(
  s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f286,plain,(
  s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),sK4)))),
  inference(cnf_transformation,[],[f217])).
fof(f11598,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),X0)) ) | $spl1766),
  inference(cnf_transformation,[],[f11598_D])).
fof(f11598_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),X0)) ) <=> ~$spl1766),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1766])])).
fof(f11584,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK3),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),X0)) ) | ($spl2 | $spl110)),
  inference(superposition,[],[f549,f471])).
fof(f16816,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),X0)) ) | $spl2306),
  inference(cnf_transformation,[],[f16816_D])).
fof(f16816_D,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),X0)) ) <=> ~$spl2306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2306])])).
fof(f16684,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),X0))) | s('type.list.list'(sK0),sK4) = s('type.list.list'(sK0),X0)) ) | ($spl1766 | $spl2110)),
  inference(backward_demodulation,[],[f16555,f11598])).
fof(f469,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK4) | $spl1),
  inference(cnf_transformation,[],[f469_D])).
fof(f469_D,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK4) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f287,plain,(
  s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),sK4)),
  inference(cnf_transformation,[],[f217])).
fof(f17066,plain,(
  $false | ($spl1 | $spl2306)),
  inference(subsumption_resolution,[],[f17060,f469])).
fof(f17060,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),sK4) | $spl2306),
  inference(equality_resolution,[],[f16816])).
% SZS output end Proof for thm.ImplicitQueue
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 266
% Passive clauses: 1243
% Generated clauses: 16780
% Final active clauses: 201
% Final passive clauses: 742
% Input formulas: 90
% Initial clauses: 164
% 
% Duplicate literals: 218
% Trivial inequalities: 277
% Fw subsumption resolutions: 1029
% Fw demodulations: 3857
% Bw demodulations: 286
% Condensations: 131
% Global subsumptions: 21
% 
% Simple tautologies: 298
% Equational tautologies: 36
% Forward subsumptions: 7936
% Fw demodulations to eq. taut.: 8
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 186
% Factoring: 1
% Forward superposition: 5268
% Backward superposition: 3899
% Self superposition: 72
% Equality factoring: 26
% Equality resolution: 68
% 
% Split clauses: 85
% Split components: 170
% SAT solver clauses: 1929
% SAT solver unit clauses: 241
% SAT solver binary clauses: 66
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 3
% 
% Sat splits: 85
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 1843
% TWLsolver calls for satisfiability: 810
% 
% Memory used [KB]: 12153
% Time elapsed: 0.585 s
% ------------------------------
% ------------------------------
% Success in time 1.211 s
