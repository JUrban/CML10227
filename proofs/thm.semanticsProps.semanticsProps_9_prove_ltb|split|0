Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.semanticsProps
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.semanticsProps
% SZS output start Proof for thm.semanticsProps
fof(f6625,plain,(
  $false),
  inference(subsumption_resolution,[],[f6596,f559])).
fof(f559,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f198,f197])).
fof(f197,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10,X6] : ! [X7,X11] : s(X6,X7) = s(X6,'const.combin.K_2'(s(X6,X7),s(X10,X11)))),
  file('thm.semanticsProps.semanticsProps_9_prove_ltb|split|0','thm.combin.K_THM')).
fof(f198,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6,X10] : ! [X18,X19] : s(X6,'const.combin.K_2'(s(X6,X18),s(X10,X19))) = s(X6,happ(s(fun(X10,X6),'const.combin.K_1'(s(X6,X18))),s(X10,X19)))),
  file('thm.semanticsProps.semanticsProps_9_prove_ltb|split|0','ARITY_1_2_const.combin.K')).
fof(f6596,plain,(
  s('type.num.num',sK2) != s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),sK1)))))),
  inference(superposition,[],[f141,f183])).
fof(f183,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),X1))))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X12] : ! [X13,X14] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X14),s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X12),X13))))) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X12),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.semanticPrimitives.state'(X12),X13)))))),
  file('thm.semanticsProps.semanticsProps_9_prove_ltb|split|0','thm.semanticPrimitives.semanticPrimitives_237_prove_ltb')).
fof(f141,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.semanticPrimitives.state'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(sK0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.semanticPrimitives.state'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f120])).
fof(f120,plain,(
  ? [X0,X1,X2] : s('type.num.num',X2) != s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2] : s('type.num.num',X2) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ~! [X0] : ! [X1,X2] : s('type.num.num',X2) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X0),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.semanticPrimitives.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.num.num',X8) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.semanticPrimitives.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.num.num',X8) = s('type.num.num','const.semanticPrimitives.state_clock_1'(s('type.semanticPrimitives.state'(X6),'const.semanticPrimitives.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.semanticPrimitives.state'(X6),X7)))))),
  file('thm.semanticsProps.semanticsProps_9_prove_ltb|split|0','thm.semanticsProps.semanticsProps_9_prove_ltb|split|0')).
% SZS output end Proof for thm.semanticsProps
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 84
% Passive clauses: 543
% Generated clauses: 6380
% Final active clauses: 67
% Final passive clauses: 304
% Input formulas: 44
% Initial clauses: 64
% 
% Duplicate literals: 276
% Trivial inequalities: 135
% Fw subsumption resolutions: 713
% Fw demodulations: 379
% Bw demodulations: 9
% 
% Simple tautologies: 161
% Equational tautologies: 26
% Forward subsumptions: 4041
% 
% Binary resolution: 20
% Forward superposition: 2550
% Backward superposition: 1977
% Self superposition: 145
% Equality factoring: 50
% Equality resolution: 25
% 
% Split clauses: 56
% Split components: 114
% SAT solver clauses: 165
% SAT solver unit clauses: 14
% SAT solver binary clauses: 59
% 
% Sat splits: 56
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 163
% TWLsolver calls for satisfiability: 28
% 
% Memory used [KB]: 3965
% Time elapsed: 0.302 s
% ------------------------------
% ------------------------------
% Success in time 0.34 s
