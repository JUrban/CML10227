Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.con_to_decProof
% (18992)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 127
% Passive clauses: 1216
% Generated clauses: 21678
% Final active clauses: 123
% Final passive clauses: 881
% Input formulas: 32
% Initial clauses: 33
% 
% Duplicate literals: 945
% Trivial inequalities: 216
% Fw subsumption resolutions: 2401
% Fw demodulations: 1897
% Bw demodulations: 2
% 
% Simple tautologies: 233
% Equational tautologies: 24
% Forward subsumptions: 13670
% 
% Binary resolution: 6
% Forward superposition: 8205
% Backward superposition: 7505
% Self superposition: 251
% Equality factoring: 67
% Equality resolution: 16
% 
% Split clauses: 398
% Split components: 807
% SAT solver clauses: 1028
% SAT solver unit clauses: 39
% SAT solver binary clauses: 178
% 
% Sat splits: 398
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1028
% TWLsolver calls for satisfiability: 142
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.con_to_decProof
% (19014)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 120
% Passive clauses: 513
% Generated clauses: 20800
% Final active clauses: 116
% Final passive clauses: 371
% Input formulas: 32
% Initial clauses: 33
% 
% Duplicate literals: 956
% Trivial inequalities: 233
% Fw subsumption resolutions: 1420
% Fw demodulations: 1463
% Bw demodulations: 22
% Condensations: 2750
% 
% Simple tautologies: 220
% Equational tautologies: 24
% Forward subsumptions: 12308
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 4
% Forward superposition: 6918
% Backward superposition: 6278
% Self superposition: 232
% Equality factoring: 66
% Equality resolution: 17
% 
% Split clauses: 115
% Split components: 241
% SAT solver clauses: 947
% SAT solver unit clauses: 62
% SAT solver binary clauses: 41
% 
% Sat splits: 115
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 947
% TWLsolver calls for satisfiability: 136
% 
% Memory used [KB]: 17526
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.con_to_decProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.con_to_decProof
% SZS output start Proof for thm.con_to_decProof
fof(f28554,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f28518])).
fof(f28518,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),sK1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),sK1)))),
  inference(superposition,[],[f96,f28513])).
fof(f28513,plain,(
  ( ! [X6,X5] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X5),X6))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X5),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X5),X6)))))) )),
  inference(forward_demodulation,[],[f28474,f14460])).
fof(f14460,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X1) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X1))),s('type.decSem.state'(X0),X3)))))))) )),
  inference(superposition,[],[f6648,f116])).
fof(f116,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : ! [X7,X14,X12] : s('type.decSem.state'(X11),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.decSem.state'(X11),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.decSem.state'(X11),X7))))) = s('type.decSem.state'(X11),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.decSem.state'(X11),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_39_prove_ltb')).
fof(f6648,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X4),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),X3))),s('type.decSem.state'(X4),X5)))))) )),
  inference(superposition,[],[f114,f133])).
fof(f133,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f120,f119])).
fof(f119,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9,X6] : ! [X8,X10] : s(X6,X8) = s(X6,'const.combin.K_2'(s(X6,X8),s(X9,X10)))),
  file('thm.con_to_decProof.compile_state_refs','thm.combin.K_THM')).
fof(f120,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X9] : ! [X15,X16] : s(X6,'const.combin.K_2'(s(X6,X15),s(X9,X16))) = s(X6,happ(s(fun(X9,X6),'const.combin.K_1'(s(X6,X15))),s(X9,X16)))),
  file('thm.con_to_decProof.compile_state_refs','ARITY_1_2_const.combin.K')).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X11] : ! [X7,X12] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.decSem.state'(X11),X7))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X12),s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_29_prove_ltb')).
fof(f28474,plain,(
  ( ! [X6,X5] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X5),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X5),X6))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X5),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X5),X6))))),s('type.decSem.state'(X5),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X5),X6))))),s('type.decSem.state'(X5),'const.bool.ARB_0')))))))) )),
  inference(superposition,[],[f13266,f132])).
fof(f132,plain,(
  ( ! [X0,X1] : (s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.bool.ARB_0')))))))))) )),
  inference(forward_demodulation,[],[f131,f117])).
fof(f117,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2,X3] : s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X11] : ! [X7,X14,X12] : s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X11),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.decSem.state'(X11),X7))))) = s('type.decSem.state'(X11),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X14),s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_42_prove_ltb')).
fof(f131,plain,(
  ( ! [X0,X1] : (s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.bool.ARB_0')))))))))) )),
  inference(backward_demodulation,[],[f118,f130])).
fof(f130,plain,(
  ( ! [X0,X1] : (s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.bool.ARB_0')))))))))) )),
  inference(backward_demodulation,[],[f116,f101])).
fof(f101,plain,(
  ( ! [X0,X1] : (s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.bool.ARB_0')))))))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.bool.ARB_0')))))))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1] : s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X0)),'const.combin.K_1'(s('type.ffi.ffi_state'(X0),'const.conSem.state_ffi_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X0),X1))))),s('type.decSem.state'(X0),'const.bool.ARB_0')))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11] : ! [X7] : s('type.decSem.state'(X11),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X11),X7))) = s('type.decSem.state'(X11),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X11)),'const.combin.K_1'(s('type.ffi.ffi_state'(X11),'const.conSem.state_ffi_1'(s('type.conSem.state'(X11),X7))))),s('type.decSem.state'(X11),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X11),X7))))),s('type.decSem.state'(X11),'const.decSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.conSem.state_clock_1'(s('type.conSem.state'(X11),X7))))),s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.conSem.v')),'const.conSem.state_globals_1'(s('type.conSem.state'(X11),X7))))),s('type.decSem.state'(X11),'const.bool.ARB_0')))))))))),
  file('thm.con_to_decProof.compile_state_refs','thm.con_to_decProof.compile_state_def')).
fof(f118,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1))))) = s('type.decSem.state'(X0),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X2),s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X3),s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X11] : ! [X7,X14,X12] : s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X11),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X14),s('type.decSem.state'(X11),X7))))) = s('type.decSem.state'(X11),'const.decSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v'))),X14),s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_43_prove_ltb')).
fof(f13266,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X13),X15))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X13),'type.ffi.ffi_state'(X11)),X14),s('type.decSem.state'(X13),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X13),X15)))))))) )),
  inference(forward_demodulation,[],[f13129,f122])).
fof(f122,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),X2)))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),X2)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X13,X11] : ! [X7,X12] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),X7))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X13),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X13)),X12),s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_2|48|_prove_ltb')).
fof(f13129,plain,(
  ( ! [X14,X12,X15,X13,X11] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X13),'type.ffi.ffi_state'(X11)),X14),s('type.decSem.state'(X13),X15))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X13),'type.ffi.ffi_state'(X11)),X14),s('type.decSem.state'(X13),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X13),X15)))))))) )),
  inference(superposition,[],[f111,f128])).
fof(f128,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),X2))))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.decSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),X2))))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.decSem.state'(X1),X2)))))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),X2))))) = s('type.decSem.state'(X0),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.decSem.state'(X1),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X4),s('type.decSem.state'(X1),X2)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X13,X11] : ! [X7,X14,X12] : s('type.decSem.state'(X13),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X13),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X13)),X14),s('type.decSem.state'(X11),X7))))) = s('type.decSem.state'(X13),'const.decSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X11),'type.ffi.ffi_state'(X13)),X14),s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_44_prove_ltb')).
fof(f111,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1)))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X2),s('type.decSem.state'(X0),X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11] : ! [X7,X12] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),X7))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X11),'const.decSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.conSem.v')),'type.list.list'('type.option.option'('type.conSem.v'))),X12),s('type.decSem.state'(X11),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.decSem.decSem_2|49|_prove_ltb')).
fof(f96,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),sK1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(sK0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(sK0),sK1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(sK0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f91])).
fof(f91,plain,(
  ? [X0,X1] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) != s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ~! [X0,X1] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ~! [X0] : ! [X1] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X0),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X0),X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X7))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.conSem.state_refs_1'(s('type.conSem.state'(X6),X7))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.conSem.v')),'const.decSem.state_refs_1'(s('type.decSem.state'(X6),'const.con_to_decProof.compile_state_1'(s('type.conSem.state'(X6),X7)))))),
  file('thm.con_to_decProof.compile_state_refs','thm.con_to_decProof.compile_state_refs')).
% SZS output end Proof for thm.con_to_decProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 159
% Passive clauses: 814
% Generated clauses: 28381
% Final active clauses: 123
% Final passive clauses: 432
% Input formulas: 32
% Initial clauses: 33
% 
% Duplicate literals: 1505
% Trivial inequalities: 268
% Fw subsumption resolutions: 1752
% Fw demodulations: 2424
% Bw demodulations: 237
% Condensations: 3859
% Global subsumptions: 4
% 
% Simple tautologies: 295
% Equational tautologies: 137
% Forward subsumptions: 17194
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 6
% 
% Unit resulting resolution: 795
% Forward superposition: 9399
% Backward superposition: 7465
% Self superposition: 284
% Equality factoring: 76
% Equality resolution: 16
% 
% Split clauses: 63
% Split components: 137
% SAT solver clauses: 973
% SAT solver unit clauses: 173
% SAT solver binary clauses: 130
% 
% Sat splits: 63
% Sat splitting refutations: 27
% 
% Memory used [KB]: 16119
% Time elapsed: 1.391 s
% ------------------------------
% ------------------------------
% Success in time 2.73 s
