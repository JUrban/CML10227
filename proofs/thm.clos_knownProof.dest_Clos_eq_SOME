Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.clos_knownProof
% (135161)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 164
% Passive clauses: 4845
% Generated clauses: 20587
% Final active clauses: 146
% Final passive clauses: 4442
% Input formulas: 39
% Initial clauses: 59
% 
% Duplicate literals: 799
% Trivial inequalities: 257
% Fw subsumption resolutions: 2891
% Fw demodulations: 1342
% Bw demodulations: 6
% 
% Simple tautologies: 384
% Equational tautologies: 89
% Forward subsumptions: 8015
% Fw demodulations to eq. taut.: 5
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 529
% Factoring: 5
% Forward superposition: 7439
% Backward superposition: 6607
% Self superposition: 256
% Equality factoring: 181
% Equality resolution: 50
% 
% Split clauses: 627
% Split components: 1281
% SAT solver clauses: 1652
% SAT solver unit clauses: 32
% SAT solver binary clauses: 399
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 627
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1647
% TWLsolver calls for satisfiability: 208
% 
% Memory used [KB]: 9466
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.clos_knownProof
% (135184)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 292
% Passive clauses: 899
% Generated clauses: 11991
% Final active clauses: 157
% Final passive clauses: 482
% Input formulas: 39
% Initial clauses: 59
% 
% Duplicate literals: 474
% Trivial inequalities: 246
% Fw subsumption resolutions: 549
% Fw demodulations: 1441
% Bw demodulations: 181
% Condensations: 1091
% Global subsumptions: 5
% 
% Simple tautologies: 111
% Equational tautologies: 51
% Forward subsumptions: 5332
% Fw demodulations to eq. taut.: 81
% Bw demodulations to eq. taut.: 7
% 
% Binary resolution: 77
% Factoring: 1
% Forward superposition: 3853
% Backward superposition: 2220
% Self superposition: 106
% Equality factoring: 94
% Equality resolution: 153
% 
% Split clauses: 88
% Split components: 205
% SAT solver clauses: 1683
% SAT solver unit clauses: 90
% SAT solver binary clauses: 104
% SAT solver learnt clauses: 14
% SAT solver learnt literals: 11
% 
% Sat splits: 88
% Sat splitting refutations: 47
% 
% TWLsolver clauses: 1658
% TWLsolver calls for satisfiability: 428
% 
% Memory used [KB]: 11513
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.clos_knownProof
% (135209)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 484
% Passive clauses: 3407
% Generated clauses: 181243
% Final active clauses: 249
% Final passive clauses: 983
% Input formulas: 39
% Initial clauses: 59
% Discarded non-redundant clauses: 5
% 
% Duplicate literals: 7910
% Trivial inequalities: 1406
% Fw subsumption resolutions: 12330
% Fw demodulations: 13095
% Bw demodulations: 1390
% Condensations: 26586
% Global subsumptions: 550
% 
% Simple tautologies: 1495
% Equational tautologies: 540
% Forward subsumptions: 110077
% Fw demodulations to eq. taut.: 2539
% Bw demodulations to eq. taut.: 97
% 
% Unit resulting resolution: 13289
% Factoring: 1
% Forward superposition: 38327
% Backward superposition: 55001
% Self superposition: 634
% Equality factoring: 374
% Equality resolution: 174
% 
% Split clauses: 343
% Split components: 697
% SAT solver clauses: 5221
% SAT solver unit clauses: 389
% SAT solver binary clauses: 429
% 
% Sat splits: 343
% Sat splitting refutations: 576
% 
% Memory used [KB]: 85840
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.clos_knownProof
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.clos_knownProof
% SZS output start Proof for thm.clos_knownProof
fof(f71709,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f108,f163,f161,f107,f162,f160,f238,f246,f258,f240,f262,f242,f321,f372,f377,f386,f464,f497,f239,f500,f247,f374,f509,f248,f610,f614,f617,f627,f1142,f1145,f1192,f1197,f1350,f1371,f2051,f2053,f2217,f2219,f2421,f2424,f2591,f2594,f2988,f2996,f3004,f3005,f3006,f3007,f3008,f3009,f3010,f3012,f3013,f3014,f3015,f3016,f3011,f3017,f3018,f3019,f3020,f3021,f3022,f3023,f3025,f3028,f3029,f3030,f3031,f3033,f3034,f3035,f3036,f3038,f3040,f392,f390,f388,f3139,f3271,f4067,f2989,f4072,f2991,f2997,f4654,f4733,f4732,f7788,f7790,f7793,f7794,f8599,f8600,f8603,f8604,f7789,f11845,f12639,f13485,f13952,f12653,f12652,f14377,f14516,f14627,f14517,f15245,f15246,f15264,f15263,f16919,f16932,f19715,f14392,f20688,f20692,f17095,f20723,f14626,f22464,f20689,f22465,f20691,f20693,f25440,f25441,f28878,f28880,f28884,f28885,f30438,f30442,f30523,f30528,f33708,f30525,f33709,f30530,f34905,f3026,f34908,f3024,f28879,f37780,f37760,f37786,f37761,f37787,f40555,f40560,f40652,f40654,f40657,f40658,f40661,f40665,f40556,f45388,f45389,f45392,f45393,f45569,f45574,f45670,f45674,f45570,f50762,f50764,f50740,f37784,f54769,f54773,f54880,f54883,f55121,f55125,f55226,f55227,f55230,f55231,f55234,f55237,f55122,f55553,f55554,f55557,f55558,f55737,f55741,f55849,f55853,f54770,f56432,f45571,f56436,f45575,f56545,f45671,f56548,f45675,f56783,f40557,f56787,f40561,f56886,f56887,f56890,f56891,f56894,f40662,f56897,f40666,f56784,f57209,f57210,f57213,f57214,f40653,f57397,f55738,f57400,f55742,f57509,f55850,f57512,f55854,f56433,f58840,f58842,f58952,f58954,f59016,f59040,f59088,f59095,f60404,f60406,f612,f60515,f60517,f1195,f60579,f60603,f60790,f59041,f60814,f66515,f7810,f66516,f7809,f66807,f7806,f33773,f66808,f7805,f33774,f67045,f61097,f61092,f67070,f51413,f67076,f50295,f49491,f49393,f67092,f20870,f14393,f14629,f67146,f52824,f37783,f67227,f67184,f50766,f37781,f67395,f48054,f67450,f20868,f14515,f11860,f60794,f67806,f60791,f67807,f60583,f67808,f60580,f67809,f59020,f67810,f59017,f67811,f52061,f67844,f50393,f67850,f49942,f67857,f49589,f67859,f20871,f56666,f68163,f56662,f68164,f56541,f68165,f56537,f68166,f30439,f17686,f68167,f16270,f52826,f68186,f27864,f28367,f27633,f68236,f28135,f68241,f41925,f68286,f42106,f68288,f42105,f68289,f51093,f41687,f44321,f67484,f50957,f68299,f41425,f68305,f50817,f68307,f51604,f41628,f68309,f44691,f67478,f41954,f68294,f32695,f37789,f34394,f67082,f51160,f68325,f51150,f68306,f33033,f67089,f51139,f51612,f51590,f11861,f50965,f68342,f32350,f68345,f50825,f68322,f32696,f68170,f68169,f69012,f15260,f69026,f68211,f69036,f15261,f68215,f71708])).
fof(f71708,plain,(
  $false | ($spl0 | $spl3 | $spl12 | $spl112 | $spl208)),
  inference(subsumption_resolution,[],[f50765,f12834])).
fof(f12834,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | ($spl0 | $spl3 | $spl12 | $spl112)),
  inference(trivial_inequality_removal,[],[f12730])).
fof(f12730,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | ($spl0 | $spl3 | $spl12 | $spl112)),
  inference(superposition,[],[f358,f12351])).
fof(f12351,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl12 | $spl112)),
  inference(backward_demodulation,[],[f12346,f388])).
fof(f12346,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK3(sK2)) | ($spl0 | $spl112)),
  inference(equality_resolution,[],[f12010])).
fof(f12010,plain,(
  ( ! [X2,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',sK3(sK2))) ) | ($spl0 | $spl112)),
  inference(superposition,[],[f143,f11951])).
fof(f11951,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))) | ($spl0 | $spl112)),
  inference(trivial_inequality_removal,[],[f11900])).
fof(f11900,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))) | ($spl0 | $spl112)),
  inference(superposition,[],[f852,f11860])).
fof(f852,plain,(
  ( ! [X0] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),X0))) | s('type.pair.prod'('type.num.num','type.num.num'),X0) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) | $spl0),
  inference(superposition,[],[f140,f160])).
fof(f140,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X12] : ! [X13,X14] : (s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X13))) = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X14))) <=> s(X12,X13) = s(X12,X14))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.option.SOME_|49||49|')).
fof(f143,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,X2) = s(X0,X4) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & (s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & ((s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5)) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X12,X26] : ! [X13,X14,X8,X27] : (s('type.pair.prod'(X12,X26),'const.pair.,_2'(s(X12,X8),s(X26,X27))) = s('type.pair.prod'(X12,X26),'const.pair.,_2'(s(X12,X13),s(X26,X14))) <=> (s(X12,X8) = s(X12,X13) & s(X26,X14) = s(X26,X27)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.pair.CLOSED_PAIR_EQ')).
fof(f358,plain,(
  ( ! [X28] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X28))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X28)))) ) | $spl3),
  inference(superposition,[],[f163,f140])).
fof(f50765,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | $spl208),
  inference(cnf_transformation,[],[f50765_D])).
fof(f50765_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f68215,plain,(
  s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))) | $spl312),
  inference(cnf_transformation,[],[f68215_D])).
fof(f68215_D,plain,(
  s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f15261,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) | $spl132),
  inference(cnf_transformation,[],[f15261_D])).
fof(f15261_D,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0)))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f69036,plain,(
  ( ! [X73] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X73),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) ) | ($spl0 | $spl10 | $spl12 | $spl112)),
  inference(superposition,[],[f23961,f12351])).
fof(f23961,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X6))))) ) | $spl10),
  inference(superposition,[],[f23944,f110])).
fof(f110,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X1) = s('type.num.num',X3) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3] : ((s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X0) = s('type.num.num',X2) & s('type.num.num',X1) = s('type.num.num',X3))) & (s('type.num.num',X0) != s('type.num.num',X2) | s('type.num.num',X1) != s('type.num.num',X3) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3] : ((s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X0) = s('type.num.num',X2) & s('type.num.num',X1) = s('type.num.num',X3))) & ((s('type.num.num',X0) != s('type.num.num',X2) | s('type.num.num',X1) != s('type.num.num',X3)) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2,X3] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> (s('type.num.num',X0) = s('type.num.num',X2) & s('type.num.num',X1) = s('type.num.num',X3)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X15,X16,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X16))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',X18))) <=> (s('type.num.num',X15) = s('type.num.num',X17) & s('type.num.num',X16) = s('type.num.num',X18)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_|49||49||split|0')).
fof(f23944,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl10),
  inference(equality_resolution,[],[f6384])).
fof(f6384,plain,(
  ( ! [X4,X5] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl10),
  inference(superposition,[],[f110,f374])).
fof(f68211,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))) | $spl310),
  inference(cnf_transformation,[],[f68211_D])).
fof(f68211_D,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f69026,plain,(
  ( ! [X57] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X57),s('type.num.num',sK0))) | s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) ) | ($spl0 | $spl10 | $spl12 | $spl112)),
  inference(superposition,[],[f11166,f12351])).
fof(f11166,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X6))))) ) | $spl10),
  inference(superposition,[],[f11149,f110])).
fof(f11149,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl10),
  inference(equality_resolution,[],[f6382])).
fof(f6382,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl10),
  inference(superposition,[],[f109,f374])).
fof(f109,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X0) = s('type.num.num',X2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f15260,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) | $spl130),
  inference(cnf_transformation,[],[f15260_D])).
fof(f15260_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f69012,plain,(
  ( ! [X45] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X45),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))))) ) | ($spl0 | $spl12 | $spl112)),
  inference(superposition,[],[f825,f12351])).
fof(f825,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',X6)))))) ) | $spl0),
  inference(superposition,[],[f160,f110])).
fof(f68169,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl305),
  inference(cnf_transformation,[],[f68169_D])).
fof(f68169_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl305),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl305])])).
fof(f68170,plain,(
  ( ! [X24,X25] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X25))) | s('type.num.num',X24) != s('type.num.num',X25)) ) | $spl306),
  inference(cnf_transformation,[],[f68170_D])).
fof(f68170_D,plain,(
  ( ! [X24,X25] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X25))) | s('type.num.num',X24) != s('type.num.num',X25)) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f32696,plain,(
  ( ! [X445,X446] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X446))) | s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.num.num',X445) != s('type.num.num',X446)) ) | ($spl122 | $spl154)),
  inference(forward_demodulation,[],[f32454,f32243])).
fof(f32243,plain,(
  ( ! [X0] : (s('type.num.num',sK1) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK1))))) ) | $spl154),
  inference(equality_resolution,[],[f30587])).
fof(f30587,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))))) ) | $spl154),
  inference(superposition,[],[f110,f30439])).
fof(f32454,plain,(
  ( ! [X445,X444,X446] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.num.num',X445) != s('type.num.num',X446) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X444),s('type.num.num',sK1)))),s('type.num.num',X446)))) ) | ($spl122 | $spl154)),
  inference(superposition,[],[f14695,f32243])).
fof(f14695,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',sK0) != s('type.num.num',X1) | s('type.num.num',X0) != s('type.num.num',X2) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X2)))) ) | $spl122),
  inference(superposition,[],[f14393,f111])).
fof(f111,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X1) != s('type.num.num',X3) | s('type.num.num',X0) != s('type.num.num',X2)) )),
  inference(cnf_transformation,[],[f93])).
fof(f68322,plain,(
  ( ! [X33,X32] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) | $spl334),
  inference(cnf_transformation,[],[f68322_D])).
fof(f68322_D,plain,(
  ( ! [X33,X32] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f50825,plain,(
  ( ! [X33,X32] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) | ($spl122 | $spl154)),
  inference(superposition,[],[f50759,f32243])).
fof(f50759,plain,(
  ( ! [X0,X1] : (s('type.num.num',sK0) != s('type.num.num',X0) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl122),
  inference(equality_resolution,[],[f17677])).
fof(f17677,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl122),
  inference(superposition,[],[f14682,f141])).
fof(f141,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f103])).
fof(f14682,plain,(
  ( ! [X37,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X36))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',X37)))) ) | $spl122),
  inference(superposition,[],[f14393,f140])).
fof(f68345,plain,(
  ( ! [X195] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X195),s('type.num.num',sK1))))))) ) | $spl338),
  inference(cnf_transformation,[],[f68345_D])).
fof(f68345_D,plain,(
  ( ! [X195] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X195),s('type.num.num',sK1))))))) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f32350,plain,(
  ( ! [X195] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X195),s('type.num.num',sK1))))))) ) | ($spl3 | $spl154)),
  inference(superposition,[],[f1633,f32243])).
fof(f1633,plain,(
  ( ! [X0] : (s('type.num.num',sK0) != s('type.num.num',X0) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl3),
  inference(equality_resolution,[],[f360])).
fof(f360,plain,(
  ( ! [X0,X1] : (s('type.num.num',sK1) != s('type.num.num',X0) | s('type.num.num',sK0) != s('type.num.num',X1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl3),
  inference(superposition,[],[f163,f111])).
fof(f68342,plain,(
  ( ! [X20] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',sK1))))))) ) | $spl336),
  inference(cnf_transformation,[],[f68342_D])).
fof(f68342_D,plain,(
  ( ! [X20] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',sK1))))))) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f50965,plain,(
  ( ! [X20] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X20),s('type.num.num',sK1))))))) ) | ($spl10 | $spl154 | $spl207)),
  inference(superposition,[],[f50891,f32243])).
fof(f50891,plain,(
  ( ! [X28] : (s('type.num.num',sK0) != s('type.num.num',X28) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X28))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2))))) ) | ($spl10 | $spl207)),
  inference(superposition,[],[f50879,f140])).
fof(f50879,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK3(sK2)) | ($spl10 | $spl207)),
  inference(trivial_inequality_removal,[],[f50878])).
fof(f50878,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) | s('type.num.num',sK0) != s('type.num.num',sK3(sK2)) | ($spl10 | $spl207)),
  inference(forward_demodulation,[],[f50853,f23944])).
fof(f50853,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK3(sK2)) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl10 | $spl207)),
  inference(superposition,[],[f50777,f23944])).
fof(f50777,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num',sK3(sK2)) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X0)))) ) | $spl207),
  inference(superposition,[],[f50764,f141])).
fof(f11861,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12)))) ) | $spl114),
  inference(cnf_transformation,[],[f11861_D])).
fof(f11861_D,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12)))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f51590,plain,(
  ( ! [X3] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X3)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(superposition,[],[f51076,f32243])).
fof(f51076,plain,(
  ( ! [X30,X31] : (s('type.num.num',sK0) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X30)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X30),s('type.num.num',X31)))) ) | ($spl10 | $spl122 | $spl176)),
  inference(forward_demodulation,[],[f51030,f23944])).
fof(f51030,plain,(
  ( ! [X30,X31] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X30),s('type.num.num',X31))) | s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X30))))) ) | ($spl10 | $spl122 | $spl176)),
  inference(superposition,[],[f50761,f42694])).
fof(f42694,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0))))) ) | $spl176),
  inference(equality_resolution,[],[f40919])).
fof(f40919,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X7))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X7))))) ) | $spl176),
  inference(superposition,[],[f110,f40556])).
fof(f50761,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.num.num',X39) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl122)),
  inference(trivial_inequality_removal,[],[f50741])).
fof(f50741,plain,(
  ( ! [X39,X40] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.num.num',X39) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl122)),
  inference(superposition,[],[f17677,f23944])).
fof(f51612,plain,(
  ( ! [X33,X32] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(forward_demodulation,[],[f51580,f42694])).
fof(f51580,plain,(
  ( ! [X33,X32] : (s('type.num.num',sK0) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(superposition,[],[f51076,f32243])).
fof(f51139,plain,(
  ( ! [X2] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(superposition,[],[f51074,f41306])).
fof(f41306,plain,(
  ( ! [X0] : (s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0))))) ) | $spl176),
  inference(equality_resolution,[],[f40917])).
fof(f40917,plain,(
  ( ! [X2,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X1))))) ) | $spl176),
  inference(superposition,[],[f109,f40556])).
fof(f51074,plain,(
  ( ! [X26,X25] : (s('type.num.num',sK0) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26)))) ) | ($spl10 | $spl122 | $spl154)),
  inference(forward_demodulation,[],[f51026,f23944])).
fof(f51026,plain,(
  ( ! [X26,X25] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',X26))) | s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X25),s('type.num.num',sK1))))) ) | ($spl10 | $spl122 | $spl154)),
  inference(superposition,[],[f50761,f30888])).
fof(f30888,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK1))))) ) | $spl154),
  inference(equality_resolution,[],[f30585])).
fof(f30585,plain,(
  ( ! [X2,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK1))))) ) | $spl154),
  inference(superposition,[],[f109,f30439])).
fof(f67089,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) | $spl264),
  inference(cnf_transformation,[],[f67089_D])).
fof(f67089_D,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f33033,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))) | s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) | ($spl12 | $spl154)),
  inference(superposition,[],[f30913,f388])).
fof(f30913,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl154),
  inference(superposition,[],[f30888,f109])).
fof(f68306,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) | $spl330),
  inference(cnf_transformation,[],[f68306_D])).
fof(f68306_D,plain,(
  ( ! [X21,X20] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f51150,plain,(
  ( ! [X21,X20] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(forward_demodulation,[],[f51112,f41306])).
fof(f51112,plain,(
  ( ! [X21,X20] : (s('type.num.num',sK0) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(superposition,[],[f51074,f41306])).
fof(f68325,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X22))) | s('type.num.num',sK0) != s('type.num.num',sK1)) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(forward_demodulation,[],[f51151,f11149])).
fof(f51151,plain,(
  ( ! [X22] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X22)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(forward_demodulation,[],[f51113,f41306])).
fof(f51113,plain,(
  ( ! [X22] : (s('type.num.num',sK0) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X22)))) ) | ($spl10 | $spl122 | $spl154)),
  inference(superposition,[],[f51074,f11149])).
fof(f51160,plain,(
  ( ! [X33,X32] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) | ($spl10 | $spl122 | $spl154 | $spl176)),
  inference(forward_demodulation,[],[f51120,f41306])).
fof(f51120,plain,(
  ( ! [X33,X32] : (s('type.num.num',sK0) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X32),s('type.num.num',sK1)))),s('type.num.num',X33)))) ) | ($spl10 | $spl122 | $spl154)),
  inference(superposition,[],[f51074,f32243])).
fof(f67082,plain,(
  ( ! [X16] : (s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) | $spl262),
  inference(cnf_transformation,[],[f67082_D])).
fof(f67082_D,plain,(
  ( ! [X16] : (s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f34394,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))) | s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) | ($spl12 | $spl154)),
  inference(superposition,[],[f32267,f388])).
fof(f32267,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl154),
  inference(superposition,[],[f32243,f109])).
fof(f37789,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) | $spl175),
  inference(cnf_transformation,[],[f37789_D])).
fof(f37789_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) <=> ~$spl175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl175])])).
fof(f32695,plain,(
  ( ! [X443] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X443))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1)))) ) | ($spl122 | $spl154)),
  inference(forward_demodulation,[],[f32453,f32243])).
fof(f32453,plain,(
  ( ! [X443,X442] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X442),s('type.num.num',sK1)))),s('type.num.num',X443)))) ) | ($spl122 | $spl154)),
  inference(superposition,[],[f14682,f32243])).
fof(f68294,plain,(
  ( ! [X907] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X907))))))) ) | $spl324),
  inference(cnf_transformation,[],[f68294_D])).
fof(f68294_D,plain,(
  ( ! [X907] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X907))))))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f41954,plain,(
  ( ! [X906] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X906))))))) ) | ($spl10 | $spl176)),
  inference(forward_demodulation,[],[f41686,f23944])).
fof(f41686,plain,(
  ( ! [X906] : (s('type.num.num',sK1) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X906))))))) ) | ($spl10 | $spl176)),
  inference(superposition,[],[f34140,f41306])).
fof(f34140,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl10),
  inference(equality_resolution,[],[f13924])).
fof(f13924,plain,(
  ( ! [X0,X1] : (s('type.num.num',sK1) != s('type.num.num',X0) | s('type.num.num',X1) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl10),
  inference(superposition,[],[f11152,f111])).
fof(f11152,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl10),
  inference(backward_demodulation,[],[f11149,f374])).
fof(f67478,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16))))) ) | $spl272),
  inference(cnf_transformation,[],[f67478_D])).
fof(f67478_D,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16))))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f44691,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))) | s('type.num.num',X16) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16))))) ) | ($spl12 | $spl176)),
  inference(superposition,[],[f42708,f388])).
fof(f42708,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl176),
  inference(superposition,[],[f42694,f109])).
fof(f68309,plain,(
  ( ! [X736,X737] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X737),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X736))))))) ) | $spl332),
  inference(cnf_transformation,[],[f68309_D])).
fof(f68309_D,plain,(
  ( ! [X736,X737] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X737),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X736))))))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f41628,plain,(
  ( ! [X736,X737] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X737),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X736))))))) ) | ($spl118 | $spl176)),
  inference(superposition,[],[f26951,f41306])).
fof(f26951,plain,(
  ( ! [X0,X1] : (s('type.num.num',sK0) != s('type.num.num',X0) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl118),
  inference(equality_resolution,[],[f25459])).
fof(f25459,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',sK1) != s('type.num.num',X0) | s('type.num.num',sK0) != s('type.num.num',X1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl118),
  inference(superposition,[],[f12653,f111])).
fof(f51604,plain,(
  ( ! [X21,X20] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) | ($spl10 | $spl122 | $spl176)),
  inference(forward_demodulation,[],[f51572,f42694])).
fof(f51572,plain,(
  ( ! [X21,X20] : (s('type.num.num',sK0) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) | ($spl10 | $spl122 | $spl176)),
  inference(superposition,[],[f51076,f41306])).
fof(f68307,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X22))) | s('type.num.num',sK0) != s('type.num.num',sK1)) ) | ($spl10 | $spl122 | $spl176)),
  inference(forward_demodulation,[],[f51605,f11149])).
fof(f51605,plain,(
  ( ! [X22] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X22)))) ) | ($spl10 | $spl122 | $spl176)),
  inference(forward_demodulation,[],[f51573,f42694])).
fof(f51573,plain,(
  ( ! [X22] : (s('type.num.num',sK0) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X22)))) ) | ($spl10 | $spl122 | $spl176)),
  inference(superposition,[],[f51076,f11149])).
fof(f50817,plain,(
  ( ! [X21,X20] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))),s('type.num.num',X21)))) ) | ($spl122 | $spl176)),
  inference(superposition,[],[f50759,f41306])).
fof(f68305,plain,(
  ( ! [X207] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X207))))))) ) | $spl328),
  inference(cnf_transformation,[],[f68305_D])).
fof(f68305_D,plain,(
  ( ! [X207] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X207))))))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f41425,plain,(
  ( ! [X207] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X207))))))) ) | ($spl3 | $spl176)),
  inference(superposition,[],[f1633,f41306])).
fof(f68299,plain,(
  ( ! [X16] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X16))))))) ) | $spl326),
  inference(cnf_transformation,[],[f68299_D])).
fof(f68299_D,plain,(
  ( ! [X16] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X16))))))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f50957,plain,(
  ( ! [X16] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X16))))))) ) | ($spl10 | $spl176 | $spl207)),
  inference(superposition,[],[f50891,f41306])).
fof(f67484,plain,(
  ( ! [X16] : (s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16))))) ) | $spl274),
  inference(cnf_transformation,[],[f67484_D])).
fof(f67484_D,plain,(
  ( ! [X16] : (s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16))))) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f44321,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))) | s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16))))) ) | ($spl12 | $spl176)),
  inference(superposition,[],[f41317,f388])).
fof(f41317,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))))) ) | $spl176),
  inference(superposition,[],[f41306,f109])).
fof(f41687,plain,(
  ( ! [X907] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X907))))))) ) | ($spl10 | $spl176)),
  inference(superposition,[],[f34148,f41306])).
fof(f34148,plain,(
  ( ! [X20] : (s('type.num.num',sK0) != s('type.num.num',X20) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20)))) ) | $spl10),
  inference(forward_demodulation,[],[f34147,f11149])).
fof(f34147,plain,(
  ( ! [X20] : (s('type.num.num',sK0) != s('type.num.num',X20) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X20)))) ) | $spl10),
  inference(forward_demodulation,[],[f34142,f23944])).
fof(f34142,plain,(
  ( ! [X20] : (s('type.num.num',X20) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X20)))) ) | $spl10),
  inference(trivial_inequality_removal,[],[f34128])).
fof(f34128,plain,(
  ( ! [X20] : (s('type.num.num',sK1) != s('type.num.num',sK1) | s('type.num.num',X20) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X20)))) ) | $spl10),
  inference(superposition,[],[f13924,f11149])).
fof(f51093,plain,(
  ( ! [X0] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | ($spl10 | $spl12 | $spl122 | $spl150 | $spl152 | $spl176)),
  inference(superposition,[],[f51085,f41306])).
fof(f51085,plain,(
  ( ! [X8] : (s('type.num.num',sK0) != s('type.num.num',sK3(X8)) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X8)) ) | ($spl10 | $spl12 | $spl122 | $spl150 | $spl152)),
  inference(forward_demodulation,[],[f51084,f23944])).
fof(f51084,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X8) | s('type.num.num',sK3(X8)) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl12 | $spl122 | $spl150 | $spl152)),
  inference(subsumption_resolution,[],[f51083,f28880])).
fof(f51083,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X8) | s('type.num.num',sK3(X8)) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X8)) ) | ($spl10 | $spl12 | $spl122 | $spl152)),
  inference(subsumption_resolution,[],[f51082,f28787])).
fof(f28787,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) ) | $spl12),
  inference(equality_resolution,[],[f3788])).
fof(f3788,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx',X1)) ) | $spl12),
  inference(superposition,[],[f3743,f141])).
fof(f3743,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))) ) | $spl12),
  inference(superposition,[],[f3721,f141])).
fof(f3721,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))) ) | $spl12),
  inference(equality_resolution,[],[f3345])).
fof(f3345,plain,(
  ( ! [X28,X27] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X28) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X28))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X27)))))) ) | $spl12),
  inference(superposition,[],[f694,f140])).
fof(f694,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X12)))) ) | $spl12),
  inference(superposition,[],[f112,f388])).
fof(f112,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : ~s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X16,X15,X8] : ~s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X16)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|0')).
fof(f51082,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X8) | s('type.num.num',sK3(X8)) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X8))))) ) | ($spl10 | $spl12 | $spl122 | $spl152)),
  inference(subsumption_resolution,[],[f51081,f7682])).
fof(f7682,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1)))) ) | $spl12),
  inference(equality_resolution,[],[f3677])).
fof(f3677,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx',X1)) ) | $spl12),
  inference(superposition,[],[f3633,f141])).
fof(f3633,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))) ) | $spl12),
  inference(superposition,[],[f3611,f141])).
fof(f3611,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) ) | $spl12),
  inference(equality_resolution,[],[f3326])).
fof(f3326,plain,(
  ( ! [X28,X27] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X28) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X28))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X27)))))) ) | $spl12),
  inference(superposition,[],[f695,f140])).
fof(f695,plain,(
  ( ! [X13] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X13)))) ) | $spl12),
  inference(superposition,[],[f113,f388])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X2))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X16,X15,X8] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X16)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|1')).
fof(f51081,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X8) | s('type.num.num',sK3(X8)) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X8)))) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X8))))) ) | ($spl10 | $spl122 | $spl152)),
  inference(subsumption_resolution,[],[f51061,f28885])).
fof(f51061,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X8) | s('type.num.num',sK3(X8)) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X8)))) | s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X8))))) ) | ($spl10 | $spl122)),
  inference(superposition,[],[f50761,f117])).
fof(f117,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : (s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4,sK5,sK6])],[f52])).
fof(f52,plain,(
  ! [X0] : (? [X3,X4] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X3),s('type.num.num',X4))) | ? [X2] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X2))) | ? [X1] : s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X20] : (? [X21,X22] : s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X21),s('type.num.num',X22))) | ? [X23] : s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X23))) | ? [X7] : s('type.clos_known.val_approx',X20) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X7))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X20) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X20))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_nchotomy')).
fof(f68289,plain,(
  ( ! [X142,X143] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X142))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X143)))) ) | $spl322),
  inference(cnf_transformation,[],[f68289_D])).
fof(f68289_D,plain,(
  ( ! [X142,X143] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X142))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X143)))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f42105,plain,(
  ( ! [X142,X143,X141] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X141))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X142))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X143)))) ) | ($spl122 | $spl176)),
  inference(superposition,[],[f14674,f41315])).
fof(f41315,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | $spl176),
  inference(backward_demodulation,[],[f41306,f40556])).
fof(f14674,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2)))) ) | $spl122),
  inference(superposition,[],[f14393,f109])).
fof(f68288,plain,(
  ( ! [X146,X145] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X145),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X146),s('type.num.num',sK1)))) ) | $spl320),
  inference(cnf_transformation,[],[f68288_D])).
fof(f68288_D,plain,(
  ( ! [X146,X145] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X145),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X146),s('type.num.num',sK1)))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f42106,plain,(
  ( ! [X146,X144,X145] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X144))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X145),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X146),s('type.num.num',sK1)))) ) | ($spl122 | $spl176)),
  inference(superposition,[],[f14676,f41315])).
fof(f14676,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',X8)))) ) | $spl122),
  inference(superposition,[],[f14393,f110])).
fof(f68286,plain,(
  ( ! [X627] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X627))))))) ) | $spl318),
  inference(cnf_transformation,[],[f68286_D])).
fof(f68286_D,plain,(
  ( ! [X627] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X627))))))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f41925,plain,(
  ( ! [X627] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X627))))))) ) | ($spl10 | $spl176)),
  inference(forward_demodulation,[],[f41590,f23944])).
fof(f41590,plain,(
  ( ! [X627] : (s('type.num.num',sK1) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X627))))))) ) | ($spl10 | $spl176)),
  inference(superposition,[],[f24098,f41306])).
fof(f24098,plain,(
  ( ! [X175] : (s('type.num.num',X175) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X175)))) ) | $spl10),
  inference(superposition,[],[f141,f23944])).
fof(f68241,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))) | $spl316),
  inference(cnf_transformation,[],[f68241_D])).
fof(f68241_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f28135,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))) | s('type.num.num',sK0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f23949,f388])).
fof(f23949,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',sK0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK0))))) ) | $spl10),
  inference(superposition,[],[f23944,f109])).
fof(f68236,plain,(
  s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))) | $spl314),
  inference(cnf_transformation,[],[f68236_D])).
fof(f68236_D,plain,(
  s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f27633,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))) | s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f11154,f388])).
fof(f11154,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK0))))) ) | $spl10),
  inference(superposition,[],[f11149,f109])).
fof(f28367,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f23961,f388])).
fof(f27864,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))) | s('type.num.num',sK1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f11166,f388])).
fof(f68186,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl308),
  inference(cnf_transformation,[],[f68186_D])).
fof(f68186_D,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f52826,plain,(
  ( ! [X39,X40] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',X40))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl126)),
  inference(superposition,[],[f22824,f23944])).
fof(f22824,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl126),
  inference(superposition,[],[f20753,f141])).
fof(f20753,plain,(
  ( ! [X37,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X36))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',X36)))) ) | $spl126),
  inference(superposition,[],[f14627,f140])).
fof(f16270,plain,(
  ( ! [X24,X25] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X25))) | s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.num.num',X24) != s('type.num.num',X25)) ) | ($spl10 | $spl122)),
  inference(forward_demodulation,[],[f16260,f11149])).
fof(f16260,plain,(
  ( ! [X24,X25] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.num.num',X24) != s('type.num.num',X25) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X25)))) ) | ($spl10 | $spl122)),
  inference(superposition,[],[f14695,f11149])).
fof(f68167,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X22))) | s('type.num.num',sK0) != s('type.num.num',sK1)) ) | ($spl10 | $spl122)),
  inference(forward_demodulation,[],[f50818,f11149])).
fof(f50818,plain,(
  ( ! [X22] : (s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X22)))) ) | ($spl10 | $spl122)),
  inference(superposition,[],[f50759,f11149])).
fof(f17686,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X20))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1)))) ) | ($spl10 | $spl122)),
  inference(forward_demodulation,[],[f17668,f11149])).
fof(f17668,plain,(
  ( ! [X20] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X20)))) ) | ($spl10 | $spl122)),
  inference(superposition,[],[f14682,f11149])).
fof(f30439,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | $spl154),
  inference(cnf_transformation,[],[f30439_D])).
fof(f30439_D,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f68166,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK4(sK2))))))) ) | $spl302),
  inference(cnf_transformation,[],[f68166_D])).
fof(f68166_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK4(sK2))))))) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f56537,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56536,f112])).
fof(f56536,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56535,f113])).
fof(f56535,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56469,f115])).
fof(f115,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X16,X15] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X16)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|3')).
fof(f56469,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f56428,f117])).
fof(f56428,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK1))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK4(sK2))))))) ) | ($spl12 | $spl126)),
  inference(equality_resolution,[],[f25834])).
fof(f25834,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK4(sK2)))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',sK1)))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f25799,f140])).
fof(f25799,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2))))) ) | ($spl12 | $spl126)),
  inference(trivial_inequality_removal,[],[f25790])).
fof(f25790,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f20747,f388])).
fof(f20747,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',X8)))) ) | $spl126),
  inference(superposition,[],[f14627,f110])).
fof(f68165,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK4(sK2))))))) ) | $spl300),
  inference(cnf_transformation,[],[f68165_D])).
fof(f68165_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK4(sK2))))))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f56541,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56540,f112])).
fof(f56540,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56539,f113])).
fof(f56539,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56470,f114])).
fof(f114,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X16,X15] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',X16)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|2')).
fof(f56470,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f56428,f117])).
fof(f68164,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) ) | $spl298),
  inference(cnf_transformation,[],[f68164_D])).
fof(f68164_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f56662,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56661,f112])).
fof(f56661,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56660,f113])).
fof(f56660,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56651,f115])).
fof(f56651,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f25870,f117])).
fof(f25870,plain,(
  ( ! [X39,X38,X40] : (s('type.clos_known.val_approx',X39) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK1))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X39))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK4(sK2))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f25799,f140])).
fof(f68163,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK4(sK2))))))) ) | $spl296),
  inference(cnf_transformation,[],[f68163_D])).
fof(f68163_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK4(sK2))))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f56666,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56665,f112])).
fof(f56665,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56664,f113])).
fof(f56664,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56652,f114])).
fof(f56652,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK4(sK2)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f25870,f117])).
fof(f20871,plain,(
  ( ! [X17] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f825,f388])).
fof(f67859,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2)))))) ) | $spl294),
  inference(cnf_transformation,[],[f67859_D])).
fof(f67859_D,plain,(
  ( ! [X16] : (s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2)))))) ) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f49589,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))) | s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2)))))) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f46210,f388])).
fof(f46210,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',X8))) | s('type.num.num',X9) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',X8))))) ) | $spl196),
  inference(superposition,[],[f46172,f110])).
fof(f46172,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK0))))) ) | $spl196),
  inference(equality_resolution,[],[f45746])).
fof(f45746,plain,(
  ( ! [X2,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK0))))) ) | $spl196),
  inference(superposition,[],[f109,f45570])).
fof(f67857,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) | $spl292),
  inference(cnf_transformation,[],[f67857_D])).
fof(f67857_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))))) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f49942,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f1020,f388])).
fof(f1020,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X6)))))) ) | $spl0),
  inference(superposition,[],[f841,f110])).
fof(f841,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl0),
  inference(superposition,[],[f160,f116])).
fof(f116,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X21,X8] : s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X21),s('type.num.num',X8))))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X21),s('type.num.num',X8)))))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.dest_Clos_def|split|0')).
fof(f67850,plain,(
  ( ! [X16] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2)))))) ) | $spl290),
  inference(cnf_transformation,[],[f67850_D])).
fof(f67850_D,plain,(
  ( ! [X16] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2)))))) ) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f50393,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2)))))) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f48281,f388])).
fof(f48281,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',X8))))) ) | $spl196),
  inference(superposition,[],[f48246,f110])).
fof(f48246,plain,(
  ( ! [X0] : (s('type.num.num',sK0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK0))))) ) | $spl196),
  inference(equality_resolution,[],[f45748])).
fof(f45748,plain,(
  ( ! [X8,X7,X9] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK0))))) ) | $spl196),
  inference(superposition,[],[f110,f45570])).
fof(f67844,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))) | $spl288),
  inference(cnf_transformation,[],[f67844_D])).
fof(f67844_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f52061,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f51777,f388])).
fof(f51777,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X6)))) ) | $spl10),
  inference(forward_demodulation,[],[f13916,f23944])).
fof(f13916,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X6))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))))) ) | $spl10),
  inference(superposition,[],[f11152,f110])).
fof(f67811,plain,(
  ( ! [X40] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK1)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl286),
  inference(cnf_transformation,[],[f67811_D])).
fof(f67811_D,plain,(
  ( ! [X40] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK1)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f59017,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK1)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl12 | $spl154)),
  inference(superposition,[],[f37050,f23944])).
fof(f37050,plain,(
  ( ! [X30,X28,X29] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X30),s('type.num.num',X29))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X28),s('type.num.num',sK1)))) | s('type.num.num',X28) != s('type.num.num',X29)) ) | ($spl12 | $spl154)),
  inference(superposition,[],[f37037,f30888])).
fof(f37037,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num',X0) = s('type.num.num',sK4(sK2)) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X1)))) ) | $spl12),
  inference(equality_resolution,[],[f3573])).
fof(f3573,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X0) != s('type.num.num',X2) | s('type.num.num',X1) = s('type.num.num',sK4(sK2)) | s('type.num.num',X1) != s('type.num.num',X3) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X3)))) ) | $spl12),
  inference(superposition,[],[f3409,f111])).
fof(f3409,plain,(
  ( ! [X4,X5] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num',sK4(sK2))) ) | $spl12),
  inference(superposition,[],[f110,f388])).
fof(f67810,plain,(
  ( ! [X47,X49] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X49),s('type.num.num',sK1)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) | $spl284),
  inference(cnf_transformation,[],[f67810_D])).
fof(f67810_D,plain,(
  ( ! [X47,X49] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X49),s('type.num.num',sK1)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f59020,plain,(
  ( ! [X47,X48,X49] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X49),s('type.num.num',sK1)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) | ($spl12 | $spl154 | $spl196)),
  inference(superposition,[],[f37050,f48246])).
fof(f67809,plain,(
  ( ! [X40] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X40)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl282),
  inference(cnf_transformation,[],[f67809_D])).
fof(f67809_D,plain,(
  ( ! [X40] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X40)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f60580,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X40)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl12 | $spl176)),
  inference(superposition,[],[f43080,f23944])).
fof(f43080,plain,(
  ( ! [X909,X910,X908] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X910),s('type.num.num',X909))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X908)))) | s('type.num.num',X908) != s('type.num.num',X909)) ) | ($spl12 | $spl176)),
  inference(superposition,[],[f37037,f42694])).
fof(f67808,plain,(
  ( ! [X47,X49] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X49)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) | $spl280),
  inference(cnf_transformation,[],[f67808_D])).
fof(f67808_D,plain,(
  ( ! [X47,X49] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X49)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f60583,plain,(
  ( ! [X47,X48,X49] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X49)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) | ($spl12 | $spl176 | $spl196)),
  inference(superposition,[],[f43080,f48246])).
fof(f67807,plain,(
  ( ! [X40] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK0)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl278),
  inference(cnf_transformation,[],[f67807_D])).
fof(f67807_D,plain,(
  ( ! [X40] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK0)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f60791,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X39),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X40),s('type.num.num',sK0)))) | s('type.num.num',X40) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl12 | $spl196)),
  inference(superposition,[],[f46563,f23944])).
fof(f46563,plain,(
  ( ! [X918,X919,X917] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X919),s('type.num.num',X918))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X917),s('type.num.num',sK0)))) | s('type.num.num',X917) != s('type.num.num',X918)) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f37037,f46172])).
fof(f67806,plain,(
  ( ! [X47,X49] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X49),s('type.num.num',sK0)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) | $spl276),
  inference(cnf_transformation,[],[f67806_D])).
fof(f67806_D,plain,(
  ( ! [X47,X49] : (s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X49),s('type.num.num',sK0)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f60794,plain,(
  ( ! [X47,X48,X49] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X48),s('type.num.num',sK0))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X49),s('type.num.num',sK0)))) | s('type.num.num',X49) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0))))) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f46563,f48246])).
fof(f11860,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))))) | $spl112),
  inference(cnf_transformation,[],[f11860_D])).
fof(f11860_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f14515,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X14))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f813,f388])).
fof(f813,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',sK0)))))) ) | $spl0),
  inference(superposition,[],[f160,f109])).
fof(f20868,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X14))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f813,f388])).
fof(f67450,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))))) | $spl270),
  inference(cnf_transformation,[],[f67450_D])).
fof(f67450_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0))))) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f48054,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X14))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f1008,f388])).
fof(f1008,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK0)))))) ) | $spl0),
  inference(superposition,[],[f841,f109])).
fof(f67395,plain,(
  $false | ($spl12 | $spl164)),
  inference(trivial_inequality_removal,[],[f67386])).
fof(f67386,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | ($spl12 | $spl164)),
  inference(superposition,[],[f37781,f388])).
fof(f37781,plain,(
  ( ! [X26,X27] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27)))) ) | $spl164),
  inference(cnf_transformation,[],[f37781_D])).
fof(f37781_D,plain,(
  ( ! [X26,X27] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27)))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f50766,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | $spl209),
  inference(cnf_transformation,[],[f50766_D])).
fof(f50766_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) <=> ~$spl209),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl209])])).
fof(f67184,plain,(
  ( ! [X37,X38] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',X38)))) ) | ($spl5 | $spl12 | $spl132)),
  inference(subsumption_resolution,[],[f53504,f4444])).
fof(f4444,plain,(
  ( ! [X4,X5] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12)),
  inference(superposition,[],[f110,f3475])).
fof(f3475,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | ($spl5 | $spl12)),
  inference(forward_demodulation,[],[f3474,f388])).
fof(f3474,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f3473,f112])).
fof(f3473,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f3472,f113])).
fof(f3472,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f3471,f115])).
fof(f3471,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f3399,f239])).
fof(f3399,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | $spl12),
  inference(superposition,[],[f388,f117])).
fof(f53504,plain,(
  ( ! [X37,X38] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',X38))) | s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl132)),
  inference(superposition,[],[f22942,f4529])).
fof(f4529,plain,(
  s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | ($spl5 | $spl12)),
  inference(trivial_inequality_removal,[],[f4453])).
fof(f4453,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | ($spl5 | $spl12)),
  inference(superposition,[],[f3409,f3475])).
fof(f22942,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X2),s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl132),
  inference(superposition,[],[f20784,f141])).
fof(f20784,plain,(
  ( ! [X37,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X36))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',X36)))) ) | $spl132),
  inference(superposition,[],[f15261,f140])).
fof(f67227,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))) | s('type.num.num',X36) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | $spl268),
  inference(cnf_transformation,[],[f67227_D])).
fof(f67227_D,plain,(
  ( ! [X35,X36] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))) | s('type.num.num',X36) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f37783,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | $spl167),
  inference(cnf_transformation,[],[f37783_D])).
fof(f37783_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f52824,plain,(
  ( ! [X35,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))) | s('type.num.num',X36) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl126)),
  inference(superposition,[],[f22824,f4530])).
fof(f4530,plain,(
  s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | ($spl5 | $spl12)),
  inference(trivial_inequality_removal,[],[f4452])).
fof(f4452,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.num.num',sK3(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | ($spl5 | $spl12)),
  inference(superposition,[],[f3407,f3475])).
fof(f3407,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',sK3(sK2))) ) | $spl12),
  inference(superposition,[],[f109,f388])).
fof(f67146,plain,(
  $false | ($spl0 | $spl10 | $spl12 | $spl167)),
  inference(subsumption_resolution,[],[f67024,f39268])).
fof(f39268,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',X0),'const.pair.,_2'(s('type.num.num',sK1),s(X0,X1))) != s('type.pair.prod'('type.num.num',X0),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s(X0,X2)))) ) | ($spl10 | $spl167)),
  inference(equality_resolution,[],[f37996])).
fof(f37996,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num',sK1) != s('type.num.num',X12) | s('type.pair.prod'('type.num.num',X13),'const.pair.,_2'(s('type.num.num',X12),s(X13,X14))) != s('type.pair.prod'('type.num.num',X13),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s(X13,X15)))) ) | ($spl10 | $spl167)),
  inference(superposition,[],[f37986,f143])).
fof(f37986,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK3(sK2)) | ($spl10 | $spl167)),
  inference(trivial_inequality_removal,[],[f37985])).
fof(f37985,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) | s('type.num.num',sK1) != s('type.num.num',sK3(sK2)) | ($spl10 | $spl167)),
  inference(forward_demodulation,[],[f37961,f11149])).
fof(f37961,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK3(sK2)) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl10 | $spl167)),
  inference(superposition,[],[f37818,f11149])).
fof(f37818,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num',sK3(sK2)) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X0)))) ) | $spl167),
  inference(superposition,[],[f37783,f141])).
fof(f67024,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl12)),
  inference(trivial_inequality_removal,[],[f67008])).
fof(f67008,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl12)),
  inference(superposition,[],[f10348,f388])).
fof(f10348,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | $spl0),
  inference(superposition,[],[f852,f116])).
fof(f14629,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2)))))) | $spl128),
  inference(cnf_transformation,[],[f14629_D])).
fof(f14629_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2)))))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f14393,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12)))) ) | $spl122),
  inference(cnf_transformation,[],[f14393_D])).
fof(f14393_D,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12)))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f20870,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X16))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2))))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f823,f388])).
fof(f823,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',X0)))))) ) | $spl0),
  inference(superposition,[],[f160,f109])).
fof(f67092,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2)))))) | $spl266),
  inference(cnf_transformation,[],[f67092_D])).
fof(f67092_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2)))))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f49393,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2))))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f1018,f388])).
fof(f1018,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))))) ) | $spl0),
  inference(superposition,[],[f841,f109])).
fof(f49491,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))) | s('type.num.num',X16) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f46208,f388])).
fof(f46208,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X1) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl196),
  inference(superposition,[],[f46172,f109])).
fof(f50295,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))) | s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2)))))) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f48279,f388])).
fof(f48279,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl196),
  inference(superposition,[],[f48246,f109])).
fof(f67076,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2)))) | $spl260),
  inference(cnf_transformation,[],[f67076_D])).
fof(f67076_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2)))) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f51413,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f51253,f388])).
fof(f51253,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl10),
  inference(forward_demodulation,[],[f13914,f23944])).
fof(f13914,plain,(
  ( ! [X2,X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X2)))) ) | $spl10),
  inference(superposition,[],[f11152,f109])).
fof(f67070,plain,(
  ( ! [X48] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X48)))) ) | $spl258),
  inference(cnf_transformation,[],[f67070_D])).
fof(f67070_D,plain,(
  ( ! [X48] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X48)))) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f61092,plain,(
  ( ! [X39,X40] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X40))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X39)))) ) | ($spl10 | $spl12 | $spl207)),
  inference(forward_demodulation,[],[f61091,f23944])).
fof(f61091,plain,(
  ( ! [X39,X40] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X39))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X40)))) ) | ($spl10 | $spl12 | $spl207)),
  inference(subsumption_resolution,[],[f61064,f50777])).
fof(f61064,plain,(
  ( ! [X39,X40] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X39))) | s('type.num.num',X39) = s('type.num.num',sK3(sK2)) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',X40)))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f3529,f23944])).
fof(f3529,plain,(
  ( ! [X45,X46,X44] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X44))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X45))) | s('type.num.num',X44) = s('type.num.num',sK3(sK2)) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X45),s('type.num.num',X46)))) ) | $spl12),
  inference(superposition,[],[f3407,f140])).
fof(f61097,plain,(
  ( ! [X48,X49] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X49))) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X48)))) ) | ($spl12 | $spl196 | $spl207)),
  inference(forward_demodulation,[],[f61096,f48246])).
fof(f61096,plain,(
  ( ! [X47,X48,X49] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X48))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0)))),s('type.num.num',X49)))) ) | ($spl12 | $spl196 | $spl207)),
  inference(subsumption_resolution,[],[f61067,f50777])).
fof(f61067,plain,(
  ( ! [X47,X48,X49] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X48))) | s('type.num.num',X48) = s('type.num.num',sK3(sK2)) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X47),s('type.num.num',sK0)))),s('type.num.num',X49)))) ) | ($spl12 | $spl196)),
  inference(superposition,[],[f3529,f48246])).
fof(f67045,plain,(
  $false | ($spl0 | $spl10 | $spl12 | $spl209)),
  inference(subsumption_resolution,[],[f67024,f52506])).
fof(f52506,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.num.num'),'const.pair.,_2'(s(X0,X1),s('type.num.num',sK0))) != s('type.pair.prod'(X0,'type.num.num'),'const.pair.,_2'(s(X0,X2),s('type.num.num',sK4(sK2))))) ) | ($spl10 | $spl209)),
  inference(equality_resolution,[],[f50939])).
fof(f50939,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num',sK0) != s('type.num.num',X20) | s('type.pair.prod'(X21,'type.num.num'),'const.pair.,_2'(s(X21,X22),s('type.num.num',X20))) != s('type.pair.prod'(X21,'type.num.num'),'const.pair.,_2'(s(X21,X23),s('type.num.num',sK4(sK2))))) ) | ($spl10 | $spl209)),
  inference(superposition,[],[f50929,f144])).
fof(f144,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X3) = s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f105])).
fof(f50929,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK4(sK2)) | ($spl10 | $spl209)),
  inference(trivial_inequality_removal,[],[f50928])).
fof(f50928,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) | s('type.num.num',sK0) != s('type.num.num',sK4(sK2)) | ($spl10 | $spl209)),
  inference(forward_demodulation,[],[f50903,f23944])).
fof(f50903,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK4(sK2)) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl10 | $spl209)),
  inference(superposition,[],[f50795,f23944])).
fof(f50795,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num',sK4(sK2)) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X0)))) ) | $spl209),
  inference(superposition,[],[f50766,f141])).
fof(f33774,plain,(
  ( ! [X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X1)),s('type.num.num',sK4(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1)) ) | $spl162),
  inference(cnf_transformation,[],[f33774_D])).
fof(f33774_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X1)),s('type.num.num',sK4(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X1)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1)) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f7805,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl92),
  inference(cnf_transformation,[],[f7805_D])).
fof(f7805_D,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f66808,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.pair.prod'(X5,'type.clos_known.val_approx'),'const.pair.,_2'(s(X5,X6),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X5,'type.clos_known.val_approx'),'const.pair.,_2'(s(X5,X7),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X4))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X4)),s('type.num.num',sK4(X4))))) ) | $spl0),
  inference(superposition,[],[f1034,f117])).
fof(f1034,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.pair.prod'(X13,'type.clos_known.val_approx'),'const.pair.,_2'(s(X13,X14),s('type.clos_known.val_approx',X12))) != s('type.pair.prod'(X13,'type.clos_known.val_approx'),'const.pair.,_2'(s(X13,X15),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X12)))) ) | $spl0),
  inference(superposition,[],[f841,f144])).
fof(f33773,plain,(
  ( ! [X0] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) ) | $spl160),
  inference(cnf_transformation,[],[f33773_D])).
fof(f33773_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0)) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f7806,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl94),
  inference(cnf_transformation,[],[f7806_D])).
fof(f7806_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f66807,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'(X1,'type.clos_known.val_approx'),'const.pair.,_2'(s(X1,X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X1,'type.clos_known.val_approx'),'const.pair.,_2'(s(X1,X3),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0))))) ) | $spl0),
  inference(superposition,[],[f1034,f117])).
fof(f7809,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X3,X5)))) ) | $spl100),
  inference(cnf_transformation,[],[f7809_D])).
fof(f7809_D,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X3,X5)))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f66516,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.pair.prod'('type.clos_known.val_approx',X5),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X5,X6))) != s('type.pair.prod'('type.clos_known.val_approx',X5),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X5,X7))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X4))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X4) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X4)))) | s('type.clos_known.val_approx',X4) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X4)),s('type.num.num',sK4(X4))))) ) | $spl0),
  inference(superposition,[],[f1032,f117])).
fof(f1032,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.pair.prod'('type.clos_known.val_approx',X5),'const.pair.,_2'(s('type.clos_known.val_approx',X4),s(X5,X6))) != s('type.pair.prod'('type.clos_known.val_approx',X5),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X5,X7))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X4)))) ) | $spl0),
  inference(superposition,[],[f841,f143])).
fof(f7810,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X1))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X0,X2)))) ) | $spl102),
  inference(cnf_transformation,[],[f7810_D])).
fof(f7810_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X1))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X0,X2)))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f66515,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X1),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X1,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X1),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X1,X3))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0))))) ) | $spl0),
  inference(superposition,[],[f1032,f117])).
fof(f60814,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK0))))) ) | $spl256),
  inference(cnf_transformation,[],[f60814_D])).
fof(f60814_D,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK0))))) ) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f59041,plain,(
  ( ! [X37] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',sK4(sK2))))) ) | $spl248),
  inference(cnf_transformation,[],[f59041_D])).
fof(f59041_D,plain,(
  ( ! [X37] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',sK4(sK2))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f60790,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',sK4(sK2)))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK0)))) | s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl196)),
  inference(superposition,[],[f46563,f4529])).
fof(f60603,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X38))))) ) | $spl254),
  inference(cnf_transformation,[],[f60603_D])).
fof(f60603_D,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X38))))) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f60579,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',sK4(sK2)))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X38)))) | s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl176)),
  inference(superposition,[],[f43080,f4529])).
fof(f1195,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X22)),s('type.num.num',sK4(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X22))))) ) | $spl24),
  inference(cnf_transformation,[],[f1195_D])).
fof(f1195_D,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X22)),s('type.num.num',sK4(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X22))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f60517,plain,(
  ( ! [X47,X48] : (s('type.clos_known.val_approx',X47) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X48))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X47)) ) | $spl252),
  inference(cnf_transformation,[],[f60517_D])).
fof(f60517_D,plain,(
  ( ! [X47,X48] : (s('type.clos_known.val_approx',X47) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X48))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X47)) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f60515,plain,(
  ( ! [X47,X48,X46] : (s('type.clos_known.val_approx',X47) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X48))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X47) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X46) | s('type.clos_known.val_approx',X46) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X46)))) | s('type.clos_known.val_approx',X46) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X46)))) | s('type.clos_known.val_approx',X46) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X46)),s('type.num.num',sK4(X46))))) ) | $spl186),
  inference(trivial_inequality_removal,[],[f60499])).
fof(f60499,plain,(
  ( ! [X47,X48,X46] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X46))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X46))) | s('type.clos_known.val_approx',X47) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X48))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X47) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X46) | s('type.clos_known.val_approx',X46) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X46)))) | s('type.clos_known.val_approx',X46) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X46)))) | s('type.clos_known.val_approx',X46) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X46)),s('type.num.num',sK4(X46))))) ) | $spl186),
  inference(superposition,[],[f40846,f117])).
fof(f40846,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx',X1)) ) | $spl186),
  inference(superposition,[],[f40751,f141])).
fof(f40751,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl186),
  inference(superposition,[],[f40658,f141])).
fof(f612,plain,(
  ( ! [X21] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X21)),s('type.num.num',sK4(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X21))))) ) | $spl18),
  inference(cnf_transformation,[],[f612_D])).
fof(f612_D,plain,(
  ( ! [X21] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X21)),s('type.num.num',sK4(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X21))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f60406,plain,(
  ( ! [X47,X46] : (s('type.clos_known.val_approx',X46) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X47))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X46)) ) | $spl250),
  inference(cnf_transformation,[],[f60406_D])).
fof(f60406_D,plain,(
  ( ! [X47,X46] : (s('type.clos_known.val_approx',X46) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X47))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X46)) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f60404,plain,(
  ( ! [X47,X45,X46] : (s('type.clos_known.val_approx',X46) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X47))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X46) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X45) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X45)))) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X45)))) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X45)),s('type.num.num',sK4(X45))))) ) | $spl184),
  inference(trivial_inequality_removal,[],[f60387])).
fof(f60387,plain,(
  ( ! [X47,X45,X46] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X45))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X45))) | s('type.clos_known.val_approx',X46) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X47))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X46) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X45) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X45)))) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X45)))) | s('type.clos_known.val_approx',X45) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X45)),s('type.num.num',sK4(X45))))) ) | $spl184),
  inference(superposition,[],[f40799,f117])).
fof(f40799,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx',X1)) ) | $spl184),
  inference(superposition,[],[f40703,f141])).
fof(f40703,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | $spl184),
  inference(superposition,[],[f40654,f141])).
fof(f59095,plain,(
  $false | ($spl5 | $spl9 | $spl12 | $spl248)),
  inference(subsumption_resolution,[],[f59094,f694])).
fof(f59094,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | ($spl5 | $spl9 | $spl12 | $spl248)),
  inference(subsumption_resolution,[],[f59093,f695])).
fof(f59093,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | ($spl5 | $spl9 | $spl248)),
  inference(subsumption_resolution,[],[f59092,f239])).
fof(f59092,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | ($spl9 | $spl248)),
  inference(subsumption_resolution,[],[f59089,f247])).
fof(f59089,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | $spl248),
  inference(trivial_inequality_removal,[],[f59078])).
fof(f59078,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | $spl248),
  inference(superposition,[],[f59041,f117])).
fof(f59088,plain,(
  $false | ($spl12 | $spl248)),
  inference(trivial_inequality_removal,[],[f59079])).
fof(f59079,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | ($spl12 | $spl248)),
  inference(superposition,[],[f59041,f388])).
fof(f59040,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK1))))) ) | $spl246),
  inference(cnf_transformation,[],[f59040_D])).
fof(f59040_D,plain,(
  ( ! [X38] : (s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK1))))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f59016,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',sK4(sK2)))) | s('type.num.num',sK4(sK2)) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK1)))) | s('type.num.num',X38) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl154)),
  inference(superposition,[],[f37050,f4529])).
fof(f58954,plain,(
  ( ! [X35] : (s('type.clos_known.val_approx',X35) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X35)) ) | $spl244),
  inference(cnf_transformation,[],[f58954_D])).
fof(f58954_D,plain,(
  ( ! [X35] : (s('type.clos_known.val_approx',X35) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X35)) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f58952,plain,(
  ( ! [X35,X34] : (s('type.clos_known.val_approx',X35) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X35) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X34)))) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X34)))) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X34)),s('type.num.num',sK4(X34))))) ) | $spl159),
  inference(trivial_inequality_removal,[],[f58936])).
fof(f58936,plain,(
  ( ! [X35,X34] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X34))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X34))) | s('type.clos_known.val_approx',X35) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X35) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X34)))) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X34)))) | s('type.clos_known.val_approx',X34) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X34)),s('type.num.num',sK4(X34))))) ) | $spl159),
  inference(superposition,[],[f33964,f117])).
fof(f33964,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx',X1)) ) | $spl159),
  inference(superposition,[],[f33868,f141])).
fof(f33868,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) | $spl159),
  inference(superposition,[],[f30530,f141])).
fof(f58842,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx',X34) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X34)) ) | $spl242),
  inference(cnf_transformation,[],[f58842_D])).
fof(f58842_D,plain,(
  ( ! [X34] : (s('type.clos_known.val_approx',X34) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X34)) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f58840,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx',X34) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X33)))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X33)))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X33)),s('type.num.num',sK4(X33))))) ) | $spl157),
  inference(trivial_inequality_removal,[],[f58823])).
fof(f58823,plain,(
  ( ! [X33,X34] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X33))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X33))) | s('type.clos_known.val_approx',X34) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X34) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X33) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X33)))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X33)))) | s('type.clos_known.val_approx',X33) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X33)),s('type.num.num',sK4(X33))))) ) | $spl157),
  inference(superposition,[],[f33917,f117])).
fof(f33917,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx',X1)) ) | $spl157),
  inference(superposition,[],[f33825,f141])).
fof(f33825,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) | $spl157),
  inference(superposition,[],[f30525,f141])).
fof(f56433,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | $spl230),
  inference(cnf_transformation,[],[f56433_D])).
fof(f56433_D,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f55854,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0)))))) ) | $spl228),
  inference(cnf_transformation,[],[f55854_D])).
fof(f55854_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0)))))) ) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f57512,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57511,f112])).
fof(f57511,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57510,f113])).
fof(f57510,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57484,f114])).
fof(f57484,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f57393,f117])).
fof(f57393,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK0))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK4(sK2))))))) ) | ($spl12 | $spl132)),
  inference(equality_resolution,[],[f26076])).
fof(f26076,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK4(sK2)))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',sK0)))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f26041,f140])).
fof(f26041,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2))))) ) | ($spl12 | $spl132)),
  inference(trivial_inequality_removal,[],[f26032])).
fof(f26032,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK4(sK2))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f20778,f388])).
fof(f20778,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',X8)))) ) | $spl132),
  inference(superposition,[],[f15261,f110])).
fof(f55850,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK0)))))) ) | $spl226),
  inference(cnf_transformation,[],[f55850_D])).
fof(f55850_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK0)))))) ) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f57509,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57508,f112])).
fof(f57508,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57507,f113])).
fof(f57507,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57483,f115])).
fof(f57483,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f57393,f117])).
fof(f55742,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0)))))) ) | $spl224),
  inference(cnf_transformation,[],[f55742_D])).
fof(f55742_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0)))))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f57400,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57399,f112])).
fof(f57399,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57398,f113])).
fof(f57398,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57386,f114])).
fof(f57386,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f26076,f117])).
fof(f55738,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0)))))) ) | $spl222),
  inference(cnf_transformation,[],[f55738_D])).
fof(f55738_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0)))))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f57397,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57396,f112])).
fof(f57396,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57395,f113])).
fof(f57395,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57385,f115])).
fof(f57385,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f26076,f117])).
fof(f40653,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | $spl182),
  inference(cnf_transformation,[],[f40653_D])).
fof(f40653_D,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f57214,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X15)))))) ) | $spl240),
  inference(cnf_transformation,[],[f57214_D])).
fof(f57214_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X15)))))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f57213,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57212,f112])).
fof(f57212,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57211,f113])).
fof(f57211,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57199,f114])).
fof(f57199,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f25999,f117])).
fof(f25999,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X38))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X36)))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f25930,f140])).
fof(f25930,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X16)))) ) | ($spl12 | $spl132)),
  inference(trivial_inequality_removal,[],[f25921])).
fof(f25921,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X16)))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f20776,f388])).
fof(f20776,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X3))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2)))) ) | $spl132),
  inference(superposition,[],[f15261,f109])).
fof(f57210,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X12)))))) ) | $spl238),
  inference(cnf_transformation,[],[f57210_D])).
fof(f57210_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X12)))))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f57209,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57208,f112])).
fof(f57208,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57207,f113])).
fof(f57207,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f57198,f115])).
fof(f57198,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f25999,f117])).
fof(f56784,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | $spl232),
  inference(cnf_transformation,[],[f56784_D])).
fof(f56784_D,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f40666,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11)))))) ) | $spl190),
  inference(cnf_transformation,[],[f40666_D])).
fof(f40666_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11)))))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f56897,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56896,f112])).
fof(f56896,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56895,f113])).
fof(f56895,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56869,f114])).
fof(f56869,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f56780,f117])).
fof(f56780,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X1))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X0)))))) ) | ($spl12 | $spl132)),
  inference(equality_resolution,[],[f25965])).
fof(f25965,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X38))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X36)))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f25930,f140])).
fof(f40662,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9)))))) ) | $spl188),
  inference(cnf_transformation,[],[f40662_D])).
fof(f40662_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9)))))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f56894,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56893,f112])).
fof(f56893,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56892,f113])).
fof(f56892,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56868,f115])).
fof(f56868,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f56780,f117])).
fof(f56891,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X11)))))) ) | $spl236),
  inference(cnf_transformation,[],[f56891_D])).
fof(f56891_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X11)))))) ) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f56890,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56889,f112])).
fof(f56889,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56888,f113])).
fof(f56888,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56821,f114])).
fof(f56821,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f56780,f117])).
fof(f56887,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X9)))))) ) | $spl234),
  inference(cnf_transformation,[],[f56887_D])).
fof(f56887_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X9)))))) ) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f56886,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56885,f112])).
fof(f56885,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56884,f113])).
fof(f56884,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56820,f115])).
fof(f56820,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f56780,f117])).
fof(f40561,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15)))))) ) | $spl180),
  inference(cnf_transformation,[],[f40561_D])).
fof(f40561_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15)))))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f56787,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56786,f112])).
fof(f56786,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56785,f113])).
fof(f56785,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56773,f114])).
fof(f56773,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X13))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f25965,f117])).
fof(f40557,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12)))))) ) | $spl178),
  inference(cnf_transformation,[],[f40557_D])).
fof(f40557_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12)))))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f56783,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56782,f112])).
fof(f56782,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56781,f113])).
fof(f56781,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(subsumption_resolution,[],[f56772,f115])).
fof(f56772,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl132)),
  inference(superposition,[],[f25965,f117])).
fof(f45675,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1)))))) ) | $spl204),
  inference(cnf_transformation,[],[f45675_D])).
fof(f45675_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1)))))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f56548,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56547,f112])).
fof(f56547,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56546,f113])).
fof(f56546,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56520,f114])).
fof(f56520,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f56428,f117])).
fof(f45671,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1)))))) ) | $spl202),
  inference(cnf_transformation,[],[f45671_D])).
fof(f45671_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1)))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f56545,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56544,f112])).
fof(f56544,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56543,f113])).
fof(f56543,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56519,f115])).
fof(f56519,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f56428,f117])).
fof(f45575,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1)))))) ) | $spl200),
  inference(cnf_transformation,[],[f45575_D])).
fof(f45575_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1)))))) ) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f56436,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56435,f112])).
fof(f56435,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56434,f113])).
fof(f56434,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56421,f114])).
fof(f56421,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X17),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f25834,f117])).
fof(f45571,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1)))))) ) | $spl198),
  inference(cnf_transformation,[],[f45571_D])).
fof(f45571_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1)))))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f56432,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56431,f112])).
fof(f56431,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56430,f113])).
fof(f56430,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(subsumption_resolution,[],[f56420,f115])).
fof(f56420,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X14),s('type.num.num',sK4(sK2)))))))) ) | ($spl12 | $spl126)),
  inference(superposition,[],[f25834,f117])).
fof(f54770,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | $spl210),
  inference(cnf_transformation,[],[f54770_D])).
fof(f54770_D,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f55853,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55852,f112])).
fof(f55852,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55851,f113])).
fof(f55851,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55824,f114])).
fof(f55824,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f55734,f117])).
fof(f55734,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK0))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK3(sK2))))))) ) | ($spl12 | $spl122)),
  inference(equality_resolution,[],[f24989])).
fof(f24989,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK3(sK2)))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',sK0)))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24954,f140])).
fof(f24954,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2))))) ) | ($spl12 | $spl122)),
  inference(trivial_inequality_removal,[],[f24945])).
fof(f24945,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f14676,f388])).
fof(f55849,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55848,f112])).
fof(f55848,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55847,f113])).
fof(f55847,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55823,f115])).
fof(f55823,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f55734,f117])).
fof(f55741,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55740,f112])).
fof(f55740,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55739,f113])).
fof(f55739,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55727,f114])).
fof(f55727,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24989,f117])).
fof(f55737,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55736,f112])).
fof(f55736,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55735,f113])).
fof(f55735,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55726,f115])).
fof(f55726,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24989,f117])).
fof(f55558,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X15)))))) ) | $spl220),
  inference(cnf_transformation,[],[f55558_D])).
fof(f55558_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X15)))))) ) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f55557,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55556,f112])).
fof(f55556,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55555,f113])).
fof(f55555,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55543,f114])).
fof(f55543,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24882,f117])).
fof(f24882,plain,(
  ( ! [X39,X38,X40] : (s('type.clos_known.val_approx',X39) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X40))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X39))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X38)))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24811,f140])).
fof(f24811,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16)))) ) | ($spl12 | $spl122)),
  inference(trivial_inequality_removal,[],[f24802])).
fof(f24802,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X16)))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f14674,f388])).
fof(f55554,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) ) | $spl218),
  inference(cnf_transformation,[],[f55554_D])).
fof(f55554_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f55553,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55552,f112])).
fof(f55552,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55551,f113])).
fof(f55551,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55542,f115])).
fof(f55542,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24882,f117])).
fof(f55122,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))))))) ) | $spl212),
  inference(cnf_transformation,[],[f55122_D])).
fof(f55122_D,plain,(
  ( ! [X14] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))))))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f55237,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55236,f112])).
fof(f55236,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55235,f113])).
fof(f55235,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55209,f114])).
fof(f55209,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X12))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f55117,f117])).
fof(f55117,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X1))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X0)))))) ) | ($spl12 | $spl122)),
  inference(equality_resolution,[],[f24846])).
fof(f24846,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X38))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X36)))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24811,f140])).
fof(f55234,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55233,f112])).
fof(f55233,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55232,f113])).
fof(f55232,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55208,f115])).
fof(f55208,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f55117,f117])).
fof(f55231,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X11)))))) ) | $spl216),
  inference(cnf_transformation,[],[f55231_D])).
fof(f55231_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X11)))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f55230,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55229,f112])).
fof(f55229,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55228,f113])).
fof(f55228,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55159,f114])).
fof(f55159,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f55117,f117])).
fof(f55227,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X9)))))) ) | $spl214),
  inference(cnf_transformation,[],[f55227_D])).
fof(f55227_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X9)))))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f55226,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55225,f112])).
fof(f55225,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55224,f113])).
fof(f55224,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55158,f115])).
fof(f55158,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f55117,f117])).
fof(f55125,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X19))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55124,f112])).
fof(f55124,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X19))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55123,f113])).
fof(f55123,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X19))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55110,f114])).
fof(f55110,plain,(
  ( ! [X19,X17,X18] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X18) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X19))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X17))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24846,f117])).
fof(f55121,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X16))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55120,f112])).
fof(f55120,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X16))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55119,f113])).
fof(f55119,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X16))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))))))) ) | ($spl12 | $spl122)),
  inference(subsumption_resolution,[],[f55109,f115])).
fof(f55109,plain,(
  ( ! [X14,X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X15) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X15))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X16))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',X14))))))) ) | ($spl12 | $spl122)),
  inference(superposition,[],[f24846,f117])).
fof(f54883,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54882,f112])).
fof(f54882,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54881,f113])).
fof(f54881,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54855,f114])).
fof(f54855,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(superposition,[],[f54766,f117])).
fof(f54766,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK1))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK3(sK2))))))) ) | ($spl12 | $spl114)),
  inference(equality_resolution,[],[f24735])).
fof(f24735,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK3(sK2)))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',sK1)))))) ) | ($spl12 | $spl114)),
  inference(superposition,[],[f24700,f140])).
fof(f24700,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2))))) ) | ($spl12 | $spl114)),
  inference(trivial_inequality_removal,[],[f24691])).
fof(f24691,plain,(
  ( ! [X15,X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X16),s('type.num.num',sK3(sK2))))) ) | ($spl12 | $spl114)),
  inference(superposition,[],[f14414,f388])).
fof(f14414,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',X8)))) ) | $spl114),
  inference(superposition,[],[f11861,f110])).
fof(f54880,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54879,f112])).
fof(f54879,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54878,f113])).
fof(f54878,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54854,f115])).
fof(f54854,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(superposition,[],[f54766,f117])).
fof(f54773,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54772,f112])).
fof(f54772,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54771,f113])).
fof(f54771,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54759,f114])).
fof(f54759,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(superposition,[],[f24735,f117])).
fof(f54769,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54768,f112])).
fof(f54768,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54767,f113])).
fof(f54767,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(subsumption_resolution,[],[f54758,f115])).
fof(f54758,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK3(sK2)))))))) ) | ($spl12 | $spl114)),
  inference(superposition,[],[f24735,f117])).
fof(f37784,plain,(
  ( ! [X31,X32] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X32))) | s('type.num.num',X31) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | $spl168),
  inference(cnf_transformation,[],[f37784_D])).
fof(f37784_D,plain,(
  ( ! [X31,X32] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X32))) | s('type.num.num',X31) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f50740,plain,(
  ( ! [X37,X38] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X37),s('type.num.num',X38))) | s('type.num.num',X37) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl122)),
  inference(superposition,[],[f17677,f4529])).
fof(f50764,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | $spl207),
  inference(cnf_transformation,[],[f50764_D])).
fof(f50764_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) <=> ~$spl207),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl207])])).
fof(f50762,plain,(
  ( ! [X35,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36)))) ) | ($spl5 | $spl12 | $spl122)),
  inference(subsumption_resolution,[],[f50739,f4442])).
fof(f4442,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12)),
  inference(superposition,[],[f109,f3475])).
fof(f50739,plain,(
  ( ! [X35,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X35),s('type.num.num',X36))) | s('type.num.num',X35) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl122)),
  inference(superposition,[],[f17677,f4530])).
fof(f45570,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | $spl196),
  inference(cnf_transformation,[],[f45570_D])).
fof(f45570_D,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f45674,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45673,f112])).
fof(f45673,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45672,f113])).
fof(f45672,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45607,f114])).
fof(f45607,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X11),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f45566,f117])).
fof(f45566,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK0))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK1)))))) ) | ($spl10 | $spl175)),
  inference(equality_resolution,[],[f38281])).
fof(f38281,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X38),s('type.num.num',sK0))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',sK1)))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38241,f140])).
fof(f38241,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',sK0)))) ) | ($spl10 | $spl175)),
  inference(equality_resolution,[],[f37917])).
fof(f37917,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',sK0) != s('type.num.num',X6) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6)))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f37913,f110])).
fof(f37913,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | ($spl10 | $spl175)),
  inference(trivial_inequality_removal,[],[f37912])).
fof(f37912,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) | s('type.num.num',sK0) != s('type.num.num',sK1) | ($spl10 | $spl175)),
  inference(forward_demodulation,[],[f37897,f23944])).
fof(f37897,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl10 | $spl175)),
  inference(superposition,[],[f37800,f23944])).
fof(f37800,plain,(
  ( ! [X0] : (s('type.num.num',sK1) != s('type.num.num',X0) | s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X0)))) ) | $spl175),
  inference(superposition,[],[f37789,f141])).
fof(f45670,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45669,f112])).
fof(f45669,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45668,f113])).
fof(f45668,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45606,f115])).
fof(f45606,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X9),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f45566,f117])).
fof(f45574,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45573,f112])).
fof(f45573,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45572,f113])).
fof(f45572,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45559,f114])).
fof(f45559,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38281,f117])).
fof(f45569,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45568,f112])).
fof(f45568,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45567,f113])).
fof(f45567,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45558,f115])).
fof(f45558,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK0))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38281,f117])).
fof(f45393,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15)))))) ) | $spl194),
  inference(cnf_transformation,[],[f45393_D])).
fof(f45393_D,plain,(
  ( ! [X14,X15] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15)))))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f45392,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45391,f112])).
fof(f45391,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45390,f113])).
fof(f45390,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45378,f114])).
fof(f45378,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38213,f117])).
fof(f38213,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X38))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X36)))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38137,f140])).
fof(f38137,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))) ) | ($spl10 | $spl175)),
  inference(equality_resolution,[],[f37915])).
fof(f37915,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',sK0) != s('type.num.num',X0) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X2))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X1)))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f37913,f109])).
fof(f45389,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12)))))) ) | $spl192),
  inference(cnf_transformation,[],[f45389_D])).
fof(f45389_D,plain,(
  ( ! [X12,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12)))))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f45388,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45387,f112])).
fof(f45387,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45386,f113])).
fof(f45386,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f45377,f115])).
fof(f45377,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38213,f117])).
fof(f40556,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | $spl176),
  inference(cnf_transformation,[],[f40556_D])).
fof(f40556_D,plain,(
  ( ! [X10] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f40665,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40664,f112])).
fof(f40664,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40663,f113])).
fof(f40663,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40635,f114])).
fof(f40635,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f40552,f117])).
fof(f40552,plain,(
  ( ! [X0,X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X1))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X0)))))) ) | ($spl10 | $spl175)),
  inference(equality_resolution,[],[f38177])).
fof(f38177,plain,(
  ( ! [X37,X38,X36] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X38))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X37))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X36)))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38137,f140])).
fof(f40661,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40660,f112])).
fof(f40660,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40659,f113])).
fof(f40659,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40634,f115])).
fof(f40634,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f40552,f117])).
fof(f40658,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X11)))))) ) | $spl186),
  inference(cnf_transformation,[],[f40658_D])).
fof(f40658_D,plain,(
  ( ! [X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X11)))))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f40657,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40656,f112])).
fof(f40656,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40655,f113])).
fof(f40655,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40591,f114])).
fof(f40591,plain,(
  ( ! [X10,X11] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X11))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f40552,f117])).
fof(f40654,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X9)))))) ) | $spl184),
  inference(cnf_transformation,[],[f40654_D])).
fof(f40654_D,plain,(
  ( ! [X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X9)))))) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f40652,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40651,f112])).
fof(f40651,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40650,f113])).
fof(f40650,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40590,f115])).
fof(f40590,plain,(
  ( ! [X8,X9] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X9))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X8))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f40552,f117])).
fof(f40560,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40559,f112])).
fof(f40559,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40558,f113])).
fof(f40558,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40545,f114])).
fof(f40545,plain,(
  ( ! [X14,X15,X13] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X14) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X14))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X15))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X13))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38177,f117])).
fof(f40555,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40554,f112])).
fof(f40554,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40553,f113])).
fof(f40553,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(subsumption_resolution,[],[f40544,f115])).
fof(f40544,plain,(
  ( ! [X12,X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X10))))))) ) | ($spl10 | $spl175)),
  inference(superposition,[],[f38177,f117])).
fof(f37787,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X33),s('type.num.num',X34))) | s('type.num.num',X33) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | $spl172),
  inference(cnf_transformation,[],[f37787_D])).
fof(f37787_D,plain,(
  ( ! [X33,X34] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X33),s('type.num.num',X34))) | s('type.num.num',X33) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f37761,plain,(
  ( ! [X33,X34] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK0))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X33),s('type.num.num',X34))) | s('type.num.num',X33) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) ) | ($spl10 | $spl114)),
  inference(superposition,[],[f17380,f23944])).
fof(f17380,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X1))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',X2))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl114),
  inference(superposition,[],[f14420,f141])).
fof(f14420,plain,(
  ( ! [X37,X36] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',X36))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X36),s('type.num.num',X37)))) ) | $spl114),
  inference(superposition,[],[f11861,f140])).
fof(f37786,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | $spl171),
  inference(cnf_transformation,[],[f37786_D])).
fof(f37786_D,plain,(
  s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f37760,plain,(
  ( ! [X31,X32] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X31),s('type.num.num',X32))) | s('type.num.num',X31) != s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl114)),
  inference(superposition,[],[f17380,f4529])).
fof(f37780,plain,(
  ( ! [X26,X27] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27)))) ) | ($spl5 | $spl12 | $spl114)),
  inference(subsumption_resolution,[],[f37758,f4442])).
fof(f37758,plain,(
  ( ! [X26,X27] : (s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK1))) != s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X26),s('type.num.num',X27))) | s('type.num.num',X26) != s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12 | $spl114)),
  inference(superposition,[],[f17380,f4530])).
fof(f28879,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl148),
  inference(cnf_transformation,[],[f28879_D])).
fof(f28879_D,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f3024,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl60),
  inference(cnf_transformation,[],[f3024_D])).
fof(f3024_D,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f34908,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f34907,f112])).
fof(f34907,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f34906,f118])).
fof(f118,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X19,X8] : ~s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X19))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|4')).
fof(f34906,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f34895,f154])).
fof(f154,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X8] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|5')).
fof(f34895,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl0),
  inference(superposition,[],[f34810,f117])).
fof(f34810,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl0),
  inference(superposition,[],[f34790,f141])).
fof(f34790,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl0),
  inference(equality_resolution,[],[f33778])).
fof(f33778,plain,(
  ( ! [X12,X13] : (s('type.list.list'('type.clos_known.val_approx'),X12) != s('type.list.list'('type.clos_known.val_approx'),X13) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X13))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl0),
  inference(subsumption_resolution,[],[f33777,f851])).
fof(f851,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | $spl0),
  inference(superposition,[],[f142,f160])).
fof(f142,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X12] : ! [X13] : ~s('type.option.option'(X12),'const.option.NONE_0') = s('type.option.option'(X12),'const.option.SOME_1'(s(X12,X13)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.option.NOT_NONE_SOME')).
fof(f33777,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X13))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.list.list'('type.clos_known.val_approx'),X12) != s('type.list.list'('type.clos_known.val_approx'),X13)) ) | $spl0),
  inference(forward_demodulation,[],[f33715,f146])).
fof(f146,plain,(
  ( ! [X0] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X24] : s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X24)))))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.dest_Clos_def|split|1')).
fof(f33715,plain,(
  ( ! [X12,X13] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X13))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X12))))) | s('type.list.list'('type.clos_known.val_approx'),X12) != s('type.list.list'('type.clos_known.val_approx'),X13)) ) | $spl0),
  inference(superposition,[],[f1036,f120])).
fof(f120,plain,(
  ( ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | s('type.list.list'('type.clos_known.val_approx'),X0) != s('type.list.list'('type.clos_known.val_approx'),X1)) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1] : ((s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) | s('type.list.list'('type.clos_known.val_approx'),X0) = s('type.list.list'('type.clos_known.val_approx'),X1)) & (s('type.list.list'('type.clos_known.val_approx'),X0) != s('type.list.list'('type.clos_known.val_approx'),X1) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1)))))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X1))) <=> s('type.list.list'('type.clos_known.val_approx'),X0) = s('type.list.list'('type.clos_known.val_approx'),X1))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8,X19] : (s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X19))) <=> s('type.list.list'('type.clos_known.val_approx'),X8) = s('type.list.list'('type.clos_known.val_approx'),X19))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_|49||49||split|1')).
fof(f1036,plain,(
  ( ! [X20] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X20))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X20)))) ) | $spl0),
  inference(superposition,[],[f841,f140])).
fof(f3026,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl62),
  inference(cnf_transformation,[],[f3026_D])).
fof(f3026_D,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f34905,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f34904,f112])).
fof(f34904,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f34903,f118])).
fof(f34903,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl0),
  inference(subsumption_resolution,[],[f34894,f155])).
fof(f155,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X8] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|6')).
fof(f34894,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl0),
  inference(superposition,[],[f34810,f117])).
fof(f30530,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl159),
  inference(cnf_transformation,[],[f30530_D])).
fof(f30530_D,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f33709,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X1) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X1)))) | s('type.clos_known.val_approx',X1) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X1)),s('type.num.num',sK4(X1))))) ) | $spl0),
  inference(superposition,[],[f1036,f117])).
fof(f30525,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl157),
  inference(cnf_transformation,[],[f30525_D])).
fof(f30525_D,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f33708,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X0) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X0)))) | s('type.clos_known.val_approx',X0) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X0)),s('type.num.num',sK4(X0))))) ) | $spl0),
  inference(superposition,[],[f1036,f117])).
fof(f30528,plain,(
  ( ! [X7] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30527,f112])).
fof(f30527,plain,(
  ( ! [X7] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30526,f113])).
fof(f30526,plain,(
  ( ! [X7] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30498,f114])).
fof(f30498,plain,(
  ( ! [X7] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',sK1))))))) ) | $spl118),
  inference(superposition,[],[f30435,f117])).
fof(f30435,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X0),s('type.num.num',sK1)))))) ) | $spl118),
  inference(equality_resolution,[],[f25467])).
fof(f25467,plain,(
  ( ! [X28,X29] : (s('type.clos_known.val_approx',X28) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X29),s('type.num.num',sK1))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X28))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl118),
  inference(superposition,[],[f12653,f140])).
fof(f30523,plain,(
  ( ! [X6] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30522,f112])).
fof(f30522,plain,(
  ( ! [X6] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30521,f113])).
fof(f30521,plain,(
  ( ! [X6] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30497,f115])).
fof(f30497,plain,(
  ( ! [X6] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X6),s('type.num.num',sK1))))))) ) | $spl118),
  inference(superposition,[],[f30435,f117])).
fof(f30442,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30441,f112])).
fof(f30441,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30440,f113])).
fof(f30440,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30428,f114])).
fof(f30428,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X11))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X10),s('type.num.num',sK1))))))) ) | $spl118),
  inference(superposition,[],[f25467,f117])).
fof(f30438,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30437,f112])).
fof(f30437,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30436,f113])).
fof(f30436,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | $spl118),
  inference(subsumption_resolution,[],[f30427,f115])).
fof(f30427,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))))))) ) | $spl118),
  inference(superposition,[],[f25467,f117])).
fof(f28885,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11)) ) | $spl152),
  inference(cnf_transformation,[],[f28885_D])).
fof(f28885_D,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11)) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f28884,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl12),
  inference(forward_demodulation,[],[f28883,f388])).
fof(f28883,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f28882,f112])).
fof(f28882,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f28881,f118])).
fof(f28881,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f28861,f154])).
fof(f28861,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X10))))))) ) | $spl12),
  inference(superposition,[],[f28788,f117])).
fof(f28788,plain,(
  ( ! [X21,X22] : (s('type.clos_known.val_approx',X21) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X22))) | s('type.clos_known.val_approx',X21) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl12),
  inference(trivial_inequality_removal,[],[f28766])).
fof(f28766,plain,(
  ( ! [X21,X22] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx',X21) != s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X22))) | s('type.clos_known.val_approx',X21) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl12),
  inference(superposition,[],[f3788,f388])).
fof(f28880,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9)) ) | $spl150),
  inference(cnf_transformation,[],[f28880_D])).
fof(f28880_D,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9)) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f28878,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl12),
  inference(forward_demodulation,[],[f28877,f388])).
fof(f28877,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f28876,f112])).
fof(f28876,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f28875,f118])).
fof(f28875,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f28860,f155])).
fof(f28860,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))))) | s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8)))),s('type.num.num',sK4('const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),X8))))))) ) | $spl12),
  inference(superposition,[],[f28788,f117])).
fof(f25441,plain,(
  $false | ($spl0 | $spl10 | $spl116 | $spl121)),
  inference(trivial_inequality_removal,[],[f25425])).
fof(f25425,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))) | ($spl0 | $spl10 | $spl116 | $spl121)),
  inference(superposition,[],[f25370,f23944])).
fof(f25370,plain,(
  ( ! [X2] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',X2)))) ) | ($spl0 | $spl10 | $spl116 | $spl121)),
  inference(subsumption_resolution,[],[f25299,f14391])).
fof(f14391,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | $spl121),
  inference(cnf_transformation,[],[f14391_D])).
fof(f14391_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f25299,plain,(
  ( ! [X2] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',X2))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl10 | $spl116)),
  inference(superposition,[],[f827,f25230])).
fof(f25230,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | ($spl0 | $spl10 | $spl116)),
  inference(trivial_inequality_removal,[],[f25165])).
fof(f25165,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | ($spl0 | $spl10 | $spl116)),
  inference(superposition,[],[f852,f25136])).
fof(f25136,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',sK0))))) | ($spl10 | $spl116)),
  inference(forward_demodulation,[],[f12652,f23944])).
fof(f827,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.pair.prod'('type.num.num',X13),'const.pair.,_2'(s('type.num.num',sK0),s(X13,X15))) != s('type.pair.prod'('type.num.num',X13),'const.pair.,_2'(s('type.num.num',X12),s(X13,X14))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',X12)))))) ) | $spl0),
  inference(superposition,[],[f160,f143])).
fof(f25440,plain,(
  $false | ($spl0 | $spl10 | $spl116 | $spl121)),
  inference(equality_resolution,[],[f25370])).
fof(f20693,plain,(
  ( ! [X24,X23,X25] : (s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X24))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X25)))) ) | $spl144),
  inference(cnf_transformation,[],[f20693_D])).
fof(f20693_D,plain,(
  ( ! [X24,X23,X25] : (s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X24))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X25)))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f20691,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | $spl142),
  inference(cnf_transformation,[],[f20691_D])).
fof(f20691_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f22465,plain,(
  ( ! [X24,X23,X25] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X24))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X25)))) ) | ($spl0 | $spl120)),
  inference(forward_demodulation,[],[f22395,f116])).
fof(f22395,plain,(
  ( ! [X24,X23,X25] : (s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X24))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X25))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl120)),
  inference(superposition,[],[f835,f22328])).
fof(f22328,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | ($spl0 | $spl120)),
  inference(trivial_inequality_removal,[],[f22262])).
fof(f22262,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | ($spl0 | $spl120)),
  inference(superposition,[],[f852,f14392])).
fof(f835,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X5),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),X4),s(X5,X6))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X5),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X5,X7))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),X4)))) ) | $spl0),
  inference(superposition,[],[f160,f143])).
fof(f20689,plain,(
  ( ! [X21,X22,X20] : (s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X21),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X22),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl140),
  inference(cnf_transformation,[],[f20689_D])).
fof(f20689_D,plain,(
  ( ! [X21,X22,X20] : (s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X21),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X22),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f22464,plain,(
  ( ! [X21,X22,X20] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X21),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X22),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | ($spl0 | $spl120)),
  inference(forward_demodulation,[],[f22394,f116])).
fof(f22394,plain,(
  ( ! [X21,X22,X20] : (s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X21),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X22),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl120)),
  inference(superposition,[],[f837,f22328])).
fof(f837,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.pair.prod'(X13,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X13,X14),s('type.pair.prod'('type.num.num','type.num.num'),X12))) != s('type.pair.prod'(X13,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X13,X15),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),X12)))) ) | $spl0),
  inference(superposition,[],[f160,f144])).
fof(f14626,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4(sK2)),s('type.num.num',sK0))))) | $spl124),
  inference(cnf_transformation,[],[f14626_D])).
fof(f14626_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4(sK2)),s('type.num.num',sK0))))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f20723,plain,(
  ( ! [X5] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',sK1)))) ) | $spl146),
  inference(cnf_transformation,[],[f20723_D])).
fof(f20723_D,plain,(
  ( ! [X5] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',sK1)))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f17095,plain,(
  ( ! [X5] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X5),s('type.num.num',sK1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4(sK2)),s('type.num.num',sK0)))))) ) | ($spl0 | $spl130)),
  inference(superposition,[],[f819,f17032])).
fof(f17032,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl130)),
  inference(trivial_inequality_removal,[],[f16975])).
fof(f16975,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl130)),
  inference(superposition,[],[f852,f15260])).
fof(f819,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.pair.prod'(X21,'type.num.num'),'const.pair.,_2'(s(X21,X23),s('type.num.num',sK1))) != s('type.pair.prod'(X21,'type.num.num'),'const.pair.,_2'(s(X21,X22),s('type.num.num',X20))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X20),s('type.num.num',sK0)))))) ) | $spl0),
  inference(superposition,[],[f160,f144])).
fof(f20692,plain,(
  ( ! [X24,X23,X25] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X24))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X25)))) ) | ($spl0 | $spl124 | $spl130)),
  inference(forward_demodulation,[],[f20623,f116])).
fof(f20623,plain,(
  ( ! [X24,X23,X25] : (s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X24))) != s('type.pair.prod'('type.pair.prod'('type.num.num','type.num.num'),X23),'const.pair.,_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s(X23,X25))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl124 | $spl130)),
  inference(superposition,[],[f835,f19436])).
fof(f19436,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | ($spl0 | $spl124 | $spl130)),
  inference(backward_demodulation,[],[f19395,f17032])).
fof(f19395,plain,(
  s('type.num.num',sK1) = s('type.num.num',sK4(sK2)) | ($spl0 | $spl124)),
  inference(equality_resolution,[],[f16515])).
fof(f16515,plain,(
  ( ! [X4,X3] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X3) = s('type.num.num',sK4(sK2))) ) | ($spl0 | $spl124)),
  inference(superposition,[],[f143,f16453])).
fof(f16453,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4(sK2)),s('type.num.num',sK0))) | ($spl0 | $spl124)),
  inference(trivial_inequality_removal,[],[f16398])).
fof(f16398,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4(sK2)),s('type.num.num',sK0))) | ($spl0 | $spl124)),
  inference(superposition,[],[f852,f14626])).
fof(f20688,plain,(
  ( ! [X21,X22,X20] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X21),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X22),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | ($spl0 | $spl124 | $spl130)),
  inference(forward_demodulation,[],[f20622,f116])).
fof(f20622,plain,(
  ( ! [X21,X22,X20] : (s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X21),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) != s('type.pair.prod'(X20,'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s(X20,X22),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl124 | $spl130)),
  inference(superposition,[],[f837,f19436])).
fof(f14392,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) | $spl120),
  inference(cnf_transformation,[],[f14392_D])).
fof(f14392_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f19715,plain,(
  ( ! [X19] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X19),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl12 | $spl124)),
  inference(superposition,[],[f825,f19401])).
fof(f19401,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK1))) | ($spl0 | $spl12 | $spl124)),
  inference(backward_demodulation,[],[f19395,f388])).
fof(f16932,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',X0)))) ) | $spl138),
  inference(cnf_transformation,[],[f16932_D])).
fof(f16932_D,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',X0)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f16919,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK0),s('type.num.num',X0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))))) ) | ($spl0 | $spl124)),
  inference(superposition,[],[f827,f16453])).
fof(f15263,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))))) | $spl134),
  inference(cnf_transformation,[],[f15263_D])).
fof(f15263_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f15264,plain,(
  ( ! [X13] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))) ) | $spl136),
  inference(cnf_transformation,[],[f15264_D])).
fof(f15264_D,plain,(
  ( ! [X13] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f15246,plain,(
  ( ! [X13] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X13),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))))))) ) | ($spl0 | $spl10)),
  inference(superposition,[],[f825,f11152])).
fof(f15245,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK4(sK2))))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f825,f388])).
fof(f14517,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X16))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK3(sK2))))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f823,f388])).
fof(f14627,plain,(
  ( ! [X15] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1)))) ) | $spl126),
  inference(cnf_transformation,[],[f14627_D])).
fof(f14627_D,plain,(
  ( ! [X15] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1)))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f14516,plain,(
  ( ! [X15] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X15),s('type.num.num',sK1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4(sK2)),s('type.num.num',sK0)))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f815,f388])).
fof(f815,plain,(
  ( ! [X6,X8,X7] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X8),s('type.num.num',sK1))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X6),s('type.num.num',sK0)))))) ) | $spl0),
  inference(superposition,[],[f160,f110])).
fof(f14377,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK0),s('type.num.num',X12))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))) ) | ($spl0 | $spl12 | $spl112)),
  inference(superposition,[],[f823,f12351])).
fof(f12652,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK0))))) | $spl116),
  inference(cnf_transformation,[],[f12652_D])).
fof(f12652_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK0))))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f12653,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1)))) ) | $spl118),
  inference(cnf_transformation,[],[f12653_D])).
fof(f12653_D,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1)))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f13952,plain,(
  ( ! [X27] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X27),s('type.num.num',sK1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK0)))))) ) | ($spl0 | $spl10)),
  inference(superposition,[],[f815,f11152])).
fof(f13485,plain,(
  $false | $spl11),
  inference(subsumption_resolution,[],[f13484,f112])).
fof(f13484,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl11),
  inference(subsumption_resolution,[],[f13483,f113])).
fof(f13483,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl11),
  inference(subsumption_resolution,[],[f13482,f114])).
fof(f13482,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl11),
  inference(subsumption_resolution,[],[f13481,f115])).
fof(f13481,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl11),
  inference(trivial_inequality_removal,[],[f13470])).
fof(f13470,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl11),
  inference(superposition,[],[f373,f117])).
fof(f373,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl11),
  inference(cnf_transformation,[],[f373_D])).
fof(f373_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f12639,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X12),s('type.num.num',sK1))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK0)))))) ) | ($spl0 | $spl10)),
  inference(superposition,[],[f815,f11152])).
fof(f11845,plain,(
  ( ! [X12] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',X12))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK0)))))) ) | ($spl0 | $spl12)),
  inference(superposition,[],[f813,f388])).
fof(f7789,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | $spl74),
  inference(cnf_transformation,[],[f7789_D])).
fof(f7789_D,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f8604,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl110),
  inference(cnf_transformation,[],[f8604_D])).
fof(f8604_D,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f8603,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f8602,f113])).
fof(f8602,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X10)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f8601,f118])).
fof(f8601,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X10)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f8583,f156])).
fof(f156,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X8] : ~s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|7')).
fof(f8583,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X10)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | $spl12),
  inference(superposition,[],[f7957,f117])).
fof(f7957,plain,(
  ( ! [X37,X38] : (s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))) | s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl12),
  inference(trivial_inequality_removal,[],[f7907])).
fof(f7907,plain,(
  ( ! [X37,X38] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X38))) | s('type.clos_known.val_approx',X37) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl12),
  inference(superposition,[],[f3677,f388])).
fof(f8600,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl108),
  inference(cnf_transformation,[],[f8600_D])).
fof(f8600_D,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f8599,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f8598,f113])).
fof(f8598,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X8)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f8597,f118])).
fof(f8597,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X8)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f8582,f157])).
fof(f157,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X8] : ~s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8)))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.val_approx_distinct|split|8')).
fof(f8582,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X8)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | $spl12),
  inference(superposition,[],[f7957,f117])).
fof(f7794,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2))))) ) | $spl78),
  inference(cnf_transformation,[],[f7794_D])).
fof(f7794_D,plain,(
  ( ! [X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f7793,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(subsumption_resolution,[],[f7792,f113])).
fof(f7792,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X10)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(subsumption_resolution,[],[f7791,f118])).
fof(f7791,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X10)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(subsumption_resolution,[],[f7772,f156])).
fof(f7772,plain,(
  ( ! [X10,X11] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X11) | s('type.clos_known.val_approx',X11) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X10)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X10))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X10)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X10))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(superposition,[],[f7683,f117])).
fof(f7683,plain,(
  ( ! [X24,X23] : (s('type.clos_known.val_approx',X23) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X24))) | s('type.clos_known.val_approx',X23) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(trivial_inequality_removal,[],[f7661])).
fof(f7661,plain,(
  ( ! [X24,X23] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx',X23) != s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X24))) | s('type.clos_known.val_approx',X23) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(superposition,[],[f3677,f5100])).
fof(f5100,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | ($spl5 | $spl12 | $spl70)),
  inference(backward_demodulation,[],[f4926,f388])).
fof(f4926,plain,(
  s('type.num.num',sK3(sK2)) = s('type.num.num',sK4(sK2)) | ($spl5 | $spl12 | $spl70)),
  inference(backward_demodulation,[],[f4732,f4529])).
fof(f7790,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2))))) ) | $spl76),
  inference(cnf_transformation,[],[f7790_D])).
fof(f7790_D,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f7788,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(subsumption_resolution,[],[f7787,f113])).
fof(f7787,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X8)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(subsumption_resolution,[],[f7786,f118])).
fof(f7786,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X8)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(subsumption_resolution,[],[f7771,f157])).
fof(f7771,plain,(
  ( ! [X8,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx',X9) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK3(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Int_1'(s('type.integer.int',X8)))))) | s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X8))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Int_1'(s('type.integer.int',X8)))),s('type.num.num',sK4('const.clos_known.Int_1'(s('type.integer.int',X8))))))) ) | ($spl5 | $spl12 | $spl70)),
  inference(superposition,[],[f7683,f117])).
fof(f4732,plain,(
  s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) | $spl70),
  inference(cnf_transformation,[],[f4732_D])).
fof(f4732_D,plain,(
  s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f4733,plain,(
  ( ! [X85] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X85)))) ) | $spl72),
  inference(cnf_transformation,[],[f4733_D])).
fof(f4733_D,plain,(
  ( ! [X85] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X85)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f4654,plain,(
  ( ! [X85] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK4(sK2)),s('type.num.num',X85))) | s('type.num.num',sK3(sK2)) = s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))) ) | ($spl5 | $spl12)),
  inference(superposition,[],[f3407,f4529])).
fof(f2997,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9)) ) | $spl40),
  inference(cnf_transformation,[],[f2997_D])).
fof(f2997_D,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2991,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | $spl38),
  inference(cnf_transformation,[],[f2991_D])).
fof(f2991_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f4072,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9)) ) | ($spl9 | $spl12)),
  inference(forward_demodulation,[],[f4071,f388])).
fof(f4071,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | ($spl9 | $spl12)),
  inference(subsumption_resolution,[],[f4070,f624])).
fof(f624,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X16) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X16)))) ) | $spl9),
  inference(superposition,[],[f247,f140])).
fof(f4070,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f4069,f112])).
fof(f4069,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f4068,f113])).
fof(f4068,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f4045,f114])).
fof(f4045,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(superposition,[],[f3434,f117])).
fof(f3434,plain,(
  ( ! [X30] : (s('type.clos_known.val_approx',X30) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X30)))) ) | $spl12),
  inference(superposition,[],[f141,f388])).
fof(f2989,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8)) ) | $spl36),
  inference(cnf_transformation,[],[f2989_D])).
fof(f2989_D,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f4067,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8)) ) | ($spl5 | $spl12)),
  inference(forward_demodulation,[],[f4066,f388])).
fof(f4066,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f4065,f507])).
fof(f507,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X16) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X16)))) ) | $spl5),
  inference(superposition,[],[f239,f140])).
fof(f4065,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f4064,f112])).
fof(f4064,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f4063,f113])).
fof(f4063,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f4044,f115])).
fof(f4044,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(superposition,[],[f3434,f117])).
fof(f3271,plain,(
  $false | ($spl0 | $spl16)),
  inference(subsumption_resolution,[],[f3196,f851])).
fof(f3196,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | $spl16),
  inference(superposition,[],[f147,f392])).
fof(f147,plain,(
  ( ! [X0] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X25] : s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',X25)))))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.dest_Clos_def|split|2')).
fof(f3139,plain,(
  $false | ($spl0 | $spl14)),
  inference(subsumption_resolution,[],[f3064,f851])).
fof(f3064,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | $spl14),
  inference(superposition,[],[f146,f390])).
fof(f388,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl12),
  inference(cnf_transformation,[],[f388_D])).
fof(f388_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f390,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | $spl14),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f392,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | $spl16),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f3040,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f3039,f247])).
fof(f3039,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl0),
  inference(subsumption_resolution,[],[f930,f149])).
fof(f149,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  inference(cnf_transformation,[],[f36])).
fof(f36,axiom,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Other_0')))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.dest_Clos_def|split|3')).
fof(f930,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl0),
  inference(superposition,[],[f851,f117])).
fof(f3038,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f3037,f239])).
fof(f3037,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl0),
  inference(subsumption_resolution,[],[f931,f148])).
fof(f148,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  inference(cnf_transformation,[],[f37])).
fof(f37,axiom,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0')))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_known.dest_Clos_def|split|4')).
fof(f931,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl0),
  inference(superposition,[],[f851,f117])).
fof(f3036,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f1162,f247])).
fof(f1162,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl5),
  inference(trivial_inequality_removal,[],[f1146])).
fof(f1146,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl5),
  inference(superposition,[],[f1141,f117])).
fof(f1141,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | $spl5),
  inference(equality_resolution,[],[f507])).
fof(f3035,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f1214,f239])).
fof(f1214,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl9),
  inference(trivial_inequality_removal,[],[f1199])).
fof(f1199,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl9),
  inference(superposition,[],[f1191,f117])).
fof(f1191,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | $spl9),
  inference(equality_resolution,[],[f624])).
fof(f3034,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0)))) ) | $spl68),
  inference(cnf_transformation,[],[f3034_D])).
fof(f3034_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0)))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f3033,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f3032,f247])).
fof(f3032,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(subsumption_resolution,[],[f1394,f140])).
fof(f1394,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(superposition,[],[f1154,f117])).
fof(f1154,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0)))) ) | $spl5),
  inference(superposition,[],[f1141,f141])).
fof(f3031,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0)))) ) | $spl66),
  inference(cnf_transformation,[],[f3031_D])).
fof(f3031_D,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0)))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f3030,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(subsumption_resolution,[],[f1423,f247])).
fof(f1423,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(superposition,[],[f1206,f117])).
fof(f1206,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0)))) ) | $spl9),
  inference(superposition,[],[f1191,f141])).
fof(f3029,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1)))) ) | $spl64),
  inference(cnf_transformation,[],[f3029_D])).
fof(f3029_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f3028,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f3027,f239])).
fof(f3027,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(subsumption_resolution,[],[f1424,f140])).
fof(f1424,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(superposition,[],[f1206,f117])).
fof(f3025,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl3 | $spl9)),
  inference(subsumption_resolution,[],[f1828,f247])).
fof(f1828,plain,(
  ( ! [X0] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl3),
  inference(superposition,[],[f368,f117])).
fof(f368,plain,(
  ( ! [X20] : (s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx',X20) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X20))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) ) | $spl3),
  inference(superposition,[],[f163,f140])).
fof(f3023,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl3 | $spl5)),
  inference(subsumption_resolution,[],[f1829,f239])).
fof(f1829,plain,(
  ( ! [X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X1) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl3),
  inference(superposition,[],[f368,f117])).
fof(f3022,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) | $spl58),
  inference(cnf_transformation,[],[f3022_D])).
fof(f3022_D,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f3021,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl3 | $spl9)),
  inference(subsumption_resolution,[],[f1895,f247])).
fof(f1895,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl3),
  inference(superposition,[],[f1887,f117])).
fof(f1887,plain,(
  ( ! [X0] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X0))) | s('type.clos_known.val_approx',X0) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) | $spl3),
  inference(superposition,[],[f1854,f141])).
fof(f1854,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl3),
  inference(equality_resolution,[],[f368])).
fof(f3020,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) | $spl56),
  inference(cnf_transformation,[],[f3020_D])).
fof(f3020_D,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f3019,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl3 | $spl5)),
  inference(subsumption_resolution,[],[f1896,f239])).
fof(f1896,plain,(
  ( ! [X1] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X1))) | s('type.clos_known.val_approx',X1) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl3),
  inference(superposition,[],[f1887,f117])).
fof(f3018,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X1))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2)))) ) | $spl54),
  inference(cnf_transformation,[],[f3018_D])).
fof(f3018_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X1))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f3017,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X1))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f2117,f247])).
fof(f2117,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X1))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(superposition,[],[f2050,f117])).
fof(f2050,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X0,X1)))) ) | $spl5),
  inference(equality_resolution,[],[f503])).
fof(f503,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X0) | s('type.pair.prod'('type.clos_known.val_approx',X1),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X1,X3))) != s('type.pair.prod'('type.clos_known.val_approx',X1),'const.pair.,_2'(s('type.clos_known.val_approx',X0),s(X1,X2)))) ) | $spl5),
  inference(superposition,[],[f239,f143])).
fof(f3011,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X0,X1)))) ) | $spl48),
  inference(cnf_transformation,[],[f3011_D])).
fof(f3011_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X0,X1)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f3016,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X5))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(subsumption_resolution,[],[f2118,f239])).
fof(f2118,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X5))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(superposition,[],[f2050,f117])).
fof(f3015,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl52),
  inference(cnf_transformation,[],[f3015_D])).
fof(f3015_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f3014,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f2275,f247])).
fof(f2275,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(superposition,[],[f2216,f117])).
fof(f2216,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl5),
  inference(equality_resolution,[],[f505])).
fof(f505,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.pair.prod'(X9,'type.clos_known.val_approx'),'const.pair.,_2'(s(X9,X11),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X9,'type.clos_known.val_approx'),'const.pair.,_2'(s(X9,X10),s('type.clos_known.val_approx',X8)))) ) | $spl5),
  inference(superposition,[],[f239,f144])).
fof(f3013,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl50),
  inference(cnf_transformation,[],[f3013_D])).
fof(f3013_D,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f3012,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(subsumption_resolution,[],[f2276,f239])).
fof(f2276,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl5),
  inference(superposition,[],[f2216,f117])).
fof(f3010,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X0,X1))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(subsumption_resolution,[],[f2489,f247])).
fof(f2489,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X0,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X0,X1))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(superposition,[],[f2420,f117])).
fof(f2420,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X0,X2))) != s('type.pair.prod'('type.clos_known.val_approx',X0),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X0,X1)))) ) | $spl9),
  inference(equality_resolution,[],[f620])).
fof(f620,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X0) | s('type.pair.prod'('type.clos_known.val_approx',X1),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X1,X3))) != s('type.pair.prod'('type.clos_known.val_approx',X1),'const.pair.,_2'(s('type.clos_known.val_approx',X0),s(X1,X2)))) ) | $spl9),
  inference(superposition,[],[f247,f143])).
fof(f3009,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X5)))) ) | $spl46),
  inference(cnf_transformation,[],[f3009_D])).
fof(f3009_D,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X5)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f3008,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X5))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f2490,f239])).
fof(f2490,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X4))) != s('type.pair.prod'('type.clos_known.val_approx',X3),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X3,X5))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(superposition,[],[f2420,f117])).
fof(f3007,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f3007_D])).
fof(f3007_D,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f3006,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(subsumption_resolution,[],[f2650,f247])).
fof(f2650,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(superposition,[],[f2590,f117])).
fof(f2590,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X1),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X0,'type.clos_known.val_approx'),'const.pair.,_2'(s(X0,X2),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) | $spl9),
  inference(equality_resolution,[],[f622])).
fof(f622,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X8) | s('type.pair.prod'(X9,'type.clos_known.val_approx'),'const.pair.,_2'(s(X9,X11),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X9,'type.clos_known.val_approx'),'const.pair.,_2'(s(X9,X10),s('type.clos_known.val_approx',X8)))) ) | $spl9),
  inference(superposition,[],[f247,f144])).
fof(f3005,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) | $spl42),
  inference(cnf_transformation,[],[f3005_D])).
fof(f3005_D,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f3004,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f2651,f239])).
fof(f2651,plain,(
  ( ! [X4,X5,X3] : (s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X4),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.pair.prod'(X3,'type.clos_known.val_approx'),'const.pair.,_2'(s(X3,X5),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))) ) | $spl9),
  inference(superposition,[],[f2590,f117])).
fof(f2996,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9)) ) | ($spl9 | $spl12)),
  inference(forward_demodulation,[],[f2995,f388])).
fof(f2995,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | ($spl9 | $spl12)),
  inference(subsumption_resolution,[],[f2994,f624])).
fof(f2994,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f2993,f112])).
fof(f2993,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f2992,f113])).
fof(f2992,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f2966,f114])).
fof(f2966,plain,(
  ( ! [X9] : (s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',X9) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X9))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(superposition,[],[f704,f117])).
fof(f704,plain,(
  ( ! [X18] : (s('type.clos_known.val_approx',X18) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X18)))) ) | $spl12),
  inference(superposition,[],[f141,f388])).
fof(f2988,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8)) ) | ($spl5 | $spl12)),
  inference(forward_demodulation,[],[f2987,f388])).
fof(f2987,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | ($spl5 | $spl12)),
  inference(subsumption_resolution,[],[f2986,f507])).
fof(f2986,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f2985,f112])).
fof(f2985,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f2984,f113])).
fof(f2984,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f2965,f115])).
fof(f2965,plain,(
  ( ! [X8] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X8) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X8))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2))))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))))))) ) | $spl12),
  inference(superposition,[],[f704,f117])).
fof(f2594,plain,(
  ( ! [X61,X59,X60] : (s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X60),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X61),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) | $spl34),
  inference(cnf_transformation,[],[f2594_D])).
fof(f2594_D,plain,(
  ( ! [X61,X59,X60] : (s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X60),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X61),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2591,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X60),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X61),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X58)),s('type.num.num',sK4(X58))))) ) | $spl9),
  inference(trivial_inequality_removal,[],[f2583])).
fof(f2583,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.clos_known.val_approx',X58) != s('type.clos_known.val_approx',X58) | s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X60),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X59,'type.clos_known.val_approx'),'const.pair.,_2'(s(X59,X61),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X58)),s('type.num.num',sK4(X58))))) ) | $spl9),
  inference(superposition,[],[f622,f117])).
fof(f2424,plain,(
  ( ! [X61,X59,X60] : (s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X59,X61))) != s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X59,X60)))) ) | $spl32),
  inference(cnf_transformation,[],[f2424_D])).
fof(f2424_D,plain,(
  ( ! [X61,X59,X60] : (s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X59,X61))) != s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X59,X60)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2421,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X59,X61))) != s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X59,X60))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X58)),s('type.num.num',sK4(X58))))) ) | $spl9),
  inference(trivial_inequality_removal,[],[f2413])).
fof(f2413,plain,(
  ( ! [X61,X59,X60,X58] : (s('type.clos_known.val_approx',X58) != s('type.clos_known.val_approx',X58) | s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s(X59,X61))) != s('type.pair.prod'('type.clos_known.val_approx',X59),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X59,X60))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X58) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X58)))) | s('type.clos_known.val_approx',X58) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X58)),s('type.num.num',sK4(X58))))) ) | $spl9),
  inference(superposition,[],[f620,f117])).
fof(f2219,plain,(
  ( ! [X59,X60,X58] : (s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X59),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X60),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) | $spl30),
  inference(cnf_transformation,[],[f2219_D])).
fof(f2219_D,plain,(
  ( ! [X59,X60,X58] : (s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X59),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X60),s('type.clos_known.val_approx','const.clos_known.Other_0')))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2217,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X59),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X60),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X57)),s('type.num.num',sK4(X57))))) ) | $spl5),
  inference(trivial_inequality_removal,[],[f2208])).
fof(f2208,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.clos_known.val_approx',X57) != s('type.clos_known.val_approx',X57) | s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X59),s('type.clos_known.val_approx',sK2))) != s('type.pair.prod'(X58,'type.clos_known.val_approx'),'const.pair.,_2'(s(X58,X60),s('type.clos_known.val_approx','const.clos_known.Other_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X57)),s('type.num.num',sK4(X57))))) ) | $spl5),
  inference(superposition,[],[f505,f117])).
fof(f2053,plain,(
  ( ! [X59,X60,X58] : (s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X58,X60))) != s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X58,X59)))) ) | $spl28),
  inference(cnf_transformation,[],[f2053_D])).
fof(f2053_D,plain,(
  ( ! [X59,X60,X58] : (s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X58,X60))) != s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X58,X59)))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2051,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X58,X60))) != s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X58,X59))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X57)),s('type.num.num',sK4(X57))))) ) | $spl5),
  inference(trivial_inequality_removal,[],[f2042])).
fof(f2042,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.clos_known.val_approx',X57) != s('type.clos_known.val_approx',X57) | s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s(X58,X60))) != s('type.pair.prod'('type.clos_known.val_approx',X58),'const.pair.,_2'(s('type.clos_known.val_approx',sK2),s(X58,X59))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X57) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X57)))) | s('type.clos_known.val_approx',X57) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X57)),s('type.num.num',sK4(X57))))) ) | $spl5),
  inference(superposition,[],[f503,f117])).
fof(f1371,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1370,f112])).
fof(f1370,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1369,f113])).
fof(f1369,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1368,f114])).
fof(f1368,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1367,f115])).
fof(f1367,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1297,f163])).
fof(f1297,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl6),
  inference(superposition,[],[f117,f242])).
fof(f1350,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1349,f112])).
fof(f1349,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1348,f113])).
fof(f1348,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1347,f114])).
fof(f1347,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1346,f115])).
fof(f1346,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f1286,f163])).
fof(f1286,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl6),
  inference(superposition,[],[f242,f117])).
fof(f1197,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | $spl27),
  inference(cnf_transformation,[],[f1197_D])).
fof(f1197_D,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f1192,plain,(
  ( ! [X22] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X22)),s('type.num.num',sK4(X22))))) ) | $spl9),
  inference(trivial_inequality_removal,[],[f1184])).
fof(f1184,plain,(
  ( ! [X22] : (s('type.clos_known.val_approx',X22) != s('type.clos_known.val_approx',X22) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',X22) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X22)))) | s('type.clos_known.val_approx',X22) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X22)),s('type.num.num',sK4(X22))))) ) | $spl9),
  inference(superposition,[],[f624,f117])).
fof(f1145,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | $spl23),
  inference(cnf_transformation,[],[f1145_D])).
fof(f1145_D,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1142,plain,(
  ( ! [X21] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X21)),s('type.num.num',sK4(X21))))) ) | $spl5),
  inference(trivial_inequality_removal,[],[f1133])).
fof(f1133,plain,(
  ( ! [X21] : (s('type.clos_known.val_approx',X21) != s('type.clos_known.val_approx',X21) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',sK2))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X21)),s('type.num.num',sK4(X21))))) ) | $spl5),
  inference(superposition,[],[f507,f117])).
fof(f627,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | ($spl5 | $spl9)),
  inference(subsumption_resolution,[],[f626,f239])).
fof(f626,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl9),
  inference(trivial_inequality_removal,[],[f619])).
fof(f619,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx','const.clos_known.Impossible_0') | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl9),
  inference(superposition,[],[f247,f117])).
fof(f617,plain,(
  $false | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f616,f142])).
fof(f616,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | ($spl0 | $spl8)),
  inference(forward_demodulation,[],[f615,f148])).
fof(f615,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | ($spl0 | $spl8)),
  inference(forward_demodulation,[],[f160,f248])).
fof(f614,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | $spl21),
  inference(cnf_transformation,[],[f614_D])).
fof(f614_D,plain,(
  s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f610,plain,(
  ( ! [X21] : (s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X21)),s('type.num.num',sK4(X21))))) ) | ($spl5 | $spl8)),
  inference(trivial_inequality_removal,[],[f600])).
fof(f600,plain,(
  ( ! [X21] : (s('type.clos_known.val_approx',X21) != s('type.clos_known.val_approx',X21) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',X21) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(X21)))) | s('type.clos_known.val_approx',X21) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(X21)),s('type.num.num',sK4(X21))))) ) | ($spl5 | $spl8)),
  inference(superposition,[],[f579,f117])).
fof(f579,plain,(
  ( ! [X16] : (s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',X16) | s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) != s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',X16)))) ) | ($spl5 | $spl8)),
  inference(forward_demodulation,[],[f507,f248])).
fof(f248,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | $spl8),
  inference(cnf_transformation,[],[f248_D])).
fof(f248_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f509,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl5),
  inference(trivial_inequality_removal,[],[f501])).
fof(f501,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl5),
  inference(superposition,[],[f239,f117])).
fof(f374,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl10),
  inference(cnf_transformation,[],[f374_D])).
fof(f374_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f247,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | $spl9),
  inference(cnf_transformation,[],[f247_D])).
fof(f247_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f500,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f499,f112])).
fof(f499,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f498,f113])).
fof(f498,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f488,f114])).
fof(f488,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(superposition,[],[f163,f117])).
fof(f239,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | $spl5),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f497,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f496,f112])).
fof(f496,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f495,f113])).
fof(f495,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f487,f115])).
fof(f487,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(superposition,[],[f163,f117])).
fof(f464,plain,(
  $false | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f463,f142])).
fof(f463,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f462,f149])).
fof(f462,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f160,f240])).
fof(f386,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl5),
  inference(trivial_inequality_removal,[],[f378])).
fof(f378,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx','const.clos_known.Other_0') | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5(sK2)))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3(sK2)),s('type.num.num',sK4(sK2)))) | $spl5),
  inference(superposition,[],[f239,f117])).
fof(f377,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f376,f112])).
fof(f376,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f375,f113])).
fof(f375,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f363,f114])).
fof(f363,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(superposition,[],[f163,f117])).
fof(f372,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f371,f112])).
fof(f371,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f370,f113])).
fof(f370,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(subsumption_resolution,[],[f362,f115])).
fof(f362,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') != s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl3),
  inference(superposition,[],[f163,f117])).
fof(f321,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f320])).
fof(f320,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f311,f162])).
fof(f311,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl1),
  inference(superposition,[],[f161,f116])).
fof(f242,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl6),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f262,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f261,f162])).
fof(f261,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f260,f112])).
fof(f260,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f259,f113])).
fof(f259,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f205,f114])).
fof(f205,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(superposition,[],[f117,f162])).
fof(f240,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | $spl4),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f258,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f257,f162])).
fof(f257,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f256,f112])).
fof(f256,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f255,f113])).
fof(f255,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f204,f115])).
fof(f204,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(superposition,[],[f117,f162])).
fof(f246,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f245,f162])).
fof(f245,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f244,f112])).
fof(f244,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f243,f113])).
fof(f243,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f187,f114])).
fof(f187,plain,(
  s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(superposition,[],[f162,f117])).
fof(f238,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | $spl2),
  inference(forward_demodulation,[],[f237,f162])).
fof(f237,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f236,f112])).
fof(f236,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f235,f113])).
fof(f235,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(subsumption_resolution,[],[f186,f115])).
fof(f186,plain,(
  s('type.clos_known.val_approx','const.clos_known.Other_0') = s('type.clos_known.val_approx',sK2) | s('type.clos_known.val_approx','const.clos_known.Impossible_0') = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',sK6('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),sK5('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK3('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),s('type.num.num',sK4('const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) | $spl2),
  inference(superposition,[],[f162,f117])).
fof(f160,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl0),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f162,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | $spl2),
  inference(cnf_transformation,[],[f162_D])).
fof(f162_D,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f107,plain,(
  s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx',sK2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f90])).
fof(f90,plain,(
  ? [X0,X1,X2] : ((s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))) & (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.clos_known.val_approx',X2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f87])).
fof(f87,plain,(
  ? [X0,X1,X2] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X1),s('type.num.num',X0))))) <~> s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1,X2] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X2))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X1),s('type.num.num',X0))))) <=> s('type.clos_known.val_approx',X2) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X8))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X6))))) <=> s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',X8))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X7),s('type.num.num',X6))))) <=> s('type.clos_known.val_approx',X8) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',X7),s('type.num.num',X6))))),
  file('thm.clos_knownProof.dest_Clos_eq_SOME','thm.clos_knownProof.dest_Clos_eq_SOME')).
fof(f161,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) | $spl1),
  inference(cnf_transformation,[],[f161_D])).
fof(f161_D,plain,(
  s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f163,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | $spl3),
  inference(cnf_transformation,[],[f163_D])).
fof(f163_D,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f108,plain,(
  s('type.clos_known.val_approx',sK2) != s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',sK2))) != s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))),
  inference(cnf_transformation,[],[f91])).
% SZS output end Proof for thm.clos_knownProof
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1054
% Passive clauses: 28627
% Generated clauses: 73609
% Final active clauses: 388
% Final passive clauses: 14254
% Input formulas: 39
% Initial clauses: 52
% 
% Selected by SInE selection: 34
% SInE iterations: 1
% 
% Duplicate literals: 10
% Trivial inequalities: 1300
% Fw subsumption resolutions: 3009
% Fw demodulations: 9750
% Bw demodulations: 229
% 
% Simple tautologies: 121
% Equational tautologies: 12
% Forward subsumptions: 31780
% Fw demodulations to eq. taut.: 191
% Bw demodulations to eq. taut.: 10
% 
% Forward superposition: 45467
% Backward superposition: 10834
% Self superposition: 11
% Equality resolution: 641
% 
% Split clauses: 216
% Split components: 471
% SAT solver clauses: 233
% SAT solver unit clauses: 1
% SAT solver binary clauses: 11
% 
% Sat splits: 216
% Sat splitting refutations: 16
% 
% Memory used [KB]: 35180
% Time elapsed: 2.192 s
% ------------------------------
% ------------------------------
% Success in time 13.94 s
