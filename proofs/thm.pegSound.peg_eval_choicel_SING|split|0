Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.pegSound
% (49568)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 103
% Passive clauses: 3153
% Generated clauses: 18807
% Final active clauses: 93
% Final passive clauses: 2554
% Input formulas: 25
% Initial clauses: 59
% 
% Duplicate literals: 659
% Trivial inequalities: 173
% Fw subsumption resolutions: 3666
% Fw demodulations: 1682
% Bw demodulations: 4
% 
% Simple tautologies: 282
% Equational tautologies: 106
% Forward subsumptions: 7375
% 
% Binary resolution: 339
% Factoring: 9
% Forward superposition: 6110
% Backward superposition: 5253
% Self superposition: 388
% Equality factoring: 278
% Equality resolution: 27
% 
% Split clauses: 831
% Split components: 1688
% SAT solver clauses: 1982
% SAT solver unit clauses: 8
% SAT solver binary clauses: 185
% 
% Sat splits: 831
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1980
% TWLsolver calls for satisfiability: 280
% 
% Memory used [KB]: 11257
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.pegSound
% (49592)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 87
% Passive clauses: 339
% Generated clauses: 7577
% Final active clauses: 73
% Final passive clauses: 203
% Input formulas: 25
% Initial clauses: 59
% 
% Duplicate literals: 591
% Trivial inequalities: 128
% Fw subsumption resolutions: 735
% Fw demodulations: 406
% Bw demodulations: 55
% Condensations: 756
% Global subsumptions: 13
% 
% Simple tautologies: 205
% Equational tautologies: 35
% Forward subsumptions: 3750
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 202
% Factoring: 5
% Forward superposition: 2502
% Backward superposition: 1634
% Self superposition: 117
% Equality factoring: 75
% Equality resolution: 24
% 
% Split clauses: 134
% Split components: 275
% SAT solver clauses: 717
% SAT solver unit clauses: 74
% SAT solver binary clauses: 45
% SAT solver learnt clauses: 26
% 
% Sat splits: 134
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 665
% TWLsolver calls for satisfiability: 274
% 
% Memory used [KB]: 5884
% Time elapsed: 0.717 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.pegSound
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pegSound
% SZS output start Proof for thm.pegSound
fof(f17245,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f163,f166,f164,f173,f177,f175,f190,f191,f447,f448,f454,f449,f450,f457,f451,f459,f456,f638,f639,f640,f641,f649,f642,f669,f682,f680,f690,f691,f699,f697,f692,f693,f702,f694,f701,f1522,f1525,f704,f1540,f5855,f5864,f5901,f5857,f5908,f5856,f6924,f6938,f6942,f3995,f4325,f6952,f4426,f6002,f6957,f4096,f6955,f6962,f648,f6964,f6958,f1524,f1523,f6953,f6954,f6966,f7033,f7034,f7047,f7053,f7054,f7055,f7056,f7057,f3892,f3791,f6939,f643,f4552,f7060,f7058,f4222,f644,f7059,f7220,f7221,f7228,f452,f8700,f8701,f8705,f8706,f8707,f8708,f8710,f8711,f8712,f8713,f8714,f8715,f8716,f8717,f8718,f8719,f8720,f8721,f8722,f8723,f8724,f8725,f8726,f8729,f8732,f8817,f8818,f8826,f8827,f8828,f10556,f10555,f10499,f10480,f10640,f10596,f10463,f10595,f10323,f10741,f9662,f9534,f651,f10810,f10824,f10888,f10889,f10904,f10906,f10909,f10912,f10913,f10914,f10916,f10918,f10920,f10921,f10923,f10924,f10926,f10927,f10929,f10930,f10932,f10935,f10938,f10940,f10942,f10944,f10946,f10947,f10952,f10956,f10959,f10962,f10965,f10968,f10971,f10972,f10974,f10975,f10977,f10978,f10981,f10982,f10985,f10988,f10991,f10992,f10993,f10996,f10999,f11000,f11029,f11035,f11037,f12041,f646,f174,f13462,f13463,f13490,f13489,f17211,f17212,f17227,f17228])).
fof(f17228,plain,(
  $false | $spl17),
  inference(subsumption_resolution,[],[f17163,f94])).
fof(f94,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0',aHL_TRUTH)).
fof(f17163,plain,(
  ~p(s(bool,'T_0')) | $spl17),
  inference(backward_demodulation,[],[f17094,f1856])).
fof(f1856,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2)),X5))))))) )),
  inference(unit_resulting_resolution,[],[f505,f505,f148])).
fof(f148,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)) | (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) & p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))))) & (((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)) & (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))))),
  inference(flattening,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : ((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | ((p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)) | (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) & p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))))) & (((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)) & (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) <=> ((p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) & s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)) | (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) & p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5,X6,X7] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) <=> ((p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) & ~s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)) | (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) & p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X8,X7,X6] : ! [X15,X11,X17,X12,X9] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X6)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X6))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X6)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X6))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X8,'type.list.list'(X6)),X17),s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X6))),X15))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X6))),X9)))) <=> ((p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X6)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X6))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X6)),X17))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X6))),X9)))) & ~s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X6))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X6))),X9)) | (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X6)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X6))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X6)),X17))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X6))),'const.option.NONE_0')))) & p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X6)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X6))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X6)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X6))),X15))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X6))),X9)))))))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0','thm.pegSound.peg_eval_choicel_CONS')).
fof(f505,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2)),X5))))))) )),
  inference(unit_resulting_resolution,[],[f136,f144])).
fof(f144,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) & (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3))))))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) <=> s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) <=> s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6,X7,X8] : ! [X9,X11,X12] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,'type.list.list'(X8)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),X9)))) <=> s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),X9))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0','thm.pegSound.peg_eval_choicel_NIL')).
fof(f136,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X7] : ! [X9] : ~s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X9)))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0','thm.option.NOT_NONE_SOME')).
fof(f17094,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,X4)) ) | $spl17),
  inference(subsumption_resolution,[],[f17093,f94])).
fof(f17093,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,X4)) ) | $spl17),
  inference(forward_demodulation,[],[f17092,f8731])).
fof(f8731,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(condensation,[],[f8730])).
fof(f8730,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl17),
  inference(subsumption_resolution,[],[f8688,f100])).
fof(f100,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0',aHL_BOOL_CASES)).
fof(f8688,plain,(
  ( ! [X2] : (s(bool,'F_0') != s(bool,X2) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl17),
  inference(superposition,[],[f459,f156])).
fof(f156,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f100,f100])).
fof(f17092,plain,(
  ( ! [X4] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl17),
  inference(subsumption_resolution,[],[f17091,f136])).
fof(f17091,plain,(
  ( ! [X4] : (s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl17),
  inference(subsumption_resolution,[],[f16903,f158])).
fof(f158,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f155,f100])).
fof(f155,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f96,f94])).
fof(f96,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f21])).
fof(f21,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0','thm.bool.NOT_CLAUSES|split|2')).
fof(f16903,plain,(
  ( ! [X4] : (p(s(bool,X4)) | s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl17),
  inference(superposition,[],[f150,f8844])).
fof(f8844,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl17),
  inference(subsumption_resolution,[],[f7219,f8731])).
fof(f7219,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,X3) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f93,f156])).
fof(f93,plain,(
  s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f58])).
fof(f58,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X4))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),X3))))) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X4),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),X3)))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X4))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),X3))))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X4),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),X3)))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6] : s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X4))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),X3))))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X4),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12] : s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,'type.list.list'(X8)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),X10))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),X9))))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,'type.list.list'(X8)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),X10),s('type.list.list'('type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12] : s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,'type.list.list'(X8)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),X10))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),X9))))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X6,'type.list.list'(X8)),X12),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X6,'type.list.list'(X8)),X10),s('type.list.list'('type.peg.pegsym'(X7,X6,'type.list.list'(X8))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),X9)))))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0','thm.pegSound.peg_eval_choicel_SING|split|0')).
fof(f150,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f17227,plain,(
  $false | ($spl13 | $spl17)),
  inference(subsumption_resolution,[],[f17220,f17094])).
fof(f17220,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0'))) | ($spl13 | $spl17)),
  inference(backward_demodulation,[],[f17218,f455])).
fof(f455,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl13),
  inference(cnf_transformation,[],[f455_D])).
fof(f455_D,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f17218,plain,(
  ( ! [X2,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | $spl17),
  inference(subsumption_resolution,[],[f17162,f94])).
fof(f17162,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | $spl17),
  inference(backward_demodulation,[],[f17094,f144])).
fof(f17212,plain,(
  $false | ($spl17 | $spl25)),
  inference(subsumption_resolution,[],[f17099,f17094])).
fof(f17099,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) | ($spl17 | $spl25)),
  inference(backward_demodulation,[],[f17094,f647])).
fof(f647,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | $spl25),
  inference(cnf_transformation,[],[f647_D])).
fof(f647_D,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f17211,plain,(
  $false | $spl17),
  inference(subsumption_resolution,[],[f17095,f94])).
fof(f17095,plain,(
  ~p(s(bool,'T_0')) | $spl17),
  inference(backward_demodulation,[],[f17094,f155])).
fof(f13489,plain,(
  ( ! [X62,X63] : (s(fun(fun(bool,bool),bool),X62) = s(fun(fun(bool,bool),bool),X63) | s(bool,'T_0') = s(bool,g(s(fun(bool,bool),sK7(X62,X63,bool,fun(bool,bool)))))) ) | $spl74),
  inference(cnf_transformation,[],[f13489_D])).
fof(f13489_D,plain,(
  ( ! [X62,X63] : (s(fun(fun(bool,bool),bool),X62) = s(fun(fun(bool,bool),bool),X63) | s(bool,'T_0') = s(bool,g(s(fun(bool,bool),sK7(X62,X63,bool,fun(bool,bool)))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f13490,plain,(
  ( ! [X64] : (s(bool,'F_0') != s(bool,f(s(fun(bool,bool),X64)))) ) | $spl76),
  inference(cnf_transformation,[],[f13490_D])).
fof(f13490_D,plain,(
  ( ! [X64] : (s(bool,'F_0') != s(bool,f(s(fun(bool,bool),X64)))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f13463,plain,(
  ( ! [X66,X67,X65] : (s(bool,'F_0') != s(bool,f(s(fun(bool,bool),X67))) | s(fun(fun(bool,bool),bool),X65) = s(fun(fun(bool,bool),bool),X66) | s(bool,'T_0') = s(bool,g(s(fun(bool,bool),sK7(X65,X66,bool,fun(bool,bool)))))) ) | ($spl20 | $spl32 | $spl56)),
  inference(superposition,[],[f229,f7061])).
fof(f7061,plain,(
  ( ! [X476,X475] : (s(fun(bool,bool),X475) = s(fun(bool,bool),X476)) ) | ($spl20 | $spl32 | $spl56)),
  inference(global_subsumption,[],[f6954,f94,f100,f136,f142,f139,f143,f156,f158,f163,f173,f176,f177,f254,f287,f446,f323,f447,f448,f449,f450,f451,f505,f511,f631,f638,f639,f640,f641,f642,f644,f678,f679,f669,f681,f1522,f1525,f1653,f1652,f1867,f5744,f5550,f3535,f5855,f3792,f5901,f5910,f3994,f5955,f5958,f4223,f4676,f6008,f4593,f3995,f4325,f4426,f4096,f1524,f1523,f1885,f93,f145,f144,f1856,f1645,f683,f857,f2185,f2552,f5961,f5962,f6935,f5963,f5960,f5959,f5916,f5914,f2788,f1310,f1165,f949,f151,f150,f149,f148,f147,f146,f5912,f4221,f4093,f3992,f3790,f1538,f322,f286,f1866,f229,f228,f155,f3892,f3791,f4552,f4222])).
fof(f228,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK7(X0,X1,X2,bool))) )),
  inference(superposition,[],[f143,f100])).
fof(f1866,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'F_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2)),X5)))))) )),
  inference(unit_resulting_resolution,[],[f155,f505,f139])).
fof(f286,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,X33) != s(bool,f(s(X30,sK7(X31,X32,bool,X30)))) | s(fun(X30,bool),X31) = s(fun(X30,bool),X32) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,g(s(X30,sK7(X31,X32,bool,X30))))) )),
  inference(superposition,[],[f143,f156])).
fof(f322,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'T_0') != s(bool,f(s(X28,sK7(X29,X30,bool,X28)))) | s(fun(X28,bool),X29) = s(fun(X28,bool),X30) | s(bool,X31) = s(bool,g(s(X28,sK7(X29,X30,bool,X28)))) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f143,f156])).
fof(f1538,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') = s(bool,g(s(X7,sK7(X8,X9,bool,X7)))) | s(fun(X7,bool),X8) = s(fun(X7,bool),X9) | s(bool,'T_0') = s(bool,f(s(X7,sK7(X8,X9,bool,X7))))) )),
  inference(trivial_inequality_removal,[],[f1531])).
fof(f1531,plain,(
  ( ! [X8,X7,X9] : (s(bool,'F_0') != s(bool,'F_0') | s(fun(X7,bool),X8) = s(fun(X7,bool),X9) | s(bool,'T_0') = s(bool,g(s(X7,sK7(X8,X9,bool,X7)))) | s(bool,'T_0') = s(bool,f(s(X7,sK7(X8,X9,bool,X7))))) )),
  inference(superposition,[],[f229,f100])).
fof(f3790,plain,(
  ( ! [X461,X463,X459,X460,X462,X458] : (s(bool,X461) != s(bool,f(s(X458,sK7(X459,X460,bool,X458)))) | s(fun(X458,bool),X459) = s(fun(X458,bool),X460) | s(bool,X461) = s(bool,X462) | s(bool,'T_0') = s(bool,X462) | s(bool,X463) = s(bool,g(s(X458,sK7(X459,X460,bool,X458)))) | s(bool,'T_0') = s(bool,X463)) )),
  inference(superposition,[],[f143,f254])).
fof(f3992,plain,(
  ( ! [X461,X463,X459,X460,X462,X458] : (s(bool,X461) != s(bool,f(s(X458,sK7(X459,X460,bool,X458)))) | s(fun(X458,bool),X459) = s(fun(X458,bool),X460) | s(bool,X462) = s(bool,g(s(X458,sK7(X459,X460,bool,X458)))) | s(bool,'T_0') = s(bool,X461) | s(bool,X462) = s(bool,X463) | s(bool,'T_0') = s(bool,X463)) )),
  inference(superposition,[],[f143,f254])).
fof(f4093,plain,(
  ( ! [X453,X455,X457,X454,X456,X458] : (s(bool,X456) != s(bool,f(s(X453,sK7(X454,X455,bool,X453)))) | s(fun(X453,bool),X454) = s(fun(X453,bool),X455) | s(bool,X456) = s(bool,X457) | s(bool,'T_0') = s(bool,g(s(X453,sK7(X454,X455,bool,X453)))) | s(bool,X457) = s(bool,X458) | s(bool,'T_0') = s(bool,X458)) )),
  inference(superposition,[],[f143,f254])).
fof(f4221,plain,(
  ( ! [X436,X438,X440,X437,X439,X435] : (s(bool,'T_0') != s(bool,f(s(X435,sK7(X436,X437,bool,X435)))) | s(fun(X435,bool),X436) = s(fun(X435,bool),X437) | s(bool,X438) = s(bool,X439) | s(bool,X439) = s(bool,g(s(X435,sK7(X436,X437,bool,X435)))) | s(bool,X438) = s(bool,X440) | s(bool,'T_0') = s(bool,X440)) )),
  inference(superposition,[],[f143,f254])).
fof(f5912,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK7(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,f(s(X0,sK7(X1,X2,bool,X0)))) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(condensation,[],[f5911])).
fof(f5911,plain,(
  ( ! [X344,X346,X343,X345,X347,X348] : (s(fun(X343,bool),X344) = s(fun(X343,bool),X345) | s(bool,'T_0') = s(bool,g(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,X347) = s(bool,f(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,'T_0') = s(bool,X346) | s(bool,X347) = s(bool,X348) | s(bool,'T_0') = s(bool,X348)) )),
  inference(subsumption_resolution,[],[f3977,f100])).
fof(f3977,plain,(
  ( ! [X344,X346,X343,X345,X347,X348] : (s(bool,'F_0') != s(bool,X346) | s(fun(X343,bool),X344) = s(fun(X343,bool),X345) | s(bool,'T_0') = s(bool,g(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,X347) = s(bool,f(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,'T_0') = s(bool,X346) | s(bool,X347) = s(bool,X348) | s(bool,'T_0') = s(bool,X348)) )),
  inference(superposition,[],[f229,f254])).
fof(f146,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0'))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f147,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0')))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f149,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f151,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),X3))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X7)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X6),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0'))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f949,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9,X16] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),'const.option.NONE_0')))) | s(bool,X16) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.list.CONS_2'(s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13),s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f943,f94])).
fof(f943,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9,X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),'const.option.NONE_0')))) | s(bool,X16) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.list.CONS_2'(s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13),s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f146,f156])).
fof(f1165,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9,X16] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | s(bool,X16) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.list.CONS_2'(s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13),s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f1159,f94])).
fof(f1159,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9,X16] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | s(bool,X16) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.list.CONS_2'(s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13),s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f148,f156])).
fof(f1310,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0')))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7)))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X6))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7)))) )),
  inference(subsumption_resolution,[],[f1303,f155])).
fof(f1303,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0')))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X6))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7)))) )),
  inference(superposition,[],[f151,f100])).
fof(f2788,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9,X16] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.list.CONS_2'(s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13),s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15))) | s(bool,X16) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f2782,f94])).
fof(f2782,plain,(
  ( ! [X14,X12,X10,X8,X15,X13,X11,X9,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15)))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.list.CONS_2'(s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13),s('type.list.list'('type.peg.pegsym'(X8,X9,'type.list.list'(X10))),X14))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),X15))) | s(bool,X16) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X8,X9,'type.list.list'(X10)),X11),s('type.pair.prod'('type.list.list'(X8),'type.peg.pegsym'(X8,X9,'type.list.list'(X10))),'const.pair.,_2'(s('type.list.list'(X8),X12),s('type.peg.pegsym'(X8,X9,'type.list.list'(X10)),X13))),s('type.option.option'('type.pair.prod'('type.list.list'(X8),'type.list.list'(X10))),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f1310,f156])).
fof(f5914,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X2,'type.list.list'(X3)),X4),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X2,'type.list.list'(X3))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X2,'type.list.list'(X3)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X2,'type.list.list'(X3))),X6))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X3))),X7)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X2,'type.list.list'(X3)),X4),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X2,'type.list.list'(X3))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X2,'type.list.list'(X3)),X8))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X3))),'const.option.NONE_0')))) | s(bool,X9) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X2,'type.list.list'(X3)),X4),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X2,'type.list.list'(X3))),'const.pair.,_2'(s('type.list.list'(X1),X5),s('type.peg.pegsym'(X1,X2,'type.list.list'(X3)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X2,'type.list.list'(X3))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X2,'type.list.list'(X3)),X8),s('type.list.list'('type.peg.pegsym'(X1,X2,'type.list.list'(X3))),X6))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X3))),X7))) | s(bool,X0) = s(bool,X9)) )),
  inference(condensation,[],[f5913])).
fof(f5913,plain,(
  ( ! [X383,X377,X379,X374,X380,X382,X376,X378,X384,X375,X381] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X374,X375,'type.list.list'(X376)),X377),s('type.pair.prod'('type.list.list'(X374),'type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.pair.,_2'(s('type.list.list'(X374),X378),s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X374,X375,'type.list.list'(X376))),X380))))),s('type.option.option'('type.pair.prod'('type.list.list'(X374),'type.list.list'(X376))),X381)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X374,X375,'type.list.list'(X376)),X377),s('type.pair.prod'('type.list.list'(X374),'type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.pair.,_2'(s('type.list.list'(X374),X378),s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),X379))),s('type.option.option'('type.pair.prod'('type.list.list'(X374),'type.list.list'(X376))),'const.option.NONE_0')))) | s(bool,X383) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X374,X375,'type.list.list'(X376)),X377),s('type.pair.prod'('type.list.list'(X374),'type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.pair.,_2'(s('type.list.list'(X374),X378),s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.list.CONS_2'(s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),X379),s('type.list.list'('type.peg.pegsym'(X374,X375,'type.list.list'(X376))),X380))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X374),'type.list.list'(X376))),X381))) | s(bool,'T_0') = s(bool,X382) | s(bool,X383) = s(bool,X384) | s(bool,'T_0') = s(bool,X384)) )),
  inference(subsumption_resolution,[],[f3984,f158])).
fof(f3984,plain,(
  ( ! [X383,X377,X379,X374,X380,X382,X376,X378,X384,X375,X381] : (p(s(bool,X382)) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X374,X375,'type.list.list'(X376)),X377),s('type.pair.prod'('type.list.list'(X374),'type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.pair.,_2'(s('type.list.list'(X374),X378),s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X374,X375,'type.list.list'(X376))),X380))))),s('type.option.option'('type.pair.prod'('type.list.list'(X374),'type.list.list'(X376))),X381)))) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X374,X375,'type.list.list'(X376)),X377),s('type.pair.prod'('type.list.list'(X374),'type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.pair.,_2'(s('type.list.list'(X374),X378),s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),X379))),s('type.option.option'('type.pair.prod'('type.list.list'(X374),'type.list.list'(X376))),'const.option.NONE_0')))) | s(bool,X383) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X374,X375,'type.list.list'(X376)),X377),s('type.pair.prod'('type.list.list'(X374),'type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.pair.,_2'(s('type.list.list'(X374),X378),s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X374,X375,'type.list.list'(X376))),'const.list.CONS_2'(s('type.peg.pegsym'(X374,X375,'type.list.list'(X376)),X379),s('type.list.list'('type.peg.pegsym'(X374,X375,'type.list.list'(X376))),X380))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X374),'type.list.list'(X376))),X381))) | s(bool,'T_0') = s(bool,X382) | s(bool,X383) = s(bool,X384) | s(bool,'T_0') = s(bool,X384)) )),
  inference(superposition,[],[f151,f254])).
fof(f5916,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s(bool,'T_0') = s(bool,X0) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X4,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X4,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X6),s('type.peg.pegsym'(X1,X4,'type.list.list'(X2)),X7))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) | s(bool,X8) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X4,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X4,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X6),s('type.peg.pegsym'(X1,X4,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X4,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X4,'type.list.list'(X2)),X7),s('type.list.list'('type.peg.pegsym'(X1,X4,'type.list.list'(X2))),X9))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3))) | s(bool,X0) = s(bool,X8)) )),
  inference(condensation,[],[f5915])).
fof(f5915,plain,(
  ( ! [X412,X414,X408,X410,X416,X407,X413,X415,X409,X411,X417] : (s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414)))) | s(bool,X416) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.list.CONS_2'(s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412),s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),X413))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414))) | s(bool,'T_0') = s(bool,X415) | s(bool,X416) = s(bool,X417) | s(bool,'T_0') = s(bool,X417)) )),
  inference(subsumption_resolution,[],[f3987,f158])).
fof(f3987,plain,(
  ( ! [X412,X414,X408,X410,X416,X407,X413,X415,X409,X411,X417] : (p(s(bool,X415)) | s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414)))) | s(bool,X416) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.list.CONS_2'(s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412),s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),X413))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414))) | s(bool,'T_0') = s(bool,X415) | s(bool,X416) = s(bool,X417) | s(bool,'T_0') = s(bool,X417)) )),
  inference(superposition,[],[f150,f254])).
fof(f5959,plain,(
  ( ! [X364,X366,X372,X374,X368,X370,X365,X367,X373,X369,X371] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X364,X365,'type.list.list'(X366)),X367),s('type.pair.prod'('type.list.list'(X364),'type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.pair.,_2'(s('type.list.list'(X364),X368),s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),X369))),s('type.option.option'('type.pair.prod'('type.list.list'(X364),'type.list.list'(X366))),X371)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X364,X365,'type.list.list'(X366)),X367),s('type.pair.prod'('type.list.list'(X364),'type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.pair.,_2'(s('type.list.list'(X364),X368),s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X364,X365,'type.list.list'(X366))),X370))))),s('type.option.option'('type.pair.prod'('type.list.list'(X364),'type.list.list'(X366))),X371)))) | s(bool,X372) = s(bool,X373) | s(bool,X373) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X364,X365,'type.list.list'(X366)),X367),s('type.pair.prod'('type.list.list'(X364),'type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.pair.,_2'(s('type.list.list'(X364),X368),s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.list.CONS_2'(s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),X369),s('type.list.list'('type.peg.pegsym'(X364,X365,'type.list.list'(X366))),X370))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X364),'type.list.list'(X366))),X371))) | s(bool,X372) = s(bool,X374) | s(bool,'T_0') = s(bool,X374)) )),
  inference(subsumption_resolution,[],[f4214,f94])).
fof(f4214,plain,(
  ( ! [X364,X366,X372,X374,X368,X370,X365,X367,X373,X369,X371] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X364,X365,'type.list.list'(X366)),X367),s('type.pair.prod'('type.list.list'(X364),'type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.pair.,_2'(s('type.list.list'(X364),X368),s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),X369))),s('type.option.option'('type.pair.prod'('type.list.list'(X364),'type.list.list'(X366))),X371)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X364,X365,'type.list.list'(X366)),X367),s('type.pair.prod'('type.list.list'(X364),'type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.pair.,_2'(s('type.list.list'(X364),X368),s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X364,X365,'type.list.list'(X366))),X370))))),s('type.option.option'('type.pair.prod'('type.list.list'(X364),'type.list.list'(X366))),X371)))) | s(bool,X372) = s(bool,X373) | s(bool,X373) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X364,X365,'type.list.list'(X366)),X367),s('type.pair.prod'('type.list.list'(X364),'type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.pair.,_2'(s('type.list.list'(X364),X368),s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X364,X365,'type.list.list'(X366))),'const.list.CONS_2'(s('type.peg.pegsym'(X364,X365,'type.list.list'(X366)),X369),s('type.list.list'('type.peg.pegsym'(X364,X365,'type.list.list'(X366))),X370))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X364),'type.list.list'(X366))),X371))) | s(bool,X372) = s(bool,X374) | s(bool,'T_0') = s(bool,X374)) )),
  inference(superposition,[],[f148,f254])).
fof(f5960,plain,(
  ( ! [X383,X377,X379,X385,X380,X382,X376,X378,X384,X375,X381] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X375,X376,'type.list.list'(X377)),X378),s('type.pair.prod'('type.list.list'(X375),'type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.pair.,_2'(s('type.list.list'(X375),X379),s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),X380))),s('type.option.option'('type.pair.prod'('type.list.list'(X375),'type.list.list'(X377))),X382)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X375,X376,'type.list.list'(X377)),X378),s('type.pair.prod'('type.list.list'(X375),'type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.pair.,_2'(s('type.list.list'(X375),X379),s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),X380))),s('type.option.option'('type.pair.prod'('type.list.list'(X375),'type.list.list'(X377))),'const.option.NONE_0')))) | s(bool,X383) = s(bool,X384) | s(bool,X384) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X375,X376,'type.list.list'(X377)),X378),s('type.pair.prod'('type.list.list'(X375),'type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.pair.,_2'(s('type.list.list'(X375),X379),s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.list.CONS_2'(s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),X380),s('type.list.list'('type.peg.pegsym'(X375,X376,'type.list.list'(X377))),X381))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X375),'type.list.list'(X377))),X382))) | s(bool,X383) = s(bool,X385) | s(bool,'T_0') = s(bool,X385)) )),
  inference(subsumption_resolution,[],[f4215,f94])).
fof(f4215,plain,(
  ( ! [X383,X377,X379,X385,X380,X382,X376,X378,X384,X375,X381] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X375,X376,'type.list.list'(X377)),X378),s('type.pair.prod'('type.list.list'(X375),'type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.pair.,_2'(s('type.list.list'(X375),X379),s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),X380))),s('type.option.option'('type.pair.prod'('type.list.list'(X375),'type.list.list'(X377))),X382)))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X375,X376,'type.list.list'(X377)),X378),s('type.pair.prod'('type.list.list'(X375),'type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.pair.,_2'(s('type.list.list'(X375),X379),s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),X380))),s('type.option.option'('type.pair.prod'('type.list.list'(X375),'type.list.list'(X377))),'const.option.NONE_0')))) | s(bool,X383) = s(bool,X384) | s(bool,X384) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X375,X376,'type.list.list'(X377)),X378),s('type.pair.prod'('type.list.list'(X375),'type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.pair.,_2'(s('type.list.list'(X375),X379),s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X375,X376,'type.list.list'(X377))),'const.list.CONS_2'(s('type.peg.pegsym'(X375,X376,'type.list.list'(X377)),X380),s('type.list.list'('type.peg.pegsym'(X375,X376,'type.list.list'(X377))),X381))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X375),'type.list.list'(X377))),X382))) | s(bool,X383) = s(bool,X385) | s(bool,'T_0') = s(bool,X385)) )),
  inference(superposition,[],[f146,f254])).
fof(f5963,plain,(
  ( ! [X420,X422,X418,X424,X426,X421,X423,X417,X419,X425,X427] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X417,X418,'type.list.list'(X419)),X420),s('type.pair.prod'('type.list.list'(X417),'type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.pair.,_2'(s('type.list.list'(X417),X421),s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X417,X418,'type.list.list'(X419))),X423))))),s('type.option.option'('type.pair.prod'('type.list.list'(X417),'type.list.list'(X419))),X424)))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X417,X418,'type.list.list'(X419)),X420),s('type.pair.prod'('type.list.list'(X417),'type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.pair.,_2'(s('type.list.list'(X417),X421),s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.list.CONS_2'(s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),X422),s('type.list.list'('type.peg.pegsym'(X417,X418,'type.list.list'(X419))),X423))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X417),'type.list.list'(X419))),X424))) | s(bool,X425) = s(bool,X426) | s(bool,X426) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X417,X418,'type.list.list'(X419)),X420),s('type.pair.prod'('type.list.list'(X417),'type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.pair.,_2'(s('type.list.list'(X417),X421),s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),X422))),s('type.option.option'('type.pair.prod'('type.list.list'(X417),'type.list.list'(X419))),'const.option.NONE_0'))) | s(bool,X425) = s(bool,X427) | s(bool,'T_0') = s(bool,X427)) )),
  inference(subsumption_resolution,[],[f4219,f94])).
fof(f4219,plain,(
  ( ! [X420,X422,X418,X424,X426,X421,X423,X417,X419,X425,X427] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X417,X418,'type.list.list'(X419)),X420),s('type.pair.prod'('type.list.list'(X417),'type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.pair.,_2'(s('type.list.list'(X417),X421),s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X417,X418,'type.list.list'(X419))),X423))))),s('type.option.option'('type.pair.prod'('type.list.list'(X417),'type.list.list'(X419))),X424)))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X417,X418,'type.list.list'(X419)),X420),s('type.pair.prod'('type.list.list'(X417),'type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.pair.,_2'(s('type.list.list'(X417),X421),s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.list.CONS_2'(s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),X422),s('type.list.list'('type.peg.pegsym'(X417,X418,'type.list.list'(X419))),X423))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X417),'type.list.list'(X419))),X424))) | s(bool,X425) = s(bool,X426) | s(bool,X426) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X417,X418,'type.list.list'(X419)),X420),s('type.pair.prod'('type.list.list'(X417),'type.peg.pegsym'(X417,X418,'type.list.list'(X419))),'const.pair.,_2'(s('type.list.list'(X417),X421),s('type.peg.pegsym'(X417,X418,'type.list.list'(X419)),X422))),s('type.option.option'('type.pair.prod'('type.list.list'(X417),'type.list.list'(X419))),'const.option.NONE_0'))) | s(bool,X425) = s(bool,X427) | s(bool,'T_0') = s(bool,X427)) )),
  inference(superposition,[],[f1310,f254])).
fof(f6935,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X6))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7))) | s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X7))))) )),
  inference(condensation,[],[f6934])).
fof(f6934,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X4,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X4,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X6),s('type.peg.pegsym'(X1,X4,'type.list.list'(X2)),X7))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X4,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X4,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X6),s('type.peg.pegsym'(X1,X4,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X4,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X1,X4,'type.list.list'(X2)),X7),s('type.list.list'('type.peg.pegsym'(X1,X4,'type.list.list'(X2))),X8))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)))) )),
  inference(condensation,[],[f6933])).
fof(f6933,plain,(
  ( ! [X6,X4,X2,X10,X8,X7,X5,X3,X1,X9] : (s(bool,X1) = s(bool,X2) | s('type.option.option'('type.pair.prod'('type.list.list'(X3),'type.list.list'(X4))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X3),'type.list.list'(X4))),X5) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X3,X6,'type.list.list'(X4)),X7),s('type.pair.prod'('type.list.list'(X3),'type.peg.pegsym'(X3,X6,'type.list.list'(X4))),'const.pair.,_2'(s('type.list.list'(X3),X8),s('type.peg.pegsym'(X3,X6,'type.list.list'(X4)),X9))),s('type.option.option'('type.pair.prod'('type.list.list'(X3),'type.list.list'(X4))),X5)))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X3,X6,'type.list.list'(X4)),X7),s('type.pair.prod'('type.list.list'(X3),'type.peg.pegsym'(X3,X6,'type.list.list'(X4))),'const.pair.,_2'(s('type.list.list'(X3),X8),s('type.peg.pegsym'(X3,X6,'type.list.list'(X4)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X3,X6,'type.list.list'(X4))),'const.list.CONS_2'(s('type.peg.pegsym'(X3,X6,'type.list.list'(X4)),X9),s('type.list.list'('type.peg.pegsym'(X3,X6,'type.list.list'(X4))),X10))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X3),'type.list.list'(X4))),X5)))) )),
  inference(condensation,[],[f6932])).
fof(f6932,plain,(
  ( ! [X412,X414,X408,X410,X416,X407,X413,X415,X409,X411,X417] : (s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414)))) | s(bool,X415) = s(bool,X416) | s(bool,X416) = s(bool,X417) | s(bool,'T_0') = s(bool,X417) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.list.CONS_2'(s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412),s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),X413))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414)))) )),
  inference(subsumption_resolution,[],[f4418,f446])).
fof(f4418,plain,(
  ( ! [X412,X414,X408,X410,X416,X407,X413,X415,X409,X411,X417] : (p(s(bool,X415)) | s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414) | ~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414)))) | s(bool,X415) = s(bool,X416) | s(bool,X416) = s(bool,X417) | s(bool,'T_0') = s(bool,X417) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.list.CONS_2'(s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412),s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),X413))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),X414)))) )),
  inference(superposition,[],[f150,f254])).
fof(f5962,plain,(
  ( ! [X412,X414,X408,X410,X416,X407,X413,X415,X409,X411] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0')))) | s(bool,X414) = s(bool,X415) | s(bool,X415) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.list.CONS_2'(s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412),s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),X413))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0'))) | s(bool,X414) = s(bool,X416) | s(bool,'T_0') = s(bool,X416)) )),
  inference(subsumption_resolution,[],[f4218,f94])).
fof(f4218,plain,(
  ( ! [X412,X414,X408,X410,X416,X407,X413,X415,X409,X411] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0')))) | s(bool,X414) = s(bool,X415) | s(bool,X415) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X407,X408,'type.list.list'(X409)),X410),s('type.pair.prod'('type.list.list'(X407),'type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.pair.,_2'(s('type.list.list'(X407),X411),s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),'const.list.CONS_2'(s('type.peg.pegsym'(X407,X408,'type.list.list'(X409)),X412),s('type.list.list'('type.peg.pegsym'(X407,X408,'type.list.list'(X409))),X413))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X407),'type.list.list'(X409))),'const.option.NONE_0'))) | s(bool,X414) = s(bool,X416) | s(bool,'T_0') = s(bool,X416)) )),
  inference(superposition,[],[f683,f254])).
fof(f5961,plain,(
  ( ! [X397,X399,X405,X401,X403,X398,X404,X406,X400,X402] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X397,X398,'type.list.list'(X399)),X400),s('type.pair.prod'('type.list.list'(X397),'type.peg.pegsym'(X397,X398,'type.list.list'(X399))),'const.pair.,_2'(s('type.list.list'(X397),X401),s('type.peg.pegsym'(X397,X398,'type.list.list'(X399)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X397,X398,'type.list.list'(X399))),X403))))),s('type.option.option'('type.pair.prod'('type.list.list'(X397),'type.list.list'(X399))),'const.option.NONE_0')))) | s(bool,X404) = s(bool,X405) | s(bool,X405) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X397,X398,'type.list.list'(X399)),X400),s('type.pair.prod'('type.list.list'(X397),'type.peg.pegsym'(X397,X398,'type.list.list'(X399))),'const.pair.,_2'(s('type.list.list'(X397),X401),s('type.peg.pegsym'(X397,X398,'type.list.list'(X399)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X397,X398,'type.list.list'(X399))),'const.list.CONS_2'(s('type.peg.pegsym'(X397,X398,'type.list.list'(X399)),X402),s('type.list.list'('type.peg.pegsym'(X397,X398,'type.list.list'(X399))),X403))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X397),'type.list.list'(X399))),'const.option.NONE_0'))) | s(bool,X404) = s(bool,X406) | s(bool,'T_0') = s(bool,X406)) )),
  inference(subsumption_resolution,[],[f4217,f94])).
fof(f4217,plain,(
  ( ! [X397,X399,X405,X401,X403,X398,X404,X406,X400,X402] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X397,X398,'type.list.list'(X399)),X400),s('type.pair.prod'('type.list.list'(X397),'type.peg.pegsym'(X397,X398,'type.list.list'(X399))),'const.pair.,_2'(s('type.list.list'(X397),X401),s('type.peg.pegsym'(X397,X398,'type.list.list'(X399)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X397,X398,'type.list.list'(X399))),X403))))),s('type.option.option'('type.pair.prod'('type.list.list'(X397),'type.list.list'(X399))),'const.option.NONE_0')))) | s(bool,X404) = s(bool,X405) | s(bool,X405) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X397,X398,'type.list.list'(X399)),X400),s('type.pair.prod'('type.list.list'(X397),'type.peg.pegsym'(X397,X398,'type.list.list'(X399))),'const.pair.,_2'(s('type.list.list'(X397),X401),s('type.peg.pegsym'(X397,X398,'type.list.list'(X399)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X397,X398,'type.list.list'(X399))),'const.list.CONS_2'(s('type.peg.pegsym'(X397,X398,'type.list.list'(X399)),X402),s('type.list.list'('type.peg.pegsym'(X397,X398,'type.list.list'(X399))),X403))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X397),'type.list.list'(X399))),'const.option.NONE_0'))) | s(bool,X404) = s(bool,X406) | s(bool,'T_0') = s(bool,X406)) )),
  inference(superposition,[],[f857,f254])).
fof(f2552,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),X13))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0')))) | s(bool,X14) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),X12),s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),X13))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(subsumption_resolution,[],[f2546,f94])).
fof(f2546,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),X13))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0')))) | s(bool,X14) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),X12),s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),X13))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f857,f156])).
fof(f2185,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),X12))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0')))) | s(bool,X14) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),X12),s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),X13))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(subsumption_resolution,[],[f2179,f94])).
fof(f2179,plain,(
  ( ! [X14,X12,X10,X8,X7,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),X12))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0')))) | s(bool,X14) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X7,X8,'type.list.list'(X9)),X10),s('type.pair.prod'('type.list.list'(X7),'type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.pair.,_2'(s('type.list.list'(X7),X11),s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),'const.list.CONS_2'(s('type.peg.pegsym'(X7,X8,'type.list.list'(X9)),X12),s('type.list.list'('type.peg.pegsym'(X7,X8,'type.list.list'(X9))),X13))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X7),'type.list.list'(X9))),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f683,f156])).
fof(f857,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X6),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X5))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0')))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X5))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0'))))) )),
  inference(equality_resolution,[],[f149])).
fof(f683,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),X6))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0')))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),X5))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0'))))) )),
  inference(equality_resolution,[],[f147])).
fof(f1645,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.CONS_2'(s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))),s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0'))))) )),
  inference(unit_resulting_resolution,[],[f631,f631,f151])).
fof(f145,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') != s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X1,X0,'type.list.list'(X2)),X5),s('type.pair.prod'('type.list.list'(X1),'type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X1),X4),s('type.peg.pegsym'(X1,X0,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X1,X0,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3))))) )),
  inference(cnf_transformation,[],[f90])).
fof(f1885,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s(bool,X12) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X6,X7,'type.list.list'(X8)),X9),s('type.pair.prod'('type.list.list'(X6),'type.peg.pegsym'(X6,X7,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X6),X10),s('type.peg.pegsym'(X6,X7,'type.list.list'(X8)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X6,X7,'type.list.list'(X8))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X6),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X8)),X11))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f1869,f94])).
fof(f1869,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | s(bool,X12) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X6,X7,'type.list.list'(X8)),X9),s('type.pair.prod'('type.list.list'(X6),'type.peg.pegsym'(X6,X7,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X6),X10),s('type.peg.pegsym'(X6,X7,'type.list.list'(X8)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X6,X7,'type.list.list'(X8))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X6),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X8)),X11))))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f505,f156])).
fof(f4593,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2)) )),
  inference(equality_factoring,[],[f254])).
fof(f6008,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f4586,f156])).
fof(f4586,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X2)) )),
  inference(equality_factoring,[],[f254])).
fof(f4676,plain,(
  ( ! [X2,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,X2) != s(bool,X3) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X3)) )),
  inference(condensation,[],[f4559])).
fof(f4559,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X1) != s(bool,X2) | s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X3) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(equality_factoring,[],[f254])).
fof(f4223,plain,(
  ( ! [X447,X449,X451,X446,X448,X450] : (s(X448,f(s(bool,'T_0'))) != s(X448,g(s(bool,'T_0'))) | s(fun(bool,X448),X446) = s(fun(bool,X448),X447) | s(bool,X449) = s(bool,X450) | s(bool,X450) = s(bool,sK7(X446,X447,X448,bool)) | s(bool,X449) = s(bool,X451) | s(bool,'T_0') = s(bool,X451)) )),
  inference(superposition,[],[f143,f254])).
fof(f5958,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X347,X348] : (s('type.option.option'('type.pair.prod'('type.list.list'(X344),'type.list.list'(X346))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X344),'type.list.list'(X346))),X349) | s(bool,X350) = s(bool,X351) | s(bool,X351) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X344,X345,'type.list.list'(X346)),X347),s('type.pair.prod'('type.list.list'(X344),'type.peg.pegsym'(X344,X345,'type.list.list'(X346))),'const.pair.,_2'(s('type.list.list'(X344),X348),s('type.peg.pegsym'(X344,X345,'type.list.list'(X346)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X344,X345,'type.list.list'(X346))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X344),'type.list.list'(X346))),X349))) | s(bool,X350) = s(bool,X352) | s(bool,'T_0') = s(bool,X352)) )),
  inference(subsumption_resolution,[],[f4212,f94])).
fof(f4212,plain,(
  ( ! [X350,X344,X346,X352,X349,X351,X345,X347,X348] : (~p(s(bool,'T_0')) | s('type.option.option'('type.pair.prod'('type.list.list'(X344),'type.list.list'(X346))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X344),'type.list.list'(X346))),X349) | s(bool,X350) = s(bool,X351) | s(bool,X351) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X344,X345,'type.list.list'(X346)),X347),s('type.pair.prod'('type.list.list'(X344),'type.peg.pegsym'(X344,X345,'type.list.list'(X346))),'const.pair.,_2'(s('type.list.list'(X344),X348),s('type.peg.pegsym'(X344,X345,'type.list.list'(X346)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X344,X345,'type.list.list'(X346))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X344),'type.list.list'(X346))),X349))) | s(bool,X350) = s(bool,X352) | s(bool,'T_0') = s(bool,X352)) )),
  inference(superposition,[],[f144,f254])).
fof(f5955,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,X15)) | s(bool,X14) = s(bool,X15) | s(bool,X16) = s(bool,X17) | s(bool,X14) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f4132,f94])).
fof(f4132,plain,(
  ( ! [X14,X17,X15,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X15)) | s(bool,X14) = s(bool,X15) | s(bool,X16) = s(bool,X17) | s(bool,X14) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f142,f254])).
fof(f3994,plain,(
  ( ! [X472,X474,X469,X471,X473,X470] : (s(X471,f(s(bool,X472))) != s(X471,g(s(bool,X472))) | s(fun(bool,X471),X469) = s(fun(bool,X471),X470) | s(bool,X473) = s(bool,sK7(X469,X470,X471,bool)) | s(bool,'T_0') = s(bool,X472) | s(bool,X473) = s(bool,X474) | s(bool,'T_0') = s(bool,X474)) )),
  inference(superposition,[],[f143,f254])).
fof(f5910,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,X2) = s(bool,X3) | s(bool,X0) = s(bool,X3)) )),
  inference(condensation,[],[f5909])).
fof(f5909,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,X6)) | s(bool,X4) = s(bool,X6) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X5) | s(bool,X7) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f3896,f158])).
fof(f3896,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,X5)) | p(s(bool,X6)) | s(bool,X4) = s(bool,X6) | s(bool,X4) = s(bool,X7) | s(bool,'T_0') = s(bool,X5) | s(bool,X7) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f139,f254])).
fof(f3792,plain,(
  ( ! [X472,X474,X469,X471,X473,X470] : (s(X471,f(s(bool,X472))) != s(X471,g(s(bool,X472))) | s(fun(bool,X471),X469) = s(fun(bool,X471),X470) | s(bool,X472) = s(bool,X473) | s(bool,'T_0') = s(bool,X473) | s(bool,X474) = s(bool,sK7(X469,X470,X471,bool)) | s(bool,'T_0') = s(bool,X474)) )),
  inference(superposition,[],[f143,f254])).
fof(f3535,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X2) = s(bool,X3) | s(bool,X1) = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7) | s(bool,X0) = s(bool,X5)) )),
  inference(superposition,[],[f254,f254])).
fof(f5550,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f5549])).
fof(f5549,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(duplicate_literal_removal,[],[f3498])).
fof(f3498,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X0) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f254,f100])).
fof(f5744,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2) | s(bool,X3) = s(bool,X4) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X1) = s(bool,X3)) )),
  inference(condensation,[],[f5743])).
fof(f5743,plain,(
  ( ! [X94,X92,X90,X95,X93,X91,X89] : (s(bool,X89) = s(bool,X90) | s(bool,X90) = s(bool,X91) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,X92) | s(bool,X93) = s(bool,X94) | s(bool,X94) = s(bool,X95) | s(bool,'T_0') = s(bool,X95) | s(bool,X89) = s(bool,X93)) )),
  inference(duplicate_literal_removal,[],[f3402])).
fof(f3402,plain,(
  ( ! [X94,X92,X90,X95,X93,X91,X89] : (s(bool,X89) = s(bool,X90) | s(bool,X90) = s(bool,X91) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,X92) | s(bool,X93) = s(bool,X94) | s(bool,X94) = s(bool,X95) | s(bool,'T_0') = s(bool,X95) | s(bool,X89) = s(bool,X93)) )),
  inference(superposition,[],[f254,f254])).
fof(f1867,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2)),X5))))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X6,X7,'type.list.list'(X8)),X9),s('type.pair.prod'('type.list.list'(X6),'type.peg.pegsym'(X6,X7,'type.list.list'(X8))),'const.pair.,_2'(s('type.list.list'(X6),X10),s('type.peg.pegsym'(X6,X7,'type.list.list'(X8)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X6,X7,'type.list.list'(X8))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X6),'type.list.list'(X8))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(X6),'type.list.list'(X8)),X11)))))) )),
  inference(unit_resulting_resolution,[],[f505,f505,f139])).
fof(f1652,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0')))) )),
  inference(unit_resulting_resolution,[],[f94,f631,f142])).
fof(f1653,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0'))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X5,X6,'type.list.list'(X7)),X8),s('type.pair.prod'('type.list.list'(X5),'type.peg.pegsym'(X5,X6,'type.list.list'(X7))),'const.pair.,_2'(s('type.list.list'(X5),X9),s('type.peg.pegsym'(X5,X6,'type.list.list'(X7)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X5,X6,'type.list.list'(X7))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X5),'type.list.list'(X7))),'const.option.NONE_0')))) )),
  inference(unit_resulting_resolution,[],[f631,f631,f142])).
fof(f681,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,g(s(bool,'T_0'))) | $spl32),
  inference(cnf_transformation,[],[f681_D])).
fof(f681_D,plain,(
  s(bool,f(s(bool,'T_0'))) = s(bool,g(s(bool,'T_0'))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f679,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X30) = s(bool,sK7(X28,X29,bool,bool)) | s(bool,X30) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(fun(bool,bool),X28) = s(fun(bool,bool),X29)) ) | $spl20),
  inference(subsumption_resolution,[],[f665,f94])).
fof(f665,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,'T_0')) | s(bool,X30) = s(bool,sK7(X28,X29,bool,bool)) | s(bool,X30) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(fun(bool,bool),X28) = s(fun(bool,bool),X29)) ) | $spl20),
  inference(superposition,[],[f446,f644])).
fof(f678,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X10)) | s(bool,X10) = s(bool,sK7(X8,X9,bool,bool)) | s(fun(bool,bool),X8) = s(fun(bool,bool),X9)) ) | $spl20),
  inference(subsumption_resolution,[],[f659,f94])).
fof(f659,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | s(bool,X10) = s(bool,sK7(X8,X9,bool,bool)) | s(fun(bool,bool),X8) = s(fun(bool,bool),X9)) ) | $spl20),
  inference(superposition,[],[f142,f644])).
fof(f631,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0'))))) )),
  inference(equality_resolution,[],[f145])).
fof(f511,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X5) | s(bool,X6) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X5))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f506,f94])).
fof(f506,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X5) | s(bool,X6) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(X0,X1,'type.list.list'(X2)),X3),s('type.pair.prod'('type.list.list'(X0),'type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.pair.,_2'(s('type.list.list'(X0),X4),s('type.peg.pegsym'(X0,X1,'type.list.list'(X2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(X0,X1,'type.list.list'(X2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(X0),'type.list.list'(X2))),X5))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f144,f156])).
fof(f323,plain,(
  ( ! [X35,X33,X34,X32] : (s(X34,f(s(bool,'T_0'))) != s(X34,g(s(bool,'T_0'))) | s(fun(bool,X34),X32) = s(fun(bool,X34),X33) | s(bool,X35) = s(bool,sK7(X32,X33,X34,bool)) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f143,f156])).
fof(f446,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,X14)) | s(bool,X13) = s(bool,X14) | s(bool,X13) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(subsumption_resolution,[],[f317,f94])).
fof(f317,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X14)) | s(bool,X13) = s(bool,X14) | s(bool,X13) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f142,f156])).
fof(f287,plain,(
  ( ! [X37,X35,X36,X34] : (s(X36,f(s(bool,X37))) != s(X36,g(s(bool,X37))) | s(fun(bool,X36),X34) = s(fun(bool,X36),X35) | s(bool,'T_0') = s(bool,X37) | s(bool,'T_0') = s(bool,sK7(X34,X35,X36,bool))) )),
  inference(superposition,[],[f143,f156])).
fof(f254,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f156,f156])).
fof(f176,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f170,f155])).
fof(f170,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f139,f100])).
fof(f143,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK7(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK7(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK7(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK7(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0',aHL_EXT)).
fof(f139,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X13,X14] : ((p(s(bool,X13)) => p(s(bool,X14))) => ((p(s(bool,X14)) => p(s(bool,X13))) => s(bool,X13) = s(bool,X14)))),
  file('thm.pegSound.peg_eval_choicel_SING|split|0','thm.bool.IMP_ANTISYM_AX')).
fof(f142,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f61])).
fof(f229,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK7(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK7(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f143,f100])).
fof(f13462,plain,(
  ( ! [X64,X62,X63] : (s(bool,'F_0') != s(bool,f(s(fun(bool,bool),X64))) | s(fun(fun(bool,bool),bool),X62) = s(fun(fun(bool,bool),bool),X63) | s(bool,'T_0') = s(bool,g(s(fun(bool,bool),sK7(X62,X63,bool,fun(bool,bool)))))) ) | ($spl20 | $spl32 | $spl56)),
  inference(superposition,[],[f229,f7061])).
fof(f174,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f646,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl23),
  inference(cnf_transformation,[],[f646_D])).
fof(f646_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f12041,plain,(
  ( ! [X60] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X60)) ) | ($spl25 | $spl28)),
  inference(subsumption_resolution,[],[f11913,f7170])).
fof(f7170,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl25),
  inference(superposition,[],[f647,f100])).
fof(f11913,plain,(
  ( ! [X60] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,g(s(bool,X60)))) ) | ($spl25 | $spl28)),
  inference(superposition,[],[f7170,f11379])).
fof(f11379,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl25 | $spl28)),
  inference(subsumption_resolution,[],[f11337,f11052])).
fof(f11052,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl25),
  inference(subsumption_resolution,[],[f8986,f647])).
fof(f8986,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl25),
  inference(superposition,[],[f647,f100])).
fof(f11337,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X0) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl28),
  inference(superposition,[],[f650,f156])).
fof(f650,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | $spl28),
  inference(cnf_transformation,[],[f650_D])).
fof(f650_D,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f11037,plain,(
  $false | ($spl0 | $spl43)),
  inference(subsumption_resolution,[],[f11036,f94])).
fof(f11036,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f155,f10953])).
fof(f10953,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,X4)) ) | ($spl0 | $spl43)),
  inference(subsumption_resolution,[],[f1586,f164])).
fof(f1586,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(forward_demodulation,[],[f1579,f1560])).
fof(f1560,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f155,f704,f176])).
fof(f1579,plain,(
  ( ! [X4] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(duplicate_literal_removal,[],[f1564])).
fof(f1564,plain,(
  ( ! [X4] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(superposition,[],[f704,f156])).
fof(f11035,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f647,f10953])).
fof(f11029,plain,(
  $false | ($spl0 | $spl43)),
  inference(subsumption_resolution,[],[f11028,f94])).
fof(f11028,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl43)),
  inference(forward_demodulation,[],[f11027,f10953])).
fof(f11027,plain,(
  ~p(s(bool,'F_0')) | $spl0),
  inference(forward_demodulation,[],[f1856,f164])).
fof(f11000,plain,(
  $false | ($spl0 | $spl13 | $spl43)),
  inference(subsumption_resolution,[],[f455,f10953])).
fof(f10999,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10998,f94])).
fof(f10998,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10997,f10953])).
fof(f10997,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f8887,f164])).
fof(f8887,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f158])).
fof(f10996,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10995,f94])).
fof(f10995,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10994,f10953])).
fof(f10994,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f8918,f164])).
fof(f8918,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f647,f647,f446])).
fof(f10993,plain,(
  $false | ($spl0 | $spl25 | $spl43 | $spl46)),
  inference(subsumption_resolution,[],[f8919,f10953])).
fof(f8919,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl25 | $spl46)),
  inference(unit_resulting_resolution,[],[f647,f647,f5856])).
fof(f10992,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f8920,f10953])).
fof(f8920,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,g(s(bool,'F_0'))))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f7170])).
fof(f10991,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10990,f94])).
fof(f10990,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10989,f10953])).
fof(f10989,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f8924,f164])).
fof(f8924,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f94,f647,f142])).
fof(f10988,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10987,f94])).
fof(f10987,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10986,f10953])).
fof(f10986,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f8949,f164])).
fof(f8949,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f647,f647,f446])).
fof(f10985,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10984,f94])).
fof(f10984,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10983,f10953])).
fof(f10983,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f8952,f164])).
fof(f8952,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f647,f647,f446])).
fof(f10982,plain,(
  $false | ($spl0 | $spl25 | $spl43 | $spl46)),
  inference(subsumption_resolution,[],[f8953,f10953])).
fof(f8953,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl25 | $spl46)),
  inference(unit_resulting_resolution,[],[f647,f647,f5856])).
fof(f10981,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10980,f94])).
fof(f10980,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10979,f10953])).
fof(f10979,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f8954,f164])).
fof(f8954,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f94,f647,f142])).
fof(f10978,plain,(
  $false | ($spl0 | $spl17 | $spl43)),
  inference(subsumption_resolution,[],[f8856,f10953])).
fof(f8856,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl17),
  inference(forward_demodulation,[],[f459,f8731])).
fof(f10977,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f10976,f164])).
fof(f10976,plain,(
  s(bool,'F_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl0),
  inference(forward_demodulation,[],[f93,f164])).
fof(f10975,plain,(
  $false | ($spl0 | $spl25 | $spl43 | $spl46)),
  inference(subsumption_resolution,[],[f8401,f10953])).
fof(f8401,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl25 | $spl46)),
  inference(unit_resulting_resolution,[],[f647,f647,f5856])).
fof(f10974,plain,(
  $false | ($spl0 | $spl13 | $spl25)),
  inference(subsumption_resolution,[],[f10973,f164])).
fof(f10973,plain,(
  s(bool,'F_0') != s(bool,g(s(bool,'F_0'))) | ($spl0 | $spl13 | $spl25)),
  inference(forward_demodulation,[],[f7907,f164])).
fof(f7907,plain,(
  s(bool,g(s(bool,'F_0'))) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl13 | $spl25)),
  inference(subsumption_resolution,[],[f7786,f455])).
fof(f7786,plain,(
  s(bool,g(s(bool,'F_0'))) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl25),
  inference(superposition,[],[f93,f7200])).
fof(f7200,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl25),
  inference(trivial_inequality_removal,[],[f7185])).
fof(f7185,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X0) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl25),
  inference(superposition,[],[f647,f156])).
fof(f10972,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f7634,f10953])).
fof(f7634,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,g(s(bool,'F_0'))))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f7170])).
fof(f10971,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10970,f94])).
fof(f10970,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10969,f10953])).
fof(f10969,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f7092,f164])).
fof(f7092,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f158])).
fof(f10968,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10967,f94])).
fof(f10967,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10966,f10953])).
fof(f10966,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f7123,f164])).
fof(f7123,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f647,f647,f446])).
fof(f10965,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10964,f94])).
fof(f10964,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10963,f10953])).
fof(f10963,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f7124,f164])).
fof(f7124,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f94,f647,f142])).
fof(f10962,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10961,f94])).
fof(f10961,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10960,f10953])).
fof(f10960,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f7149,f164])).
fof(f7149,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f647,f647,f446])).
fof(f10959,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10958,f94])).
fof(f10958,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10957,f10953])).
fof(f10957,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f7152,f164])).
fof(f7152,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f647,f647,f647,f446])).
fof(f10956,plain,(
  $false | ($spl0 | $spl25 | $spl43)),
  inference(subsumption_resolution,[],[f10955,f94])).
fof(f10955,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl25 | $spl43)),
  inference(forward_demodulation,[],[f10954,f10953])).
fof(f10954,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl25)),
  inference(forward_demodulation,[],[f7153,f164])).
fof(f7153,plain,(
  ~p(s(bool,g(s(bool,'F_0')))) | $spl25),
  inference(unit_resulting_resolution,[],[f94,f647,f142])).
fof(f10952,plain,(
  $false | ($spl0 | $spl43)),
  inference(subsumption_resolution,[],[f1581,f164])).
fof(f1581,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl43),
  inference(backward_demodulation,[],[f1560,f704])).
fof(f10947,plain,(
  $false | ($spl6 | $spl26 | $spl28 | $spl43)),
  inference(subsumption_resolution,[],[f1581,f10825])).
fof(f10825,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,X1)) ) | ($spl6 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10812,f158])).
fof(f10812,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,X1) | p(s(bool,X1))) ) | ($spl6 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f10809,f175])).
fof(f10809,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl26 | $spl28)),
  inference(forward_demodulation,[],[f650,f9288])).
fof(f9288,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'F_0'))) | $spl26),
  inference(equality_resolution,[],[f649])).
fof(f10946,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10945,f94])).
fof(f10945,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7153,f10825])).
fof(f10944,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10943,f94])).
fof(f10943,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7152,f10825])).
fof(f10942,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10941,f94])).
fof(f10941,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7149,f10825])).
fof(f10940,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10939,f94])).
fof(f10939,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7124,f10825])).
fof(f10938,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10937,f94])).
fof(f10937,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7123,f10825])).
fof(f10935,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10934,f94])).
fof(f10934,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7092,f10825])).
fof(f10932,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10931,f10825])).
fof(f10931,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7546,f10825])).
fof(f7546,plain,(
  s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) | ($spl25 | $spl26)),
  inference(unit_resulting_resolution,[],[f647,f649])).
fof(f10930,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f7634,f10825])).
fof(f10929,plain,(
  $false | ($spl6 | $spl13 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10928,f10825])).
fof(f10928,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'F_0'))) | ($spl6 | $spl13 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f7907,f10825])).
fof(f10927,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28 | $spl46)),
  inference(subsumption_resolution,[],[f8401,f10825])).
fof(f10926,plain,(
  $false | ($spl6 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10925,f10825])).
fof(f10925,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl6 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f93,f10825])).
fof(f10924,plain,(
  $false | ($spl6 | $spl17 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f8856,f10825])).
fof(f10923,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10922,f94])).
fof(f10922,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f8954,f10825])).
fof(f10921,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28 | $spl46)),
  inference(subsumption_resolution,[],[f8953,f10825])).
fof(f10920,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10919,f94])).
fof(f10919,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f8952,f10825])).
fof(f10918,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10917,f94])).
fof(f10917,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f8949,f10825])).
fof(f10916,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10915,f94])).
fof(f10915,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f8924,f10825])).
fof(f10914,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f8920,f10825])).
fof(f10913,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28 | $spl46)),
  inference(subsumption_resolution,[],[f8919,f10825])).
fof(f10912,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10911,f94])).
fof(f10911,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f8918,f10825])).
fof(f10909,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10908,f94])).
fof(f10908,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f8887,f10825])).
fof(f10906,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10905,f10825])).
fof(f10905,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(forward_demodulation,[],[f9238,f10825])).
fof(f9238,plain,(
  s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) | ($spl25 | $spl26)),
  inference(unit_resulting_resolution,[],[f647,f649])).
fof(f10904,plain,(
  $false | ($spl6 | $spl25 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10815,f10825])).
fof(f10815,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) | ($spl25 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f10809,f647])).
fof(f10889,plain,(
  $false | ($spl6 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10835,f94])).
fof(f10835,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f10825,f1856])).
fof(f10888,plain,(
  $false | ($spl6 | $spl13 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10880,f10825])).
fof(f10880,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0'))) | ($spl6 | $spl13 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f10879,f455])).
fof(f10879,plain,(
  ( ! [X2,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | ($spl6 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10833,f94])).
fof(f10833,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | ($spl6 | $spl26 | $spl28)),
  inference(backward_demodulation,[],[f10825,f144])).
fof(f10824,plain,(
  $false | ($spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10811,f94])).
fof(f10811,plain,(
  ~p(s(bool,'T_0')) | ($spl26 | $spl28)),
  inference(backward_demodulation,[],[f10809,f155])).
fof(f10810,plain,(
  $false | ($spl3 | $spl26 | $spl28)),
  inference(subsumption_resolution,[],[f10809,f166])).
fof(f651,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl29),
  inference(cnf_transformation,[],[f651_D])).
fof(f651_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f9534,plain,(
  ( ! [X54] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X54)) ) | ($spl3 | $spl25 | $spl26)),
  inference(forward_demodulation,[],[f9468,f7166])).
fof(f7166,plain,(
  s(bool,'F_0') = s(bool,g(s(bool,'F_0'))) | ($spl3 | $spl25)),
  inference(unit_resulting_resolution,[],[f94,f166,f647,f446])).
fof(f9468,plain,(
  ( ! [X54] : (s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X54)) ) | ($spl25 | $spl26)),
  inference(duplicate_literal_removal,[],[f9398])).
fof(f9398,plain,(
  ( ! [X54] : (s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) ) | ($spl25 | $spl26)),
  inference(superposition,[],[f649,f7200])).
fof(f9662,plain,(
  ( ! [X57] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X57)) ) | ($spl3 | $spl6 | $spl25 | $spl26)),
  inference(subsumption_resolution,[],[f9617,f7170])).
fof(f9617,plain,(
  ( ! [X57] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,g(s(bool,X57))) | s(bool,'T_0') = s(bool,X57)) ) | ($spl3 | $spl6 | $spl25 | $spl26)),
  inference(superposition,[],[f649,f8108])).
fof(f8108,plain,(
  ( ! [X18] : (s(bool,'F_0') = s(bool,g(s(bool,X18))) | s(bool,'T_0') = s(bool,X18)) ) | ($spl3 | $spl6 | $spl25)),
  inference(subsumption_resolution,[],[f8048,f158])).
fof(f8048,plain,(
  ( ! [X18] : (p(s(bool,X18)) | s(bool,'F_0') = s(bool,g(s(bool,X18))) | s(bool,'T_0') = s(bool,X18)) ) | ($spl3 | $spl6 | $spl25)),
  inference(superposition,[],[f175,f7322])).
fof(f7322,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl25)),
  inference(superposition,[],[f7166,f100])).
fof(f10741,plain,(
  ( ! [X84] : (s(bool,X84) != s(bool,f(s(bool,X84))) | s(bool,X84) = s(bool,f(s(bool,'F_0')))) ) | $spl72),
  inference(cnf_transformation,[],[f10741_D])).
fof(f10741_D,plain,(
  ( ! [X84] : (s(bool,X84) != s(bool,f(s(bool,X84))) | s(bool,X84) = s(bool,f(s(bool,'F_0')))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f10323,plain,(
  ( ! [X83,X84] : (s(bool,X84) != s(bool,f(s(bool,X84))) | s(bool,'T_0') = s(bool,X83) | s(bool,X84) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(duplicate_literal_removal,[],[f10145])).
fof(f10145,plain,(
  ( ! [X83,X84] : (s(bool,X84) != s(bool,f(s(bool,X84))) | s(bool,'T_0') = s(bool,X83) | s(bool,'T_0') = s(bool,X83) | s(bool,X84) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(superposition,[],[f7269,f7313])).
fof(f7313,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,f(s(bool,'F_0'))) | s(bool,X0) = s(bool,X1)) ) | $spl29),
  inference(condensation,[],[f7312])).
fof(f7312,plain,(
  ( ! [X17,X18,X16] : (s(bool,X17) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X16) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl29),
  inference(subsumption_resolution,[],[f7292,f100])).
fof(f7292,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,X17) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X16) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl29),
  inference(superposition,[],[f651,f254])).
fof(f7269,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,f(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl29),
  inference(superposition,[],[f651,f100])).
fof(f10595,plain,(
  ( ! [X53,X51] : (s(bool,X53) = s(bool,f(s(bool,'F_0'))) | s(bool,X51) = s(bool,f(s(bool,'F_0'))) | s(bool,X51) = s(bool,X53)) ) | $spl68),
  inference(cnf_transformation,[],[f10595_D])).
fof(f10595_D,plain,(
  ( ! [X53,X51] : (s(bool,X53) = s(bool,f(s(bool,'F_0'))) | s(bool,X51) = s(bool,f(s(bool,'F_0'))) | s(bool,X51) = s(bool,X53)) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f10463,plain,(
  ( ! [X61,X59,X60] : (s(bool,'T_0') = s(bool,X60) | s(bool,X59) = s(bool,f(s(bool,'F_0'))) | s(bool,X61) = s(bool,f(s(bool,'F_0'))) | s(bool,X59) = s(bool,X61)) ) | $spl29),
  inference(duplicate_literal_removal,[],[f9938])).
fof(f9938,plain,(
  ( ! [X61,X59,X60] : (s(bool,'T_0') = s(bool,X60) | s(bool,'T_0') = s(bool,X60) | s(bool,X59) = s(bool,f(s(bool,'F_0'))) | s(bool,X61) = s(bool,f(s(bool,'F_0'))) | s(bool,X59) = s(bool,X61)) ) | $spl29),
  inference(superposition,[],[f7313,f7313])).
fof(f10596,plain,(
  ( ! [X60] : (s(bool,X60) = s(bool,f(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X60)) ) | $spl70),
  inference(cnf_transformation,[],[f10596_D])).
fof(f10596_D,plain,(
  ( ! [X60] : (s(bool,X60) = s(bool,f(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X60)) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f10640,plain,(
  ( ! [X88,X89] : (s(bool,'F_0') = s(bool,X89) | s(bool,X89) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X88)) ) | ($spl3 | $spl6 | $spl25 | $spl29)),
  inference(subsumption_resolution,[],[f9919,f7170])).
fof(f9919,plain,(
  ( ! [X88,X89] : (s(bool,'F_0') = s(bool,X89) | s(bool,'T_0') = s(bool,g(s(bool,X88))) | s(bool,X89) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X88)) ) | ($spl3 | $spl6 | $spl25 | $spl29)),
  inference(superposition,[],[f7313,f8108])).
fof(f10480,plain,(
  ( ! [X64,X62,X63] : (s(bool,X63) = s(bool,X64) | s(bool,'T_0') = s(bool,X62) | s(bool,X64) = s(bool,f(s(bool,'F_0'))) | s(bool,X63) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(duplicate_literal_removal,[],[f9906])).
fof(f9906,plain,(
  ( ! [X64,X62,X63] : (s(bool,X63) = s(bool,X64) | s(bool,'T_0') = s(bool,X62) | s(bool,X64) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X62) | s(bool,X63) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(superposition,[],[f7313,f7313])).
fof(f10499,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(duplicate_literal_removal,[],[f9890])).
fof(f9890,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl29),
  inference(superposition,[],[f7313,f100])).
fof(f10555,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,X59) | s(bool,X60) = s(bool,f(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X60)) ) | $spl29),
  inference(duplicate_literal_removal,[],[f9823])).
fof(f9823,plain,(
  ( ! [X59,X60] : (s(bool,'T_0') = s(bool,X59) | s(bool,X60) = s(bool,f(s(bool,'F_0'))) | s(bool,'F_0') = s(bool,X60) | s(bool,'T_0') = s(bool,X59)) ) | $spl29),
  inference(superposition,[],[f7313,f100])).
fof(f10556,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,X52) | s(bool,X53) = s(bool,f(s(bool,'F_0'))) | s(bool,X51) = s(bool,X53) | s(bool,X51) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(duplicate_literal_removal,[],[f9822])).
fof(f9822,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,X52) | s(bool,X53) = s(bool,f(s(bool,'F_0'))) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X52) | s(bool,X51) = s(bool,f(s(bool,'F_0')))) ) | $spl29),
  inference(superposition,[],[f7313,f7313])).
fof(f8828,plain,(
  $false | ($spl17 | $spl66)),
  inference(subsumption_resolution,[],[f8768,f94])).
fof(f8768,plain,(
  ~p(s(bool,'T_0')) | ($spl17 | $spl66)),
  inference(backward_demodulation,[],[f8736,f1856])).
fof(f8736,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl17 | $spl66)),
  inference(condensation,[],[f8735])).
fof(f8735,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X0) = s(bool,X1)) ) | ($spl17 | $spl66)),
  inference(subsumption_resolution,[],[f8734,f7228])).
fof(f8734,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,X0) = s(bool,X1)) ) | $spl17),
  inference(condensation,[],[f8733])).
fof(f8733,plain,(
  ( ! [X17,X18,X16] : (s(bool,X17) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X16) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl17),
  inference(subsumption_resolution,[],[f8694,f100])).
fof(f8694,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X16) | s(bool,X17) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X16) | s(bool,X17) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) ) | $spl17),
  inference(superposition,[],[f459,f254])).
fof(f8827,plain,(
  $false | ($spl13 | $spl17 | $spl66)),
  inference(subsumption_resolution,[],[f8821,f8736])).
fof(f8821,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0'))) | ($spl13 | $spl17 | $spl66)),
  inference(backward_demodulation,[],[f8819,f455])).
fof(f8819,plain,(
  ( ! [X2,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | ($spl17 | $spl66)),
  inference(subsumption_resolution,[],[f8766,f94])).
fof(f8766,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | ($spl17 | $spl66)),
  inference(backward_demodulation,[],[f8736,f144])).
fof(f8826,plain,(
  $false | ($spl11 | $spl17 | $spl66)),
  inference(subsumption_resolution,[],[f8820,f8736])).
fof(f8820,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0'))) | ($spl11 | $spl17 | $spl66)),
  inference(backward_demodulation,[],[f8819,f454])).
fof(f8818,plain,(
  $false | ($spl17 | $spl25 | $spl66)),
  inference(subsumption_resolution,[],[f8742,f8736])).
fof(f8742,plain,(
  s(bool,'T_0') != s(bool,g(s(bool,'T_0'))) | ($spl17 | $spl25 | $spl66)),
  inference(backward_demodulation,[],[f8736,f647])).
fof(f8817,plain,(
  $false | ($spl17 | $spl66)),
  inference(subsumption_resolution,[],[f8737,f94])).
fof(f8737,plain,(
  ~p(s(bool,'T_0')) | ($spl17 | $spl66)),
  inference(backward_demodulation,[],[f8736,f155])).
fof(f8732,plain,(
  $false | ($spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8731,f454])).
fof(f8729,plain,(
  $false | ($spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8728,f454])).
fof(f8728,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(condensation,[],[f8727])).
fof(f8727,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) ) | $spl17),
  inference(subsumption_resolution,[],[f8687,f100])).
fof(f8687,plain,(
  ( ! [X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) ) | $spl17),
  inference(superposition,[],[f459,f156])).
fof(f8726,plain,(
  $false | ($spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8699,f454])).
fof(f8699,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(trivial_inequality_removal,[],[f8685])).
fof(f8685,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(superposition,[],[f459,f100])).
fof(f8725,plain,(
  $false | ($spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8638,f454])).
fof(f8638,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(unit_resulting_resolution,[],[f459,f100])).
fof(f8724,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8640,f454])).
fof(f8640,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f459,f156])).
fof(f8723,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8644,f454])).
fof(f8644,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f459,f166,f459,f459,f254])).
fof(f8722,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8646,f454])).
fof(f8646,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f459,f459,f459,f254])).
fof(f8721,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8647,f454])).
fof(f8647,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f166,f166,f459,f254])).
fof(f8720,plain,(
  $false | ($spl3 | $spl11 | $spl17 | $spl25)),
  inference(subsumption_resolution,[],[f8648,f454])).
fof(f8648,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17 | $spl25)),
  inference(unit_resulting_resolution,[],[f647,f647,f166,f459,f254])).
fof(f8719,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8649,f454])).
fof(f8649,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f459,f459,f166,f459,f254])).
fof(f8718,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8650,f454])).
fof(f8650,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f166,f166,f459,f254])).
fof(f8717,plain,(
  $false | ($spl3 | $spl11 | $spl17 | $spl25)),
  inference(subsumption_resolution,[],[f8651,f454])).
fof(f8651,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17 | $spl25)),
  inference(unit_resulting_resolution,[],[f166,f647,f647,f459,f254])).
fof(f8716,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8652,f454])).
fof(f8652,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f94,f166,f459,f446])).
fof(f8715,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8654,f454])).
fof(f8654,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f459,f156])).
fof(f8714,plain,(
  $false | ($spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8655,f454])).
fof(f8655,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(unit_resulting_resolution,[],[f155,f459,f176])).
fof(f8713,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8658,f454])).
fof(f8658,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f459,f166,f459,f459,f254])).
fof(f8712,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8661,f454])).
fof(f8661,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f166,f166,f459,f254])).
fof(f8711,plain,(
  $false | ($spl3 | $spl11 | $spl17 | $spl25)),
  inference(subsumption_resolution,[],[f8662,f454])).
fof(f8662,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17 | $spl25)),
  inference(unit_resulting_resolution,[],[f647,f647,f166,f459,f254])).
fof(f8710,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8665,f454])).
fof(f8665,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f459,f166,f459,f459,f254])).
fof(f8708,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8669,f454])).
fof(f8669,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f93,f93,f459,f254])).
fof(f8707,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8671,f454])).
fof(f8671,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f166,f166,f459,f254])).
fof(f8706,plain,(
  $false | ($spl3 | $spl11 | $spl17 | $spl25)),
  inference(subsumption_resolution,[],[f8672,f454])).
fof(f8672,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17 | $spl25)),
  inference(unit_resulting_resolution,[],[f647,f647,f166,f459,f254])).
fof(f8705,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8675,f454])).
fof(f8675,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f459,f166,f459,f459,f254])).
fof(f8701,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8679,f454])).
fof(f8679,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f166,f93,f93,f459,f254])).
fof(f8700,plain,(
  $false | ($spl3 | $spl11 | $spl17)),
  inference(subsumption_resolution,[],[f8681,f454])).
fof(f8681,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl3 | $spl17)),
  inference(unit_resulting_resolution,[],[f94,f166,f459,f446])).
fof(f452,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f452_D])).
fof(f452_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f7228,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X5) | s(bool,X4) = s(bool,X5)) ) | $spl66),
  inference(cnf_transformation,[],[f7228_D])).
fof(f7228_D,plain,(
  ( ! [X4,X5] : (s(bool,X4) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X5) | s(bool,X4) = s(bool,X5)) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f7221,plain,(
  ( ! [X8,X7,X9] : (s(bool,X7) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,X8) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X8) | s(bool,X7) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f93,f254])).
fof(f7220,plain,(
  ( ! [X6,X4,X5] : (s(bool,X4) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,X6) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f93,f254])).
fof(f7059,plain,(
  ( ! [X445,X443,X444] : (s(bool,X443) = s(bool,X444) | s(bool,X443) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X445) | s(bool,X444) = s(bool,X445)) ) | $spl64),
  inference(cnf_transformation,[],[f7059_D])).
fof(f7059_D,plain,(
  ( ! [X445,X443,X444] : (s(bool,X443) = s(bool,X444) | s(bool,X443) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X445) | s(bool,X444) = s(bool,X445)) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f644,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) | $spl20),
  inference(cnf_transformation,[],[f644_D])).
fof(f644_D,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f4222,plain,(
  ( ! [X445,X441,X443,X444,X442] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X441) = s(fun(bool,bool),X442) | s(bool,'T_0') = s(bool,sK7(X441,X442,bool,bool)) | s(bool,X443) = s(bool,X444) | s(bool,X444) = s(bool,g(s(bool,'F_0'))) | s(bool,X443) = s(bool,X445) | s(bool,'T_0') = s(bool,X445)) )),
  inference(superposition,[],[f228,f254])).
fof(f7058,plain,(
  ( ! [X463,X459,X462] : (s(bool,X459) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X463) | s(bool,X462) = s(bool,X463) | s(bool,X459) = s(bool,X462)) ) | $spl62),
  inference(cnf_transformation,[],[f7058_D])).
fof(f7058_D,plain,(
  ( ! [X463,X459,X462] : (s(bool,X459) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X463) | s(bool,X462) = s(bool,X463) | s(bool,X459) = s(bool,X462)) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f7060,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | $spl25),
  inference(subsumption_resolution,[],[f4424,f647])).
fof(f4424,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f228,f254])).
fof(f4552,plain,(
  ( ! [X445,X441,X443,X444,X442] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X441) = s(fun(bool,bool),X442) | s(bool,'T_0') = s(bool,sK7(X441,X442,bool,bool)) | s(bool,X443) = s(bool,X444) | s(bool,X444) = s(bool,X445) | s(bool,'T_0') = s(bool,X445) | s(bool,X443) = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f228,f254])).
fof(f643,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl18),
  inference(cnf_transformation,[],[f643_D])).
fof(f643_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f6939,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X3)) ) | $spl50),
  inference(cnf_transformation,[],[f6939_D])).
fof(f6939_D,plain,(
  ( ! [X2,X3] : (s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X3)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f3791,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,'T_0') = s(bool,X467) | s(bool,X468) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X468)) )),
  inference(superposition,[],[f228,f254])).
fof(f3892,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X467) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X467) | s(bool,X464) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) )),
  inference(superposition,[],[f228,f254])).
fof(f7057,plain,(
  ( ! [X461,X463,X459,X460,X462] : (s(bool,X459) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X460) = s(fun(bool,bool),X461) | s(bool,'T_0') = s(bool,sK7(X460,X461,bool,bool)) | s(bool,X459) = s(bool,X462) | s(bool,X462) = s(bool,X463) | s(bool,'T_0') = s(bool,X463)) ) | $spl25),
  inference(subsumption_resolution,[],[f4094,f647])).
fof(f4094,plain,(
  ( ! [X461,X463,X459,X460,X462] : (s(bool,X459) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X460) = s(fun(bool,bool),X461) | s(bool,'T_0') = s(bool,sK7(X460,X461,bool,bool)) | s(bool,X459) = s(bool,X462) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,X462) = s(bool,X463) | s(bool,'T_0') = s(bool,X463)) )),
  inference(superposition,[],[f228,f254])).
fof(f7056,plain,(
  $false | ($spl23 | $spl25 | $spl26)),
  inference(subsumption_resolution,[],[f647,f6967])).
fof(f6967,plain,(
  ( ! [X6] : (s(bool,'T_0') = s(bool,X6)) ) | ($spl23 | $spl26)),
  inference(subsumption_resolution,[],[f649,f754])).
fof(f754,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl23),
  inference(trivial_inequality_removal,[],[f748])).
fof(f748,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X0) = s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl23),
  inference(superposition,[],[f646,f156])).
fof(f7055,plain,(
  $false | ($spl23 | $spl26)),
  inference(subsumption_resolution,[],[f7008,f6967])).
fof(f7008,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl23 | $spl26)),
  inference(backward_demodulation,[],[f6967,f93])).
fof(f7054,plain,(
  $false | ($spl11 | $spl23 | $spl26)),
  inference(subsumption_resolution,[],[f7052,f6967])).
fof(f7052,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0'))) | ($spl11 | $spl23 | $spl26)),
  inference(backward_demodulation,[],[f7048,f454])).
fof(f7048,plain,(
  ( ! [X2,X3,X1] : (s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | ($spl23 | $spl26)),
  inference(subsumption_resolution,[],[f7006,f94])).
fof(f7006,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.option.NONE_0') = s('type.option.option'('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),X3)) ) | ($spl23 | $spl26)),
  inference(backward_demodulation,[],[f6967,f144])).
fof(f7053,plain,(
  $false | ($spl13 | $spl23 | $spl26)),
  inference(subsumption_resolution,[],[f7050,f6967])).
fof(f7050,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.NONE_0'))) | ($spl13 | $spl23 | $spl26)),
  inference(backward_demodulation,[],[f7048,f455])).
fof(f7047,plain,(
  $false | ($spl23 | $spl26)),
  inference(subsumption_resolution,[],[f7005,f94])).
fof(f7005,plain,(
  ~p(s(bool,'T_0')) | ($spl23 | $spl26)),
  inference(backward_demodulation,[],[f6967,f1856])).
fof(f7034,plain,(
  $false | ($spl23 | $spl26)),
  inference(subsumption_resolution,[],[f6973,f6967])).
fof(f6973,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | ($spl23 | $spl26)),
  inference(backward_demodulation,[],[f6967,f646])).
fof(f7033,plain,(
  $false | ($spl23 | $spl26)),
  inference(subsumption_resolution,[],[f6968,f94])).
fof(f6968,plain,(
  ~p(s(bool,'T_0')) | ($spl23 | $spl26)),
  inference(backward_demodulation,[],[f6967,f155])).
fof(f6966,plain,(
  $false | ($spl3 | $spl23 | $spl29)),
  inference(subsumption_resolution,[],[f651,f3317])).
fof(f3317,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | ($spl3 | $spl23)),
  inference(unit_resulting_resolution,[],[f646,f166,f166,f166,f254])).
fof(f6954,plain,(
  ( ! [X476,X475] : (s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,sK7(X475,X476,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool))))) ) | $spl56),
  inference(cnf_transformation,[],[f6954_D])).
fof(f6954_D,plain,(
  ( ! [X476,X475] : (s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,sK7(X475,X476,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6953,plain,(
  ( ! [X477] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(bool,'T_0') = s(bool,X477)) ) | $spl54),
  inference(cnf_transformation,[],[f6953_D])).
fof(f6953_D,plain,(
  ( ! [X477] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(bool,'T_0') = s(bool,X477)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f1523,plain,(
  ( ! [X6,X7,X5] : (s(bool,'F_0') != s(bool,f(s(bool,X7))) | s(fun(bool,bool),X5) = s(fun(bool,bool),X6) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X5,X6,bool,bool)))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,sK7(X5,X6,bool,bool))) )),
  inference(superposition,[],[f229,f156])).
fof(f1524,plain,(
  ( ! [X10,X8,X9] : (s(bool,'F_0') != s(bool,f(s(bool,X10))) | s(fun(bool,bool),X8) = s(fun(bool,bool),X9) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X8,X9,bool,bool)))) | s(bool,'T_0') = s(bool,sK7(X8,X9,bool,bool)) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f229,f156])).
fof(f6958,plain,(
  ( ! [X2,X3] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X3)) ) | $spl60),
  inference(cnf_transformation,[],[f6958_D])).
fof(f6958_D,plain,(
  ( ! [X2,X3] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,X2) = s(bool,X3)) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6964,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl23),
  inference(condensation,[],[f6963])).
fof(f6963,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X467) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X464) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | $spl23),
  inference(subsumption_resolution,[],[f3993,f754])).
fof(f3993,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X467) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X464) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) )),
  inference(superposition,[],[f228,f254])).
fof(f648,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl24),
  inference(cnf_transformation,[],[f648_D])).
fof(f648_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f6962,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl23),
  inference(condensation,[],[f6961])).
fof(f6961,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,sK7(X3,X4,bool,bool)) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) ) | $spl23),
  inference(duplicate_literal_removal,[],[f6960])).
fof(f6960,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,sK7(X3,X4,bool,bool)) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | $spl23),
  inference(condensation,[],[f6959])).
fof(f6959,plain,(
  ( ! [X461,X463,X459,X460,X462] : (s(fun(bool,bool),X460) = s(fun(bool,bool),X461) | s(bool,'T_0') = s(bool,sK7(X460,X461,bool,bool)) | s(bool,X459) = s(bool,X462) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,X462) = s(bool,X463) | s(bool,'T_0') = s(bool,X463)) ) | $spl23),
  inference(subsumption_resolution,[],[f4094,f4909])).
fof(f4909,plain,(
  ( ! [X243,X241,X242] : (s(bool,X241) = s(bool,X242) | s(bool,X242) = s(bool,f(s(bool,'F_0'))) | s(bool,X241) = s(bool,X243) | s(bool,'T_0') = s(bool,X243)) ) | $spl23),
  inference(trivial_inequality_removal,[],[f4186])).
fof(f4186,plain,(
  ( ! [X243,X241,X242] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X241) = s(bool,X242) | s(bool,X242) = s(bool,f(s(bool,'F_0'))) | s(bool,X241) = s(bool,X243) | s(bool,'T_0') = s(bool,X243)) ) | $spl23),
  inference(superposition,[],[f646,f254])).
fof(f6955,plain,(
  ( ! [X478,X477,X479] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(bool,'T_0') = s(bool,X479) | s(bool,X478) = s(bool,X479) | s(bool,X477) = s(bool,X478)) ) | $spl58),
  inference(cnf_transformation,[],[f6955_D])).
fof(f6955_D,plain,(
  ( ! [X478,X477,X479] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(bool,'T_0') = s(bool,X479) | s(bool,X478) = s(bool,X479) | s(bool,X477) = s(bool,X478)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f4096,plain,(
  ( ! [X472,X474,X471,X473,X470] : (s(bool,'F_0') != s(bool,f(s(bool,X472))) | s(fun(bool,bool),X470) = s(fun(bool,bool),X471) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X470,X471,bool,bool)))) | s(bool,X472) = s(bool,X473) | s(bool,'T_0') = s(bool,sK7(X470,X471,bool,bool)) | s(bool,X473) = s(bool,X474) | s(bool,'T_0') = s(bool,X474)) )),
  inference(superposition,[],[f229,f254])).
fof(f6957,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl23),
  inference(condensation,[],[f6956])).
fof(f6956,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X467) = s(bool,g(s(bool,'F_0'))) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468) | s(bool,'T_0') = s(bool,X464)) ) | $spl23),
  inference(subsumption_resolution,[],[f4323,f754])).
fof(f4323,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X467) = s(bool,g(s(bool,'F_0'))) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468) | s(bool,'T_0') = s(bool,X464)) )),
  inference(superposition,[],[f228,f254])).
fof(f6002,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl23),
  inference(condensation,[],[f6001])).
fof(f6001,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,sK7(X3,X4,bool,bool)) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl23),
  inference(duplicate_literal_removal,[],[f6000])).
fof(f6000,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') = s(bool,sK7(X3,X4,bool,bool)) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl23),
  inference(condensation,[],[f5999])).
fof(f5999,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,X467) = s(bool,X468) | s(bool,'T_0') = s(bool,X468) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl23),
  inference(subsumption_resolution,[],[f4424,f4909])).
fof(f4426,plain,(
  ( ! [X476,X478,X475,X477,X479] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool)))) | s(bool,X477) = s(bool,X478) | s(bool,X478) = s(bool,X479) | s(bool,'T_0') = s(bool,X479) | s(bool,'T_0') = s(bool,sK7(X475,X476,bool,bool))) )),
  inference(superposition,[],[f229,f254])).
fof(f6952,plain,(
  ( ! [X476,X478,X475,X479] : (s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,X479) | s(bool,X478) = s(bool,X479) | s(bool,X478) = s(bool,sK7(X475,X476,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool))))) ) | $spl52),
  inference(cnf_transformation,[],[f6952_D])).
fof(f6952_D,plain,(
  ( ! [X476,X478,X475,X479] : (s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,X479) | s(bool,X478) = s(bool,X479) | s(bool,X478) = s(bool,sK7(X475,X476,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f4325,plain,(
  ( ! [X476,X478,X475,X477,X479] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool)))) | s(bool,X478) = s(bool,sK7(X475,X476,bool,bool)) | s(bool,X478) = s(bool,X479) | s(bool,'T_0') = s(bool,X479) | s(bool,'T_0') = s(bool,X477)) )),
  inference(superposition,[],[f229,f254])).
fof(f3995,plain,(
  ( ! [X476,X478,X475,X477,X479] : (s(bool,'F_0') != s(bool,f(s(bool,X477))) | s(fun(bool,bool),X475) = s(fun(bool,bool),X476) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X475,X476,bool,bool)))) | s(bool,X478) = s(bool,sK7(X475,X476,bool,bool)) | s(bool,'T_0') = s(bool,X477) | s(bool,X478) = s(bool,X479) | s(bool,'T_0') = s(bool,X479)) )),
  inference(superposition,[],[f229,f254])).
fof(f6942,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f6941])).
fof(f6941,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X468) | s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,'T_0') = s(bool,X467)) ) | $spl24),
  inference(duplicate_literal_removal,[],[f6940])).
fof(f6940,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X468) | s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,'T_0') = s(bool,X467) | s(bool,'T_0') = s(bool,X468)) ) | $spl24),
  inference(forward_demodulation,[],[f3791,f648])).
fof(f6938,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(bool,X2) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl24),
  inference(condensation,[],[f6937])).
fof(f6937,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X467) | s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | $spl24),
  inference(duplicate_literal_removal,[],[f6936])).
fof(f6936,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X467) | s(bool,X464) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,'T_0') = s(bool,X467) | s(bool,X464) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | $spl24),
  inference(forward_demodulation,[],[f3892,f648])).
fof(f6924,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f6923,f155])).
fof(f6923,plain,(
  p(s(bool,'F_0')) | $spl12),
  inference(forward_demodulation,[],[f6922,f1866])).
fof(f6922,plain,(
  p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | $spl12),
  inference(subsumption_resolution,[],[f6921,f155])).
fof(f6921,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | $spl12),
  inference(forward_demodulation,[],[f6920,f470])).
fof(f470,plain,(
  s(bool,'F_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl12),
  inference(unit_resulting_resolution,[],[f460,f100])).
fof(f460,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl12),
  inference(backward_demodulation,[],[f456,f93])).
fof(f6920,plain,(
  p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | $spl12),
  inference(subsumption_resolution,[],[f6844,f94])).
fof(f6844,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | p(s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) | $spl12),
  inference(superposition,[],[f148,f456])).
fof(f5856,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,'T_0') = s(bool,X4) | s(bool,X3) = s(bool,X4)) ) | $spl46),
  inference(cnf_transformation,[],[f5856_D])).
fof(f5856_D,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,'T_0') = s(bool,X4) | s(bool,X3) = s(bool,X4)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f5908,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,X2) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl12 | $spl23 | $spl24)),
  inference(condensation,[],[f5907])).
fof(f5907,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X467) | s(bool,'F_0') != s(bool,X464) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | ($spl12 | $spl23 | $spl24)),
  inference(duplicate_literal_removal,[],[f5906])).
fof(f5906,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X467) | s(bool,'F_0') != s(bool,X464) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,'T_0') = s(bool,X467) | s(bool,X464) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | ($spl12 | $spl23 | $spl24)),
  inference(forward_demodulation,[],[f5905,f648])).
fof(f5905,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'F_0') != s(bool,X464) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X467) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X467) | s(bool,X464) = s(bool,X468) | s(bool,'T_0') = s(bool,X468)) ) | ($spl12 | $spl23)),
  inference(forward_demodulation,[],[f3892,f755])).
fof(f755,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'F_0'))) | ($spl12 | $spl23)),
  inference(forward_demodulation,[],[f736,f470])).
fof(f736,plain,(
  s(bool,f(s(bool,'F_0'))) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | ($spl12 | $spl23)),
  inference(unit_resulting_resolution,[],[f94,f460,f646,f446])).
fof(f5857,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK7(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl48),
  inference(cnf_transformation,[],[f5857_D])).
fof(f5857_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK7(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5901,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK7(X1,X2,bool,X0)))) | s(bool,'F_0') != s(bool,X3) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(condensation,[],[f5900])).
fof(f5900,plain,(
  ( ! [X344,X346,X343,X345,X347,X348] : (s(bool,'F_0') != s(bool,X346) | s(fun(X343,bool),X344) = s(fun(X343,bool),X345) | s(bool,'T_0') = s(bool,g(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,'T_0') = s(bool,X347) | s(bool,X346) = s(bool,X348) | s(bool,'T_0') = s(bool,X348)) )),
  inference(subsumption_resolution,[],[f3876,f286])).
fof(f3876,plain,(
  ( ! [X344,X346,X343,X345,X347,X348] : (s(bool,'F_0') != s(bool,X346) | s(fun(X343,bool),X344) = s(fun(X343,bool),X345) | s(bool,'T_0') = s(bool,g(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,X347) = s(bool,f(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,'T_0') = s(bool,X347) | s(bool,X346) = s(bool,X348) | s(bool,'T_0') = s(bool,X348)) )),
  inference(superposition,[],[f229,f254])).
fof(f5864,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(bool,'F_0') != s(bool,X2) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl12 | $spl23 | $spl24)),
  inference(condensation,[],[f5863])).
fof(f5863,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X468) | s(bool,'F_0') != s(bool,X464) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,'T_0') = s(bool,X467)) ) | ($spl12 | $spl23 | $spl24)),
  inference(duplicate_literal_removal,[],[f5862])).
fof(f5862,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'T_0') = s(bool,X468) | s(bool,'F_0') != s(bool,X464) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,'T_0') = s(bool,X467) | s(bool,'T_0') = s(bool,X468)) ) | ($spl12 | $spl23 | $spl24)),
  inference(forward_demodulation,[],[f5861,f648])).
fof(f5861,plain,(
  ( ! [X466,X465,X467,X468,X464] : (s(bool,'F_0') != s(bool,X464) | s(fun(bool,bool),X465) = s(fun(bool,bool),X466) | s(bool,'T_0') = s(bool,sK7(X465,X466,bool,bool)) | s(bool,X464) = s(bool,X467) | s(bool,'T_0') = s(bool,X467) | s(bool,X468) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X468)) ) | ($spl12 | $spl23)),
  inference(forward_demodulation,[],[f3791,f755])).
fof(f5855,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK7(X1,X2,bool,X0)))) | s(bool,'F_0') != s(bool,X3) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(condensation,[],[f5854])).
fof(f5854,plain,(
  ( ! [X344,X346,X343,X345,X347,X348] : (s(bool,'F_0') != s(bool,X346) | s(fun(X343,bool),X344) = s(fun(X343,bool),X345) | s(bool,'T_0') = s(bool,g(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,X346) = s(bool,X347) | s(bool,'T_0') = s(bool,X347) | s(bool,'T_0') = s(bool,X348)) )),
  inference(subsumption_resolution,[],[f3775,f286])).
fof(f3775,plain,(
  ( ! [X344,X346,X343,X345,X347,X348] : (s(bool,'F_0') != s(bool,X346) | s(fun(X343,bool),X344) = s(fun(X343,bool),X345) | s(bool,'T_0') = s(bool,g(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,X346) = s(bool,X347) | s(bool,'T_0') = s(bool,X347) | s(bool,X348) = s(bool,f(s(X343,sK7(X344,X345,bool,X343)))) | s(bool,'T_0') = s(bool,X348)) )),
  inference(superposition,[],[f229,f254])).
fof(f1540,plain,(
  ( ! [X4,X2,X3] : (s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,X4) | s(bool,X4) = s(bool,sK7(X2,X3,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X2,X3,bool,bool))))) ) | $spl44),
  inference(cnf_transformation,[],[f1540_D])).
fof(f1540_D,plain,(
  ( ! [X4,X2,X3] : (s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,X4) | s(bool,X4) = s(bool,sK7(X2,X3,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X2,X3,bool,bool))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f704,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl43),
  inference(cnf_transformation,[],[f704_D])).
fof(f704_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f1525,plain,(
  ( ! [X12,X13,X11] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X11) = s(fun(bool,bool),X12) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X11,X12,bool,bool)))) | s(bool,X13) = s(bool,sK7(X11,X12,bool,bool)) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f229,f156])).
fof(f1522,plain,(
  ( ! [X4,X2,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,g(s(bool,sK7(X2,X3,bool,bool)))) | s(bool,X4) = s(bool,sK7(X2,X3,bool,bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f229,f156])).
fof(f701,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl38),
  inference(cnf_transformation,[],[f701_D])).
fof(f701_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f694,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl33),
  inference(superposition,[],[f682,f100])).
fof(f702,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl40),
  inference(cnf_transformation,[],[f702_D])).
fof(f702_D,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f693,plain,(
  ( ! [X3] : (s(bool,X3) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,g(s(bool,'T_0')))) ) | $spl33),
  inference(superposition,[],[f682,f156])).
fof(f692,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,f(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl33),
  inference(superposition,[],[f682,f156])).
fof(f697,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl34),
  inference(cnf_transformation,[],[f697_D])).
fof(f697_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f699,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | $spl37),
  inference(cnf_transformation,[],[f699_D])).
fof(f699_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f691,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(bool,X1) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl33),
  inference(superposition,[],[f682,f156])).
fof(f690,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | s(bool,X0) = s(bool,g(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl33),
  inference(superposition,[],[f682,f156])).
fof(f680,plain,(
  ( ! [X35,X34] : (s(fun(bool,bool),X34) = s(fun(bool,bool),X35)) ) | $spl30),
  inference(cnf_transformation,[],[f680_D])).
fof(f680_D,plain,(
  ( ! [X35,X34] : (s(fun(bool,bool),X34) = s(fun(bool,bool),X35)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f682,plain,(
  s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | $spl33),
  inference(cnf_transformation,[],[f682_D])).
fof(f682_D,plain,(
  s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f669,plain,(
  ( ! [X35,X34] : (s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X34) = s(fun(bool,bool),X35)) ) | $spl20),
  inference(duplicate_literal_removal,[],[f667])).
fof(f667,plain,(
  ( ! [X35,X34] : (s(bool,f(s(bool,'T_0'))) != s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X34) = s(fun(bool,bool),X35) | s(fun(bool,bool),X34) = s(fun(bool,bool),X35)) ) | $spl20),
  inference(superposition,[],[f143,f644])).
fof(f642,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK7(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f228,f100])).
fof(f649,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl26),
  inference(cnf_transformation,[],[f649_D])).
fof(f649_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f641,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK7(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f228,f156])).
fof(f640,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK7(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f228,f156])).
fof(f639,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK7(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f228,f156])).
fof(f638,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK7(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f228,f156])).
fof(f456,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl12),
  inference(cnf_transformation,[],[f456_D])).
fof(f456_D,plain,(
  s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f459,plain,(
  s(bool,'F_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl17),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  s(bool,'F_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f451,plain,(
  s(bool,'F_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))),
  inference(superposition,[],[f93,f100])).
fof(f457,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl14),
  inference(cnf_transformation,[],[f457_D])).
fof(f457_D,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f450,plain,(
  ( ! [X3] : (s(bool,X3) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X3) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3)))))) )),
  inference(superposition,[],[f93,f156])).
fof(f449,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f93,f156])).
fof(f454,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl11),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f448,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,X1) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f93,f156])).
fof(f447,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,X0) = s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),'const.cmlPEG.choicel_1'(s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.CONS_2'(s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4),s('type.list.list'('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.list.NIL_0'))))))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f93,f156])).
fof(f191,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f179,f174])).
fof(f179,plain,(
  s(bool,'T_0') != s(bool,'const.peg.peg_eval_3'(s('type.peg.peg'(sK1,sK0,'type.list.list'(sK2)),sK6),s('type.pair.prod'('type.list.list'(sK1),'type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2))),'const.pair.,_2'(s('type.list.list'(sK1),sK5),s('type.peg.pegsym'(sK1,sK0,'type.list.list'(sK2)),sK4))),s('type.option.option'('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'(sK1),'type.list.list'(sK2)),sK3))))) | $spl4),
  inference(backward_demodulation,[],[f174,f93])).
fof(f190,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f178,f94])).
fof(f178,plain,(
  ~p(s(bool,'T_0')) | $spl4),
  inference(backward_demodulation,[],[f174,f155])).
fof(f175,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl6),
  inference(cnf_transformation,[],[f175_D])).
fof(f175_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f177,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f171,f158])).
fof(f171,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f139,f100])).
fof(f173,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f169,f158])).
fof(f169,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f139,f100])).
fof(f164,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f164_D])).
fof(f164_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f166,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f166_D])).
fof(f166_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f163,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f100])).
% SZS output end Proof for thm.pegSound
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 161
% Passive clauses: 552
% Generated clauses: 17524
% Final active clauses: 29
% Final passive clauses: 65
% Input formulas: 25
% Initial clauses: 59
% 
% Duplicate literals: 1875
% Trivial inequalities: 121
% Fw subsumption resolutions: 981
% Fw demodulations: 1413
% Bw demodulations: 281
% Condensations: 2652
% Global subsumptions: 5
% 
% Simple tautologies: 250
% Equational tautologies: 493
% Forward subsumptions: 9084
% Fw demodulations to eq. taut.: 3
% Bw demodulations to eq. taut.: 30
% 
% Unit resulting resolution: 1077
% Factoring: 1
% Forward superposition: 4540
% Backward superposition: 3464
% Self superposition: 227
% Equality factoring: 151
% Equality resolution: 23
% 
% Split clauses: 57
% Split components: 123
% SAT solver clauses: 771
% SAT solver unit clauses: 34
% SAT solver binary clauses: 104
% 
% Sat splits: 57
% Sat splitting refutations: 98
% 
% Memory used [KB]: 7291
% Time elapsed: 1.547 s
% ------------------------------
% ------------------------------
% Success in time 2.92 s
