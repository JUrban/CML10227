Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.exhSem
% (144434)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 122
% Passive clauses: 1063
% Generated clauses: 17854
% Final active clauses: 117
% Final passive clauses: 757
% Input formulas: 24
% Initial clauses: 32
% 
% Duplicate literals: 787
% Trivial inequalities: 187
% Fw subsumption resolutions: 1924
% Fw demodulations: 1760
% Bw demodulations: 2
% 
% Simple tautologies: 198
% Equational tautologies: 26
% Forward subsumptions: 11350
% Fw demodulations to eq. taut.: 19
% 
% Binary resolution: 6
% Forward superposition: 6824
% Backward superposition: 6055
% Self superposition: 214
% Equality factoring: 53
% Equality resolution: 17
% 
% Split clauses: 275
% Split components: 561
% SAT solver clauses: 722
% SAT solver unit clauses: 39
% SAT solver binary clauses: 143
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 275
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 721
% TWLsolver calls for satisfiability: 130
% 
% Memory used [KB]: 13944
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.exhSem
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.exhSem
% SZS output start Proof for thm.exhSem
fof(f13651,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f13620,f154,f77,f111,f78,f113,f79,f115,f80,f117,f109,f8359,f8361,f157,f159,f8733,f81,f118,f116,f114,f112,f110,f8654,f8730,f95,f134,f148,f149,f102,f141,f103,f142,f88,f127,f92,f131,f106,f145,f12975,f12627,f12629,f12949,f12965,f10878,f10962,f86,f125,f96,f135,f10874,f10958,f94,f133,f10875,f10959,f105,f144,f93,f132,f6774,f6844,f85,f124,f91,f130,f107,f146,f6770,f6840,f90,f129])).
fof(f129,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl26),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f90,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_9|48|_prove_ltb')).
fof(f6840,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X3),happ(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X2))))) = s('type.ffi.ffi_state'(X3),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X3),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X1),s('type.exhSem.state'(X0),X2)))))))) ) | $spl348),
  inference(cnf_transformation,[],[f6840_D])).
fof(f6840_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X3),happ(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X2))))) = s('type.ffi.ffi_state'(X3),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X3),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X1),s('type.exhSem.state'(X0),X2)))))))) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f6770,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X3),happ(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X2))))) = s('type.ffi.ffi_state'(X3),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X3),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X3)),X4),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X1),s('type.exhSem.state'(X0),X2)))))))) ) | ($spl26 | $spl60)),
  inference(superposition,[],[f146,f129])).
fof(f146,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X1),X2)))))) ) | $spl60),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X1),X2)))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f107,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X1),X2)))))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2))))) = s('type.ffi.ffi_state'(X0),happ(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.ffi.ffi_state'(X1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X1),X2)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X7),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.exhSem.state'(X6),X20))))) = s('type.ffi.ffi_state'(X7),happ(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_96_prove_ltb')).
fof(f130,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl28),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f91,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_89_prove_ltb')).
fof(f124,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl16),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f85,plain,(
  ( ! [X2,X0,X1] : (s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1,X2] : s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),X1))) = s('type.ffi.ffi_state'(X0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X20,X21] : s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),X20))) = s('type.ffi.ffi_state'(X6),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X6),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_88_prove_ltb')).
fof(f6844,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.ffi.ffi_state'(X4),X6) = s('type.ffi.ffi_state'(X4),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X4),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.exhSem.state'(X5),X7)))))) ) | $spl356),
  inference(cnf_transformation,[],[f6844_D])).
fof(f6844_D,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.ffi.ffi_state'(X4),X6) = s('type.ffi.ffi_state'(X4),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X4),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.exhSem.state'(X5),X7)))))) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f6774,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.ffi.ffi_state'(X4),X6) = s('type.ffi.ffi_state'(X4),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(X4),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),'const.combin.K_1'(s('type.ffi.ffi_state'(X4),X6))),s('type.exhSem.state'(X5),X7)))))) ) | ($spl60 | $spl64)),
  inference(superposition,[],[f146,f149])).
fof(f132,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),X1))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl32),
  inference(cnf_transformation,[],[f132_D])).
fof(f132_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),X1))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f93,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),X1))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),X1))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X2),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),X1))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X20,X21] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X21),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X6),X20))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(X6),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_94_prove_ltb')).
fof(f144,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))) ) | $spl56),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f105,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),X20))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_86_prove_ltb')).
fof(f10959,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X8),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X5),X7))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X4),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X8),s('type.exhSem.state'(X4),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),X6),s('type.exhSem.state'(X5),X7)))))))) ) | $spl540),
  inference(cnf_transformation,[],[f10959_D])).
fof(f10959_D,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X8),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X5),X7))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X4),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X8),s('type.exhSem.state'(X4),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),X6),s('type.exhSem.state'(X5),X7)))))))) ) <=> ~$spl540),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl540])])).
fof(f10875,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X8),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X5),X7))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X4),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X8),s('type.exhSem.state'(X4),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X5),'type.ffi.ffi_state'(X4)),X6),s('type.exhSem.state'(X5),X7)))))))) ) | ($spl38 | $spl56)),
  inference(superposition,[],[f135,f144])).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl34),
  inference(cnf_transformation,[],[f133_D])).
fof(f133_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f94,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),X20))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_87_prove_ltb')).
fof(f10958,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X2))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X3),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X1),s('type.exhSem.state'(X0),X2)))))))) ) | $spl538),
  inference(cnf_transformation,[],[f10958_D])).
fof(f10958_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X2))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X3),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X1),s('type.exhSem.state'(X0),X2)))))))) ) <=> ~$spl538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl538])])).
fof(f10874,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X3),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X2))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X3),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X1),s('type.exhSem.state'(X0),X2)))))))) ) | ($spl34 | $spl38)),
  inference(superposition,[],[f135,f133])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1)))))) ) | $spl38),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f96,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X21),s('type.exhSem.state'(X6),X20))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X21),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_95_prove_ltb')).
fof(f125,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl18),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f86,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),X20))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X6),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_85_prove_ltb')).
fof(f10962,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X4),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X4),X5)))))) ) | $spl546),
  inference(cnf_transformation,[],[f10962_D])).
fof(f10962_D,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X4),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X4),X5)))))) ) <=> ~$spl546),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl546])])).
fof(f10878,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(X4),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X4),X5)))))) ) | ($spl38 | $spl64)),
  inference(superposition,[],[f135,f149])).
fof(f12965,plain,(
  $false | ($spl5 | $spl18 | $spl38 | $spl538 | $spl540 | $spl546 | $spl590)),
  inference(subsumption_resolution,[],[f12964,f114])).
fof(f12964,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) | ($spl18 | $spl38 | $spl538 | $spl540 | $spl546 | $spl590)),
  inference(forward_demodulation,[],[f12963,f10962])).
fof(f12963,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl18 | $spl38 | $spl538 | $spl540 | $spl546 | $spl590)),
  inference(forward_demodulation,[],[f12962,f10962])).
fof(f12962,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl18 | $spl38 | $spl538 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12961,f135])).
fof(f12961,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl18 | $spl38 | $spl538 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12960,f135])).
fof(f12960,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl18 | $spl38 | $spl538 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12959,f10958])).
fof(f12959,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl18 | $spl38 | $spl538 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12958,f10958])).
fof(f12958,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl18 | $spl38 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12957,f135])).
fof(f12957,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl18 | $spl38 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12956,f135])).
fof(f12956,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl18 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12955,f10959])).
fof(f12955,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),happ(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl18 | $spl540 | $spl590)),
  inference(forward_demodulation,[],[f12954,f10959])).
fof(f12954,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl18 | $spl590)),
  inference(forward_demodulation,[],[f12875,f125])).
fof(f12875,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'const.exhSem.state_refs_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl18 | $spl590)),
  inference(superposition,[],[f125,f12629])).
fof(f12949,plain,(
  $false | ($spl3 | $spl32 | $spl64 | $spl590)),
  inference(subsumption_resolution,[],[f12948,f112])).
fof(f12948,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) | ($spl32 | $spl64 | $spl590)),
  inference(forward_demodulation,[],[f12947,f149])).
fof(f12947,plain,(
  s('type.num.num',sK6) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl32 | $spl64 | $spl590)),
  inference(forward_demodulation,[],[f12946,f149])).
fof(f12946,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl32 | $spl590)),
  inference(forward_demodulation,[],[f12873,f132])).
fof(f12873,plain,(
  s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) = s('type.num.num','const.exhSem.state_clock_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl32 | $spl590)),
  inference(superposition,[],[f132,f12629])).
fof(f12629,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl590),
  inference(cnf_transformation,[],[f12629_D])).
fof(f12629_D,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) <=> ~$spl590),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl590])])).
fof(f12627,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl8)),
  inference(forward_demodulation,[],[f109,f117])).
fof(f12975,plain,(
  $false | ($spl7 | $spl16 | $spl28 | $spl60 | $spl348 | $spl356 | $spl590)),
  inference(subsumption_resolution,[],[f12974,f116])).
fof(f12974,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK8) | ($spl16 | $spl28 | $spl60 | $spl348 | $spl356 | $spl590)),
  inference(forward_demodulation,[],[f12973,f6844])).
fof(f12973,plain,(
  s('type.ffi.ffi_state'(sK1),sK8) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl16 | $spl28 | $spl60 | $spl348 | $spl356 | $spl590)),
  inference(forward_demodulation,[],[f12972,f6844])).
fof(f12972,plain,(
  s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl16 | $spl28 | $spl60 | $spl348 | $spl590)),
  inference(forward_demodulation,[],[f12971,f146])).
fof(f12971,plain,(
  s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.ffi.ffi_state'(sK0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl16 | $spl28 | $spl60 | $spl348 | $spl590)),
  inference(forward_demodulation,[],[f12970,f146])).
fof(f12970,plain,(
  s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.ffi.ffi_state'(sK0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.ffi.ffi_state'(sK0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl16 | $spl28 | $spl348 | $spl590)),
  inference(forward_demodulation,[],[f12969,f6840])).
fof(f12969,plain,(
  s('type.ffi.ffi_state'(sK1),happ(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.ffi.ffi_state'(sK0),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl16 | $spl28 | $spl348 | $spl590)),
  inference(forward_demodulation,[],[f12968,f6840])).
fof(f12968,plain,(
  s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl16 | $spl28 | $spl590)),
  inference(forward_demodulation,[],[f12967,f130])).
fof(f12967,plain,(
  s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl16 | $spl28 | $spl590)),
  inference(forward_demodulation,[],[f12966,f130])).
fof(f12966,plain,(
  s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl16 | $spl590)),
  inference(forward_demodulation,[],[f12876,f124])).
fof(f12876,plain,(
  s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.ffi.ffi_state'(sK1),'const.exhSem.state_ffi_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl16 | $spl590)),
  inference(superposition,[],[f124,f12629])).
fof(f145,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))) ) | $spl58),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f106,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X1),X2))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X1),'type.ffi.ffi_state'(X0)),X3),s('type.exhSem.state'(X1),X2)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7,X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_93_prove_ltb')).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl30),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f92,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_92_prove_ltb')).
fof(f127,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) | $spl22),
  inference(cnf_transformation,[],[f127_D])).
fof(f127_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f88,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X2),s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),X20))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),X21),s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_9|49|_prove_ltb')).
fof(f142,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) ) | $spl52),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f103,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17,X16] : ! [X24,X25] : s(X17,'const.combin.K_2'(s(X17,X24),s(X16,X25))) = s(X17,happ(s(fun(X16,X17),'const.combin.K_1'(s(X17,X24))),s(X16,X25)))),
  file('thm.exhSem.state_literal_|49||49|','ARITY_1_2_const.combin.K')).
fof(f141,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) ) | $spl50),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f102,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X16,X17] : ! [X18,X19] : s(X17,X18) = s(X17,'const.combin.K_2'(s(X17,X18),s(X16,X19)))),
  file('thm.exhSem.state_literal_|49||49|','thm.combin.K_THM')).
fof(f149,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) ) | $spl64),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f148,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) ) | ($spl50 | $spl52)),
  inference(backward_demodulation,[],[f141,f142])).
fof(f134,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1)))))) ) | $spl36),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1)))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f95,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1)))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.exhSem.state'(X0),X1))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X2),s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X0),X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : ! [X20,X21] : s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X21),s('type.exhSem.state'(X6),X20))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),happ(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),X21),s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X6),X20)))))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.exhSem_97_prove_ltb')).
fof(f8730,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.option.option'('type.exhSem.v')),X3) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X4),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X3))),s('type.exhSem.state'(X4),X5)))))) ) | $spl474),
  inference(cnf_transformation,[],[f8730_D])).
fof(f8730_D,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.option.option'('type.exhSem.v')),X3) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X4),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X3))),s('type.exhSem.state'(X4),X5)))))) ) <=> ~$spl474),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl474])])).
fof(f8654,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'('type.option.option'('type.exhSem.v')),X3) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(X4),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X3))),s('type.exhSem.state'(X4),X5)))))) ) | ($spl36 | $spl64)),
  inference(superposition,[],[f134,f149])).
fof(f110,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl1),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f112,plain,(
  s('type.num.num',sK2) != s('type.num.num',sK6) | $spl3),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s('type.num.num',sK2) != s('type.num.num',sK6) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f114,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) | $spl5),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f116,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK8) | $spl7),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK8) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f118,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) != s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) | $spl9),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) != s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f81,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) != s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) | s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK8) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) | s('type.num.num',sK2) != s('type.num.num',sK6) | s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  (s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | (s('type.num.num',sK2) = s('type.num.num',sK6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) & s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK8) & s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) = s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))) & (s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | s('type.num.num',sK2) != s('type.num.num',sK6) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) | s('type.ffi.ffi_state'(sK1),sK4) != s('type.ffi.ffi_state'(sK1),sK8) | s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) != s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9])],[f72])).
fof(f72,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) | (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X8) & s('type.list.list'('type.option.option'('type.exhSem.v')),X5) = s('type.list.list'('type.option.option'('type.exhSem.v')),X9))) & (s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) | s('type.num.num',X2) != s('type.num.num',X6) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) | s('type.ffi.ffi_state'(X1),X4) != s('type.ffi.ffi_state'(X1),X8) | s('type.list.list'('type.option.option'('type.exhSem.v')),X5) != s('type.list.list'('type.option.option'('type.exhSem.v')),X9)))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : ((s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) | (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X8) & s('type.list.list'('type.option.option'('type.exhSem.v')),X5) = s('type.list.list'('type.option.option'('type.exhSem.v')),X9))) & (s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) | (s('type.num.num',X2) != s('type.num.num',X6) | s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) != s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) | s('type.ffi.ffi_state'(X1),X4) != s('type.ffi.ffi_state'(X1),X8) | s('type.list.list'('type.option.option'('type.exhSem.v')),X5) != s('type.list.list'('type.option.option'('type.exhSem.v')),X9))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) <~> (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X8) & s('type.list.list'('type.option.option'('type.exhSem.v')),X5) = s('type.list.list'('type.option.option'('type.exhSem.v')),X9)))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6,X7,X8,X9] : (s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X8) & s('type.list.list'('type.option.option'('type.exhSem.v')),X5) = s('type.list.list'('type.option.option'('type.exhSem.v')),X9)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6,X7,X8,X9] : (s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X2))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X4))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X5))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X6))),s('type.exhSem.state'(X1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7))),s('type.exhSem.state'(X1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X0),'type.ffi.ffi_state'(X1)),'const.combin.K_1'(s('type.ffi.ffi_state'(X1),X8))),s('type.exhSem.state'(X0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X9))),s('type.exhSem.state'(X0),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X2) = s('type.num.num',X6) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X7) & s('type.ffi.ffi_state'(X1),X4) = s('type.ffi.ffi_state'(X1),X8) & s('type.list.list'('type.option.option'('type.exhSem.v')),X5) = s('type.list.list'('type.option.option'('type.exhSem.v')),X9)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15] : (s('type.exhSem.state'(X7),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.exhSem.state'(X7),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9))),s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X10))),s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X11))),s('type.exhSem.state'(X6),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X7),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.exhSem.state'(X7),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13))),s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X14))),s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X15))),s('type.exhSem.state'(X6),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X8) = s('type.num.num',X12) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13) & s('type.ffi.ffi_state'(X7),X10) = s('type.ffi.ffi_state'(X7),X14) & s('type.list.list'('type.option.option'('type.exhSem.v')),X11) = s('type.list.list'('type.option.option'('type.exhSem.v')),X15)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12,X13,X14,X15] : (s('type.exhSem.state'(X7),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X8))),s('type.exhSem.state'(X7),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9))),s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X10))),s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X11))),s('type.exhSem.state'(X6),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(X7),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',X12))),s('type.exhSem.state'(X7),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13))),s('type.exhSem.state'(X7),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(X6),'type.ffi.ffi_state'(X7)),'const.combin.K_1'(s('type.ffi.ffi_state'(X7),X14))),s('type.exhSem.state'(X6),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),X15))),s('type.exhSem.state'(X6),'const.bool.ARB_0'))))))))) <=> (s('type.num.num',X8) = s('type.num.num',X12) & s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X9) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),X13) & s('type.ffi.ffi_state'(X7),X10) = s('type.ffi.ffi_state'(X7),X14) & s('type.list.list'('type.option.option'('type.exhSem.v')),X11) = s('type.list.list'('type.option.option'('type.exhSem.v')),X15)))),
  file('thm.exhSem.state_literal_|49||49|','thm.exhSem.state_literal_|49||49|')).
fof(f8733,plain,(
  $false | ($spl9 | $spl444 | $spl474)),
  inference(subsumption_resolution,[],[f8732,f118])).
fof(f8732,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) = s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) | ($spl444 | $spl474)),
  inference(forward_demodulation,[],[f8731,f8730])).
fof(f8731,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl444 | $spl474)),
  inference(backward_demodulation,[],[f8730,f8361])).
fof(f159,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl66),
  inference(cnf_transformation,[],[f159_D])).
fof(f159_D,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f157,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f156,f111])).
fof(f156,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f155,f113])).
fof(f155,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl6)),
  inference(forward_demodulation,[],[f109,f115])).
fof(f8361,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | $spl444),
  inference(cnf_transformation,[],[f8361_D])).
fof(f8361_D,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f8359,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl22 | $spl30 | $spl58 | $spl66)),
  inference(forward_demodulation,[],[f8358,f145])).
fof(f8358,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl22 | $spl30 | $spl58 | $spl66)),
  inference(forward_demodulation,[],[f8357,f145])).
fof(f8357,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl22 | $spl30 | $spl66)),
  inference(forward_demodulation,[],[f8356,f131])).
fof(f8356,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl22 | $spl30 | $spl66)),
  inference(forward_demodulation,[],[f8355,f131])).
fof(f8355,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl22 | $spl66)),
  inference(forward_demodulation,[],[f8294,f127])).
fof(f8294,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl22 | $spl66)),
  inference(superposition,[],[f127,f159])).
fof(f109,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | $spl0),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f117,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) = s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) | $spl8),
  inference(cnf_transformation,[],[f117_D])).
fof(f117_D,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) = s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f80,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) = s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) | s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f115,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK8) | $spl6),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK8) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f79,plain,(
  s('type.ffi.ffi_state'(sK1),sK4) = s('type.ffi.ffi_state'(sK1),sK8) | s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f113,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) | $spl4),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f78,plain,(
  s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3) = s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7) | s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f111,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) | $spl2),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f77,plain,(
  s('type.num.num',sK2) = s('type.num.num',sK6) | s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0')))))))))),
  inference(cnf_transformation,[],[f73])).
fof(f154,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8)),
  inference(trivial_inequality_removal,[],[f153])).
fof(f153,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl2 | $spl4 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f152,f111])).
fof(f152,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl4 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f151,f113])).
fof(f151,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl6 | $spl8)),
  inference(forward_demodulation,[],[f150,f115])).
fof(f150,plain,(
  s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) != s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK6))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl1 | $spl8)),
  inference(forward_demodulation,[],[f110,f117])).
fof(f13620,plain,(
  $false | ($spl0 | $spl9 | $spl22 | $spl30 | $spl58 | $spl474)),
  inference(subsumption_resolution,[],[f13619,f118])).
fof(f13619,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK5) = s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) | ($spl0 | $spl22 | $spl30 | $spl58 | $spl474)),
  inference(forward_demodulation,[],[f13618,f8730])).
fof(f13618,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),sK9) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl22 | $spl30 | $spl58 | $spl474)),
  inference(forward_demodulation,[],[f13617,f8730])).
fof(f13617,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) | ($spl0 | $spl22 | $spl30 | $spl58)),
  inference(forward_demodulation,[],[f13616,f145])).
fof(f13616,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl22 | $spl30 | $spl58)),
  inference(forward_demodulation,[],[f13615,f145])).
fof(f13615,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) | ($spl0 | $spl22 | $spl30)),
  inference(forward_demodulation,[],[f13614,f131])).
fof(f13614,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl22 | $spl30)),
  inference(forward_demodulation,[],[f13613,f131])).
fof(f13613,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) | ($spl0 | $spl22)),
  inference(forward_demodulation,[],[f13537,f127])).
fof(f13537,plain,(
  s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK7))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK8))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK9))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))) = s('type.list.list'('type.option.option'('type.exhSem.v')),'const.exhSem.state_globals_1'(s('type.exhSem.state'(sK1),'const.exhSem.state_clock_fupd_2'(s(fun('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',sK2))),s('type.exhSem.state'(sK1),'const.exhSem.state_refs_fupd_2'(s(fun('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),'type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.semanticPrimitives.store_v'('type.exhSem.v')),sK3))),s('type.exhSem.state'(sK1),'const.exhSem.state_ffi_fupd_2'(s(fun('type.ffi.ffi_state'(sK0),'type.ffi.ffi_state'(sK1)),'const.combin.K_1'(s('type.ffi.ffi_state'(sK1),sK4))),s('type.exhSem.state'(sK0),'const.exhSem.state_globals_fupd_2'(s(fun('type.list.list'('type.option.option'('type.exhSem.v')),'type.list.list'('type.option.option'('type.exhSem.v'))),'const.combin.K_1'(s('type.list.list'('type.option.option'('type.exhSem.v')),sK5))),s('type.exhSem.state'(sK0),'const.bool.ARB_0'))))))))))) | ($spl0 | $spl22)),
  inference(superposition,[],[f127,f109])).
% SZS output end Proof for thm.exhSem
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 101
% Passive clauses: 323
% Generated clauses: 13483
% Final active clauses: 80
% Final passive clauses: 212
% Input formulas: 24
% Initial clauses: 32
% 
% Duplicate literals: 670
% Trivial inequalities: 168
% Fw subsumption resolutions: 869
% Fw demodulations: 1021
% Bw demodulations: 10
% Condensations: 1942
% 
% Simple tautologies: 156
% Equational tautologies: 26
% Forward subsumptions: 7763
% Fw demodulations to eq. taut.: 1
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 4
% Forward superposition: 4470
% Backward superposition: 3654
% Self superposition: 193
% Equality factoring: 64
% Equality resolution: 20
% 
% Split clauses: 37
% Split components: 77
% SAT solver clauses: 566
% SAT solver unit clauses: 49
% SAT solver binary clauses: 49
% SAT solver learnt clauses: 5
% SAT solver learnt literals: 8
% 
% Sat splits: 37
% Sat splitting refutations: 22
% 
% TWLsolver clauses: 559
% TWLsolver calls for satisfiability: 226
% 
% Memory used [KB]: 11385
% Time elapsed: 0.563 s
% ------------------------------
% ------------------------------
% Success in time 1.2 s
