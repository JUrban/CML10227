include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
fof('thm.wordSem.word_loc_TY_DEF', axiom, ![V_27A_27]: ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.fcp.cart'('bool',V_27A_27),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x1x0_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('type.num.num','const.bool.ARB_0'))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.ind_type.BOTTOM_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x00x11x00_3'(s('fun'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('type.fcp.cart'('bool',V_27A_27),'const.bool.ARB_0'))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.ind_type.BOTTOM_0'))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'))))))),s('fun'('type.wordSem.word_loc'(V_27A_27),'type.ind_type.recspace'('type.pair.prod'('type.fcp.cart'('bool',V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),V_27rep_27))))).
fof('ARITY_0_3_const.wordSem.word_loc_CASE', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s(V_27B_27,'happ'(s('fun'('fun'('type.num.num','fun'('type.num.num',V_27B_27)),V_27B_27),'happ'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),'fun'('fun'('type.num.num','fun'('type.num.num',V_27B_27)),V_27B_27)),'happ'(s('fun'('type.wordSem.word_loc'(V_27A_27),'fun'('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),'fun'('fun'('type.num.num','fun'('type.num.num',V_27B_27)),V_27B_27))),'const.wordSem.word_loc_CASE_0'),s('type.wordSem.word_loc'(V_27A_27),VV0))),s('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),VV1))),s('fun'('type.num.num','fun'('type.num.num',V_27B_27)),VV2))) = s(V_27B_27,'const.wordSem.word_loc_CASE_3'(s('type.wordSem.word_loc'(V_27A_27),VV0),s('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),VV1),s('fun'('type.num.num','fun'('type.num.num',V_27B_27)),VV2)))).
fof('thm.wordSem.word_loc_case_def|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27]: s(V_27B_27,'const.wordSem.word_loc_CASE_3'(s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Word_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),V_27f_27),s('fun'('type.num.num','fun'('type.num.num',V_27B_27)),V_27f_7c49_7c_27))) = s(V_27B_27,'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),V_27f_27),s('type.fcp.cart'('bool',V_27A_27),V_27a_27)))).
fof('thm.wordSem.word_loc_case_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27f_27, V_27f_7c49_7c_27]: s(V_27B_27,'const.wordSem.word_loc_CASE_3'(s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Loc_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))),s('fun'('type.fcp.cart'('bool',V_27A_27),V_27B_27),V_27f_27),s('fun'('type.num.num','fun'('type.num.num',V_27B_27)),V_27f_7c49_7c_27))) = s(V_27B_27,'happ'(s('fun'('type.num.num',V_27B_27),'happ'(s('fun'('type.num.num','fun'('type.num.num',V_27B_27)),V_27f_7c49_7c_27),s('type.num.num',V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27)))).
fof('thm.wordSem.word_loc_size_def|split|0', axiom, ![V_27A_27]: ![V_27f_27, V_27a_27]: s('type.num.num','const.wordSem.word_loc_size_2'(s('fun'(V_27A_27,'type.num.num'),V_27f_27),s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Word_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.wordSem.word_loc_size_def|split|1', axiom, ![V_27A_27]: ![V_27f_27, V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.wordSem.word_loc_size_2'(s('fun'(V_27A_27,'type.num.num'),V_27f_27),s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Loc_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27)))))).
fof('ARITY_0_2_const.wordSem.Loc', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.wordSem.word_loc'(V_27A_27),'happ'(s('fun'('type.num.num','type.wordSem.word_loc'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.wordSem.word_loc'(V_27A_27))),'const.wordSem.Loc_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Loc_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('ARITY_0_1_const.wordSem.Word', axiom, ![V_27A_27]: ![VV0]: s('type.wordSem.word_loc'(V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.wordSem.word_loc'(V_27A_27)),'const.wordSem.Word_0'),s('type.fcp.cart'('bool',V_27A_27),VV0))) = s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Word_1'(s('type.fcp.cart'('bool',V_27A_27),VV0)))).
fof('thm.wordSem.datatype_word_loc', axiom, ![V_27A_27]: ![V_27word__loc_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.num.num','fun'('type.num.num','type.wordSem.word_loc'(V_27A_27))),'bool'),'happ'(s('fun'('fun'('type.fcp.cart'('bool',V_27A_27),'type.wordSem.word_loc'(V_27A_27)),'fun'('fun'('type.num.num','fun'('type.num.num','type.wordSem.word_loc'(V_27A_27))),'bool')),V_27word__loc_27),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.wordSem.word_loc'(V_27A_27)),'const.wordSem.Word_0'))),s('fun'('type.num.num','fun'('type.num.num','type.wordSem.word_loc'(V_27A_27))),'const.wordSem.Loc_0'))))))).
fof('thm.wordSem.word_loc_|49||49||split|0', conjecture, ![V_27A_27]: ![V_27a_27, V_27a_7c39_7c_27]: (s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Word_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.wordSem.word_loc'(V_27A_27),'const.wordSem.Word_1'(s('type.fcp.cart'('bool',V_27A_27),V_27a_7c39_7c_27))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27a_7c39_7c_27))).
