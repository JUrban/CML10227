include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
fof('thm.ml_optimise.ml_optimise_|48|_prove_ltb', axiom, ![V_27xs_27, V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.exp',V_27a_27),s('fun'('type.ast.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.exp'),V_27xs_27)))))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.ast.exp_size_1'(s('type.ast.exp',V_27a_27))),s('type.num.num','const.ast.exp6_size_1'(s('type.list.list'('type.ast.exp'),V_27xs_27)))))))).
fof('thm.ml_optimise.ml_optimise_|49|_prove_ltb', axiom, ![V_27ys_27, V_27p_27, V_27x_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27x_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27)))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.ast.exp_size_1'(s('type.ast.exp',V_27x_27))),s('type.num.num','const.ast.exp3_size_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27)))))))).
fof('thm.ml_optimise.ml_optimise_3_prove_ltb', axiom, ![V_27a_27]: ((?[V_27f_27, V_27ex_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27ex_27))))) | (?[V_27f_27, V_27x_27, V_27ys_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))) | (?[V_27f_27, V_27v_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_27))))) | (?[V_27f_27, V_27tag_27, V_27xs_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27tag_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))) | (?[V_27f_27, V_27name_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27name_27))))) | (?[V_27f_27, V_27name_27, V_27x_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27x_27))))) | (?[V_27f_27, V_27op_27, V_27xs_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))) | (?[V_27f_27, V_27l_27, V_27x_7c49_7c_27, V_27x2_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27l_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))) | (?[V_27f_27, V_27x_7c49_7c_27, V_27x2_27, V_27x3_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27),s('type.ast.exp',V_27x3_27))))) | (?[V_27f_27, V_27x_27, V_27ys_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))) | (?[V_27f_27, V_27name_27, V_27x_7c49_7c_27, V_27x2_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27name_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))) | ?[V_27f_27, V_27z_7c49_7c_27, V_27z2_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27z_7c49_7c_27),s('type.ast.exp',V_27z2_27)))))))))))))))) => (?[V_27f_27, V_27v_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_27))))) | (?[V_27f_27, V_27ex_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27ex_27))))) | (?[V_27f_27, V_27name_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27name_27))))) | (?[V_27f_27, V_27tag_27, V_27xs_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27tag_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))) | (?[V_27f_27, V_27name_27, V_27x_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27x_27))))) | (?[V_27f_27, V_27op_27, V_27xs_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))) | (?[V_27f_27, V_27l_27, V_27x_7c49_7c_27, V_27x2_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27l_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))) | (?[V_27f_27, V_27x_7c49_7c_27, V_27x2_27, V_27x3_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27),s('type.ast.exp',V_27x3_27))))) | (?[V_27f_27, V_27x_27, V_27ys_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))) | (?[V_27f_27, V_27name_27, V_27x_7c49_7c_27, V_27x2_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27name_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))) | (?[V_27f_27, V_27x_27, V_27ys_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))) | ?[V_27f_27, V_27z_7c49_7c_27, V_27z2_27]: s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),V_27a_27) = s('type.pair.prod'('fun'('type.ast.exp','type.ast.exp'),'type.ast.exp'),'const.pair.,_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27z_7c49_7c_27),s('type.ast.exp',V_27z2_27)))))))))))))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_ind', axiom, ![V_27P_27]: ((![V_27f_27, V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_27)))))) & (![V_27f_27, V_27ex_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27ex_27)))))) & (![V_27f_27, V_27name_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27name_27)))))) & (![V_27f_27, V_27tag_27, V_27xs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.exp',V_27a_27),s('fun'('type.ast.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.exp'),V_27xs_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27tag_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))))) & (![V_27f_27, V_27name_27, V_27x_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27x_27)))))) & (![V_27f_27, V_27op_27, V_27xs_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.ast.exp',V_27a_27),s('fun'('type.ast.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.ast.exp'),V_27xs_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))))) & (![V_27f_27, V_27l_27, V_27x_7c49_7c_27, V_27x2_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x2_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27l_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))))) & (![V_27f_27, V_27x_7c49_7c_27, V_27x2_27, V_27x3_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x_7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x2_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x3_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27),s('type.ast.exp',V_27x3_27))))))) & (![V_27f_27, V_27x_27, V_27ys_27]: ((![V_27p_27, V_27x_7c39_7c_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),'const.pair.,_2'(s('type.ast.pat',V_27p_27),s('type.ast.exp',V_27x_7c39_7c_27))),s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27)))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x_7c39_7c_27))))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))))) & (![V_27f_27, V_27name_27, V_27x_7c49_7c_27, V_27x2_27]: ((p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x2_27))))) => p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27name_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))))) & (![V_27f_27, V_27x_27, V_27ys_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27)))))) & ![V_27f_27, V_27z_7c49_7c_27, V_27z2_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27z_7c49_7c_27),s('type.ast.exp',V_27z2_27))))))))))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','bool')),V_27P_27),s('fun'('type.ast.exp','type.ast.exp'),V_27v_27))),s('type.ast.exp',V_27v_7c49_7c_27)))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|0', axiom, ![V_27v_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v_27)))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|1', axiom, ![V_27f_27, V_27ex_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27ex_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27ex_27)))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|2', axiom, ![V_27name_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27name_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27name_27)))))).
fof('ARITY_1_2_const.ml_optimise.BOTTOM_UP_OPT', axiom, ![VV0, VV1]: s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),VV0))),s('type.ast.exp',VV1))) = s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),VV0),s('type.ast.exp',VV1)))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|3', axiom, ![V_27xs_27, V_27tag_27, V_27f_27]: s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27tag_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27tag_27),s('type.list.list'('type.ast.exp'),'const.list.MAP_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.list.list'('type.ast.exp'),V_27xs_27)))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|4', axiom, ![V_27x_27, V_27name_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27x_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27name_27),s('type.ast.exp',V_27x_27)))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|5', axiom, ![V_27xs_27, V_27op_27, V_27f_27]: s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),V_27xs_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27op_27),s('type.list.list'('type.ast.exp'),'const.list.MAP_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.list.list'('type.ast.exp'),V_27xs_27)))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|6', axiom, ![V_27x2_27, V_27x_7c49_7c_27, V_27l_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27l_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27l_27),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x_7c49_7c_27))),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x2_27)))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|7', axiom, ![V_27x3_27, V_27x2_27, V_27x_7c49_7c_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27),s('type.ast.exp',V_27x3_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x_7c49_7c_27))),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x2_27))),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x3_27)))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|8', axiom, ![V_27ys_27, V_27x_27, V_27f_27]: s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x_27))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.pair.prod'('type.ast.pat','type.ast.exp')),'const.pair.UNCURRY_1'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'_dst_x00x10x01_3'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.pair.,_0'),s('fun'('type.ast.pat','type.ast.pat'),'_i_0_0'),s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))))))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27)))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|9', axiom, ![V_27x2_27, V_27x_7c49_7c_27, V_27name_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27name_27),s('type.ast.exp',V_27x_7c49_7c_27),s('type.ast.exp',V_27x2_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27name_27),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x_7c49_7c_27))),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27x2_27)))))))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|10', axiom, ![V_27ys_27, V_27x_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27))))) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27ys_27)))).
fof('thm.ml_optimise.BOTTOM_UP_OPT_def|split|11', axiom, ![V_27z2_27, V_27z_7c49_7c_27, V_27f_27]: s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27z_7c49_7c_27),s('type.ast.exp',V_27z2_27))))) = s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27z_7c49_7c_27),s('type.ast.exp',V_27z2_27)))))).
fof('ARITY_0_1_const.ml_optimise.isRval', axiom, ![V_27A_27,V_27B_27]: ![VV0]: s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'const.ml_optimise.isRval_0'),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),VV0))) = s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),VV0)))).
fof('thm.ml_optimise.isRval_primitive_def', axiom, ![V_27A_27,V_27B_27]: s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'const.ml_optimise.isRval_0') = s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'const.relation.WFREC_2'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),'const.min.@_1'(s('fun'('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool')),'_dst_x0_1'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'fun'('fun'(V_27A_27,'bool'),'fun'('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'bool'))),'const.semanticPrimitives.result_CASE_0'),s('fun'(V_27A_27,'bool'),'_dst_x0_1'(s('bool','const.combin.I_1'(s('bool','T_0'))))),s('fun'('type.semanticPrimitives.error_result'(V_27B_27),'bool'),'_dst_x0_1'(s('bool','const.combin.I_1'(s('bool','F_0')))))))))))).
fof('thm.ml_optimise.ml_optimise_8_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: ((?[V_27v_7c48_7c_27]: s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c48_7c_27))) | ?[V_27v2_27]: s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),V_27v2_27)))) => (?[V_27v_7c48_7c_27]: s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c48_7c_27))) | ?[V_27v2_27]: s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27a_27) = s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),V_27v2_27)))))).
fof('thm.ml_optimise.isRval_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),V_27P_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c48_7c_27)))))) & ![V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),V_27P_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),V_27v2_27))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'bool'),V_27P_27),s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),V_27v_27)))))).
fof('thm.ml_optimise.isRval_def|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27v_7c48_7c_27]: s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rval_1'(s(V_27A_27,V_27v_7c48_7c_27))))) = s('bool','T_0')).
fof('thm.ml_optimise.isRval_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27v2_27]: s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'(V_27A_27,V_27B_27),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'(V_27B_27),V_27v2_27))))) = s('bool','F_0')).
fof('thm.ml_optimise.ml_optimise_|49||49|_prove_ltb', axiom, ![V_27x2_27, V_27v_27, V_27op_27, V_27e2_27]: (s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.semanticPrimitives.do_log_3'(s('type.ast.lop',V_27op_27),s('type.semanticPrimitives.v',V_27v_27),s('type.ast.exp',V_27e2_27))) = s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.option.SOME_1'(s('type.semanticPrimitives.exp_or_val','const.semanticPrimitives.Exp_1'(s('type.ast.exp',V_27x2_27))))) => s('type.ast.exp',V_27x2_27) = s('type.ast.exp',V_27e2_27))).
fof('thm.ml_optimise.ml_optimise_|49|2_prove_ltb', axiom, ![V_27v_27, V_27op_27, V_27e2_27]: (s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.semanticPrimitives.do_log_3'(s('type.ast.lop',V_27op_27),s('type.semanticPrimitives.v',V_27v_27),s('type.ast.exp',V_27e2_27))) = s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.option.SOME_1'(s('type.semanticPrimitives.exp_or_val','const.semanticPrimitives.Exp_1'(s('type.ast.exp',V_27e2_27))))) => ![V_27e3_27]: s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.semanticPrimitives.do_log_3'(s('type.ast.lop',V_27op_27),s('type.semanticPrimitives.v',V_27v_27),s('type.ast.exp',V_27e3_27))) = s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.option.SOME_1'(s('type.semanticPrimitives.exp_or_val','const.semanticPrimitives.Exp_1'(s('type.ast.exp',V_27e3_27))))))).
fof('thm.ml_optimise.ml_optimise_|49|3_prove_ltb', axiom, ![V_27x_27, V_27v_27, V_27op_27, V_27e2_27]: (s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.semanticPrimitives.do_log_3'(s('type.ast.lop',V_27op_27),s('type.semanticPrimitives.v',V_27v_27),s('type.ast.exp',V_27e2_27))) = s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.option.SOME_1'(s('type.semanticPrimitives.exp_or_val','const.semanticPrimitives.Val_1'(s('type.semanticPrimitives.v',V_27x_27))))) => ![V_27e3_27]: s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.semanticPrimitives.do_log_3'(s('type.ast.lop',V_27op_27),s('type.semanticPrimitives.v',V_27v_27),s('type.ast.exp',V_27e3_27))) = s('type.option.option'('type.semanticPrimitives.exp_or_val'),'const.option.SOME_1'(s('type.semanticPrimitives.exp_or_val','const.semanticPrimitives.Val_1'(s('type.semanticPrimitives.v',V_27x_27))))))).
fof('thm.ml_optimise.ml_optimise_|49|4_prove_ltb', axiom, ![V_27A_27,V_27FFI_27]: ![V_27f_27]: (![V_27ck_27, V_27env_27, V_27s_27, V_27exp_27, V_27res_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27res_27)))) => (p(s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27res_27)))))) => p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27exp_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27res_27)))))) => (![V_27ck_27, V_27x_7c49_7c_27, V_27s_27, V_27x2_27, V_27x3_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27x_7c49_7c_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp',V_27x2_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27x3_27)))) => ((p(s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27x3_27)))))) & s('bool',V_27ck_27) = s('bool','F_0')) => p(s('bool','const.bigStep.evaluate_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27x_7c49_7c_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.ast.exp',V_27x2_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27x3_27)))))) & (![V_27ck_27, V_27x_7c49_7c_27, V_27s_27, V_27x2_27, V_27x3_27]: (p(s('bool','const.bigStep.evaluate_list_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27x_7c49_7c_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.list.list'('type.ast.exp'),V_27x2_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),V_27x3_27)))) => ((p(s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),V_27x3_27)))))) & s('bool',V_27ck_27) = s('bool','F_0')) => p(s('bool','const.bigStep.evaluate_list_5'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27x_7c49_7c_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.list.list'('type.ast.exp'),'const.list.MAP_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))),s('type.list.list'('type.ast.exp'),V_27x2_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.list.list'('type.semanticPrimitives.v'),'type.semanticPrimitives.v')),V_27x3_27)))))) & ![V_27ck_27, V_27x_7c49_7c_27, V_27s_27, V_27x2_27, V_27x3_27, V_27x4_27, V_27x5_27]: (p(s('bool','const.bigStep.evaluate_match_7'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27x_7c49_7c_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.semanticPrimitives.v',V_27x2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27x3_27),s('type.semanticPrimitives.v',V_27x4_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27x5_27)))) => ((p(s('bool','const.ml_optimise.isRval_1'(s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27x5_27)))))) & s('bool',V_27ck_27) = s('bool','F_0')) => p(s('bool','const.bigStep.evaluate_match_7'(s('bool',V_27ck_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27x_7c49_7c_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.semanticPrimitives.v',V_27x2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.ast.pat','type.ast.exp'),'type.pair.prod'('type.ast.pat','type.ast.exp')),'const.pair.UNCURRY_1'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'_dst_x00x10x01_3'(s('fun'('type.ast.pat','fun'('type.ast.exp','type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.pair.,_0'),s('fun'('type.ast.pat','type.ast.pat'),'_i_0_0'),s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.BOTTOM_UP_OPT_1'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27))))))),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27x3_27))),s('type.semanticPrimitives.v',V_27x4_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),V_27x5_27)))))))))).
fof('thm.ml_optimise.ml_optimise_|49|5_prove_ltb', axiom, ![V_27FFI_27]: ![V_27f_27]: (![V_27env_27, V_27s_27, V_27exp_27, V_27t_27, V_27res_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))) => p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27exp_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27))))))))) => ![V_27env_27, V_27s_27, V_27exp_27, V_27t_27, V_27res_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))) => p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27FFI_27),V_27s_27),s('type.ast.exp','const.ml_optimise.BOTTOM_UP_OPT_2'(s('fun'('type.ast.exp','type.ast.exp'),V_27f_27),s('type.ast.exp',V_27exp_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27FFI_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27FFI_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27))))))))))).
fof('_dst_x0x0x1x1x1x1x1x1x1x1x1x1x1x1_ax', axiom, ![VA,VA2,VA3,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__12, V__z]: s(VA,'happ'(s('fun'(VA1,VA),'_dst_x0x0x1x1x1x1x1x1x1x1x1x1x1x1_14'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))))))))),V__x),s(VA2,V__0),s('fun'(VA1,VA3),V__1),s('fun'(VA1,VA4),V__2),s('fun'(VA1,VA5),V__3),s('fun'(VA1,VA6),V__4),s('fun'(VA1,VA7),V__5),s('fun'(VA1,VA8),V__6),s('fun'(VA1,VA9),V__7),s('fun'(VA1,VA10),V__8),s('fun'(VA1,VA11),V__9),s('fun'(VA1,VA12),V__10),s('fun'(VA1,VA13),V__11),s('fun'(VA1,VA14),V__12))),s(VA1,V__z))) = s(VA,'happ'(s('fun'(VA14,VA),'happ'(s('fun'(VA13,'fun'(VA14,VA)),'happ'(s('fun'(VA12,'fun'(VA13,'fun'(VA14,VA))),'happ'(s('fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA)))),'happ'(s('fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))),'happ'(s('fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA)))))),'happ'(s('fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))),'happ'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA)))))))),'happ'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))))),'happ'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA)))))))))),'happ'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))))))),'happ'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA)))))))))))),'happ'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,VA))))))))))))),V__x),s(VA2,V__0))),s(VA3,'happ'(s('fun'(VA1,VA3),V__1),s(VA1,V__z))))),s(VA4,'happ'(s('fun'(VA1,VA4),V__2),s(VA1,V__z))))),s(VA5,'happ'(s('fun'(VA1,VA5),V__3),s(VA1,V__z))))),s(VA6,'happ'(s('fun'(VA1,VA6),V__4),s(VA1,V__z))))),s(VA7,'happ'(s('fun'(VA1,VA7),V__5),s(VA1,V__z))))),s(VA8,'happ'(s('fun'(VA1,VA8),V__6),s(VA1,V__z))))),s(VA9,'happ'(s('fun'(VA1,VA9),V__7),s(VA1,V__z))))),s(VA10,'happ'(s('fun'(VA1,VA10),V__8),s(VA1,V__z))))),s(VA11,'happ'(s('fun'(VA1,VA11),V__9),s(VA1,V__z))))),s(VA12,'happ'(s('fun'(VA1,VA12),V__10),s(VA1,V__z))))),s(VA13,'happ'(s('fun'(VA1,VA13),V__11),s(VA1,V__z))))),s(VA14,'happ'(s('fun'(VA1,VA14),V__12),s(VA1,V__z)))))).
fof('_dst_x00x10x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01_ax', axiom, ![VA,VA3,VA1,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA15,VA16,VA17,VA18,VA19,VA20,VA21,VA22,VA23,VA24,VA25,VA26,VA27,VA28,VA29,VA30,VA31,VA2,VA32]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__12, V__13, V__14, V__15, V__16, V__17, V__18, V__19, V__20, V__21, V__22, V__23, V__24, V__25, V__26, V__27, V__28, V__29, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01_31'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,'fun'(VA32,VA)))))))))))))))))))))))))))))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),V__2),s('fun'(VA2,VA6),V__3),s('fun'(VA2,VA7),V__4),s('fun'(VA2,VA8),V__5),s('fun'(VA2,VA9),V__6),s('fun'(VA2,VA10),V__7),s('fun'(VA2,VA11),V__8),s('fun'(VA2,VA12),V__9),s('fun'(VA2,VA13),V__10),s('fun'(VA2,VA14),V__11),s('fun'(VA2,VA15),V__12),s('fun'(VA2,VA16),V__13),s('fun'(VA2,VA17),V__14),s('fun'(VA2,VA18),V__15),s('fun'(VA2,VA19),V__16),s('fun'(VA2,VA20),V__17),s('fun'(VA2,VA21),V__18),s('fun'(VA2,VA22),V__19),s('fun'(VA2,VA23),V__20),s('fun'(VA2,VA24),V__21),s('fun'(VA2,VA25),V__22),s('fun'(VA2,VA26),V__23),s('fun'(VA2,VA27),V__24),s('fun'(VA2,VA28),V__25),s('fun'(VA2,VA29),V__26),s('fun'(VA2,VA30),V__27),s('fun'(VA2,VA31),V__28),s('fun'(VA2,VA32),V__29))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1x1_31'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,'fun'(VA32,VA)))))))))))))))))))))))))))))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),V__2),s('fun'(VA2,VA6),V__3),s('fun'(VA2,VA7),V__4),s('fun'(VA2,VA8),V__5),s('fun'(VA2,VA9),V__6),s('fun'(VA2,VA10),V__7),s('fun'(VA2,VA11),V__8),s('fun'(VA2,VA12),V__9),s('fun'(VA2,VA13),V__10),s('fun'(VA2,VA14),V__11),s('fun'(VA2,VA15),V__12),s('fun'(VA2,VA16),V__13),s('fun'(VA2,VA17),V__14),s('fun'(VA2,VA18),V__15),s('fun'(VA2,VA19),V__16),s('fun'(VA2,VA20),V__17),s('fun'(VA2,VA21),V__18),s('fun'(VA2,VA22),V__19),s('fun'(VA2,VA23),V__20),s('fun'(VA2,VA24),V__21),s('fun'(VA2,VA25),V__22),s('fun'(VA2,VA26),V__23),s('fun'(VA2,VA27),V__24),s('fun'(VA2,VA28),V__25),s('fun'(VA2,VA29),V__26),s('fun'(VA2,VA30),V__27),s('fun'(VA2,VA31),V__28),s('fun'(VA2,VA32),V__29)))).
fof('_dst_x00x10x01x01x01x01x01x01x01x01x01x01x01x01_ax', axiom, ![VA,VA3,VA1,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA2,VA15]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__12, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x01x01x01x01x01x01x01x01x01x01x01x01_14'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,VA))))))))))))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),V__2),s('fun'(VA2,VA6),V__3),s('fun'(VA2,VA7),V__4),s('fun'(VA2,VA8),V__5),s('fun'(VA2,VA9),V__6),s('fun'(VA2,VA10),V__7),s('fun'(VA2,VA11),V__8),s('fun'(VA2,VA12),V__9),s('fun'(VA2,VA13),V__10),s('fun'(VA2,VA14),V__11),s('fun'(VA2,VA15),V__12))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x1x1x1x1x1x1x1x1x1x1x1_14'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,VA))))))))))))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),V__2),s('fun'(VA2,VA6),V__3),s('fun'(VA2,VA7),V__4),s('fun'(VA2,VA8),V__5),s('fun'(VA2,VA9),V__6),s('fun'(VA2,VA10),V__7),s('fun'(VA2,VA11),V__8),s('fun'(VA2,VA12),V__9),s('fun'(VA2,VA13),V__10),s('fun'(VA2,VA14),V__11),s('fun'(VA2,VA15),V__12)))).
fof('thm.ml_optimise.abs2let_def', axiom, ![V_27x_27]: s('type.ast.exp','const.ml_optimise.abs2let_1'(s('type.ast.exp',V_27x_27))) = s('type.ast.exp','happ'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'),'happ'(s('fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp')),'happ'(s('fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))),'happ'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp')))),'happ'(s('fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))),'happ'(s('fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp')))))),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))))),'happ'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp')))))))),'happ'(s('fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))))))),'happ'(s('fun'('fun'('type.ast.lit','type.ast.exp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp')))))))))),'happ'(s('fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.ast.lit','type.ast.exp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))))))))),'happ'(s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.ast.lit','type.ast.exp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp')))))))))))),'happ'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.ast.lit','type.ast.exp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))))))))))),'const.ast.exp_CASE_0'),s('type.ast.exp',V_27x_27))),s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'))),s('fun'('type.ast.lit','type.ast.exp'),'const.ast.Lit_0'))),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'const.ast.Var_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'))),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'_dst_x00x10x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01x01_31'(s('fun'('type.ast.op','fun'('fun'('type.ast.opn','type.ast.exp'),'fun'('fun'('type.ast.opb','type.ast.exp'),'fun'('fun'('type.ast.word_size','fun'('type.ast.opw','type.ast.exp')),'fun'('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.ast.exp'))),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('fun'('type.ast.word_size','type.ast.exp'),'fun'('fun'('type.ast.word_size','type.ast.exp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('fun'('type.ast.opb','type.ast.exp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('fun'('type.num.num','type.ast.exp'),'type.ast.exp')))))))))))))))))))))))))))))),'const.ast.op_CASE_0'),s('fun'('type.ast.op','type.ast.op'),'_i_0_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.opn','type.ast.exp')),'_dst_x00x01x10_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.opn','type.ast.op'),'const.ast.Opn_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.opb','type.ast.exp')),'_dst_x00x01x10_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.opb','type.ast.op'),'const.ast.Opb_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.word_size','fun'('type.ast.opw','type.ast.exp'))),'_dst_x000x011x100_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.word_size','fun'('type.ast.opw','type.ast.op')),'const.ast.Opw_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.ast.exp')))),'_dst_x0000x0111x1000_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.ast.op'))),'const.ast.Shift_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Equality_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'type.ast.exp'))),'const.list.list_CASE_0'),s('type.ast.exp','happ'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))),s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'_dst_x00x10x01x01x01x01x01x01x01x01x01x01x01x01_14'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.ast.lit','type.ast.exp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))))))))))),'const.ast.exp_CASE_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','type.list.list'('type.ast.exp'))),'_dst_x00x01x10_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.ast.exp')))),'_dst_x000x011x100_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.lit','type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.lit','type.list.list'('type.ast.exp'))),'_dst_x00x01x10_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.lit','type.ast.exp'),'const.ast.Lit_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')))),'_dst_x000x011x100_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.ast.exp'))),'_dst_x00x01x10_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'const.ast.Var_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp'))),'_dst_x000x100x011x011_4'(s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'type.ast.exp'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.list.list'('type.ast.exp'))),'_dst_x00x11x00_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')))),'_dst_x0001x1110x1110_3'(s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'type.ast.exp'))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x101x010_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'))),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.ast.exp'))))),'_dst_x00000x11111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')))))),'_dst_x00000x11000x00111_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')))),'_dst_x000x100x011_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'))))))))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')))),'_dst_x000x011x100_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.ast.exp'))))),'_dst_x0000x0111x1000_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.ast.exp'))))),'_dst_x0000x0111x1000_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.list.list'('type.ast.exp')))),'_dst_x000x011x100_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.list.list'('type.ast.exp'))))),'_dst_x0000x0111x1000_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opapp_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.list.list'('type.ast.exp')))),'_dst_x000x011x100_3'(s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))))))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opassign_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opref_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Opderef_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Aw8alloc_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Aw8sub_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Aw8length_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Aw8update_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.word_size','type.ast.exp')),'_dst_x00x01x10_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.word_size','type.ast.op'),'const.ast.WordFromInt_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.word_size','type.ast.exp')),'_dst_x00x01x10_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.word_size','type.ast.op'),'const.ast.WordToInt_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Ord_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Chr_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.opb','type.ast.exp')),'_dst_x00x01x10_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.ast.opb','type.ast.op'),'const.ast.Chopb_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Explode_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Implode_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Strlen_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.VfromList_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Vsub_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Vlength_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Aalloc_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Asub_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Alength_0'))),s('fun'('type.list.list'('type.ast.exp'),'type.ast.exp'),'happ'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('type.ast.op','const.ast.Aupdate_0'))),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.num.num','type.ast.exp')),'_dst_x00x01x10_3'(s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'),s('fun'('type.num.num','type.ast.op'),'const.ast.FFI_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'))))))),s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'))),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'))),s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0')))).
fof('thm.ml_optimise.ml_optimise_|49|7_prove_ltb', axiom, ![V_27A_27]: ![V_27env_27, V_27s_27, V_27exp_27, V_27t_27, V_27res_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))) => p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.ast.exp','const.ml_optimise.abs2let_1'(s('type.ast.exp',V_27exp_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))))).
fof('ARITY_0_1_const.ml_optimise.let_id', axiom, ![VV0]: s('type.ast.exp','happ'(s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.let_id_0'),s('type.ast.exp',VV0))) = s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp',VV0)))).
fof('thm.ml_optimise.let_id_primitive_def', axiom, s('fun'('type.ast.exp','type.ast.exp'),'const.ml_optimise.let_id_0') = s('fun'('type.ast.exp','type.ast.exp'),'const.relation.WFREC_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('type.ast.exp','type.ast.exp')),'_dst_x0_1'(s('fun'('type.ast.exp','type.ast.exp'),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0x0_13'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','type.ast.exp'),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.ast.lit','type.ast.exp'),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'type.ast.exp'))))))))))))),'const.ast.exp_CASE_0'),s('fun'('type.ast.exp','type.ast.exp'),'_dst_x0x1_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.exp','type.ast.exp'),'const.ast.Raise_0'))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Handle_0'))),s('fun'('type.ast.lit','type.ast.exp'),'_dst_x0x1_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.lit','type.ast.exp'),'const.ast.Lit_0'))),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.Con_0'))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'_dst_x0x1_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'const.ast.Var_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Fun_0'))),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.ast.exp')),'const.ast.App_0'))),s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Log_0'))),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.If_0'))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.ast.exp')),'const.ast.Mat_0'))),s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'_dst_x000x100x011x011_4'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('fun'('type.list.list'('type.string.char'),'type.ast.exp'),'type.ast.exp'))),'const.option.option_CASE_0'),s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'type.ast.exp'))),'_dst_x000x111_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'type.ast.exp'))),'_dst_x000x011x100x111_4'(s('fun'('bool','fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.bool.COND_0'),s('fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'=_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.exp'),'_dst_x0x1_2'(s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.exp'),'const.ast.Var_0'),s('fun'('type.list.list'('type.string.char'),'type.ast.id'('type.list.list'('type.string.char'))),'const.ast.Short_0'))))),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.string.char'),'type.ast.exp'))),'_dst_x000x001x100x010_4'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.ast.exp'))),'const.ast.Let_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'),s('fun'('type.ast.exp','type.ast.exp'),'_i_0_0'))))))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'_dst_x00x11_2'(s('fun'('type.ast.exp','type.ast.exp'),'const.combin.I_0'),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.ast.exp')),'const.ast.Letrec_0')))))))))).
fof('thm.ml_optimise.ml_optimise_|49|9_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_7c49_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_7c49_7c_27))) | (?[V_27v2_27, V_27v3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v3_27))) | (?[V_27v4_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v4_27))) | (?[V_27v5_27, V_27v6_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v5_27),s('type.list.list'('type.ast.exp'),V_27v6_27))) | (?[V_27v7_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))) | (?[V_27v8_27, V_27v9_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v8_27),s('type.ast.exp',V_27v9_27))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))) | (?[V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27),s('type.ast.exp',V_27v_7c49_7c7_27))) | (?[V_27v_7c49_7c8_27, V_27v_7c49_7c9_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c8_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c9_27))) | ((?[V_27v2_7c49_7c_27, V_27v22_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.ast.exp',V_27v2_7c49_7c_27),s('type.ast.exp',V_27v22_27))) | ?[V_27v_27, V_27x_27, V_27y_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27v_27))),s('type.ast.exp',V_27x_27),s('type.ast.exp',V_27y_27)))) | ?[V_27v23_27, V_27v24_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v23_27),s('type.ast.exp',V_27v24_27)))))))))))))) => (?[V_27v_27, V_27x_27, V_27y_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27v_27))),s('type.ast.exp',V_27x_27),s('type.ast.exp',V_27y_27))) | (?[V_27v_7c49_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_7c49_7c_27))) | (?[V_27v2_27, V_27v3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v3_27))) | (?[V_27v4_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v4_27))) | (?[V_27v5_27, V_27v6_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v5_27),s('type.list.list'('type.ast.exp'),V_27v6_27))) | (?[V_27v7_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))) | (?[V_27v8_27, V_27v9_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v8_27),s('type.ast.exp',V_27v9_27))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))) | (?[V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27),s('type.ast.exp',V_27v_7c49_7c7_27))) | (?[V_27v_7c49_7c8_27, V_27v_7c49_7c9_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c8_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c9_27))) | (?[V_27v2_7c49_7c_27, V_27v22_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.ast.exp',V_27v2_7c49_7c_27),s('type.ast.exp',V_27v22_27))) | ?[V_27v23_27, V_27v24_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v23_27),s('type.ast.exp',V_27v24_27))))))))))))))))).
fof('thm.ml_optimise.let_id_ind', axiom, ![V_27P_27]: ((![V_27v_27, V_27x_27, V_27y_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27v_27))),s('type.ast.exp',V_27x_27),s('type.ast.exp',V_27y_27)))))) & (![V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_7c49_7c_27)))))) & (![V_27v2_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v3_27)))))) & (![V_27v4_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v4_27)))))) & (![V_27v5_27, V_27v6_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v5_27),s('type.list.list'('type.ast.exp'),V_27v6_27)))))) & (![V_27v7_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))))) & (![V_27v8_27, V_27v9_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v8_27),s('type.ast.exp',V_27v9_27)))))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c49_7c_27)))))) & (![V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27)))))) & (![V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27),s('type.ast.exp',V_27v_7c49_7c7_27)))))) & (![V_27v_7c49_7c8_27, V_27v_7c49_7c9_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c8_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c9_27)))))) & (![V_27v2_7c49_7c_27, V_27v22_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.ast.exp',V_27v2_7c49_7c_27),s('type.ast.exp',V_27v22_27)))))) & ![V_27v23_27, V_27v24_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v23_27),s('type.ast.exp',V_27v24_27)))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27v_27)))))).
fof('thm.ml_optimise.let_id_def|split|0', axiom, ![V_27y_27, V_27x_27, V_27v_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.ast.exp',V_27y_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),V_27v_27)))))) & s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27v_27))),s('type.ast.exp',V_27x_27),s('type.ast.exp',V_27y_27))))) = s('type.ast.exp','const.bool.COND_3'(s('bool',Vv),s('type.ast.exp',V_27x_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27v_27))),s('type.ast.exp',V_27x_27),s('type.ast.exp',V_27y_27))))))).
fof('thm.ml_optimise.let_id_def|split|1', axiom, ![V_27v_7c49_7c_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_7c49_7c_27))))) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_7c49_7c_27)))).
fof('thm.ml_optimise.let_id_def|split|2', axiom, ![V_27v3_27, V_27v2_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v3_27))))) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v2_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v3_27)))).
fof('thm.ml_optimise.let_id_def|split|3', axiom, ![V_27v4_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v4_27))))) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v4_27)))).
fof('thm.ml_optimise.let_id_def|split|4', axiom, ![V_27v6_27, V_27v5_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v5_27),s('type.list.list'('type.ast.exp'),V_27v6_27))))) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v5_27),s('type.list.list'('type.ast.exp'),V_27v6_27)))).
fof('thm.ml_optimise.let_id_def|split|5', axiom, ![V_27v7_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))).
fof('thm.ml_optimise.let_id_def|split|6', axiom, ![V_27v9_27, V_27v8_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v8_27),s('type.ast.exp',V_27v9_27))))) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v8_27),s('type.ast.exp',V_27v9_27)))).
fof('thm.ml_optimise.let_id_def|split|7', axiom, ![V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c49_7c_27))))) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op',V_27v_7c49_7c_7c48_7c_27),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c49_7c_27)))).
fof('thm.ml_optimise.let_id_def|split|8', axiom, ![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27, V_27v_7c49_7c2_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27))))) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27),s('type.ast.exp',V_27v_7c49_7c4_27)))).
fof('thm.ml_optimise.let_id_def|split|9', axiom, ![V_27v_7c49_7c7_27, V_27v_7c49_7c6_27, V_27v_7c49_7c5_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27),s('type.ast.exp',V_27v_7c49_7c7_27))))) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27),s('type.ast.exp',V_27v_7c49_7c7_27)))).
fof('thm.ml_optimise.let_id_def|split|10', axiom, ![V_27v_7c49_7c9_27, V_27v_7c49_7c8_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c8_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c9_27))))) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c8_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c9_27)))).
fof('thm.ml_optimise.let_id_def|split|11', axiom, ![V_27v22_27, V_27v2_7c49_7c_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.ast.exp',V_27v2_7c49_7c_27),s('type.ast.exp',V_27v22_27))))) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.ast.exp',V_27v2_7c49_7c_27),s('type.ast.exp',V_27v22_27)))).
fof('thm.ml_optimise.let_id_def|split|12', axiom, ![V_27v24_27, V_27v23_27]: s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v23_27),s('type.ast.exp',V_27v24_27))))) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v23_27),s('type.ast.exp',V_27v24_27)))).
fof('thm.ml_optimise.ml_optimise_22_prove_ltb', axiom, ![V_27A_27]: ![V_27env_27, V_27s_27, V_27exp_27, V_27t_27, V_27res_27]: (p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.ast.exp',V_27exp_27),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))) => p(s('bool','const.bigStep.evaluate_5'(s('bool','F_0'),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.semanticPrimitives.state'(V_27A_27),V_27s_27),s('type.ast.exp','const.ml_optimise.let_id_1'(s('type.ast.exp',V_27exp_27))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v')),'const.pair.,_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27t_27),s('type.semanticPrimitives.result'('type.semanticPrimitives.v','type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.semanticPrimitives.v',V_27res_27)))))))))).
fof('ARITY_0_1_const.ml_optimise.dest_binop', axiom, ![VV0]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.ml_optimise.dest_binop_0'),s('type.ast.exp',VV0))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp',VV0)))).
fof('_dst_x0x0x1x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0_ax', axiom, ![VA,VA2,VA3,VA1,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA15,VA16,VA17,VA18,VA19,VA20,VA21,VA22,VA23,VA24,VA25,VA26,VA27,VA28,VA29,VA30,VA31]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__12, V__13, V__14, V__15, V__16, V__17, V__18, V__19, V__20, V__21, V__22, V__23, V__24, V__25, V__26, V__27, V__28, V__29, V__z]: s(VA,'happ'(s('fun'(VA1,VA),'_dst_x0x0x1x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0_31'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))))))))))))),V__x),s(VA2,V__0),s('fun'(VA1,VA3),V__1),s(VA4,V__2),s(VA5,V__3),s(VA6,V__4),s(VA7,V__5),s(VA8,V__6),s(VA9,V__7),s(VA10,V__8),s(VA11,V__9),s(VA12,V__10),s(VA13,V__11),s(VA14,V__12),s(VA15,V__13),s(VA16,V__14),s(VA17,V__15),s(VA18,V__16),s(VA19,V__17),s(VA20,V__18),s(VA21,V__19),s(VA22,V__20),s(VA23,V__21),s(VA24,V__22),s(VA25,V__23),s(VA26,V__24),s(VA27,V__25),s(VA28,V__26),s(VA29,V__27),s(VA30,V__28),s(VA31,V__29))),s(VA1,V__z))) = s(VA,'happ'(s('fun'(VA31,VA),'happ'(s('fun'(VA30,'fun'(VA31,VA)),'happ'(s('fun'(VA29,'fun'(VA30,'fun'(VA31,VA))),'happ'(s('fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))),'happ'(s('fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))),'happ'(s('fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))),'happ'(s('fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))),'happ'(s('fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))),'happ'(s('fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))),'happ'(s('fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))),'happ'(s('fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))),'happ'(s('fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))),'happ'(s('fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))),'happ'(s('fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))),'happ'(s('fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))),'happ'(s('fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))),'happ'(s('fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))),'happ'(s('fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))),'happ'(s('fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))))),'happ'(s('fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))),'happ'(s('fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))))))),'happ'(s('fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))))),'happ'(s('fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))))))))),'happ'(s('fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))))))),'happ'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))))))))))),'happ'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))))))))),'happ'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))))))))))))),'happ'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))))))))))),'happ'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA))))))))))))))))))))))))))))),'happ'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,VA)))))))))))))))))))))))))))))),V__x),s(VA2,V__0))),s(VA3,'happ'(s('fun'(VA1,VA3),V__1),s(VA1,V__z))))),s(VA4,V__2))),s(VA5,V__3))),s(VA6,V__4))),s(VA7,V__5))),s(VA8,V__6))),s(VA9,V__7))),s(VA10,V__8))),s(VA11,V__9))),s(VA12,V__10))),s(VA13,V__11))),s(VA14,V__12))),s(VA15,V__13))),s(VA16,V__14))),s(VA17,V__15))),s(VA18,V__16))),s(VA19,V__17))),s(VA20,V__18))),s(VA21,V__19))),s(VA22,V__20))),s(VA23,V__21))),s(VA24,V__22))),s(VA25,V__23))),s(VA26,V__24))),s(VA27,V__25))),s(VA28,V__26))),s(VA29,V__27))),s(VA30,V__28))),s(VA31,V__29)))).
fof('_dst_x00x10x01x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00_ax', axiom, ![VA,VA3,VA1,VA2,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA15,VA16,VA17,VA18,VA19,VA20,VA21,VA22,VA23,VA24,VA25,VA26,VA27,VA28,VA29,VA30,VA31,VA32]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__12, V__13, V__14, V__15, V__16, V__17, V__18, V__19, V__20, V__21, V__22, V__23, V__24, V__25, V__26, V__27, V__28, V__29, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x01x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00_31'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,'fun'(VA32,VA)))))))))))))))))))))))))))))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1),s(VA5,V__2),s(VA6,V__3),s(VA7,V__4),s(VA8,V__5),s(VA9,V__6),s(VA10,V__7),s(VA11,V__8),s(VA12,V__9),s(VA13,V__10),s(VA14,V__11),s(VA15,V__12),s(VA16,V__13),s(VA17,V__14),s(VA18,V__15),s(VA19,V__16),s(VA20,V__17),s(VA21,V__18),s(VA22,V__19),s(VA23,V__20),s(VA24,V__21),s(VA25,V__22),s(VA26,V__23),s(VA27,V__24),s(VA28,V__25),s(VA29,V__26),s(VA30,V__27),s(VA31,V__28),s(VA32,V__29))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0_31'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,'fun'(VA17,'fun'(VA18,'fun'(VA19,'fun'(VA20,'fun'(VA21,'fun'(VA22,'fun'(VA23,'fun'(VA24,'fun'(VA25,'fun'(VA26,'fun'(VA27,'fun'(VA28,'fun'(VA29,'fun'(VA30,'fun'(VA31,'fun'(VA32,VA)))))))))))))))))))))))))))))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1),s(VA5,V__2),s(VA6,V__3),s(VA7,V__4),s(VA8,V__5),s(VA9,V__6),s(VA10,V__7),s(VA11,V__8),s(VA12,V__9),s(VA13,V__10),s(VA14,V__11),s(VA15,V__12),s(VA16,V__13),s(VA17,V__14),s(VA18,V__15),s(VA19,V__16),s(VA20,V__17),s(VA21,V__18),s(VA22,V__19),s(VA23,V__20),s(VA24,V__21),s(VA25,V__22),s(VA26,V__23),s(VA27,V__24),s(VA28,V__25),s(VA29,V__26),s(VA30,V__27),s(VA31,V__28),s(VA32,V__29)))).
fof('thm.ml_optimise.dest_binop_primitive_def', axiom, s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.ml_optimise.dest_binop_0') = s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.relation.WFREC_2'(s('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'const.min.@_1'(s('fun'('fun'('type.ast.exp','fun'('type.ast.exp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0x0_13'(s('fun'('type.ast.exp','fun'('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'fun'('fun'('type.ast.lit','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'fun'('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'fun'('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'fun'('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'fun'('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'fun'('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))))))))))))),'const.ast.exp_CASE_0'),s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))),s('fun'('type.ast.lit','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('fun'('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))),s('fun'('type.ast.op','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x00x10x01x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00x00_31'(s('fun'('type.ast.op','fun'('fun'('type.ast.opn','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('fun'('type.ast.opb','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('fun'('type.ast.word_size','fun'('type.ast.opw','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'fun'('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.word_size','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('fun'('type.ast.word_size','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.opb','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.num.num','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))))))))))))))))))))))))))))))),'const.ast.op_CASE_0'),s('fun'('type.ast.op','type.ast.op'),'_i_0_0'),s('fun'('type.list.list'('type.ast.exp'),'fun'('type.ast.opn','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x00x10x00x01_4'(s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.ast.exp'),'type.list.list'('type.ast.exp')),'_i_0_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('fun'('type.ast.opn','fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'const.list.list_CASE_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('fun'('type.ast.opn','fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.ast.exp'),'fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'fun'('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'const.list.list_CASE_0'),s('fun'('type.ast.opn','fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('fun'('type.ast.opn','fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.option.SOME_0'),s('fun'('type.ast.opn','fun'('type.ast.exp','fun'('type.ast.exp','type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x000x100x011_3'(s('fun'('type.ast.opn','fun'('type.pair.prod'('type.ast.exp','type.ast.exp'),'type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.pair.,_0'),s('fun'('type.ast.opn','type.ast.opn'),'_i_0_0'),s('fun'('type.ast.exp','fun'('type.ast.exp','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.pair.,_0'))))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.list.list'('type.ast.exp'),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))))))))),s('fun'('type.ast.opb','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('fun'('type.ast.word_size','fun'('type.ast.opw','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.opw','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x0_1'(s('fun'('type.ast.shift','fun'('type.num.num','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.num.num','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('fun'('type.ast.word_size','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('fun'('type.ast.word_size','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('fun'('type.ast.opb','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))),s('fun'('type.num.num','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))),s('fun'('type.ast.lop','fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x0_1'(s('fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))))),s('fun'('type.ast.exp','fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x0_1'(s('fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))))),s('fun'('type.ast.exp','fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))),s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))))),'_dst_x0_1'(s('fun'('type.ast.exp','fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0'))))))))),s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))))),'_dst_x0_1'(s('fun'('type.ast.exp','type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')))))))))))))).
fof('thm.ml_optimise.ml_optimise_24_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_27))) | (?[V_27v_7c49_7c_27, V_27v2_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v2_27))) | (?[V_27v3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v3_27))) | (?[V_27v4_27, V_27v5_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v4_27),s('type.list.list'('type.ast.exp'),V_27v5_27))) | (?[V_27v6_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))) | (?[V_27v7_27, V_27v8_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v7_27),s('type.ast.exp',V_27v8_27))) | (((?[V_27v48_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | (?[V_27v48_27, V_27v7_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | (?[V_27op_27, V_27x_27, V_27y_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27op_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27y_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | ?[V_27v48_27, V_27v7_7c48_7c_27, V_27v74_27, V_27v78_27, V_27v79_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v74_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v78_27),s('type.list.list'('type.ast.exp'),V_27v79_27)))))))))))) | (?[V_27v49_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',V_27v49_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v5_7c48_7c_27, V_27v5_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',V_27v5_7c48_7c_27),s('type.ast.opw',V_27v5_7c49_7c_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v52_27, V_27v53_27, V_27v54_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',V_27v52_27),s('type.ast.shift',V_27v53_27),s('type.num.num',V_27v54_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v55_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',V_27v55_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v56_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',V_27v56_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v57_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',V_27v57_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | ?[V_27v58_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27v58_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))))))))))))))))))))))))))))) | (?[V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c_7c49_7c_27),s('type.ast.exp',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27))) | (?[V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c4_27),s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27))) | (?[V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c7_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c8_27))) | (?[V_27v_7c49_7c9_27, V_27v2_7c48_7c_27, V_27v2_7c49_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27v_7c49_7c9_27),s('type.ast.exp',V_27v2_7c48_7c_27),s('type.ast.exp',V_27v2_7c49_7c_27))) | ?[V_27v22_27, V_27v23_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v22_27),s('type.ast.exp',V_27v23_27)))))))))))))) => (?[V_27op_27, V_27x_27, V_27y_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27op_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27y_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) | (?[V_27v_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_27))) | (?[V_27v_7c49_7c_27, V_27v2_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v2_27))) | (?[V_27v3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v3_27))) | (?[V_27v4_27, V_27v5_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v4_27),s('type.list.list'('type.ast.exp'),V_27v5_27))) | (?[V_27v6_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))) | (?[V_27v7_27, V_27v8_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v7_27),s('type.ast.exp',V_27v8_27))) | (?[V_27v48_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))) | (?[V_27v48_27, V_27v7_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) | (?[V_27v48_27, V_27v7_7c48_7c_27, V_27v74_27, V_27v78_27, V_27v79_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v74_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v78_27),s('type.list.list'('type.ast.exp'),V_27v79_27))))))))) | (?[V_27v49_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',V_27v49_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v5_7c48_7c_27, V_27v5_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',V_27v5_7c48_7c_27),s('type.ast.opw',V_27v5_7c49_7c_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v52_27, V_27v53_27, V_27v54_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',V_27v52_27),s('type.ast.shift',V_27v53_27),s('type.num.num',V_27v54_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v55_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',V_27v55_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v56_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',V_27v56_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v57_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',V_27v57_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v58_27, V_27v_7c49_7c_7c48_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27v58_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))) | (?[V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c_7c49_7c_27),s('type.ast.exp',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27))) | (?[V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c4_27),s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27))) | (?[V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c7_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c8_27))) | (?[V_27v_7c49_7c9_27, V_27v2_7c48_7c_27, V_27v2_7c49_7c_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27v_7c49_7c9_27),s('type.ast.exp',V_27v2_7c48_7c_27),s('type.ast.exp',V_27v2_7c49_7c_27))) | ?[V_27v22_27, V_27v23_27]: s('type.ast.exp',V_27a_27) = s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v22_27),s('type.ast.exp',V_27v23_27))))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.ml_optimise.dest_binop_ind', axiom, ![V_27P_27]: ((![V_27op_27, V_27x_27, V_27y_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27op_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27y_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))))))))) & (![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_27)))))) & (![V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v2_27)))))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v3_27)))))) & (![V_27v4_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v4_27),s('type.list.list'('type.ast.exp'),V_27v5_27)))))) & (![V_27v6_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27)))))) & (![V_27v7_27, V_27v8_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v7_27),s('type.ast.exp',V_27v8_27)))))) & (![V_27v48_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))))) & (![V_27v48_27, V_27v7_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))))))) & (![V_27v48_27, V_27v7_7c48_7c_27, V_27v74_27, V_27v78_27, V_27v79_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v74_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v78_27),s('type.list.list'('type.ast.exp'),V_27v79_27)))))))))))) & (![V_27v49_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',V_27v49_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v5_7c48_7c_27, V_27v5_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',V_27v5_7c48_7c_27),s('type.ast.opw',V_27v5_7c49_7c_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v52_27, V_27v53_27, V_27v54_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',V_27v52_27),s('type.ast.shift',V_27v53_27),s('type.num.num',V_27v54_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v55_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',V_27v55_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v56_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',V_27v56_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v57_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',V_27v57_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Explode_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Implode_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Strlen_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.VfromList_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vsub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Vlength_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aalloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Asub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Alength_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aupdate_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v58_27, V_27v_7c49_7c_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.FFI_1'(s('type.num.num',V_27v58_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27)))))) & (![V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Log_3'(s('type.ast.lop',V_27v_7c49_7c_7c49_7c_27),s('type.ast.exp',V_27v_7c49_7c2_27),s('type.ast.exp',V_27v_7c49_7c3_27)))))) & (![V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.If_3'(s('type.ast.exp',V_27v_7c49_7c4_27),s('type.ast.exp',V_27v_7c49_7c5_27),s('type.ast.exp',V_27v_7c49_7c6_27)))))) & (![V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Mat_2'(s('type.ast.exp',V_27v_7c49_7c7_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v_7c49_7c8_27)))))) & (![V_27v_7c49_7c9_27, V_27v2_7c48_7c_27, V_27v2_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Let_3'(s('type.option.option'('type.list.list'('type.string.char')),V_27v_7c49_7c9_27),s('type.ast.exp',V_27v2_7c48_7c_27),s('type.ast.exp',V_27v2_7c49_7c_27)))))) & ![V_27v22_27, V_27v23_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp','const.ast.Letrec_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v22_27),s('type.ast.exp',V_27v23_27)))))))))))))))))))))))))))))))))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.ast.exp','bool'),V_27P_27),s('type.ast.exp',V_27v_27)))))).
fof('thm.ml_optimise.dest_binop_def|split|0', axiom, ![V_27y_27, V_27x_27, V_27op_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27op_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27x_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27y_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp')),'const.pair.,_2'(s('type.ast.opn',V_27op_27),s('type.pair.prod'('type.ast.exp','type.ast.exp'),'const.pair.,_2'(s('type.ast.exp',V_27x_27),s('type.ast.exp',V_27y_27)))))))).
fof('thm.ml_optimise.dest_binop_def|split|1', axiom, ![V_27v_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.Raise_1'(s('type.ast.exp',V_27v_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|2', axiom, ![V_27v2_27, V_27v_7c49_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.Handle_2'(s('type.ast.exp',V_27v_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27v2_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|3', axiom, ![V_27v3_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.Lit_1'(s('type.ast.lit',V_27v3_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|4', axiom, ![V_27v5_27, V_27v4_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.Con_2'(s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),V_27v4_27),s('type.list.list'('type.ast.exp'),V_27v5_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|5', axiom, ![V_27v6_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.Var_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|6', axiom, ![V_27v8_27, V_27v7_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.Fun_2'(s('type.list.list'('type.string.char'),V_27v7_27),s('type.ast.exp',V_27v8_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|7', axiom, ![V_27v48_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|8', axiom, ![V_27v7_7c48_7c_27, V_27v48_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.NIL_0'))))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|9', axiom, ![V_27v79_27, V_27v78_27, V_27v74_27, V_27v7_7c48_7c_27, V_27v48_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opn_1'(s('type.ast.opn',V_27v48_27))),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v7_7c48_7c_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v74_27),s('type.list.list'('type.ast.exp'),'const.list.CONS_2'(s('type.ast.exp',V_27v78_27),s('type.list.list'('type.ast.exp'),V_27v79_27))))))))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|10', axiom, ![V_27v49_27, V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opb_1'(s('type.ast.opb',V_27v49_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|11', axiom, ![V_27v5_7c49_7c_27, V_27v5_7c48_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opw_2'(s('type.ast.word_size',V_27v5_7c48_7c_27),s('type.ast.opw',V_27v5_7c49_7c_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|12', axiom, ![V_27v54_27, V_27v53_27, V_27v52_27, V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Shift_3'(s('type.ast.word_size',V_27v52_27),s('type.ast.shift',V_27v53_27),s('type.num.num',V_27v54_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|13', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Equality_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|14', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opapp_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|15', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opassign_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|16', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opref_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|17', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Opderef_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|18', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8alloc_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|19', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8sub_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|20', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8length_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|21', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Aw8update_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|22', axiom, ![V_27v55_27, V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordFromInt_1'(s('type.ast.word_size',V_27v55_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|23', axiom, ![V_27v56_27, V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.WordToInt_1'(s('type.ast.word_size',V_27v56_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|24', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Ord_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|25', axiom, ![V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chr_0'),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
fof('thm.ml_optimise.dest_binop_def|split|26', conjecture, ![V_27v57_27, V_27v_7c49_7c_7c48_7c_27]: s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.ml_optimise.dest_binop_1'(s('type.ast.exp','const.ast.App_2'(s('type.ast.op','const.ast.Chopb_1'(s('type.ast.opb',V_27v57_27))),s('type.list.list'('type.ast.exp'),V_27v_7c49_7c_7c48_7c_27))))) = s('type.option.option'('type.pair.prod'('type.ast.opn','type.pair.prod'('type.ast.exp','type.ast.exp'))),'const.option.NONE_0')).
