include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
include('incl/rich_list.ax').
include('incl/quantHeuristics.ax').
include('incl/fcp.ax').
include('incl/logroot.ax').
include('incl/bit.ax').
include('incl/string.ax').
include('incl/numposrep.ax').
include('incl/ASCIInumbers.ax').
include('incl/numeral_bit.ax').
include('incl/sum_num.ax').
include('incl/words.ax').
include('incl/alignment.ax').
include('incl/sorting.ax').
include('incl/finite_map.ax').
include('incl/alist.ax').
include('incl/sptree.ax').
include('incl/indexedLists.ax').
include('incl/res_quan.ax').
include('incl/quotient.ax').
include('incl/quotient_list.ax').
include('incl/set_sep.ax').
include('incl/set_relation.ax').
include('incl/wot.ax').
include('incl/toto.ax').
include('incl/comparison.ax').
include('incl/llist.ax').
include('incl/misc.ax').
include('incl/quotient_pair.ax').
include('incl/quotient_sum.ax').
include('incl/divides.ax').
include('incl/gcd.ax').
include('incl/quotient_option.ax').
include('incl/integer.ax').
include('incl/Omega.ax').
include('incl/int_arith.ax').
include('incl/integer_word.ax').
include('incl/lib.ax').
include('incl/ffi.ax').
include('incl/grammar.ax').
include('incl/peg.ax').
include('incl/pegexec.ax').
include('incl/state_transformer.ax').
include('incl/lprefix_lub.ax').
include('incl/tokens.ax').
include('incl/gram.ax').
include('incl/ast.ax').
include('incl/asm.ax').
include('incl/semanticPrimitives.ax').
include('incl/reg_alloc.ax').
include('incl/typeSystem.ax').
include('incl/funBigStep.ax').
include('incl/termination.ax').
include('incl/labLang.ax').
include('incl/lab_filter.ax').
include('incl/lab_to_target.ax').
include('incl/closLang.ax').
include('incl/bvl.ax').
include('incl/bvp.ax').
include('incl/bvp_live.ax').
include('incl/smallStep.ax').
include('incl/bigStep.ax').
include('incl/db_vars.ax').
include('incl/clos_free.ax').
include('incl/clos_annotate.ax').
include('incl/clos_number.ax').
include('incl/tokenUtils.ax').
include('incl/cmlPtreeConversion.ax').
include('incl/lexer_fun.ax').
include('incl/NTproperties.ax').
include('incl/initialProgram.ax').
include('incl/bvp_simp.ax').
include('incl/bvi.ax').
include('incl/bvp_space.ax').
include('incl/bvi_to_bvp.ax').
include('incl/evalProps.ax').
include('incl/determ.ax').
include('incl/bigClock.ax').
include('incl/interp.ax').
include('incl/funBigStepEquiv.ax').
include('incl/conLang.ax').
include('incl/exhLang.ax').
include('incl/dec_to_exh.ax').
include('incl/patLang.ax').
include('incl/pat_to_clos.ax').
include('incl/bvl_jump.ax').
include('incl/clos_call.ax').
include('incl/clos_remove.ax').
include('incl/clos_mti.ax').
include('incl/clos_to_bvl.ax').
include('incl/bvl_inline.ax').
include('incl/asmSem.ax').
include('incl/asmProps.ax').
include('incl/targetSem.ax').
include('incl/typeSoundInvariants.ax').
include('incl/typeSysProps.ax').
include('incl/bvl_handle.ax').
include('incl/bvl_const.ax').
include('incl/bvl_to_bvi.ax').
include('incl/modLang.ax').
include('incl/mod_to_con.ax').
include('incl/bigSmallInvariants.ax').
include('incl/con_to_dec.ax').
include('incl/targetProps.ax').
include('incl/weakening.ax').
include('incl/bigSmallEquiv.ax').
include('incl/untypedSafety.ax').
include('incl/funBigStepProps.ax').
include('incl/source_to_mod.ax').
include('incl/semantics.ax').
include('incl/initSemEnv.ax').
include('incl/typeSound.ax').
include('incl/wordLang.ax').
include('incl/exh_to_pat.ax').
include('incl/wordSem.ax').
include('incl/labSem.ax').
include('incl/semanticsProps.ax').
include('incl/labProps.ax').
include('incl/closSem.ax').
include('incl/closProps.ax').
include('incl/patSem.ax').
include('incl/modSem.ax').
include('incl/bvlSem.ax').
include('incl/bviSem.ax').
include('incl/bvlProps.ax').
include('incl/bvpSem.ax').
include('incl/exhSem.ax').
include('incl/conSem.ax').
include('incl/decSem.ax').
include('incl/conProps.ax').
include('incl/decProps.ax').
include('incl/exhProps.ax').
include('incl/modProps.ax').
include('incl/patProps.ax').
include('incl/reg_allocProof.ax').
include('incl/bviProps.ax').
include('incl/bvpProps.ax').
include('incl/bvp_simpProof.ax').
include('incl/bvp_spaceProof.ax').
include('incl/bvl_jumpProof.ax').
include('incl/wellorder.ax').
include('incl/cardinal.ax').
include('incl/hrat.ax').
include('incl/hreal.ax').
include('incl/realax.ax').
include('incl/real.ax').
include('incl/topology.ax').
include('incl/nets.ax').
include('incl/seq.ax').
include('incl/lim.ax').
include('incl/powser.ax').
include('incl/transc.ax').
include('incl/intreal.ax').
include('incl/binary_ieee.ax').
include('incl/tailrec.ax').
include('incl/prog.ax').
include('incl/temporal.ax').
include('incl/address.ax').
include('incl/state.ax').
include('incl/temporal_state.ax').
include('incl/machine_ieee.ax').
include('incl/bitstring.ax').
include('incl/arm.ax').
include('incl/blast.ax').
include('incl/update.ax').
include('incl/arm_step.ax').
include('incl/arm6_target.ax').
include('incl/arm6_eval_encode.ax').
include('incl/mlstring.ax').
include('incl/patternMatches.ax').
include('incl/ml_translator.ax').
include('incl/ml_optimise.ax').
include('incl/ml_pmatch.ax').
include('incl/mini_prelude.ax').
include('incl/bag.ax').
include('incl/benchmark.ax').
include('incl/arm8.ax').
include('incl/arm8_step.ax').
include('incl/clos_relation.ax').
include('incl/clos_relationProps.ax').
include('incl/clos_removeProof.ax').
include('incl/simpleSexp.ax').
include('incl/fromSexp.ax').
include('incl/word_inst.ax').
include('incl/word_alloc.ax').
include('incl/word_remove.ax').
include('incl/word_to_word.ax').
include('incl/stackLang.ax').
include('incl/bvp_to_word.ax').
include('incl/stack_alloc.ax').
include('incl/riscv.ax').
include('incl/riscv_step.ax').
include('incl/std_prelude.ax').
include('incl/holSyntaxLib.ax').
include('incl/holSyntax.ax').
include('incl/holSyntaxExtra.ax').
include('incl/ml_module_demo.ax').
include('incl/bvp_liveProof.ax').
include('incl/PhysicistsQueue.ax').
include('incl/holBoolSyntax.ax').
include('incl/holAxiomsSyntax.ax').
include('incl/setSpec.ax').
include('incl/holSemantics.ax').
include('incl/holSemanticsExtra.ax').
include('incl/holBool.ax').
include('incl/commonUnif.ax').
include('incl/term.ax').
include('incl/subst.ax').
include('incl/walk.ax').
include('incl/walkstar.ax').
include('incl/unifDef.ax').
include('incl/unifProps.ax').
include('incl/redUnif.ax').
include('incl/parmove.ax').
include('incl/word_to_stack.ax').
include('incl/bvl_inlineProof.ax').
include('incl/clos_known.ax').
fof('thm.clos_knownProof.clos_knownProof_3_prove_ltb', axiom, ![V_27A_7c49_7c_27,V_27A_27]: ![V_27x_27, V_27v_7c49_7c_27, V_27v_27, V_27f2_27, V_27f_7c49_7c_27, V_27f_7c39_7c_27, V_27f_27]: s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',V_27x_27),s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27),s('fun'('type.list.list'('type.clos_known.val_approx'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.integer.int',V_27A_27),V_27f2_27),s(V_27A_27,V_27v_27),s(V_27A_27,V_27v_7c49_7c_27))))) = s(V_27A_7c49_7c_27,'const.clos_known.val_approx_CASE_6'(s('type.clos_known.val_approx',V_27x_27),s('fun'('type.num.num','fun'('type.num.num',V_27A_7c49_7c_27)),'_dst_x00x11_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27))),s('fun'('type.list.list'('type.clos_known.val_approx'),V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.list.list'('type.clos_known.val_approx'),V_27A_27),V_27f_7c49_7c_27))),s('fun'('type.integer.int',V_27A_7c49_7c_27),'_dst_x0x1_2'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s('fun'('type.integer.int',V_27A_27),V_27f2_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_27))),s(V_27A_7c49_7c_27,'happ'(s('fun'(V_27A_27,V_27A_7c49_7c_27),V_27f_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_27)))))).
fof('thm.clos_knownProof.evaluate_eq_nil', axiom, ![V_27A_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27es_27, V_27env_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))),s('type.closSem.state'(V_27A_27),V_27s_27))) <=> (s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27) = s('type.closSem.state'(V_27A_27),V_27s_27) & s('type.list.list'('type.closLang.exp'),V_27es_27) = s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))).
fof('thm.clos_knownProof.evaluate_list_members_individually', axiom, ![V_27A_27]: ![V_27es_27, V_27env_27, V_27s_7c48_7c_27, V_27vs_27, V_27s_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),V_27vs_27))),s('type.closSem.state'(V_27A_27),V_27s_27))) => ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closLang.exp'),V_27es_27)))))) => ?[V_27s_7c48_7c_7c39_7c_27, V_27s_7c39_7c_27]: s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),V_27es_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_7c39_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27vs_27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))),s('type.closSem.state'(V_27A_27),V_27s_7c39_7c_27)))))).
fof('thm.clos_knownProof.dest_Clos_eq_SOME', axiom, ![V_27j_27, V_27i_27, V_27a_27]: (s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.clos_known.dest_Clos_1'(s('type.clos_known.val_approx',V_27a_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.num.num')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27j_27))))) <=> s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27j_27))))).
fof('thm.clos_knownProof.merge_Other|split|0', axiom, ![V_27a_27]: s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',V_27a_27))) = s('type.clos_known.val_approx','const.clos_known.Other_0')).
fof('thm.clos_knownProof.merge_Other|split|1', axiom, ![V_27a_27]: s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.Other_0'))) = s('type.clos_known.val_approx','const.clos_known.Other_0')).
fof('thm.clos_knownProof.clos_knownProof_|49||48|_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27vs_27, V_27loc__opt_27, V_27g_27, V_27fns_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.APPEND_2'(s('type.list.list'('type.clos_known.val_approx'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.clos_known.val_approx'),'const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('fun'('type.num.num','type.clos_known.val_approx'),'const.combin.K_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('fun'('type.num.num','fun'('type.num.num','type.clos_known.val_approx')),'_dst_x00x11x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.clos_known.val_approx')),'const.clos_known.Clos_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.num.num','type.closLang.exp'))),'const.list.EL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49||49|_prove_ltb', axiom, ![V_27e_7c49_7c_27]: ?[V_27e_7c49_7c_7c39_7c_27, V_27a_7c49_7c_27]: s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.list.HD_1'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27))) = s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.pair.,_2'(s('type.closLang.exp',V_27e_7c49_7c_7c39_7c_27),s('type.clos_known.val_approx',V_27a_7c49_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|2_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27vs_27, V_27num__args_27, V_27g_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.APPEND_2'(s('type.list.list'('type.clos_known.val_approx'),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27num__args_27),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|3_prove_ltb', axiom, ![V_27e_7c49_7c_27]: ?[V_27body_27, V_27a_7c49_7c_27]: s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.list.HD_1'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27))) = s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.pair.,_2'(s('type.closLang.exp',V_27body_27),s('type.clos_known.val_approx',V_27a_7c49_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|4_prove_ltb', axiom, ![V_27vs_27, V_27g_27, V_27es_27]: ?[V_27e2_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|5_prove_ltb', axiom, ![V_27x_27, V_27vs_27, V_27g_7c39_7c_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|7_prove_ltb', axiom, ![V_27vs_27, V_27g_27, V_27es_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|8_prove_ltb', axiom, ![V_27op_27, V_27g_7c39_7c_27, V_27e_7c49_7c_27]: ?[V_27a_27, V_27g_27]: s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.clos_known.val_approx'),'const.list.REVERSE_1'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27))))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',V_27a_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))).
fof('thm.clos_knownProof.clos_knownProof_2|48|_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27vs_27, V_27g_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_2|49|_prove_ltb', axiom, ![V_27x2_27, V_27vs_27, V_27g_7c39_7c_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_23_prove_ltb', axiom, ![V_27e2_27]: ?[V_27e2_7c39_7c_27, V_27a2_27]: s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.list.HD_1'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27))) = s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.pair.,_2'(s('type.closLang.exp',V_27e2_7c39_7c_27),s('type.clos_known.val_approx',V_27a2_27)))).
fof('thm.clos_knownProof.clos_knownProof_29_prove_ltb', axiom, ![V_27x2_27, V_27vs_27, V_27g_7c39_7c_27, V_27e_7c49_7c_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.APPEND_2'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_32_prove_ltb', axiom, ![V_27x2_27, V_27vs_27, V_27g_7c39_7c_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_33_prove_ltb', axiom, ![V_27x3_27, V_27vs_27, V_27g_7c39_7c_7c39_7c_27]: ?[V_27e3_27, V_27g_7c39_7c_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x3_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e3_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_36_prove_ltb', axiom, ![V_27e3_27]: ?[V_27e3_7c39_7c_27, V_27a3_27]: s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.list.HD_1'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e3_27))) = s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.pair.,_2'(s('type.closLang.exp',V_27e3_7c39_7c_27),s('type.clos_known.val_approx',V_27a3_27)))).
fof('thm.clos_knownProof.clos_knownProof_37_prove_ltb', axiom, ![V_27x_27, V_27vs_27, V_27g_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_38_prove_ltb', axiom, ![V_27y_27, V_27xs_27, V_27vs_27, V_27g_7c39_7c_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.known_LENGTH', axiom, ![V_27es_27, V_27vs_27, V_27g_27]: s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closLang.exp'),V_27es_27)))).
fof('thm.clos_knownProof.known_LENGTH_EQ_E', axiom, ![V_27vs_27, V_27g_7c48_7c_27, V_27g_27, V_27es_27, V_27alist_27]: (s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27alist_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27alist_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))))).
fof('thm.clos_knownProof.known_sing', axiom, ![V_27e_27, V_27vs_27, V_27g_27]: ?[V_27e_7c39_7c_27, V_27a_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'const.list.CONS_2'(s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.pair.,_2'(s('type.closLang.exp',V_27e_7c39_7c_27),s('type.clos_known.val_approx',V_27a_27))),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'const.list.NIL_0'))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.known_sing_EQ_E', axiom, ![V_27e_27, V_27vs_27, V_27g_7c48_7c_27, V_27all_27, V_27g_27]: (s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27vs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27all_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) => ?[V_27e_7c39_7c_27, V_27apx_27]: s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27all_27) = s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'const.list.CONS_2'(s('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'const.pair.,_2'(s('type.closLang.exp',V_27e_7c39_7c_27),s('type.clos_known.val_approx',V_27apx_27))),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'const.list.NIL_0'))))).
fof('thm.clos_knownProof.merge_Impossible', axiom, ![V_27a_27]: s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))) = s('type.clos_known.val_approx',V_27a_27)).
fof('thm.clos_knownProof.merge_comm', axiom, ![V_27a_7c49_7c_27, V_27a2_27]: s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a2_27),s('type.clos_known.val_approx',V_27a_7c49_7c_27)))).
fof('thm.clos_knownProof.merge_assoc', axiom, ![V_27a_7c49_7c_27, V_27a2_27, V_27a3_27]: s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a2_27),s('type.clos_known.val_approx',V_27a3_27))))) = s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27))),s('type.clos_known.val_approx',V_27a3_27)))).
fof('thm.clos_knownProof.merge_idem', axiom, ![V_27a_27]: s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx',V_27a_27))) = s('type.clos_known.val_approx',V_27a_27)).
fof('thm.clos_knownProof.subapprox_def', axiom, ![V_27a_7c49_7c_27, V_27a2_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27)))) <=> s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27))) = s('type.clos_known.val_approx',V_27a2_27))).
fof('thm.clos_knownProof.subapprox_refl', axiom, ![V_27a_27]: p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx',V_27a_27))))).
fof('thm.clos_knownProof.subapprox_trans', axiom, ![V_27a3_27, V_27a2_27, V_27a_7c49_7c_27]: ((p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27)))) & p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a2_27),s('type.clos_known.val_approx',V_27a3_27))))) => p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a3_27)))))).
fof('thm.clos_knownProof.subapprox_antisym', axiom, ![V_27a2_27, V_27a_7c49_7c_27]: ((p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27)))) & p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a2_27),s('type.clos_known.val_approx',V_27a_7c49_7c_27))))) => s('type.clos_known.val_approx',V_27a_7c49_7c_27) = s('type.clos_known.val_approx',V_27a2_27))).
fof('thm.clos_knownProof.subapprox_merge|split|0', axiom, ![V_27b_27, V_27a_27]: p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx',V_27b_27))))))).
fof('thm.clos_knownProof.subapprox_merge|split|1', axiom, ![V_27b_27, V_27a_27]: p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27b_27),s('type.clos_known.val_approx',V_27a_27))))))).
fof('thm.clos_knownProof.subapprox_Other|split|0', axiom, ![V_27a_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.clos_known.val_approx',V_27a_27)))) <=> s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Other_0'))).
fof('thm.clos_knownProof.subapprox_Other|split|1', axiom, ![V_27a_27]: p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.Other_0'))))).
fof('thm.clos_knownProof.subapprox_Int|split|0', axiom, ![V_27i_27, V_27a_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27)))))) <=> (s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))) | s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Impossible_0')))).
fof('thm.clos_knownProof.subapprox_Int|split|1', axiom, ![V_27i_27, V_27a_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))),s('type.clos_known.val_approx',V_27a_27)))) <=> (s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))) | s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Other_0')))).
fof('thm.clos_knownProof.subapprox_Clos|split|0', axiom, ![V_27n_27, V_27m_27, V_27a_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))))) <=> (s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))) | s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Impossible_0')))).
fof('thm.clos_knownProof.subapprox_Clos|split|1', axiom, ![V_27n_27, V_27m_27, V_27a_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.clos_known.val_approx',V_27a_27)))) <=> (s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))) | s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Other_0')))).
fof('thm.clos_knownProof.subapprox_Impossible|split|0', axiom, ![V_27a_27]: (p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_27),s('type.clos_known.val_approx','const.clos_known.Impossible_0')))) <=> s('type.clos_known.val_approx',V_27a_27) = s('type.clos_known.val_approx','const.clos_known.Impossible_0'))).
fof('thm.clos_knownProof.subapprox_Impossible|split|1', axiom, ![V_27a_27]: p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.clos_known.val_approx',V_27a_27))))).
fof('ARITY_0_2_const.clos_knownProof.subapprox', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.clos_known.val_approx','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.clos_known.val_approx','bool')),'const.clos_knownProof.subapprox_0'),s('type.clos_known.val_approx',VV0))),s('type.clos_known.val_approx',VV1))) = s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',VV0),s('type.clos_known.val_approx',VV1)))).
fof('thm.clos_knownProof.subapprox_Tuple', axiom, ![V_27as2_27, V_27as_7c49_7c_27]: s('bool','happ'(s('fun'('type.clos_known.val_approx','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.clos_known.val_approx','bool')),'const.clos_knownProof.subapprox_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),V_27as_7c49_7c_27))))),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),V_27as2_27))))) = s('bool','const.list.LIST_REL_3'(s('fun'('type.clos_known.val_approx','fun'('type.clos_known.val_approx','bool')),'const.clos_knownProof.subapprox_0'),s('type.list.list'('type.clos_known.val_approx'),V_27as_7c49_7c_27),s('type.list.list'('type.clos_known.val_approx'),V_27as2_27)))).
fof('thm.clos_knownProof.better_definedg_def', axiom, ![V_27g_7c49_7c_27, V_27g2_27]: (p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27)))) <=> ![V_27k_27]: (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27k_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27)))))) => (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27k_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27)))))) & p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx','const.option.THE_1'(s('type.option.option'('type.clos_known.val_approx'),'const.sptree.lookup_2'(s('type.num.num',V_27k_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27))))),s('type.clos_known.val_approx','const.option.THE_1'(s('type.option.option'('type.clos_known.val_approx'),'const.sptree.lookup_2'(s('type.num.num',V_27k_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27)))))))))))).
fof('thm.clos_knownProof.better_definedg_refl', axiom, ![V_27g_27]: p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))))).
fof('thm.clos_knownProof.better_definedg_trans', axiom, ![V_27g3_27, V_27g2_27, V_27g_7c49_7c_27]: ((p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27)))) & p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g3_27))))) => p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g3_27)))))).
fof('thm.clos_knownProof.clos_knownProof_6|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27v2_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v2_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27n_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v4_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v4_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v5_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v5_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v6_27, V_27v7_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v6_27),s('type.num.num',V_27v7_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v8_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v8_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v9_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v9_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v_7c49_7c_7c48_7c_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c_7c49_7c_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v_7c49_7c_7c49_7c_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.opw',V_27v_7c49_7c3_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c4_27),s('type.ast.shift',V_27v_7c49_7c5_27),s('type.num.num',V_27v_7c49_7c6_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | ?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(V_27A_27),V_27g_27)))))))))))))))))))))))))))))))))))))))))) => (?[V_27n_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v2_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v2_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v4_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v4_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v5_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v5_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v6_27, V_27v7_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v6_27),s('type.num.num',V_27v7_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v8_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v8_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v9_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v9_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c_7c48_7c_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v_7c49_7c_7c48_7c_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c_7c49_7c_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v_7c49_7c_7c49_7c_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.opw',V_27v_7c49_7c3_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c4_27),s('type.ast.shift',V_27v_7c49_7c5_27),s('type.num.num',V_27v_7c49_7c6_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) | (?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) | ?[V_27g_27]: s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.closLang.op','type.sptree.spt'(V_27A_27)),'const.pair.,_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(V_27A_27),V_27g_27)))))))))))))))))))))))))))))))))))))))))))).
fof('thm.clos_knownProof.opn_fresh_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27n_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v2_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v2_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.AllocGlobal_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.GlobalsPtr_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.SetGlobalsPtr_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v4_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v4_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.El_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.LengthBlock_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Length_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.LengthByte_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.RefByte_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.RefArray_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.DerefByte_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.UpdateByte_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v5_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v5_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.ToList_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v6_27, V_27v7_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v6_27),s('type.num.num',V_27v7_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v8_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v8_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.BlockCmp_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.IsBlock_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Ref_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Deref_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Update_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v9_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v9_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v_7c49_7c_7c48_7c_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v_7c49_7c_7c48_7c_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Equal_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v_7c49_7c_7c49_7c_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v_7c49_7c_7c49_7c_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Add_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Sub_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Mult_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Div_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Mod_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Less_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.LessEq_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.Greater_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.GreaterEq_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.opw',V_27v_7c49_7c3_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c4_27),s('type.ast.shift',V_27v_7c49_7c5_27),s('type.num.num',V_27v_7c49_7c6_27))))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & (![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.WordFromInt_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) & ![V_27g_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op','const.closLang.WordToInt_0'))),s('type.sptree.spt'(V_27A_27),V_27g_27))))))))))))))))))))))))))))))))))))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sptree.spt'(V_27A_27),'bool'),'happ'(s('fun'('type.closLang.op','fun'('type.sptree.spt'(V_27A_27),'bool')),V_27P_27),s('type.closLang.op',V_27v_27))),s('type.sptree.spt'(V_27A_27),V_27v_7c49_7c_27)))))).
fof('thm.clos_knownProof.opn_fresh_def|split|0', axiom, ![V_27A_27]: ![V_27n_27, V_27g_27]: (p(s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))),s('type.sptree.spt'(V_27A_27),V_27g_27)))) <=> ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27g_27))))))))).
fof('thm.clos_knownProof.opn_fresh_def|split|1', axiom, ![V_27A_27]: ![V_27v2_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v2_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|2', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.AllocGlobal_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|3', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.GlobalsPtr_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|4', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|5', axiom, ![V_27A_27]: ![V_27v4_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v4_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|6', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.El_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|7', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|8', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Length_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|9', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.LengthByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|10', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.RefByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|11', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.RefArray_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|12', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.DerefByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|13', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|14', axiom, ![V_27A_27]: ![V_27v5_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v5_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|15', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.ToList_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|16', axiom, ![V_27A_27]: ![V_27v7_27, V_27v6_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v6_27),s('type.num.num',V_27v7_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|17', axiom, ![V_27A_27]: ![V_27v8_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v8_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|18', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|19', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|20', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|21', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Deref_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|22', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|23', axiom, ![V_27A_27]: ![V_27v9_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v9_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|24', axiom, ![V_27A_27]: ![V_27v_7c49_7c_7c48_7c_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v_7c49_7c_7c48_7c_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|25', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|26', axiom, ![V_27A_27]: ![V_27v_7c49_7c_7c49_7c_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v_7c49_7c_7c49_7c_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|27', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|28', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|29', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Mult_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|30', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Div_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|31', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Mod_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|32', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Less_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|33', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.LessEq_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|34', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.Greater_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|35', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.GreaterEq_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|36', axiom, ![V_27A_27]: ![V_27v_7c49_7c3_27, V_27v_7c49_7c2_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.opw',V_27v_7c49_7c3_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|37', axiom, ![V_27A_27]: ![V_27v_7c49_7c6_27, V_27v_7c49_7c5_27, V_27v_7c49_7c4_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c4_27),s('type.ast.shift',V_27v_7c49_7c5_27),s('type.num.num',V_27v_7c49_7c6_27))),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|38', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.WordFromInt_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.opn_fresh_def|split|39', axiom, ![V_27A_27]: ![V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op','const.closLang.WordToInt_0'),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','T_0')).
fof('thm.clos_knownProof.known_op_better_definedg', axiom, ![V_27opn_27, V_27g_7c48_7c_27, V_27g_27, V_27apxs_27, V_27a_27]: (s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',V_27a_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) => p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))))).
fof('thm.clos_knownProof.exp_size_MEM|split|0', axiom, ![V_27e_27, V_27elist_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27e_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27elist_27)))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.closLang.exp_size_1'(s('type.closLang.exp',V_27e_27))),s('type.num.num','const.closLang.exp3_size_1'(s('type.list.list'('type.closLang.exp'),V_27elist_27)))))))).
fof('thm.clos_knownProof.exp_size_MEM|split|1', axiom, ![V_27x_27, V_27e_27, V_27ealist_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27x_27),s('type.closLang.exp',V_27e_27))),s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27ealist_27)))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.closLang.exp_size_1'(s('type.closLang.exp',V_27e_27))),s('type.num.num','const.closLang.exp|49|_size_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27ealist_27)))))))).
fof('ARITY_0_1_const.clos_knownProof.op_gbag', axiom, ![VV0]: s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.closLang.op','fun'('type.num.num','type.num.num')),'const.clos_knownProof.op_gbag_0'),s('type.closLang.op',VV0))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op',VV0)))).
fof('ARITY_0_2_const.bag.BAG_INSERT', axiom, ![V_27A_27]: ![VV0, VV1]: s('fun'(V_27A_27,'type.num.num'),'happ'(s('fun'('fun'(V_27A_27,'type.num.num'),'fun'(V_27A_27,'type.num.num')),'happ'(s('fun'(V_27A_27,'fun'('fun'(V_27A_27,'type.num.num'),'fun'(V_27A_27,'type.num.num'))),'const.bag.BAG_INSERT_0'),s(V_27A_27,VV0))),s('fun'(V_27A_27,'type.num.num'),VV1))) = s('fun'(V_27A_27,'type.num.num'),'const.bag.BAG_INSERT_2'(s(V_27A_27,VV0),s('fun'(V_27A_27,'type.num.num'),VV1)))).
fof('thm.clos_knownProof.op_gbag_primitive_def', axiom, s('fun'('type.closLang.op','fun'('type.num.num','type.num.num')),'const.clos_knownProof.op_gbag_0') = s('fun'('type.closLang.op','fun'('type.num.num','type.num.num')),'const.relation.WFREC_2'(s('fun'('type.closLang.op','fun'('type.closLang.op','bool')),'const.min.@_1'(s('fun'('fun'('type.closLang.op','fun'('type.closLang.op','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.closLang.op','fun'('type.num.num','type.num.num')),'fun'('type.closLang.op','fun'('type.num.num','type.num.num'))),'_dst_x0_1'(s('fun'('type.closLang.op','fun'('type.num.num','type.num.num')),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0_41'(s('fun'('type.closLang.op','fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.integer.int','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.ast.word_size','fun'('type.ast.opw','fun'('type.num.num','type.num.num'))),'fun'('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','fun'('type.num.num','type.num.num')))),'fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')))))))))))))))))))))))))))))))))))))))))),'const.closLang.op_CASE_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_INSERT_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'_dst_x0_1'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.integer.int','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.ast.word_size','fun'('type.ast.opw','fun'('type.num.num','type.num.num'))),'_dst_x0_1'(s('fun'('type.ast.opw','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))))),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','fun'('type.num.num','type.num.num')))),'_dst_x0_1'(s('fun'('type.ast.shift','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'_dst_x0_1'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')))))))))).
fof('thm.clos_knownProof.clos_knownProof_68_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27))) | (?[V_27n_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.AllocGlobal_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.GlobalsPtr_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.SetGlobalsPtr_0') | (?[V_27v2_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v2_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.El_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.LengthBlock_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Length_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.LengthByte_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.RefByte_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.RefArray_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.DerefByte_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.UpdateByte_0') | (?[V_27v3_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v3_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.ToList_0') | (?[V_27v4_27, V_27v5_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v4_27),s('type.num.num',V_27v5_27))) | (?[V_27v6_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v6_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.BlockCmp_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.IsBlock_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Ref_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Deref_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Update_0') | (?[V_27v7_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27))) | (?[V_27v8_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Equal_0') | (?[V_27v9_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Add_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Sub_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Mult_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Div_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Mod_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Less_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.LessEq_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Greater_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.GreaterEq_0') | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordFromInt_0') | s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordToInt_0')))))))))))))))))))))))))))))))))))))))) => (?[V_27n_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))) | (?[V_27v_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.AllocGlobal_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.GlobalsPtr_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.SetGlobalsPtr_0') | (?[V_27v2_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v2_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.El_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.LengthBlock_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Length_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.LengthByte_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.RefByte_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.RefArray_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.DerefByte_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.UpdateByte_0') | (?[V_27v3_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v3_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.ToList_0') | (?[V_27v4_27, V_27v5_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v4_27),s('type.num.num',V_27v5_27))) | (?[V_27v6_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v6_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.BlockCmp_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.IsBlock_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Ref_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Deref_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Update_0') | (?[V_27v7_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27))) | (?[V_27v8_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Equal_0') | (?[V_27v9_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Add_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Sub_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Mult_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Div_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Mod_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Less_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.LessEq_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.Greater_0') | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.GreaterEq_0') | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27))) | (s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordFromInt_0') | s('type.closLang.op',V_27a_27) = s('type.closLang.op','const.closLang.WordToInt_0')))))))))))))))))))))))))))))))))))))))))).
fof('thm.clos_knownProof.op_gbag_ind', axiom, ![V_27P_27]: ((![V_27n_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27)))))) & (![V_27v_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.AllocGlobal_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.GlobalsPtr_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.SetGlobalsPtr_0')))) & (![V_27v2_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v2_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.El_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.LengthBlock_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Length_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.LengthByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.RefByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.RefArray_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.DerefByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.UpdateByte_0')))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v3_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.ToList_0')))) & (![V_27v4_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v4_27),s('type.num.num',V_27v5_27)))))) & (![V_27v6_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v6_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.BlockCmp_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.IsBlock_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Ref_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Deref_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Update_0')))) & (![V_27v7_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27)))))) & (![V_27v8_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Equal_0')))) & (![V_27v9_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Add_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Sub_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Mult_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Div_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Mod_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Less_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.LessEq_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Greater_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.GreaterEq_0')))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27)))))) & (![V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordFromInt_0')))) & p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordToInt_0'))))))))))))))))))))))))))))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op',V_27v_27)))))).
fof('thm.clos_knownProof.op_gbag_def|split|0', axiom, ![V_27n_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27n_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_INSERT_2'(s('type.num.num',V_27n_27),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')))).
fof('thm.clos_knownProof.op_gbag_def|split|1', axiom, ![V_27v_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|2', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.AllocGlobal_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|3', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.GlobalsPtr_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|4', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|5', axiom, ![V_27v2_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27v2_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|6', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.El_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|7', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.LengthBlock_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|8', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Length_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|9', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.LengthByte_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|10', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.RefByte_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|11', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.RefArray_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|12', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.DerefByte_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|13', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.UpdateByte_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|14', axiom, ![V_27v3_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27v3_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|15', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.ToList_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|16', axiom, ![V_27v5_27, V_27v4_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27v4_27),s('type.num.num',V_27v5_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|17', axiom, ![V_27v6_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27v6_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|18', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.BlockCmp_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|19', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.IsBlock_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|20', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Ref_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|21', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Deref_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|22', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Update_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|23', axiom, ![V_27v7_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|24', axiom, ![V_27v8_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|25', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Equal_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|26', axiom, ![V_27v9_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|27', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Add_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|28', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Sub_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|29', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Mult_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|30', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Div_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|31', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Mod_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|32', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Less_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|33', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.LessEq_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|34', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.Greater_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|35', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.GreaterEq_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|36', axiom, ![V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|37', axiom, ![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27, V_27v_7c49_7c2_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|38', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.WordFromInt_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.op_gbag_def|split|39', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op','const.closLang.WordToInt_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.opn_fresh_gbag', axiom, ![V_27A_27]: ![V_27opn_27, V_27g_27]: s('bool','const.clos_knownProof.opn_fresh_2'(s('type.closLang.op',V_27opn_27),s('type.sptree.spt'(V_27A_27),V_27g_27))) = s('bool','const.pred_set.DISJOINT_2'(s('fun'('type.num.num','bool'),'const.bag.SET_OF_BAG_1'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op',V_27opn_27))))),s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'(V_27A_27),V_27g_27)))))).
fof('thm.clos_knownProof.known_op_adds_gbag', axiom, ![V_27opn_27, V_27g_7c48_7c_27, V_27g_27, V_27apxs_27, V_27apx_27]: (s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_op_3'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.clos_known.val_approx','type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.clos_known.val_approx',V_27apx_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) => p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))),s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.sptree.domain_1'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))),s('fun'('type.num.num','bool'),'const.bag.SET_OF_BAG_1'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op',V_27opn_27)))))))))))).
fof('ARITY_0_1_const.clos_knownProof.set_globals', axiom, ![VV0]: s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('type.closLang.exp',VV0))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',VV0)))).
fof('_dst_x000x100x101x010_ax', axiom, ![VA,VA4,VA3,VA5,VA1,VA2,VA6]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x101x010_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA1,VA4),V__0),s('fun'(VA1,'fun'(VA3,VA5)),V__1),s('fun'(VA2,VA6),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x01x10_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s('fun'(VA3,VA5),'happ'(s('fun'(VA1,'fun'(VA3,VA5)),V__1),s(VA1,V__z))),s('fun'(VA2,VA6),V__2)))).
fof('thm.clos_knownProof.set_globals_primitive_def', axiom, s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0') = s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.relation.WFREC_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'const.min.@_1'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'const.closLang.If_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'const.closLang.If_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x001x010x100_3'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'const.closLang.If_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Let_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Let_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x11x01_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'const.closLang.Raise_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Handle_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Handle_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x11x01_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'const.closLang.Tick_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp')),'const.closLang.Call_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.option.option'('type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x011x100_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp'))),'const.closLang.App_0'),s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))))),'_dst_x00000x00011x11111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))))),'_dst_x10001x01110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp'))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp'))),'const.closLang.App_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.num.num')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.option.option'('type.list.list'('type.num.num')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','bool'))))),'_dst_x10001x01111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','type.closLang.exp')))),'_dst_x001x010x100_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','type.closLang.exp')))),'const.closLang.Fn_0'),s('fun'('type.option.option'('type.list.list'('type.num.num')),'type.option.option'('type.list.list'('type.num.num'))),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.num.num')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','bool'))))),'_dst_x10001x01111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','type.closLang.exp')))),'_dst_x001x010x100_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.closLang.exp')))),'const.closLang.Letrec_0'),s('fun'('type.option.option'('type.list.list'('type.num.num')),'type.option.option'('type.list.list'('type.num.num'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'_i_0_0'))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.num.num')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.list.list'('type.num.num')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')))))),'_dst_x000000x000011x111111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')))))),'_dstsel_0_x000001x011110_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('fun'('type.closLang.exp','fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.closLang.exp')))),'_dst_x0111x1000_2'(s('fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.closLang.exp')))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.closLang.exp')))),'const.closLang.Letrec_0'),s('fun'('type.option.option'('type.list.list'('type.num.num')),'type.option.option'('type.list.list'('type.num.num'))),'_i_0_0'))),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.op','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp')),'const.closLang.Op_0'))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_dst_x01x00x10x10x10x10x10x10x10x10x10x10_12'(s('fun'('type.closLang.exp','fun'('fun'('type.num.num','fun'('type.num.num','type.num.num')),'fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'fun'('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num'))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))))),'fun'('fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num'))),'fun'('type.num.num','type.num.num'))))))))))))),'const.closLang.exp_CASE_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x0_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))))),'_dst_x0000x1110x1001_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'_dst_x000x111_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'_dst_x000x101x110_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num'))),'happ'(s('fun'('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num')))),'const.list.FOLDR_0'),s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'const.list.MAP_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'_dst_x000x111_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')))),'_dst_x000x101_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num'))),'_dst_x00x11_2'(s('fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num')),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num'))),'happ'(s('fun'('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num')))),'const.list.FOLDR_0'),s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'))),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'const.list.MAP_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num'))))),'_dst_x0000x1011_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')))),'_dst_x000x110x101_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num'))),'happ'(s('fun'('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num')))),'const.list.FOLDR_0'),s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'const.list.MAP_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))))),'_dst_x00000x10001_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))))),'_dst_x00000x10011_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num')))),'_dst_x000x100x101x010_4'(s('fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.num.num')))),'const.list.FOLDR_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.num.num','type.num.num'))),'_dstsel_0_x01_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')))),'_dst_x000x111_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')))),'_dst_x000x010x101_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num'))),'happ'(s('fun'('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.list.list'('fun'('type.num.num','type.num.num')),'fun'('type.num.num','type.num.num')))),'const.list.FOLDR_0'),s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'))),s('fun'('type.closLang.op','fun'('type.num.num','type.num.num')),'const.clos_knownProof.op_gbag_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.list.list'('type.closLang.exp'),'type.list.list'('fun'('type.num.num','type.num.num')))),'const.list.MAP_0'),s('fun'('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'fun'('type.closLang.exp','fun'('type.num.num','type.num.num'))),'_i_0_0')))))))))))).
fof('thm.clos_knownProof.clos_knownProof_74_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_7c48_7c_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))) | (?[V_27binds_27, V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27e_7c49_7c_27, V_27e2_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27v_7c49_7c_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v2_27, V_27f_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27f_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v3_27, V_27v4_27, V_27v5_27, V_27bod_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27bod_27))) | (?[V_27v6_27, V_27v7_27, V_27fbinds_27, V_27bod_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fbinds_27),s('type.closLang.exp',V_27bod_27))) | ?[V_27opn_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))))))))) => (?[V_27v_7c48_7c_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))) | (?[V_27binds_27, V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27e_7c49_7c_27, V_27e2_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27v_7c49_7c_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v2_27, V_27f_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27f_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v3_27, V_27v4_27, V_27v5_27, V_27bod_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27bod_27))) | (?[V_27v6_27, V_27v7_27, V_27fbinds_27, V_27bod_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fbinds_27),s('type.closLang.exp',V_27bod_27))) | ?[V_27opn_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))))))))))).
fof('thm.clos_knownProof.set_globals_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27)))))) & (![V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: ((p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e2_27)))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e3_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))))))) & (![V_27binds_27, V_27e_27]: ((![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27binds_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))))))) & (![V_27e_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))))))) & (![V_27e_7c49_7c_27, V_27e2_27]: ((p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e2_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))))))) & (![V_27e_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))))))) & (![V_27v_7c49_7c_27, V_27args_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))) & (![V_27v2_27, V_27f_27, V_27args_27]: ((![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27f_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27f_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))) & (![V_27v3_27, V_27v4_27, V_27v5_27, V_27bod_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27bod_27)))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27bod_27))))))) & (![V_27v6_27, V_27v7_27, V_27fbinds_27, V_27bod_27]: ((![V_27ne_27]: (p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27ne_27),s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fbinds_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27ne_27))))))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27bod_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fbinds_27),s('type.closLang.exp',V_27bod_27))))))) & ![V_27opn_27, V_27args_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27v_27)))))).
fof('thm.clos_knownProof.elist_globals_def', axiom, ![V_27es_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))) = s('fun'('type.num.num','type.num.num'),'const.list.FOLDR_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'),s('type.list.list'('fun'('type.num.num','type.num.num')),'const.list.MAP_2'(s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('type.list.list'('type.closLang.exp'),V_27es_27)))))).
fof('thm.clos_knownProof.elist_globals_thm|split|0', axiom, s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.elist_globals_thm|split|1', axiom, ![V_27rest_27, V_27exp_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27exp_27),s('type.list.list'('type.closLang.exp'),V_27rest_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27exp_27))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27rest_27)))))).
fof('thm.clos_knownProof.FOLDR_BAG_UNION_extract_acc', axiom, ![V_27B_27,V_27A_27]: ![V_27f_27, V_27l_27, V_27a_27, V_27b_27]: s('fun'(V_27B_27,'type.num.num'),'happ'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num')),'happ'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'(V_27B_27,'type.num.num'),V_27a_27))),s('fun'(V_27B_27,'type.num.num'),'const.list.FOLDR_3'(s('fun'(V_27A_27,'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),'const.combin.o_2'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'type.num.num')),V_27f_27))),s('fun'(V_27B_27,'type.num.num'),V_27b_27),s('type.list.list'(V_27A_27),V_27l_27))))) = s('fun'(V_27B_27,'type.num.num'),'const.list.FOLDR_3'(s('fun'(V_27A_27,'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),'const.combin.o_2'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'type.num.num')),V_27f_27))),s('fun'(V_27B_27,'type.num.num'),'happ'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num')),'happ'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'(V_27B_27,'type.num.num'),V_27a_27))),s('fun'(V_27B_27,'type.num.num'),V_27b_27))),s('type.list.list'(V_27A_27),V_27l_27)))).
fof('thm.clos_knownProof.set_globals_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')).
fof('thm.clos_knownProof.set_globals_def|split|1', axiom, ![V_27e3_27, V_27e2_27, V_27e_7c49_7c_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_7c49_7c_27))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e2_27))))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e3_27)))))).
fof('thm.clos_knownProof.set_globals_def|split|2', axiom, ![V_27e_27, V_27binds_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27binds_27)))))).
fof('thm.clos_knownProof.set_globals_def|split|3', axiom, ![V_27e_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27)))).
fof('thm.clos_knownProof.set_globals_def|split|4', axiom, ![V_27e2_27, V_27e_7c49_7c_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_7c49_7c_27))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e2_27)))))).
fof('thm.clos_knownProof.set_globals_def|split|5', axiom, ![V_27e_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27)))).
fof('thm.clos_knownProof.set_globals_def|split|6', axiom, ![V_27v_7c49_7c_27, V_27args_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))).
fof('thm.clos_knownProof.set_globals_def|split|7', axiom, ![V_27v2_27, V_27f_27, V_27args_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27f_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27f_27))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))).
fof('thm.clos_knownProof.set_globals_def|split|8', axiom, ![V_27v5_27, V_27v4_27, V_27v3_27, V_27bod_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27bod_27))))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27bod_27)))).
fof('thm.clos_knownProof.set_globals_def|split|9', axiom, ![V_27v7_27, V_27v6_27, V_27fbinds_27, V_27bod_27]: s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fbinds_27),s('type.closLang.exp',V_27bod_27))))) = s('fun'('type.num.num','type.num.num'),'const.list.FOLDR_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'fun'('type.num.num','type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('type.closLang.exp',V_27bod_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fbinds_27)))).
fof('thm.clos_knownProof.set_globals_def|split|10', axiom, ![V_27opn_27, V_27args_27]: s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.BAG_UNION_2'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op',V_27opn_27))),s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))).
fof('thm.clos_knownProof.FINITE_BAG_FOLDR', axiom, ![V_27B_27,V_27A_27]: ![V_27l_27, V_27f_27, V_27a_27]: ((p(s('bool','const.bag.FINITE_BAG_1'(s('fun'(V_27B_27,'type.num.num'),V_27a_27)))) & ![V_27e_27, V_27a_7c48_7c_27]: ((p(s('bool','const.bag.FINITE_BAG_1'(s('fun'(V_27B_27,'type.num.num'),V_27a_7c48_7c_27)))) & p(s('bool','const.bool.IN_2'(s(V_27A_27,V_27e_27),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27l_27))))))) => p(s('bool','const.bag.FINITE_BAG_1'(s('fun'(V_27B_27,'type.num.num'),'happ'(s('fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num')),'happ'(s('fun'(V_27A_27,'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),V_27f_27),s(V_27A_27,V_27e_27))),s('fun'(V_27B_27,'type.num.num'),V_27a_7c48_7c_27)))))))) => p(s('bool','const.bag.FINITE_BAG_1'(s('fun'(V_27B_27,'type.num.num'),'const.list.FOLDR_3'(s('fun'(V_27A_27,'fun'('fun'(V_27B_27,'type.num.num'),'fun'(V_27B_27,'type.num.num'))),V_27f_27),s('fun'(V_27B_27,'type.num.num'),V_27a_27),s('type.list.list'(V_27A_27),V_27l_27)))))))).
fof('thm.clos_knownProof.FINITE_set_globals', axiom, ![V_27e_27]: p(s('bool','const.bag.FINITE_BAG_1'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27))))))).
fof('thm.clos_knownProof.FINITE_BAG_elist_globals', axiom, ![V_27es_27]: p(s('bool','const.bag.FINITE_BAG_1'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))))))).
fof('thm.clos_knownProof.clos_knownProof_84_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27loc__opt_27, V_27g_7c48_7c_27, V_27fns_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.APPEND_2'(s('type.list.list'('type.clos_known.val_approx'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.clos_known.val_approx'),'const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('fun'('type.num.num','type.clos_known.val_approx'),'const.combin.K_1'(s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('fun'('type.num.num','fun'('type.num.num','type.clos_known.val_approx')),'_dst_x00x11x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.clos_known.val_approx')),'const.clos_known.Clos_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.num.num','type.closLang.exp'))),'const.list.EL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_86_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27num__args_27, V_27g_7c48_7c_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.APPEND_2'(s('type.list.list'('type.clos_known.val_approx'),'const.rich_list.REPLICATE_2'(s('type.num.num',V_27num__args_27),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_88_prove_ltb', axiom, ![V_27g_7c48_7c_27, V_27es_27, V_27apxs_27]: ?[V_27e2_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_89_prove_ltb', axiom, ![V_27x_27, V_27g_7c39_7c_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_9|49|_prove_ltb', axiom, ![V_27g_7c48_7c_27, V_27es_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_94_prove_ltb', axiom, ![V_27x_7c49_7c_27, V_27g_7c48_7c_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_95_prove_ltb', axiom, ![V_27x2_27, V_27g_7c39_7c_27, V_27apxs_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.CONS_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49||48|3_prove_ltb', axiom, ![V_27x2_27, V_27g_7c39_7c_27, V_27e_7c49_7c_27, V_27apxs_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),'const.list.APPEND_2'(s('type.list.list'('type.clos_known.val_approx'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx'),'type.clos_known.val_approx'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49||48|6_prove_ltb', axiom, ![V_27x2_27, V_27g_7c39_7c_27, V_27apxs_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49||48|7_prove_ltb', axiom, ![V_27x3_27, V_27g_7c39_7c_7c39_7c_27, V_27apxs_27]: ?[V_27e3_27, V_27g_7c39_7c_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x3_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e3_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49||49||49|_prove_ltb', axiom, ![V_27x_27, V_27g_7c48_7c_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49||49|2_prove_ltb', axiom, ![V_27y_27, V_27xs_27, V_27g_7c39_7c_27, V_27apxs_27]: ?[V_27e2_27, V_27g_7c39_7c_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_7c39_7c_27)))).
fof('thm.clos_knownProof.known_better_definedg', axiom, ![V_27es_27, V_27apxs_27, V_27g_7c48_7c_27, V_27alist_27, V_27g_27]: (s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27alist_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) => p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))))).
fof('thm.clos_knownProof.clos_knownProof_|49||49|5_prove_ltb', axiom, ![V_27a_27]: ((?[V_27m_27, V_27n_27, V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.closSem.v',V_27v_27))) | (?[V_27vas_27, V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),V_27vas_27))),s('type.closSem.v',V_27v_27))) | (?[V_27i_27, V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))),s('type.closSem.v',V_27v_27))) | (?[V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.closSem.v',V_27v_27))) | ?[V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.closSem.v',V_27v_27))))))) => (?[V_27m_27, V_27n_27, V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.closSem.v',V_27v_27))) | (?[V_27vas_27, V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),V_27vas_27))),s('type.closSem.v',V_27v_27))) | (?[V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.closSem.v',V_27v_27))) | (?[V_27i_27, V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))),s('type.closSem.v',V_27v_27))) | ?[V_27v_27]: s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),V_27a_27) = s('type.pair.prod'('type.clos_known.val_approx','type.closSem.v'),'const.pair.,_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.closSem.v',V_27v_27))))))))).
fof('thm.clos_knownProof.val_approx_val_ind', axiom, ![V_27P_27]: ((![V_27m_27, V_27n_27, V_27v_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))))),s('type.closSem.v',V_27v_27)))) & (![V_27vas_27, V_27v_27]: (![V_27v_7c39_7c_27, V_27va_27, V_27vs_27]: ((p(s('bool','const.bool.IN_2'(s('type.clos_known.val_approx',V_27v_7c39_7c_27),s('fun'('type.clos_known.val_approx','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.clos_known.val_approx'),V_27vas_27)))))) & p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27va_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27vs_27))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx',V_27v_7c39_7c_27))),s('type.closSem.v',V_27va_27))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),V_27vas_27))))),s('type.closSem.v',V_27v_27))))) & (![V_27v_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx','const.clos_known.Impossible_0'))),s('type.closSem.v',V_27v_27)))) & (![V_27i_27, V_27v_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))))),s('type.closSem.v',V_27v_27)))) & ![V_27v_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx','const.clos_known.Other_0'))),s('type.closSem.v',V_27v_27)))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),V_27P_27),s('type.clos_known.val_approx',V_27v_27))),s('type.closSem.v',V_27v_7c49_7c_27)))))).
fof('thm.clos_knownProof.val_approx_val_def|split|0', axiom, ![V_27v_27, V_27n_27, V_27m_27]: (p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx','const.clos_known.Clos_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))),s('type.closSem.v',V_27v_27)))) <=> (?[V_27e2_27, V_27b_27]: s('type.closSem.v',V_27v_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27m_27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.list.list'('type.closSem.v'),V_27e2_27),s('type.num.num',V_27n_27),s('type.closLang.exp',V_27b_27))) | ?[V_27base_27, V_27env_27, V_27fs_27, V_27j_27]: (s('type.closSem.v',V_27v_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27base_27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fs_27),s('type.num.num',V_27j_27))) & (s('type.num.num',V_27m_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27base_27),s('type.num.num',V_27j_27))) & s('type.num.num',V_27n_27) = s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.list.EL_2'(s('type.num.num',V_27j_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fs_27)))))))))).
fof('ARITY_0_2_const.clos_knownProof.val_approx_val', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),'const.clos_knownProof.val_approx_val_0'),s('type.clos_known.val_approx',VV0))),s('type.closSem.v',VV1))) = s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx',VV0),s('type.closSem.v',VV1)))).
fof('thm.clos_knownProof.val_approx_val_def|split|1', axiom, ![V_27vas_27, V_27v_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),'const.clos_knownProof.val_approx_val_0'),s('type.clos_known.val_approx','const.clos_known.Tuple_1'(s('type.list.list'('type.clos_known.val_approx'),V_27vas_27))))),s('type.closSem.v',V_27v_27)))) <=> ?[V_27n_27, V_27vs_27]: (s('type.closSem.v',V_27v_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27vs_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),'const.clos_knownProof.val_approx_val_0'),s('type.list.list'('type.clos_known.val_approx'),V_27vas_27),s('type.list.list'('type.closSem.v'),V_27vs_27))))))).
fof('thm.clos_knownProof.val_approx_val_def|split|2', axiom, ![V_27v_27]: ~ (p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx','const.clos_known.Impossible_0'),s('type.closSem.v',V_27v_27)))))).
fof('thm.clos_knownProof.val_approx_val_def|split|3', axiom, ![V_27v_27, V_27i_27]: (p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx','const.clos_known.Int_1'(s('type.integer.int',V_27i_27))),s('type.closSem.v',V_27v_27)))) <=> s('type.closSem.v',V_27v_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27i_27))))).
fof('thm.clos_knownProof.val_approx_val_def|split|4', axiom, ![V_27v_27]: p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx','const.clos_known.Other_0'),s('type.closSem.v',V_27v_27))))).
fof('thm.clos_knownProof.any_el_ALT', axiom, ![V_27A_27]: ![V_27l_27, V_27n_27, V_27d_27]: s(V_27A_27,'const.misc.any_el_3'(s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27l_27),s(V_27A_27,V_27d_27))) = s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27l_27))))),s(V_27A_27,'const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),V_27l_27))),s(V_27A_27,V_27d_27)))).
fof('thm.clos_knownProof.val_approx_val_merge_I', axiom, ![V_27a_7c49_7c_27, V_27v_27, V_27a2_27]: ((p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.closSem.v',V_27v_27)))) | p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx',V_27a2_27),s('type.closSem.v',V_27v_27))))) => p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx','const.clos_known.merge_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27))),s('type.closSem.v',V_27v_27)))))).
fof('thm.clos_knownProof.val_approx_better_approx', axiom, ![V_27a_7c49_7c_27, V_27v_27, V_27a2_27]: ((p(s('bool','const.clos_knownProof.subapprox_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.clos_known.val_approx',V_27a2_27)))) & p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx',V_27a_7c49_7c_27),s('type.closSem.v',V_27v_27))))) => p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx',V_27a2_27),s('type.closSem.v',V_27v_27)))))).
fof('thm.clos_knownProof.state_globals_approx_def', axiom, ![V_27A_27]: ![V_27s_27, V_27g_27]: (p(s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))) <=> ![V_27k_27, V_27v_27]: (s('type.option.option'('type.option.option'('type.closSem.v')),'const.closSem.get_global_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('type.option.option'('type.option.option'('type.closSem.v')),'const.option.SOME_1'(s('type.option.option'('type.closSem.v'),'const.option.SOME_1'(s('type.closSem.v',V_27v_27))))) => ?[V_27a_27]: (s('type.option.option'('type.clos_known.val_approx'),'const.sptree.lookup_2'(s('type.num.num',V_27k_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('type.option.option'('type.clos_known.val_approx'),'const.option.SOME_1'(s('type.clos_known.val_approx',V_27a_27))) & p(s('bool','const.clos_knownProof.val_approx_val_2'(s('type.clos_known.val_approx',V_27a_27),s('type.closSem.v',V_27v_27)))))))).
fof('thm.clos_knownProof.state_approx_better_definedg', axiom, ![V_27A_27]: ![V_27s_27, V_27g2_27, V_27g_7c49_7c_27]: ((p(s('bool','const.clos_knownProof.better_definedg_2'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27)))) & p(s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c49_7c_27))))) => p(s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g2_27)))))).
fof('thm.clos_knownProof.eval_approx_def', axiom, ![V_27FFI_27]: ![V_27g_7c48_7c_27, V_27EA_27, V_27es_27, V_27as_27]: (p(s('bool','const.clos_knownProof.eval_approx_5'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27),s('type.list.list'('type.clos_known.val_approx'),V_27EA_27),s('type.bool.itself'(V_27FFI_27),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.list.list'('type.clos_known.val_approx'),V_27as_27)))) <=> ![V_27s_7c48_7c_27, V_27env_27, V_27vs_27, V_27s_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27FFI_27),V_27s_7c48_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),V_27vs_27))),s('type.closSem.state'(V_27FFI_27),V_27s_27))) & (p(s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27FFI_27),V_27s_7c48_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27)))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),'const.clos_knownProof.val_approx_val_0'),s('type.list.list'('type.clos_known.val_approx'),V_27EA_27),s('type.list.list'('type.closSem.v'),V_27env_27)))))) => p(s('bool','const.list.LIST_REL_3'(s('fun'('type.clos_known.val_approx','fun'('type.closSem.v','bool')),'const.clos_knownProof.val_approx_val_0'),s('type.list.list'('type.clos_known.val_approx'),V_27as_27),s('type.list.list'('type.closSem.v'),V_27vs_27))))))).
fof('thm.clos_knownProof.eval_approx_nil', axiom, ![V_27A_27]: ![V_27g_27, V_27as_27]: p(s('bool','const.clos_knownProof.eval_approx_5'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27),s('type.list.list'('type.clos_known.val_approx'),V_27as_27),s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'),s('type.list.list'('type.clos_known.val_approx'),'const.list.NIL_0'))))).
fof('thm.clos_knownProof.clos_knownProof_|49|3|49|_prove_ltb', axiom, ![V_27g_7c48_7c_27, V_27exps_27, V_27apxs_27]: ?[V_27e2_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27exps_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e2_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|34_prove_ltb', axiom, ![V_27g_7c48_7c_27, V_27exps_27, V_27apxs_27]: ?[V_27e_7c49_7c_27, V_27g_7c39_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27exps_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27e_7c49_7c_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c39_7c_27)))).
fof('thm.clos_knownProof.known_preserves_gwf', axiom, ![V_27exps_27, V_27apxs_27, V_27g_7c48_7c_27, V_27alist_27, V_27g_27]: ((s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.clos_known.known_3'(s('type.list.list'('type.closLang.exp'),V_27exps_27),s('type.list.list'('type.clos_known.val_approx'),V_27apxs_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),'type.sptree.spt'('type.clos_known.val_approx')),'const.pair.,_2'(s('type.list.list'('type.pair.prod'('type.closLang.exp','type.clos_known.val_approx')),V_27alist_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) & p(s('bool','const.sptree.wf_1'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_7c48_7c_27))))) => p(s('bool','const.sptree.wf_1'(s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))))).
fof('thm.clos_knownProof.mapped_globals_def', axiom, ![V_27A_27]: ![V_27s_27]: s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27))) = s('fun'('type.num.num','bool'),'const.pred_set.GSPEC_1'(s('fun'('type.num.num','type.pair.prod'('type.num.num','bool')),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('bool','type.pair.prod'('type.num.num','bool'))),'const.pair.,_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closSem.v','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closSem.v','bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.option.option'('type.closSem.v')),'fun'('type.option.option'('type.option.option'('type.closSem.v')),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.option.option'('type.closSem.v'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.option.option'('type.closSem.v')),'type.option.option'('type.option.option'('type.closSem.v')))),'const.closSem.get_global_0'),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27))))),s('fun'('type.closSem.v','type.option.option'('type.option.option'('type.closSem.v'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.closSem.v'),'type.option.option'('type.option.option'('type.closSem.v'))),'const.option.SOME_0'),s('fun'('type.closSem.v','type.option.option'('type.closSem.v')),'const.option.SOME_0')))))))))))).
fof('thm.clos_knownProof.mapped_globals_refupdate', axiom, ![V_27A_27]: ![V_27s_27, V_27f_27]: s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),'const.closSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('thm.clos_knownProof.mapped_globals_ffiupdate', axiom, ![V_27A_27,V_27B_27]: ![V_27v_27, V_27s_27]: s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),'const.closSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27B_27),'type.ffi.ffi_state'(V_27A_27)),V_27v_27),s('type.closSem.state'(V_27B_27),V_27s_27))))) = s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.mapped_globals_clockupdate', axiom, ![V_27A_27]: ![V_27s_27, V_27f_27]: s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('thm.clos_knownProof.mapped_globals_dec_clock', axiom, ![V_27A_27]: ![V_27s_27, V_27n_27]: s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('thm.clos_knownProof.state_globals_approx_clock_fupd', axiom, ![V_27A_27]: ![V_27s_27, V_27g_27, V_27f_27]: s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))).
fof('thm.clos_knownProof.state_globals_approx_dec_clock', axiom, ![V_27A_27]: ![V_27s_27, V_27n_27, V_27g_27]: s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.closSem.state'(V_27A_27),V_27s_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))).
fof('thm.clos_knownProof.state_globals_approx_refsfupd', axiom, ![V_27A_27]: ![V_27s_27, V_27g_27, V_27f_27]: s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),'const.closSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))).
fof('thm.clos_knownProof.state_globals_approx_ffifupd', axiom, ![V_27A_27,V_27B_27]: ![V_27s_27, V_27g_27, V_27f_27]: s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27A_27),'const.closSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27B_27),'type.ffi.ffi_state'(V_27A_27)),V_27f_27),s('type.closSem.state'(V_27B_27),V_27s_27))),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27))) = s('bool','const.clos_knownProof.state_globals_approx_2'(s('type.closSem.state'(V_27B_27),V_27s_27),s('type.sptree.spt'('type.clos_known.val_approx'),V_27g_27)))).
fof('thm.clos_knownProof.clos_knownProof_|49|66_prove_ltb', axiom, ![V_27vl_27, V_27v_27]: (p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27v_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27vl_27)))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.closSem.v_size_1'(s('type.closSem.v',V_27v_27))),s('type.num.num','const.closSem.v|49|_size_1'(s('type.list.list'('type.closSem.v'),V_27vl_27)))))))).
fof('ARITY_0_1_const.clos_knownProof.elist_globals', axiom, ![VV0]: s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')),'const.clos_knownProof.elist_globals_0'),s('type.list.list'('type.closLang.exp'),VV0))) = s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),VV0)))).
fof('_dst_x111x000x000_ax', axiom, ![VA2,VA3,VA,VA1,VA4,VA5]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x111x000x000_3'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),V__x),s(VA4,V__0),s(VA5,V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x11x00x00_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),V__x),s(VA1,V__z))),s(VA4,V__0),s(VA5,V__1)))).
fof('_dst_x1000001x0111110_ax', axiom, ![VA7,VA,VA1,VA2,VA3,VA4,VA5,VA6,VA8]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x1000001x0111110_2'(s('fun'(VA1,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000001x111110_2'(s('fun'(VA7,'fun'(VA8,VA)),'happ'(s('fun'(VA1,'fun'(VA7,'fun'(VA8,VA))),V__x),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__0)))).
fof('_dst_x01x00x00x10x00x10x10_ax', axiom, ![VA2,VA,VA3,VA4,VA5,VA6,VA7,VA8,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x00x00x10x00x10x10_7'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),V__x),s(VA3,V__0),s(VA4,V__1),s('fun'(VA1,VA5),V__2),s(VA6,V__3),s('fun'(VA1,VA7),V__4),s('fun'(VA1,VA8),V__5))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x0x0x0x0x0_7'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z))),s(VA6,V__3),s(VA7,'happ'(s('fun'(VA1,VA7),V__4),s(VA1,V__z))),s(VA8,'happ'(s('fun'(VA1,VA8),V__5),s(VA1,V__z)))))).
fof('_dst_x011x100x000x000_ax', axiom, ![VA2,VA3,VA,VA4,VA1,VA5,VA6]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x011x100x000x000_4'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),V__x),s('fun'(VA1,VA4),V__0),s(VA5,V__1),s(VA6,V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x11x00x00x00_4'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s(VA5,V__1),s(VA6,V__2)))).
fof('_dst_x0111x1000x0000_ax', axiom, ![VA2,VA3,VA4,VA,VA5,VA1,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0111x1000x0000_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),V__x),s('fun'(VA1,VA5),V__0),s(VA6,V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x111x000x000_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),V__x),s(VA5,'happ'(s('fun'(VA1,VA5),V__0),s(VA1,V__z))),s(VA6,V__1)))).
fof('_dst_x0011x0100x1000x0000_ax', axiom, ![VA3,VA4,VA,VA2,VA5,VA6,VA1,VA7]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0011x0100x1000x0000_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s('fun'(VA2,VA5),V__0),s('fun'(VA1,VA6),V__1),s(VA7,V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x011x100x000x000_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s('fun'(VA2,VA5),V__0),s(VA6,'happ'(s('fun'(VA1,VA6),V__1),s(VA1,V__z))),s(VA7,V__2)))).
fof('_dst_x00111x01000x10000_ax', axiom, ![VA3,VA4,VA5,VA,VA2,VA6,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00111x01000x10000_3'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s('fun'(VA2,VA6),V__0),s('fun'(VA1,VA7),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0111x1000x0000_3'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s('fun'(VA2,VA6),V__0),s(VA7,'happ'(s('fun'(VA1,VA7),V__1),s(VA1,V__z)))))).
fof('_dst_x00011x00100x01000x10000_ax', axiom, ![VA4,VA5,VA,VA3,VA6,VA2,VA7,VA8,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00011x00100x01000x10000_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA3,VA6),V__0),s('fun'(VA2,VA7),V__1),s('fun'(VA1,VA8),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0011x0100x1000x0000_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA3,VA6),V__0),s('fun'(VA2,VA7),V__1),s(VA8,'happ'(s('fun'(VA1,VA8),V__2),s(VA1,V__z)))))).
fof('_dst_x00000x01110_ax', axiom, ![VA1,VA5,VA,VA2,VA3,VA4,VA6]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x01110_2'(s('fun'(VA6,VA),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1110_2'(s('fun'(VA6,VA),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),V__0)))).
fof('_dst_x00000x01101_ax', axiom, ![VA1,VA4,VA,VA2,VA3,VA5,VA6]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x01101_2'(s('fun'(VA6,VA),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA6))),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1101_2'(s('fun'(VA6,VA),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA6))),V__0)))).
fof('_dst_x000000x101110_ax', axiom, ![VA2,VA6,VA,VA3,VA4,VA5,VA7,VA1]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x101110_2'(s('fun'(VA7,VA),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA7)))),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01110_2'(s('fun'(VA7,VA),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA7))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA7)))),V__0),s(VA1,V__z)))))).
fof('_dst_x000000x101101_ax', axiom, ![VA2,VA5,VA,VA3,VA4,VA6,VA7,VA1]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x101101_2'(s('fun'(VA7,VA),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA7)))),V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01101_2'(s('fun'(VA7,VA),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA6,VA7))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA7)))),V__0),s(VA1,V__z)))))).
fof('_dst_x0000000x0000011x1111111_ax', axiom, ![VA,VA8,VA2,VA3,VA4,VA5,VA6,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0000011x1111111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA6,'fun'(VA7,VA8)),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x000011x111111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA6,'fun'(VA7,VA8)),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))))),V__1),s(VA1,V__z)))))).
fof('thm.clos_knownProof.vsgc_free_primitive_def', axiom, s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0') = s('fun'('type.closSem.v','bool'),'const.relation.WFREC_2'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.min.@_1'(s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.closSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x0000000x0000011x1111111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.closSem.v','fun'('fun'('type.closSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x1000001x0111110_2'(s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closSem.v','fun'('type.closSem.v','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'type.closSem.v'))))),'_dst_x00111x01000x10000_3'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','fun'('type.closLang.exp','type.closSem.v'))))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','fun'('type.closLang.exp','type.closSem.v'))))),'const.closSem.Closure_0'),s('fun'('type.list.list'('type.closSem.v'),'type.list.list'('type.closSem.v')),'_i_0_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.closSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x0000000x0000011x1111111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.closSem.v','fun'('fun'('type.closSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x1000001x0111110_2'(s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closSem.v','fun'('type.closSem.v','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'type.closSem.v'))))),'_dst_x00011x00100x01000x10000_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','fun'('type.closLang.exp','type.closSem.v'))))),'const.closSem.Closure_0'),s('fun'('type.list.list'('type.closSem.v'),'type.list.list'('type.closSem.v')),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.closSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x0000000x0000011x1111111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.closSem.v','fun'('fun'('type.closSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x1000001x0111110_2'(s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closSem.v','fun'('type.closSem.v','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'type.closSem.v'))))),'_dst_x00111x01000x10000_3'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.closSem.v'))))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.closSem.v'))))),'const.closSem.Recclosure_0'),s('fun'('type.list.list'('type.closSem.v'),'type.list.list'('type.closSem.v')),'_i_0_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.closSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x0000000x0000011x1111111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.closSem.v','fun'('fun'('type.closSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool'))))))),'_dst_x1000001x0111110_2'(s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closSem.v','fun'('type.closSem.v','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.list.list'('type.closSem.v'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'type.closSem.v'))))),'_dst_x00011x00100x01000x10000_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.closSem.v'))))),'const.closSem.Recclosure_0'),s('fun'('type.list.list'('type.closSem.v'),'type.list.list'('type.closSem.v')),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))))))))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closSem.v','bool'),'bool'),'!_0'),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'_dst_x01x10_2'(s('fun'('type.closSem.v','fun'('fun'('type.closSem.v','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'fun'('type.closSem.v','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'fun'('type.closSem.v','fun'('type.closSem.v','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'type.closSem.v')),'const.closSem.Block_0'))))))))))))))))))))))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.closSem.v','bool')),'_dst_x01x00x00x10x00x10x10_7'(s('fun'('type.closSem.v','fun'('fun'('type.integer.int','bool'),'fun'('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'bool'),'fun'('fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'bool')),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','fun'('type.closLang.exp','bool'))))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','bool'))))),'bool'))))))),'const.closSem.v_CASE_0'),s('fun'('type.integer.int','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),'bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.num.num','fun'('type.list.list'('type.closSem.v'),'bool'))),'_dst_x000x101_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.closSem.v','bool')),'_i_0_0'))))),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','fun'('type.closLang.exp','bool')))))),'_dst_x000000x101101_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0001x1110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'bool')),'=_0'),s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.closSem.v','bool')),'_i_0_0'))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.closSem.v','bool')),'_i_0_0'))))))))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','bool')))))),'_dst_x000000x101110_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool')))),'_dst_x0000x0001x1110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'bool')),'=_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')),'const.clos_knownProof.elist_globals_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'))))),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.closSem.v','bool')),'_i_0_0'))),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closSem.v','bool'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closSem.v','bool'),'fun'('type.closSem.v','bool')),'_i_0_0')))))))))))))).
fof('thm.clos_knownProof.clos_knownProof_|49|68_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27v_27))) | (?[V_27v6_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v6_27))) | (?[V_27v4_27, V_27VL_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.closSem.v'),V_27VL_27))) | (?[V_27v9_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27v9_27))) | (?[V_27v_7c48_7c_27, V_27VL_7c49_7c_27, V_27VL2_27, V_27v_7c49_7c_27, V_27body_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27v_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.num.num',V_27v_7c49_7c_27),s('type.closLang.exp',V_27body_27))) | ?[V_27v2_27, V_27VL_7c49_7c_27, V_27VL2_27, V_27bods_27, V_27v3_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27bods_27),s('type.num.num',V_27v3_27)))))))) => (?[V_27v_7c48_7c_27, V_27VL_7c49_7c_27, V_27VL2_27, V_27v_7c49_7c_27, V_27body_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27v_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.num.num',V_27v_7c49_7c_27),s('type.closLang.exp',V_27body_27))) | (?[V_27v2_27, V_27VL_7c49_7c_27, V_27VL2_27, V_27bods_27, V_27v3_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27bods_27),s('type.num.num',V_27v3_27))) | (?[V_27v4_27, V_27VL_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.closSem.v'),V_27VL_27))) | (?[V_27v_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27v_27))) | (?[V_27v6_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v6_27))) | ?[V_27v9_27]: s('type.closSem.v',V_27a_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27v9_27)))))))))).
fof('thm.clos_knownProof.vsgc_free_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27, V_27VL_7c49_7c_27, V_27VL2_27, V_27v_7c49_7c_27, V_27body_27]: ((![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27a_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v',V_27a_27))))) & ![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27a_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27VL2_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v',V_27a_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27v_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.num.num',V_27v_7c49_7c_27),s('type.closLang.exp',V_27body_27))))))) & (![V_27v2_27, V_27VL_7c49_7c_27, V_27VL2_27, V_27bods_27, V_27v3_27]: ((![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27a_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v',V_27a_27))))) & ![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27a_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27VL2_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v',V_27a_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27bods_27),s('type.num.num',V_27v3_27))))))) & (![V_27v4_27, V_27VL_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closSem.v',V_27a_27),s('fun'('type.closSem.v','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closSem.v'),V_27VL_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.closSem.v'),V_27VL_27))))))) & (![V_27v_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27v_27)))))) & (![V_27v6_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v6_27)))))) & ![V_27v9_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27v9_27))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),V_27P_27),s('type.closSem.v',V_27v_27)))))).
fof('thm.clos_knownProof.vsgc_free_def|split|0', axiom, ![V_27v_7c49_7c_27, V_27v_7c48_7c_27, V_27body_27, V_27VL2_27, V_27VL_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27v_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.num.num',V_27v_7c49_7c_27),s('type.closLang.exp',V_27body_27)))))) <=> (s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27body_27))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0') & (p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27VL2_27)))))))).
fof('thm.clos_knownProof.vsgc_free_def|split|1', axiom, ![V_27v3_27, V_27v2_27, V_27bods_27, V_27VL2_27, V_27VL_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27VL2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27bods_27),s('type.num.num',V_27v3_27)))))) <=> (s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27bods_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0') & (p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27VL_7c49_7c_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27VL2_27)))))))).
fof('thm.clos_knownProof.vsgc_free_def|split|2', axiom, ![V_27v4_27, V_27VL_27]: s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.closSem.v'),V_27VL_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27VL_27)))).
fof('ARITY_0_1_const.clos_knownProof.vsgc_free', axiom, ![VV0]: s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v',VV0))) = s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v',VV0)))).
fof('thm.clos_knownProof.vsgc_free_def|split|3', axiom, ![V_27v_27]: p(s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27v_27))))))).
fof('thm.clos_knownProof.vsgc_free_def|split|4', axiom, ![V_27v6_27]: p(s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27v6_27))))))).
fof('thm.clos_knownProof.vsgc_free_def|split|5', axiom, ![V_27v9_27]: p(s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27v9_27))))))).
fof('thm.clos_knownProof.vsgc_free_Unit', axiom, p(s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v','const.closSem.Unit_0'))))).
fof('thm.clos_knownProof.vsgc_free_Boolv', axiom, ![V_27b_27]: p(s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v','const.closSem.Boolv_1'(s('bool',V_27b_27))))))).
fof('ARITY_0_1_const.clos_knownProof.rsgc_free', axiom, ![VV0]: s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),'const.clos_knownProof.rsgc_free_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),VV0))) = s('bool','const.clos_knownProof.rsgc_free_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),VV0)))).
fof('thm.clos_knownProof.rsgc_free_primitive_def', axiom, s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),'const.clos_knownProof.rsgc_free_0') = s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),'const.relation.WFREC_2'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool')),'const.min.@_1'(s('fun'('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),'fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool')),'_dst_x0_1'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'fun'('fun'('type.list.list'('type.closSem.v'),'bool'),'fun'('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'bool'),'bool'))),'const.semanticPrimitives.result_CASE_0'),s('fun'('type.list.list'('type.closSem.v'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('type.list.list'('type.closSem.v'),'bool'),'const.list.EVERY_1'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'))))),s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'bool'),'_dst_x1x0x0_3'(s('fun'('type.semanticPrimitives.error_result'('type.closSem.v'),'fun'('fun'('type.closSem.v','bool'),'fun'('fun'('type.semanticPrimitives.abort','bool'),'bool'))),'const.semanticPrimitives.error_result_CASE_0'),s('fun'('type.closSem.v','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'))),s('fun'('type.semanticPrimitives.abort','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0')))))))))))))).
fof('thm.clos_knownProof.clos_knownProof_|49|75_prove_ltb', axiom, ![V_27a_27]: ((?[V_27vs_27]: s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27a_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),V_27vs_27))) | (?[V_27v_27]: s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27a_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.closSem.v',V_27v_27))))) | ?[V_27v_7c48_7c_27]: s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27a_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c48_7c_27))))))) => (?[V_27vs_27]: s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27a_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),V_27vs_27))) | (?[V_27v_7c48_7c_27]: s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27a_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c48_7c_27))))) | ?[V_27v_27]: s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27a_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.closSem.v',V_27v_27))))))))).
fof('thm.clos_knownProof.rsgc_free_ind', axiom, ![V_27P_27]: ((![V_27vs_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),V_27P_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),V_27vs_27)))))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),V_27P_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c48_7c_27)))))))) & ![V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),V_27P_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.closSem.v',V_27v_27)))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'bool'),V_27P_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27v_27)))))).
fof('thm.clos_knownProof.rsgc_free_def|split|0', axiom, ![V_27vs_27]: s('bool','const.clos_knownProof.rsgc_free_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.list.list'('type.closSem.v'),V_27vs_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27vs_27)))).
fof('thm.clos_knownProof.rsgc_free_def|split|1', axiom, ![V_27v_7c48_7c_27]: s('bool','const.clos_knownProof.rsgc_free_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27v_7c48_7c_27))))))) = s('bool','T_0')).
fof('thm.clos_knownProof.rsgc_free_def|split|2', axiom, ![V_27v_27]: s('bool','const.clos_knownProof.rsgc_free_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.closSem.v',V_27v_27))))))) = s('bool','const.clos_knownProof.vsgc_free_1'(s('type.closSem.v',V_27v_27)))).
fof('thm.clos_knownProof.ssgc_free_def', axiom, ![V_27A_27]: ![V_27s_27]: (p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))) <=> (![V_27n_27, V_27m_27, V_27e_27]: (s('type.option.option'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27A_27),V_27s_27))),s('type.num.num',V_27n_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27m_27),s('type.closLang.exp',V_27e_27))))) => s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')) & (![V_27n_27, V_27vl_27]: (s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(V_27A_27),V_27s_27))),s('type.num.num',V_27n_27))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),'const.closSem.ValueArray_1'(s('type.list.list'('type.closSem.v'),V_27vl_27))))) => p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27vl_27))))) & ![V_27v_27]: (p(s('bool','const.bool.IN_2'(s('type.option.option'('type.closSem.v'),'const.option.SOME_1'(s('type.closSem.v',V_27v_27))),s('fun'('type.option.option'('type.closSem.v'),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v',V_27v_27))))))))).
fof('thm.clos_knownProof.ssgc_free_clockupd', axiom, ![V_27A_27]: ![V_27s_27, V_27f_27]: s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('thm.clos_knownProof.ssgc_free_dec_clock', axiom, ![V_27A_27]: ![V_27s_27, V_27n_27]: s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('_dst_x01x00x10x10x10x10x10x10x10x00x10x10_ax', axiom, ![VA2,VA,VA3,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x00x10x10x10x10x10x10x10x00x10x10_12'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA)))))))))))),V__x),s(VA3,V__0),s('fun'(VA1,VA4),V__1),s('fun'(VA1,VA5),V__2),s('fun'(VA1,VA6),V__3),s('fun'(VA1,VA7),V__4),s('fun'(VA1,VA8),V__5),s('fun'(VA1,VA9),V__6),s('fun'(VA1,VA10),V__7),s(VA11,V__8),s('fun'(VA1,VA12),V__9),s('fun'(VA1,VA13),V__10))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0_12'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA)))))))))))),V__x),s(VA3,V__0),s(VA4,'happ'(s('fun'(VA1,VA4),V__1),s(VA1,V__z))),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z))),s(VA6,'happ'(s('fun'(VA1,VA6),V__3),s(VA1,V__z))),s(VA7,'happ'(s('fun'(VA1,VA7),V__4),s(VA1,V__z))),s(VA8,'happ'(s('fun'(VA1,VA8),V__5),s(VA1,V__z))),s(VA9,'happ'(s('fun'(VA1,VA9),V__6),s(VA1,V__z))),s(VA10,'happ'(s('fun'(VA1,VA10),V__7),s(VA1,V__z))),s(VA11,V__8),s(VA12,'happ'(s('fun'(VA1,VA12),V__9),s(VA1,V__z))),s(VA13,'happ'(s('fun'(VA1,VA13),V__10),s(VA1,V__z)))))).
fof('thm.clos_knownProof.esgc_free_primitive_def', axiom, s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0') = s('fun'('type.closLang.exp','bool'),'const.relation.WFREC_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'const.min.@_1'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'const.closLang.If_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'const.closLang.If_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x001x010x100_3'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp'))),'const.closLang.If_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Let_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Let_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x11x01_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'const.closLang.Raise_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Handle_0'))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('type.closLang.exp','type.closLang.exp')),'const.closLang.Handle_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x11x01_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'const.closLang.Tick_0'))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp')),'const.closLang.Call_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.option.option'('type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','type.closLang.exp'))),'_dst_x011x100_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp'))),'const.closLang.App_0'),s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'_i_0_0'))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))))),'_dst_x00000x00011x11111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))))),'_dst_x10001x01110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.exp','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp'))),'_dst_x01x10_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp'))),'const.closLang.App_0'),s('fun'('type.closLang.exp','type.closLang.exp'),'_i_0_0'))))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.list.list'('type.num.num')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.option.option'('type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','bool'))))),'_dst_x10001x01111_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','type.closLang.exp')))),'_dst_x001x010x100_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.closLang.exp')))),'const.closLang.Letrec_0'),s('fun'('type.option.option'('type.list.list'('type.num.num')),'type.option.option'('type.list.list'('type.num.num'))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'_i_0_0'))))))))))))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.op','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.closLang.exp','bool'),'bool'),'!_0'),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x0000x0011x1111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'_dst_x01x10_2'(s('fun'('type.closLang.exp','fun'('fun'('type.closLang.exp','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_i_0_0'),s('fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'type.closLang.exp')),'const.closLang.Op_0'))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_dst_x01x00x10x10x10x10x10x10x10x00x10x10_12'(s('fun'('type.closLang.exp','fun'('fun'('type.num.num','bool'),'fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'fun'('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool')),'fun'('fun'('type.closLang.exp','bool'),'fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','bool')),'fun'('fun'('type.closLang.exp','bool'),'fun'('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'bool'))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','bool')))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','bool')))),'fun'('fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'bool')),'bool')))))))))))),'const.closLang.exp_CASE_0'),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','bool')))),'_dst_x0000x1100x1011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x111_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','fun'('type.closLang.exp','bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x101_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'bool')))),'_dst_x0000x1011_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))))))),s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0_1'(s('fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','bool'))),'_dst_x0_1'(s('fun'('type.num.num','fun'('type.closLang.exp','bool')),'_dst_x0_1'(s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'bool')),'=_0'),s('fun'('type.closLang.exp','fun'('type.num.num','type.num.num')),'const.clos_knownProof.set_globals_0'),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))))))))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','bool'))))),'_dst_x00000x10011_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.num.num'),'bool')),'=_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','type.num.num')),'const.clos_knownProof.elist_globals_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'))))),s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0'))))),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'bool'))),'_dst_x000x101_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'const.list.EVERY_0'),s('fun'('fun'('type.closLang.exp','bool'),'fun'('type.closLang.exp','bool')),'_i_0_0')))))))))).
fof('thm.clos_knownProof.clos_knownProof_|49|82_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_7c48_7c_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))) | (?[V_27binds_27, V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27e_7c49_7c_27, V_27e2_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27v_7c49_7c_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v2_27, V_27e_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v3_27, V_27v4_27, V_27v5_27, V_27b_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27b_27))) | (?[V_27v6_27, V_27v7_27, V_27binds_27, V_27bod_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27binds_27),s('type.closLang.exp',V_27bod_27))) | ?[V_27v8_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27v8_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))))))))) => (?[V_27v_7c48_7c_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27))) | (?[V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))) | (?[V_27binds_27, V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27e_7c49_7c_27, V_27e2_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))) | (?[V_27e_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))) | (?[V_27v_7c49_7c_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v2_27, V_27e_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),V_27args_27))) | (?[V_27v3_27, V_27v4_27, V_27v5_27, V_27b_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27b_27))) | (?[V_27v6_27, V_27v7_27, V_27binds_27, V_27bod_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27binds_27),s('type.closLang.exp',V_27bod_27))) | ?[V_27v8_27, V_27args_27]: s('type.closLang.exp',V_27a_27) = s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27v8_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))))))))))).
fof('thm.clos_knownProof.esgc_free_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27)))))) & (![V_27e_7c49_7c_27, V_27e2_27, V_27e3_27]: ((p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_7c49_7c_27)))) & (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e2_27)))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e3_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27))))))) & (![V_27binds_27, V_27e_27]: ((![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27binds_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27))))))) & (![V_27e_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))))))) & (![V_27e_7c49_7c_27, V_27e2_27]: ((p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e2_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27))))))) & (![V_27e_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27)))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))))))) & (![V_27v_7c49_7c_27, V_27args_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))) & (![V_27v2_27, V_27e_27, V_27args_27]: ((![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27e_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))) & (![V_27v3_27, V_27v4_27, V_27v5_27, V_27b_27]: p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27b_27)))))) & (![V_27v6_27, V_27v7_27, V_27binds_27, V_27bod_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27bod_27)))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27binds_27),s('type.closLang.exp',V_27bod_27))))))) & ![V_27v8_27, V_27args_27]: (![V_27a_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27a_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27args_27)))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27a_27))))) => p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27v8_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),V_27P_27),s('type.closLang.exp',V_27v_27)))))).
fof('ARITY_0_1_const.clos_knownProof.esgc_free', axiom, ![VV0]: s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp',VV0))) = s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',VV0)))).
fof('thm.clos_knownProof.esgc_free_def|split|0', axiom, ![V_27v_7c48_7c_27]: p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_7c48_7c_27))))))).
fof('thm.clos_knownProof.esgc_free_def|split|1', axiom, ![V_27e3_27, V_27e2_27, V_27e_7c49_7c_27]: (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27),s('type.closLang.exp',V_27e3_27)))))) <=> (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e_7c49_7c_27)))) & (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e2_27)))) & p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e3_27)))))))).
fof('thm.clos_knownProof.esgc_free_def|split|2', axiom, ![V_27e_27, V_27binds_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27binds_27),s('type.closLang.exp',V_27e_27)))))) <=> (p(s('bool','const.list.EVERY_2'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.list.list'('type.closLang.exp'),V_27binds_27)))) & p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp',V_27e_27))))))).
fof('thm.clos_knownProof.esgc_free_def|split|3', axiom, ![V_27e_27]: s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27e_27))))) = s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e_27)))).
fof('thm.clos_knownProof.esgc_free_def|split|4', axiom, ![V_27e2_27, V_27e_7c49_7c_27]: (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27e_7c49_7c_27),s('type.closLang.exp',V_27e2_27)))))) <=> (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e_7c49_7c_27)))) & p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e2_27))))))).
fof('thm.clos_knownProof.esgc_free_def|split|5', axiom, ![V_27e_27]: s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27e_27))))) = s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e_27)))).
fof('thm.clos_knownProof.esgc_free_def|split|6', axiom, ![V_27v_7c49_7c_27, V_27args_27]: s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.list.list'('type.closLang.exp'),V_27args_27)))).
fof('thm.clos_knownProof.esgc_free_def|split|7', axiom, ![V_27v2_27, V_27e_27, V_27args_27]: (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27v2_27),s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),V_27args_27)))))) <=> (p(s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp',V_27e_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.list.list'('type.closLang.exp'),V_27args_27))))))).
fof('thm.clos_knownProof.esgc_free_def|split|8', axiom, ![V_27v5_27, V_27v4_27, V_27v3_27, V_27b_27]: (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27v3_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v4_27),s('type.num.num',V_27v5_27),s('type.closLang.exp',V_27b_27)))))) <=> s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27b_27))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0'))).
fof('thm.clos_knownProof.esgc_free_def|split|9', axiom, ![V_27v7_27, V_27v6_27, V_27bod_27, V_27binds_27]: (p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27v6_27),s('type.option.option'('type.list.list'('type.num.num')),V_27v7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27binds_27),s('type.closLang.exp',V_27bod_27)))))) <=> (s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27binds_27))))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0') & p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27bod_27))))))).
fof('thm.clos_knownProof.esgc_free_def|split|10', axiom, ![V_27v8_27, V_27args_27]: s('bool','happ'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27v8_27),s('type.list.list'('type.closLang.exp'),V_27args_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.list.list'('type.closLang.exp'),V_27args_27)))).
fof('thm.clos_knownProof.mglobals_extend_def', axiom, ![V_27B_27,V_27A_27]: ![V_27s_7c49_7c_27, V_27mgs_27, V_27s2_27]: (p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27),s('fun'('type.num.num','bool'),V_27mgs_27),s('type.closSem.state'(V_27B_27),V_27s2_27)))) <=> (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27B_27),V_27s2_27))),s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27))),s('fun'('type.num.num','bool'),V_27mgs_27)))))) & ![V_27k_27, V_27v_27]: ((s('type.option.option'('type.option.option'('type.closSem.v')),'const.closSem.get_global_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27B_27),V_27s2_27))))) = s('type.option.option'('type.option.option'('type.closSem.v')),'const.option.SOME_1'(s('type.option.option'('type.closSem.v'),'const.option.SOME_1'(s('type.closSem.v',V_27v_27))))) & ~ (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27k_27),s('fun'('type.num.num','bool'),V_27mgs_27)))))) => s('type.option.option'('type.option.option'('type.closSem.v')),'const.closSem.get_global_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27))))) = s('type.option.option'('type.option.option'('type.closSem.v')),'const.option.SOME_1'(s('type.option.option'('type.closSem.v'),'const.option.SOME_1'(s('type.closSem.v',V_27v_27))))))))).
fof('thm.clos_knownProof.mglobals_extend_refl', axiom, ![V_27A_27]: ![V_27s_27, V_27gs_27]: p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27A_27),V_27s_27))))).
fof('thm.clos_knownProof.mglobals_extend_trans', axiom, ![V_27B_27,V_27A_27,V_27C_27]: ![V_27s2_27, V_27s_7c49_7c_27, V_27s_7c48_7c_27, V_27g2_27, V_27g_7c49_7c_27]: ((p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27g_7c49_7c_27),s('type.closSem.state'(V_27B_27),V_27s_7c49_7c_27)))) & p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27B_27),V_27s_7c49_7c_27),s('fun'('type.num.num','bool'),V_27g2_27),s('type.closSem.state'(V_27C_27),V_27s2_27))))) => p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),'const.pred_set.UNION_2'(s('fun'('type.num.num','bool'),V_27g_7c49_7c_27),s('fun'('type.num.num','bool'),V_27g2_27))),s('type.closSem.state'(V_27C_27),V_27s2_27)))))).
fof('thm.clos_knownProof.mglobals_extend_SUBSET', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27g2_27, V_27g_7c49_7c_27]: ((p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27g_7c49_7c_27),s('type.closSem.state'(V_27B_27),V_27s_27)))) & p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),V_27g_7c49_7c_27),s('fun'('type.num.num','bool'),V_27g2_27))))) => p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27g2_27),s('type.closSem.state'(V_27B_27),V_27s_27)))))).
fof('thm.clos_knownProof.mglobals_extend_refupdate|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27gs_27, V_27f_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),'const.closSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),V_27f_27),s('type.closSem.state'(V_27B_27),V_27s_27))))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_refupdate|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27gs_27, V_27f_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),'const.closSem.state_refs_fupd_2'(s('fun'('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v'))),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_ffiupdate|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27gs_27, V_27f_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),'const.closSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27A_27),'type.ffi.ffi_state'(V_27B_27)),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_ffiupdate|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27gs_27, V_27f_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27B_27),'const.closSem.state_ffi_fupd_2'(s('fun'('type.ffi.ffi_state'(V_27A_27),'type.ffi.ffi_state'(V_27B_27)),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27A_27),V_27s_27))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27A_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_clockupdate|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27gs_27, V_27f_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.closSem.state'(V_27B_27),V_27s_27))))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_clockupdate|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27gs_27, V_27f_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),'const.closSem.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_decclock|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27n_27, V_27gs_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.mglobals_extend_decclock|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27s_7c48_7c_27, V_27s_27, V_27n_27, V_27gs_27]: s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),'const.closSem.dec_clock_2'(s('type.num.num',V_27n_27),s('type.closSem.state'(V_27B_27),V_27s_27))))) = s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),V_27gs_27),s('type.closSem.state'(V_27B_27),V_27s_27)))).
fof('thm.clos_knownProof.do_app_ssgc', axiom, ![V_27A_27]: ![V_27opn_27, V_27args_27, V_27s_7c48_7c_27, V_27res_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',V_27opn_27),s('type.list.list'('type.closSem.v'),V_27args_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),V_27res_27) => ((p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27args_27)))) & p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))) => (![V_27v_27, V_27s_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.closSem.v',V_27v_27),s('type.closSem.state'(V_27A_27),V_27s_27))))) => (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v',V_27v_27)))) & (p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))) & p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),'const.bag.SET_OF_BAG_1'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.op_gbag_1'(s('type.closLang.op',V_27opn_27))))),s('type.closSem.state'(V_27A_27),V_27s_27))))))) & ![V_27v_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rraise_1'(s('type.closSem.v',V_27v_27))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v',V_27v_27))))))))).
fof('thm.clos_knownProof.EVERY_lookup_vars', axiom, ![V_27A_27]: ![V_27P_27, V_27vs_27, V_27env_27, V_27env_7c39_7c_27]: ((p(s('bool','const.list.EVERY_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),V_27env_27)))) & s('type.option.option'('type.list.list'(V_27A_27)),'const.closSem.lookup_vars_2'(s('type.list.list'('type.num.num'),V_27vs_27),s('type.list.list'(V_27A_27),V_27env_27))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.option.SOME_1'(s('type.list.list'(V_27A_27),V_27env_7c39_7c_27)))) => p(s('bool','const.list.EVERY_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),V_27env_7c39_7c_27)))))).
fof('thm.clos_knownProof.FOLDR_BU_EQ_EMPTY', axiom, ![V_27B_27,V_27A_27]: ![V_27l_27, V_27f_27, V_27a_27]: (s('fun'(V_27A_27,'type.num.num'),'const.list.FOLDR_3'(s('fun'(V_27B_27,'fun'('fun'(V_27A_27,'type.num.num'),'fun'(V_27A_27,'type.num.num'))),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'type.num.num'),'fun'('fun'(V_27A_27,'type.num.num'),'fun'(V_27A_27,'type.num.num'))),'const.bag.BAG_UNION_0'),s('fun'(V_27B_27,'fun'(V_27A_27,'type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.num.num'),V_27a_27),s('type.list.list'(V_27B_27),V_27l_27))) = s('fun'(V_27A_27,'type.num.num'),'const.bag.EMPTY_BAG_0') <=> (s('fun'(V_27A_27,'type.num.num'),V_27a_27) = s('fun'(V_27A_27,'type.num.num'),'const.bag.EMPTY_BAG_0') & ![V_27e_27]: (p(s('bool','const.bool.IN_2'(s(V_27B_27,V_27e_27),s('fun'(V_27B_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27B_27),V_27l_27)))))) => s('fun'(V_27A_27,'type.num.num'),'happ'(s('fun'(V_27B_27,'fun'(V_27A_27,'type.num.num')),V_27f_27),s(V_27B_27,V_27e_27))) = s('fun'(V_27A_27,'type.num.num'),'const.bag.EMPTY_BAG_0'))))).
fof('thm.clos_knownProof.elglobals_EQ_EMPTY', axiom, ![V_27l_27]: (s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27l_27))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0') <=> ![V_27e_27]: (p(s('bool','const.bool.IN_2'(s('type.closLang.exp',V_27e_27),s('fun'('type.closLang.exp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.closLang.exp'),V_27l_27)))))) => s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0')))).
fof('thm.clos_knownProof.set_globals_empty_esgc_free', axiom, ![V_27e_27]: (s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.set_globals_1'(s('type.closLang.exp',V_27e_27))) = s('fun'('type.num.num','type.num.num'),'const.bag.EMPTY_BAG_0') => p(s('bool','const.clos_knownProof.esgc_free_1'(s('type.closLang.exp',V_27e_27)))))).
fof('thm.clos_knownProof.clos_knownProof_|49|99_prove_ltb|split|0', axiom, ![V_27A_27]: ![V_27a_27, V_27es_27, V_27env_27, V_27s_7c48_7c_27, V_27res_27, V_27s_27]: ((s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))) & s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27A_27),V_27s_27)))) => p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))))))).
fof('thm.clos_knownProof.clos_knownProof_|49|99_prove_ltb|split|1', axiom, ![V_27A_27]: ![V_27lopt_27, V_27f_27, V_27args_27, V_27s_7c48_7c_27, V_27res_27, V_27s_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),V_27lopt_27),s('type.closSem.v',V_27f_27),s('type.list.list'('type.closSem.v'),V_27args_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27A_27),V_27s_27))) => p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))))))).
fof('thm.clos_knownProof.mapped_globals_grow', axiom, ![V_27A_27]: ![V_27es_27, V_27env_27, V_27s_7c48_7c_27, V_27res_27, V_27s_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27A_27),V_27s_27))) => p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))),s('fun'('type.num.num','bool'),'const.clos_knownProof.mapped_globals_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))))))).
fof('thm.clos_knownProof.clos_knownProof_2|48||49|_prove_ltb', axiom, ![V_27i_27, V_27fns_27]: ?[V_27num__args_27, V_27exp_27]: s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.list.EL_2'(s('type.num.num',V_27i_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))) = s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27exp_27)))).
fof('thm.clos_knownProof.clos_knownProof_2|48|2_prove_ltb', axiom, ![V_27i_27, V_27fns_27]: ?[V_27num__args_27, V_27exp_7c39_7c_27]: s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.list.EL_2'(s('type.num.num',V_27i_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))) = s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27exp_7c39_7c_27)))).
fof('thm.clos_knownProof.clos_knownProof_2|48|5_prove_ltb|split|0', axiom, ![V_27A_27]: ![V_27a_27, V_27es_27, V_27env_27, V_27s_7c48_7c_27, V_27res_27, V_27s_27]: ((p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27env_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.closLang.exp','bool'),'const.clos_knownProof.esgc_free_0'),s('type.list.list'('type.closLang.exp'),V_27es_27)))) & (s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27es_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))))) & s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27A_27))),V_27a_27))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27A_27),V_27s_27))))))) => (p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))) & (p(s('bool','const.clos_knownProof.rsgc_free_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27)))) & p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),'const.bag.SET_OF_BAG_1'(s('fun'('type.num.num','type.num.num'),'const.clos_knownProof.elist_globals_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))))),s('type.closSem.state'(V_27A_27),V_27s_27)))))))).
fof('thm.clos_knownProof.clos_knownProof_2|48|5_prove_ltb|split|1', conjecture, ![V_27A_27]: ![V_27lopt_27, V_27f_27, V_27args_27, V_27s_7c48_7c_27, V_27res_27, V_27s_27]: ((p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.closSem.v',V_27f_27)))) & (p(s('bool','const.list.EVERY_2'(s('fun'('type.closSem.v','bool'),'const.clos_knownProof.vsgc_free_0'),s('type.list.list'('type.closSem.v'),V_27args_27)))) & s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),V_27lopt_27),s('type.closSem.v',V_27f_27),s('type.list.list'('type.closSem.v'),V_27args_27),s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27A_27),V_27s_27)))))) => (p(s('bool','const.clos_knownProof.ssgc_free_1'(s('type.closSem.state'(V_27A_27),V_27s_27)))) & (p(s('bool','const.clos_knownProof.rsgc_free_1'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27)))) & p(s('bool','const.clos_knownProof.mglobals_extend_3'(s('type.closSem.state'(V_27A_27),V_27s_7c48_7c_27),s('fun'('type.num.num','bool'),'const.pred_set.EMPTY_0'),s('type.closSem.state'(V_27A_27),V_27s_27)))))))).
