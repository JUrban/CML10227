fof('thm.holAxioms.eta_has_model', axiom, ![V_27U_27]: ![V_27mem_27]: (p(s('bool','const.setSpec.is_set_theory_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))) => ![V_27ctxt_27]: (p(s('bool','const.holSyntax.is_std_sig_1'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) => ![V_27i_27]: (p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) => p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_eta_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_eta_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_eta_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))))))))).
fof('thm.holAxioms.good_select_def', axiom, ![V_27U_27]: ![V_27mem_27, V_27select_27]: (p(s('bool','const.holAxioms.good_select|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),V_27select_27)))) <=> ![V_27ty_27, V_27p_27, V_27x_27]: (p(s('bool','happ'(s('fun'(V_27U_27,'bool'),'happ'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27x_27))),s(V_27U_27,V_27ty_27)))) => (p(s('bool','happ'(s('fun'(V_27U_27,'bool'),'happ'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,'happ'(s('fun'('fun'(V_27U_27,'bool'),V_27U_27),'happ'(s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),V_27select_27),s(V_27U_27,V_27ty_27))),s('fun'(V_27U_27,'bool'),V_27p_27))))),s(V_27U_27,V_27ty_27)))) & (p(s('bool','happ'(s('fun'(V_27U_27,'bool'),V_27p_27),s(V_27U_27,V_27x_27)))) => p(s('bool','happ'(s('fun'(V_27U_27,'bool'),V_27p_27),s(V_27U_27,'happ'(s('fun'('fun'(V_27U_27,'bool'),V_27U_27),'happ'(s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),V_27select_27),s(V_27U_27,V_27ty_27))),s('fun'(V_27U_27,'bool'),V_27p_27))))))))))).
fof('thm.holAxioms.select_has_model_gen', axiom, ![V_27U_27]: ![V_27mem_27]: (p(s('bool','const.setSpec.is_set_theory_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))) => ![V_27ctxt_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.mlstring.mlstring','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))) & (p(s('bool','const.holBoolSyntax.is_implies_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & p(s('bool','const.holSyntax.theory_ok_1'(s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))))) => ![V_27i_27, V_27select_27]: ((p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & (p(s('bool','const.holBool.is_implies_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & p(s('bool','const.holAxioms.good_select|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),V_27select_27)))))) => ?[V_27i_7c39_7c_27]: (p(s('bool','const.holSemanticsExtra.equal_on_3'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27)))) & (p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_select_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_select_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_select_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))))) & ![Vx]: s(V_27U_27,'happ'(s('fun'('type.list.list'(V_27U_27),V_27U_27),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27))),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'(V_27U_27),Vx))) = s(V_27U_27,'const.setSpec.abstract_4'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,'const.setSpec.funspace_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,'const.list.HD_1'(s('type.list.list'(V_27U_27),Vx))),s(V_27U_27,'const.setSpec.two_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27))))),s(V_27U_27,'const.list.HD_1'(s('type.list.list'(V_27U_27),Vx))),s('fun'(V_27U_27,V_27U_27),'_dst_x0x1_2'(s('fun'('fun'(V_27U_27,'bool'),V_27U_27),'happ'(s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),V_27select_27),s(V_27U_27,'const.list.HD_1'(s('type.list.list'(V_27U_27),Vx))))),s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),'const.setSpec.holds_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27))))))))))))).
fof('thm.holAxioms.base_select_def', axiom, ![V_27U_27]: ![V_27mem_27, V_27ty_27, V_27p_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ?[V_27x_27]: p(s('bool','happ'(s('fun'(V_27U_27,'bool'),'happ'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27x_27))),s(V_27U_27,V_27ty_27))))) & s(V_27U_27,'const.holAxioms.base_select|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27ty_27),s('fun'(V_27U_27,'bool'),V_27p_27))) = s(V_27U_27,'const.bool.COND_3'(s('bool',Vv),s(V_27U_27,'const.option.option_CASE_3'(s('type.option.option'(V_27U_27),'const.option.some_1'(s('fun'(V_27U_27,'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'(V_27U_27,'bool'),'_dst_x1x0_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27ty_27))),s('fun'(V_27U_27,'bool'),V_27p_27))))),s(V_27U_27,'const.min.@_1'(s('fun'(V_27U_27,'bool'),'_dst_x1x0_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27ty_27))))),s('fun'(V_27U_27,V_27U_27),'_i_0_0'))),s(V_27U_27,'const.bool.ARB_0'))))).
fof('ARITY_1_3_const.holAxioms.base_select|48|', axiom, ![V_27U_27]: ![VV0, VV1, VV2]: s(V_27U_27,'happ'(s('fun'('fun'(V_27U_27,'bool'),V_27U_27),'happ'(s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),'const.holAxioms.base_select|48|_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),VV0))),s(V_27U_27,VV1))),s('fun'(V_27U_27,'bool'),VV2))) = s(V_27U_27,'const.holAxioms.base_select|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),VV0),s(V_27U_27,VV1),s('fun'(V_27U_27,'bool'),VV2)))).
fof('thm.holAxioms.good_select_base_select', axiom, ![V_27U_27]: ![V_27mem_27]: (p(s('bool','const.setSpec.is_set_theory_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))) => p(s('bool','const.holAxioms.good_select|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'(V_27U_27,'fun'('fun'(V_27U_27,'bool'),V_27U_27)),'const.holAxioms.base_select|48|_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))))))).
fof('thm.holAxioms.select_has_model', axiom, ![V_27U_27]: ![V_27mem_27]: (p(s('bool','const.setSpec.is_set_theory_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))) => ![V_27ctxt_27]: ((~ (p(s('bool','const.bool.IN_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.mlstring.mlstring','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))) & (p(s('bool','const.holBoolSyntax.is_implies_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & p(s('bool','const.holSyntax.theory_ok_1'(s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))))) => ![V_27i_27]: ((p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & p(s('bool','const.holBool.is_implies_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27))))))) => ?[V_27i_7c39_7c_27]: (p(s('bool','const.holSemanticsExtra.equal_on_3'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27)))) & p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_select_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_select_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_select_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))))))))).
fof('thm.holAxioms.infinity_has_model_gen', axiom, ![V_27U_27]: ![V_27mem_27]: (p(s('bool','const.setSpec.is_set_theory_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))) => ![V_27ctxt_27]: ((p(s('bool','const.holSyntax.theory_ok_1'(s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & (p(s('bool','const.pred_set.DISJOINT_2'(s('fun'('type.mlstring.mlstring','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.INSERT_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.INSERT_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.EMPTY_0')))))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))) & (p(s('bool','const.holBoolSyntax.is_implies_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & (p(s('bool','const.holBoolSyntax.is_and_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & (p(s('bool','const.holBoolSyntax.is_forall_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & (p(s('bool','const.holBoolSyntax.is_exists_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & p(s('bool','const.holBoolSyntax.is_not_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))))))) => ![V_27i_27, V_27inf_27]: ((p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & (p(s('bool','const.holBool.is_implies_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_and_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_forall_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_exists_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_not_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & p(s('bool','const.setSpec.is_infinite_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27inf_27)))))))))) => ?[V_27i_7c39_7c_27]: (p(s('bool','const.holSemanticsExtra.equal_on_3'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27)))) & (p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_infinity_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_infinity_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_infinity_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))))) & s(V_27U_27,'happ'(s('fun'('type.list.list'(V_27U_27),V_27U_27),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.FST_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27))),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'(V_27U_27),'const.list.NIL_0'))) = s(V_27U_27,V_27inf_27))))))).
fof('thm.holAxioms.infinity_has_model', axiom, ![V_27U_27]: ![V_27mem_27]: ((p(s('bool','const.setSpec.is_set_theory_1'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27)))) & ?[V_27inf_27]: p(s('bool','const.setSpec.is_infinite_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s(V_27U_27,V_27inf_27))))) => ![V_27ctxt_27]: ((p(s('bool','const.holSyntax.theory_ok_1'(s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & (p(s('bool','const.pred_set.DISJOINT_2'(s('fun'('type.mlstring.mlstring','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.INSERT_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.INSERT_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.EMPTY_0')))))))) & (~ (p(s('bool','const.bool.IN_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('type.mlstring.mlstring','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))) & (p(s('bool','const.holBoolSyntax.is_implies_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & (p(s('bool','const.holBoolSyntax.is_and_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & (p(s('bool','const.holBoolSyntax.is_forall_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & (p(s('bool','const.holBoolSyntax.is_exists_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))) & p(s('bool','const.holBoolSyntax.is_not_sig_1'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))))))) => ![V_27i_27]: ((p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & (p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27)))))))))))) & (p(s('bool','const.holBool.is_implies_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_and_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_forall_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & (p(s('bool','const.holBool.is_exists_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))) & p(s('bool','const.holBool.is_not_interpretation|48|_2'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'const.pair.SND_1'(s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27)))))))))))) => ?[V_27i_7c39_7c_27]: (p(s('bool','const.holSemanticsExtra.equal_on_3'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27)))) & p(s('bool','const.holSemantics.models|48|_3'(s('fun'(V_27U_27,'fun'(V_27U_27,'bool')),V_27mem_27),s('type.pair.prod'('fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27)),'fun'('type.mlstring.mlstring','fun'('type.list.list'(V_27U_27),V_27U_27))),V_27i_7c39_7c_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'fun'('type.holSyntax.term','bool')),'const.pair.,_2'(s('type.pair.prod'('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type')),'const.pair.,_2'(s('type.finite_map.fmap'('type.mlstring.mlstring','type.num.num'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.num.num'))),'const.holSyntax.types_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_infinity_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))),s('type.finite_map.fmap'('type.mlstring.mlstring','type.holSyntax.type'),'const.alist.alist_to_fmap_1'(s('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.pair.prod'('type.mlstring.mlstring','type.holSyntax.type'))),'const.holSyntax.consts_of_upd_0'),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_infinity_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))),s('fun'('type.holSyntax.term','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.holSyntax.term'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.holSyntax.term')),'const.list.MAP_2'(s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.holSyntax.term'),'fun'('type.list.list'('type.holSyntax.term'),'type.list.list'('type.holSyntax.term'))),'const.list.APPEND_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.axexts_of_upd_0'),s('fun'('type.holSyntax.update','type.list.list'('type.holSyntax.term')),'const.holSyntax.conexts_of_upd_0'))),s('type.list.list'('type.holSyntax.update'),'const.holAxiomsSyntax.mk_infinity_ctxt_1'(s('type.list.list'('type.holSyntax.update'),V_27ctxt_27))))))))))))))))))).
