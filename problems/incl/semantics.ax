fof('thm.semantics.parse_def', axiom, ![V_27toks_27]: s('type.option.option'('type.list.list'('type.ast.top')),'const.semantics.parse_1'(s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.option.option'('type.list.list'('type.ast.top')),'const.option.option_CASE_3'(s('type.option.option'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT')),'const.option.some_1'(s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'bool'),'const.grammar.valid_ptree_1'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'))),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'fun'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'bool')),'=_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_head_0'),s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTopLevelDecs_0'))))))),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'fun'('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'bool')),'=_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'))),'const.grammar.ptree_fringe_0'),s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))))))))))),s('type.option.option'('type.list.list'('type.ast.top')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'('type.list.list'('type.ast.top'))),'const.cmlPtreeConversion.ptree_TopLevelDecs_0')))).
fof('thm.semantics.can_type_prog_def', axiom, ![V_27A_27]: ![V_27state_27, V_27prog_27]: (p(s('bool','const.semantics.can_type_prog_2'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27),s('type.list.list'('type.ast.top'),V_27prog_27)))) <=> (p(s('bool','const.semanticPrimitives.no_dup_mods_2'(s('type.list.list'('type.ast.top'),V_27prog_27),s('fun'('type.list.list'('type.string.char'),'bool'),'const.semanticPrimitives.state_defined_mods_1'(s('type.semanticPrimitives.state'(V_27A_27),'const.initialProgram.top_state_sem_st_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27)))))))) & (p(s('bool','const.semanticPrimitives.no_dup_top_types_2'(s('type.list.list'('type.ast.top'),V_27prog_27),s('fun'('type.semanticPrimitives.tid_or_exn','bool'),'const.semanticPrimitives.state_defined_types_1'(s('type.semanticPrimitives.state'(V_27A_27),'const.initialProgram.top_state_sem_st_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27)))))))) & ?[V_27tdecs_7c39_7c_27, V_27new__tenv_27]: p(s('bool','const.typeSystem.type_prog_6'(s('bool','T_0'),s('type.typeSystem.decls','const.initialProgram.top_state_tdecs_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27))),s('type.typeSystem.type_environment','const.initialProgram.top_state_tenv_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27))),s('type.list.list'('type.ast.top'),V_27prog_27),s('type.typeSystem.decls',V_27tdecs_7c39_7c_27),s('type.pair.prod'('type.pair.prod'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.finite_map.fmap'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.ast.t'))),'type.finite_map.fmap'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.ast.t'))),'type.pair.prod'('type.finite_map.fmap'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))),'type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn')))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.ast.t'),'type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.ast.t')))))),V_27new__tenv_27)))))))).
fof('thm.semantics.evaluate_prog_with_clock_def', axiom, ![V_27A_27]: ![V_27st_27, V_27env_27, V_27k_27, V_27prog_27]: s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.semantics.evaluate_prog_with_clock_4'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.num.num',V_27k_27),s('type.list.list'('type.ast.top'),V_27prog_27))) = s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'happ'(s('fun'('fun'('type.semanticPrimitives.state'(V_27A_27),'fun'('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'fun'('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'const.pair.UNCURRY_0'),s('fun'('type.semanticPrimitives.state'(V_27A_27),'fun'('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'_dst_x0x1_2'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'fun'('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'fun'('type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'const.pair.UNCURRY_0'),s('fun'('type.semanticPrimitives.state'(V_27A_27),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'fun'('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))))),'_dst_x00x10_2'(s('fun'('type.ffi.ffi_state'(V_27A_27),'fun'('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'const.pair.,_0'),s('fun'('type.semanticPrimitives.state'(V_27A_27),'type.ffi.ffi_state'(V_27A_27)),'const.semanticPrimitives.state_ffi_0'))))))),s('type.pair.prod'('type.semanticPrimitives.state'(V_27A_27),'type.pair.prod'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn'))))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.semanticPrimitives.tid_or_exn')))),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.funBigStep.evaluate_prog_3'(s('type.semanticPrimitives.state'(V_27A_27),'const.semanticPrimitives.state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27k_27))),s('type.semanticPrimitives.state'(V_27A_27),V_27st_27))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.ast.top'),V_27prog_27)))))).
fof('thm.semantics.semantics_prog_def|split|0', axiom, ![V_27A_27]: ![V_27st_27, V_27env_27, V_27prog_27, V_27outcome_27, V_27io__list_27]: (p(s('bool','const.semantics.semantics_prog_4'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.ast.top'),V_27prog_27),s('type.ffi.behaviour','const.ffi.Terminate_2'(s('type.ffi.outcome',V_27outcome_27),s('type.list.list'('type.ffi.io_event'),V_27io__list_27)))))) <=> ?[V_27k_27, V_27ffi_27, V_27r_27]: (s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.semantics.evaluate_prog_with_clock_4'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.num.num',V_27k_27),s('type.list.list'('type.ast.top'),V_27prog_27))) = s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27),s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),V_27r_27))) & (?[Vv]: ((p(s('bool',Vv)) <=> (![V_27a_27]: ~ (s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),V_27r_27) = s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort',V_27a_27)))))) & s('type.ffi.outcome',V_27outcome_27) = s('type.ffi.outcome','const.ffi.Success_0'))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.option.option'('type.ffi.final_event'),'const.ffi.ffi_state_final_event_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27))) = s('type.option.option'('type.ffi.final_event'),'const.option.NONE_0')) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.ffi.outcome',V_27outcome_27) = s('type.ffi.outcome','const.ffi.FFI_outcome_1'(s('type.ffi.final_event','const.option.THE_1'(s('type.option.option'('type.ffi.final_event'),'const.ffi.ffi_state_final_event_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27)))))))) & p(s('bool','const.bool.COND_3'(s('bool',Vv_27),s('bool',Vv),s('bool',Vv_27_27))))))) & s('type.list.list'('type.ffi.io_event'),V_27io__list_27) = s('type.list.list'('type.ffi.io_event'),'const.ffi.ffi_state_io_events_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27))))))).
fof('ARITY_2_4_const.semantics.evaluate_prog_with_clock', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'happ'(s('fun'('type.list.list'('type.ast.top'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.ast.top'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'const.semantics.evaluate_prog_with_clock_2'(s('type.semanticPrimitives.state'(V_27A_27),VV0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),VV1))),s('type.num.num',VV2))),s('type.list.list'('type.ast.top'),VV3))) = s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.semantics.evaluate_prog_with_clock_4'(s('type.semanticPrimitives.state'(V_27A_27),VV0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),VV1),s('type.num.num',VV2),s('type.list.list'('type.ast.top'),VV3)))).
fof('thm.semantics.semantics_prog_def|split|1', axiom, ![V_27A_27]: ![V_27st_27, V_27env_27, V_27prog_27, V_27io__trace_27]: (p(s('bool','const.semantics.semantics_prog_4'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.ast.top'),V_27prog_27),s('type.ffi.behaviour','const.ffi.Diverge_1'(s('type.llist.llist'('type.ffi.io_event'),V_27io__trace_27)))))) <=> (![V_27k_27]: ?[V_27ffi_27]: (s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'happ'(s('fun'('type.list.list'('type.ast.top'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.ast.top'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'const.semantics.evaluate_prog_with_clock_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.num.num',V_27k_27))),s('type.list.list'('type.ast.top'),V_27prog_27))) = s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27),s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))))) & s('type.option.option'('type.ffi.final_event'),'const.ffi.ffi_state_final_event_1'(s('type.ffi.ffi_state'(V_27A_27),V_27ffi_27))) = s('type.option.option'('type.ffi.final_event'),'const.option.NONE_0')) & p(s('bool','const.lprefix_lub.lprefix_lub_2'(s('fun'('type.llist.llist'('type.ffi.io_event'),'bool'),'const.pred_set.IMAGE_2'(s('fun'('type.num.num','type.llist.llist'('type.ffi.io_event')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.ffi.io_event'),'type.llist.llist'('type.ffi.io_event')),'const.llist.fromList_0'),s('fun'('type.num.num','type.list.list'('type.ffi.io_event')),'_dst_x0x1_2'(s('fun'('type.ffi.ffi_state'(V_27A_27),'type.list.list'('type.ffi.io_event')),'const.ffi.ffi_state_io_events_0'),s('fun'('type.num.num','type.ffi.ffi_state'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'type.ffi.ffi_state'(V_27A_27)),'const.pair.FST_0'),s('fun'('type.num.num','type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.ast.top'),'type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')))),'const.semantics.evaluate_prog_with_clock_2'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27))),s('type.list.list'('type.ast.top'),V_27prog_27))))))))),s('fun'('type.num.num','bool'),'const.pred_set.UNIV_0'))),s('type.llist.llist'('type.ffi.io_event'),V_27io__trace_27))))))).
fof('thm.semantics.semantics_prog_def|split|2', axiom, ![V_27A_27]: ![V_27st_27, V_27env_27, V_27prog_27]: (p(s('bool','const.semantics.semantics_prog_4'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.list.list'('type.ast.top'),V_27prog_27),s('type.ffi.behaviour','const.ffi.Fail_0')))) <=> ?[V_27k_27]: s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.pair.SND_1'(s('type.pair.prod'('type.ffi.ffi_state'(V_27A_27),'type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.semantics.evaluate_prog_with_clock_4'(s('type.semanticPrimitives.state'(V_27A_27),V_27st_27),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27env_27),s('type.num.num',V_27k_27),s('type.list.list'('type.ast.top'),V_27prog_27))))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))).
fof('thm.semantics.semantics_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool')),'=_0'),s('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'happ'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'happ'(s('fun'('fun'('type.ffi.behaviour','bool'),'fun'('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.ffi.behaviour','bool'),'const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'_dst_x0_1'(s('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'const.ind_type.BOTTOM_0'))))))),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool')),'=_0'),s('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'happ'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'happ'(s('fun'('fun'('type.ffi.behaviour','bool'),'fun'('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.ffi.behaviour','bool'),'const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'_dst_x0_1'(s('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'const.ind_type.BOTTOM_0'))))))),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ffi.behaviour','bool'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'fun'('fun'('type.ffi.behaviour','bool'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'_i_0_0'),s('fun'('fun'('type.ffi.behaviour','bool'),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'_dst_x1x0_2'(s('fun'('fun'('type.ffi.behaviour','bool'),'fun'('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.num.num','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'_dst_x0_1'(s('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'const.ind_type.BOTTOM_0'))))))))))))),s('fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'fun'('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('fun'('type.ffi.behaviour','bool')),'type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),'_i_0_0'))))))),s('fun'('type.semantics.semantics','type.ind_type.recspace'('fun'('type.ffi.behaviour','bool'))),V_27rep_27))))).
fof('thm.semantics.semantics_case_def|split|0', axiom, ![V_27A_27]: ![V_27v_27, V_27v_7c49_7c_27, V_27f_27]: s(V_27A_27,'const.semantics.semantics_CASE_4'(s('type.semantics.semantics','const.semantics.CannotParse_0'),s(V_27A_27,V_27v_27),s(V_27A_27,V_27v_7c49_7c_27),s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_27))) = s(V_27A_27,V_27v_27)).
fof('thm.semantics.semantics_case_def|split|1', axiom, ![V_27A_27]: ![V_27v_27, V_27v_7c49_7c_27, V_27f_27]: s(V_27A_27,'const.semantics.semantics_CASE_4'(s('type.semantics.semantics','const.semantics.IllTyped_0'),s(V_27A_27,V_27v_27),s(V_27A_27,V_27v_7c49_7c_27),s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_27))) = s(V_27A_27,V_27v_7c49_7c_27)).
fof('thm.semantics.semantics_case_def|split|2', axiom, ![V_27A_27]: ![V_27a_27, V_27v_27, V_27v_7c49_7c_27, V_27f_27]: s(V_27A_27,'const.semantics.semantics_CASE_4'(s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))),s(V_27A_27,V_27v_27),s(V_27A_27,V_27v_7c49_7c_27),s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_27))) = s(V_27A_27,'happ'(s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_27),s('fun'('type.ffi.behaviour','bool'),V_27a_27)))).
fof('thm.semantics.semantics_size_def|split|0', axiom, s('type.num.num','const.semantics.semantics_size_1'(s('type.semantics.semantics','const.semantics.CannotParse_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.semantics.semantics_size_def|split|1', axiom, s('type.num.num','const.semantics.semantics_size_1'(s('type.semantics.semantics','const.semantics.IllTyped_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.semantics.semantics_size_def|split|2', axiom, ![V_27a_27]: s('type.num.num','const.semantics.semantics_size_1'(s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('ARITY_0_1_const.semantics.Execute', axiom, ![VV0]: s('type.semantics.semantics','happ'(s('fun'('fun'('type.ffi.behaviour','bool'),'type.semantics.semantics'),'const.semantics.Execute_0'),s('fun'('type.ffi.behaviour','bool'),VV0))) = s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),VV0)))).
fof('thm.semantics.datatype_semantics', axiom, ![V_27semantics_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('fun'('type.ffi.behaviour','bool'),'type.semantics.semantics'),'bool'),'happ'(s('fun'('type.semantics.semantics','fun'('fun'('fun'('type.ffi.behaviour','bool'),'type.semantics.semantics'),'bool')),'happ'(s('fun'('type.semantics.semantics','fun'('type.semantics.semantics','fun'('fun'('fun'('type.ffi.behaviour','bool'),'type.semantics.semantics'),'bool'))),V_27semantics_27),s('type.semantics.semantics','const.semantics.CannotParse_0'))),s('type.semantics.semantics','const.semantics.IllTyped_0'))),s('fun'('fun'('type.ffi.behaviour','bool'),'type.semantics.semantics'),'const.semantics.Execute_0'))))))).
fof('thm.semantics.semantics_|49||49|', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))) = s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_7c39_7c_27))) <=> s('fun'('type.ffi.behaviour','bool'),V_27a_27) = s('fun'('type.ffi.behaviour','bool'),V_27a_7c39_7c_27))).
fof('thm.semantics.semantics_distinct|split|0', axiom, ~ (s('type.semantics.semantics','const.semantics.CannotParse_0') = s('type.semantics.semantics','const.semantics.IllTyped_0'))).
fof('thm.semantics.semantics_distinct|split|1', axiom, ![V_27a_27]: ~ (s('type.semantics.semantics','const.semantics.CannotParse_0') = s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))))).
fof('thm.semantics.semantics_distinct|split|2', axiom, ![V_27a_27]: ~ (s('type.semantics.semantics','const.semantics.IllTyped_0') = s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))))).
fof('thm.semantics.semantics_case_cong', axiom, ![V_27A_27]: ![V_27v_7c49_7c_7c39_7c_27, V_27v_7c39_7c_27, V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27v_27, V_27v_7c49_7c_27, V_27f_27]: ((s('type.semantics.semantics',V_27M_27) = s('type.semantics.semantics',V_27M_7c39_7c_27) & ((s('type.semantics.semantics',V_27M_7c39_7c_27) = s('type.semantics.semantics','const.semantics.CannotParse_0') => s(V_27A_27,V_27v_27) = s(V_27A_27,V_27v_7c39_7c_27)) & ((s('type.semantics.semantics',V_27M_7c39_7c_27) = s('type.semantics.semantics','const.semantics.IllTyped_0') => s(V_27A_27,V_27v_7c49_7c_27) = s(V_27A_27,V_27v_7c49_7c_7c39_7c_27)) & ![V_27a_27]: (s('type.semantics.semantics',V_27M_7c39_7c_27) = s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))) => s(V_27A_27,'happ'(s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_27),s('fun'('type.ffi.behaviour','bool'),V_27a_27))) = s(V_27A_27,'happ'(s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_7c39_7c_27),s('fun'('type.ffi.behaviour','bool'),V_27a_27))))))) => s(V_27A_27,'const.semantics.semantics_CASE_4'(s('type.semantics.semantics',V_27M_27),s(V_27A_27,V_27v_27),s(V_27A_27,V_27v_7c49_7c_27),s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_27))) = s(V_27A_27,'const.semantics.semantics_CASE_4'(s('type.semantics.semantics',V_27M_7c39_7c_27),s(V_27A_27,V_27v_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_7c39_7c_27),s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f_7c39_7c_27))))).
fof('thm.semantics.semantics_nchotomy', axiom, ![V_27ss_27]: (s('type.semantics.semantics',V_27ss_27) = s('type.semantics.semantics','const.semantics.CannotParse_0') | (s('type.semantics.semantics',V_27ss_27) = s('type.semantics.semantics','const.semantics.IllTyped_0') | ?[V_27f_27]: s('type.semantics.semantics',V_27ss_27) = s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27f_27)))))).
fof('thm.semantics.semantics_Axiom', axiom, ![V_27A_27]: ![V_27f_7c48_7c_27, V_27f_7c49_7c_27, V_27f2_27]: ?[V_27fn_27]: (s(V_27A_27,'happ'(s('fun'('type.semantics.semantics',V_27A_27),V_27fn_27),s('type.semantics.semantics','const.semantics.CannotParse_0'))) = s(V_27A_27,V_27f_7c48_7c_27) & (s(V_27A_27,'happ'(s('fun'('type.semantics.semantics',V_27A_27),V_27fn_27),s('type.semantics.semantics','const.semantics.IllTyped_0'))) = s(V_27A_27,V_27f_7c49_7c_27) & ![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.semantics.semantics',V_27A_27),V_27fn_27),s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('fun'('type.ffi.behaviour','bool'),V_27A_27),V_27f2_27),s('fun'('type.ffi.behaviour','bool'),V_27a_27)))))).
fof('thm.semantics.semantics_induction', axiom, ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.semantics.semantics','bool'),V_27P_27),s('type.semantics.semantics','const.semantics.CannotParse_0')))) & (p(s('bool','happ'(s('fun'('type.semantics.semantics','bool'),V_27P_27),s('type.semantics.semantics','const.semantics.IllTyped_0')))) & ![V_27f_27]: p(s('bool','happ'(s('fun'('type.semantics.semantics','bool'),V_27P_27),s('type.semantics.semantics','const.semantics.Execute_1'(s('fun'('type.ffi.behaviour','bool'),V_27f_27)))))))) => ![V_27s_27]: p(s('bool','happ'(s('fun'('type.semantics.semantics','bool'),V_27P_27),s('type.semantics.semantics',V_27s_27)))))).
fof('ARITY_1_2_const.semantics.can_type_prog', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.list.list'('type.ast.top'),'bool'),'const.semantics.can_type_prog_1'(s('type.initialProgram.top_state'(V_27A_27),VV0))),s('type.list.list'('type.ast.top'),VV1))) = s('bool','const.semantics.can_type_prog_2'(s('type.initialProgram.top_state'(V_27A_27),VV0),s('type.list.list'('type.ast.top'),VV1)))).
fof('ARITY_2_4_const.semantics.semantics_prog', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.ffi.behaviour','bool'),'happ'(s('fun'('type.list.list'('type.ast.top'),'fun'('type.ffi.behaviour','bool')),'const.semantics.semantics_prog_2'(s('type.semanticPrimitives.state'(V_27A_27),VV0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),VV1))),s('type.list.list'('type.ast.top'),VV2))),s('type.ffi.behaviour',VV3))) = s('bool','const.semantics.semantics_prog_4'(s('type.semanticPrimitives.state'(V_27A_27),VV0),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),VV1),s('type.list.list'('type.ast.top'),VV2),s('type.ffi.behaviour',VV3)))).
fof('thm.semantics.semantics_def', axiom, ![V_27A_27]: ![V_27state_27, V_27prelude_27, V_27input_27]: s('type.semantics.semantics','const.semantics.semantics_3'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27),s('type.list.list'('type.ast.top'),V_27prelude_27),s('type.list.list'('type.string.char'),V_27input_27))) = s('type.semantics.semantics','const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.ast.top')),'const.semantics.parse_1'(s('type.list.list'('type.tokens.token'),'const.lexer_fun.lexer_fun_1'(s('type.list.list'('type.string.char'),V_27input_27))))),s('type.semantics.semantics','const.semantics.CannotParse_0'),s('fun'('type.list.list'('type.ast.top'),'type.semantics.semantics'),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('type.semantics.semantics','fun'('type.semantics.semantics','type.semantics.semantics'))),'const.bool.COND_0'),s('fun'('type.list.list'('type.ast.top'),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.ast.top'),'bool'),'const.semantics.can_type_prog_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27))),s('fun'('type.list.list'('type.ast.top'),'type.list.list'('type.ast.top')),'const.list.APPEND_1'(s('type.list.list'('type.ast.top'),V_27prelude_27))))),s('fun'('type.list.list'('type.ast.top'),'type.semantics.semantics'),'_dst_x0x1_2'(s('fun'('fun'('type.ffi.behaviour','bool'),'type.semantics.semantics'),'const.semantics.Execute_0'),s('fun'('type.list.list'('type.ast.top'),'fun'('type.ffi.behaviour','bool')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.ast.top'),'fun'('type.ffi.behaviour','bool')),'const.semantics.semantics_prog_2'(s('type.semanticPrimitives.state'(V_27A_27),'const.initialProgram.top_state_sem_st_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27))),s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),'const.initialProgram.top_state_sem_env_1'(s('type.initialProgram.top_state'(V_27A_27),V_27state_27))))),s('fun'('type.list.list'('type.ast.top'),'type.list.list'('type.ast.top')),'const.list.APPEND_1'(s('type.list.list'('type.ast.top'),V_27prelude_27))))))),s('type.semantics.semantics','const.semantics.IllTyped_0')))))).
