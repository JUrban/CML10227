fof('thm.infer_t.infer_t_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'))),'_dst_x000x011x110_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_i_0_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.num.num','type.ast.tctor'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.ast.tctor')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor'))),'const.pair.,_0'),s('type.ast.tctor','const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'const.ind_type.BOTTOM_0'))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.tctor','bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ast.tctor','bool')))),'_dst_x0000x0111x1010_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ast.tctor','bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ast.tctor','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'_dst_x00x01x10_3'(s('fun'('type.pair.prod'('type.num.num','type.ast.tctor'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor')),'happ'(s('fun'('type.num.num','fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor'))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))))),'const.ind_type.FCONS_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'const.ind_type.BOTTOM_0'))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_i_0_0'))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_i_0_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.num.num','type.ast.tctor'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.ast.tctor')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor'))),'const.pair.,_0'),s('type.ast.tctor','const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'const.ind_type.BOTTOM_0'))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_i_0_0'))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))),'_dst_x000x111x011_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))),'_dst_x000x001x111_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'=_0'),s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'happ'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'happ'(s('fun'('type.pair.prod'('type.num.num','type.ast.tctor'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.pair.prod'('type.num.num','type.ast.tctor'),'happ'(s('fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor')),'happ'(s('fun'('type.num.num','fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor'))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('type.ast.tctor','const.bool.ARB_0'))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'const.ind_type.BOTTOM_0'))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))))),'_dst_x00000x00111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'happ'(s('fun'('type.pair.prod'('type.num.num','type.ast.tctor'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('type.pair.prod'('type.num.num','type.ast.tctor'),'happ'(s('fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor')),'happ'(s('fun'('type.num.num','fun'('type.ast.tctor','type.pair.prod'('type.num.num','type.ast.tctor'))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('type.ast.tctor','const.bool.ARB_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))))),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))))),'const.ind_type.FCONS_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')))),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))))),'const.ind_type.FCONS_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'const.ind_type.BOTTOM_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')))),'_dst_x0000x1010x0101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_i_0_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_i_0_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool')),'_i_0_0'))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),'_i_0_0'))))))))),s('fun'('type.infer_t.infer_t','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.ast.tctor'))),V_27rep_27))))).
fof('thm.infer_t.infer_t_case_def|split|0', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.infer_t.infer_t_CASE_4'(s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))),s('fun'('type.num.num',V_27A_27),V_27f_27),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_27),s('type.num.num',V_27a_27)))).
fof('thm.infer_t.infer_t_case_def|split|1', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.infer_t.infer_t_CASE_4'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))),s('fun'('type.num.num',V_27A_27),V_27f_27),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27))) = s(V_27A_27,'happ'(s('fun'('type.ast.tctor',V_27A_27),'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27))),s('type.ast.tctor',V_27a_7c49_7c_27)))).
fof('thm.infer_t.infer_t_case_def|split|2', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.infer_t.infer_t_CASE_4'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_27))),s('fun'('type.num.num',V_27A_27),V_27f_27),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27)))).
fof('thm.infer_t.infer_t_size_def|split|0', axiom, ![V_27a_27]: s('type.num.num','const.infer_t.infer_t_size_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))).
fof('thm.infer_t.infer_t_size_def|split|1', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.infer_t.infer_t_size_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer_t.infer_t|49|_size_1'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27))),s('type.num.num','const.ast.tctor_size_1'(s('type.ast.tctor',V_27a_7c49_7c_27)))))))).
fof('thm.infer_t.infer_t_size_def|split|2', axiom, ![V_27a_27]: s('type.num.num','const.infer_t.infer_t_size_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))).
fof('thm.infer_t.infer_t_size_def|split|3', axiom, s('type.num.num','const.infer_t.infer_t|49|_size_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.infer_t.infer_t_size_def|split|4', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.infer_t.infer_t|49|_size_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27a_7c48_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.infer_t.infer_t_size_1'(s('type.infer_t.infer_t',V_27a_7c48_7c_27))),s('type.num.num','const.infer_t.infer_t|49|_size_1'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c49_7c_27)))))))).
fof('ARITY_0_2_const.infer_t.Infer_Tapp', axiom, ![VV0, VV1]: s('type.infer_t.infer_t','happ'(s('fun'('type.ast.tctor','type.infer_t.infer_t'),'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('type.list.list'('type.infer_t.infer_t'),VV0))),s('type.ast.tctor',VV1))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),VV0),s('type.ast.tctor',VV1)))).
fof('ARITY_0_1_const.infer_t.Infer_Tvar_db', axiom, ![VV0]: s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tvar_db_0'),s('type.num.num',VV0))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',VV0)))).
fof('ARITY_0_1_const.infer_t.Infer_Tuvar', axiom, ![VV0]: s('type.infer_t.infer_t','happ'(s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'),s('type.num.num',VV0))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',VV0)))).
fof('thm.infer_t.datatype_infer_t', axiom, ![V_27infer__t_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.num.num','type.infer_t.infer_t'),'bool'),'happ'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'fun'('fun'('type.num.num','type.infer_t.infer_t'),'bool')),'happ'(s('fun'('fun'('type.num.num','type.infer_t.infer_t'),'fun'('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'fun'('fun'('type.num.num','type.infer_t.infer_t'),'bool'))),V_27infer__t_27),s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tvar_db_0'))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'))),s('fun'('type.num.num','type.infer_t.infer_t'),'const.infer_t.Infer_Tuvar_0'))))))).
fof('thm.infer_t.infer_t_|49||49||split|0', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_7c39_7c_27))) <=> s('type.num.num',V_27a_27) = s('type.num.num',V_27a_7c39_7c_27))).
fof('thm.infer_t.infer_t_|49||49||split|1', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27]: (s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_7c39_7c_27),s('type.ast.tctor',V_27a_7c49_7c_7c39_7c_27))) <=> (s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27) = s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_7c39_7c_27) & s('type.ast.tctor',V_27a_7c49_7c_27) = s('type.ast.tctor',V_27a_7c49_7c_7c39_7c_27)))).
fof('thm.infer_t.infer_t_|49||49||split|2', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_7c39_7c_27))) <=> s('type.num.num',V_27a_27) = s('type.num.num',V_27a_7c39_7c_27))).
fof('thm.infer_t.infer_t_distinct|split|0', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))))).
fof('thm.infer_t.infer_t_distinct|split|1', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_7c39_7c_27))))).
fof('thm.infer_t.infer_t_distinct|split|2', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_27))))).
fof('thm.infer_t.infer_t_case_cong', axiom, ![V_27A_27]: ![V_27f2_7c39_7c_27, V_27f_7c49_7c_7c39_7c_27, V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: ((s('type.infer_t.infer_t',V_27M_27) = s('type.infer_t.infer_t',V_27M_7c39_7c_27) & (![V_27a_27]: (s('type.infer_t.infer_t',V_27M_7c39_7c_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_27),s('type.num.num',V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_7c39_7c_27),s('type.num.num',V_27a_27)))) & (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (s('type.infer_t.infer_t',V_27M_7c39_7c_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))) => s(V_27A_27,'happ'(s('fun'('type.ast.tctor',V_27A_27),'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27))),s('type.ast.tctor',V_27a_7c49_7c_27))) = s(V_27A_27,'happ'(s('fun'('type.ast.tctor',V_27A_27),'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_7c39_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27))),s('type.ast.tctor',V_27a_7c49_7c_27)))) & ![V_27a_27]: (s('type.infer_t.infer_t',V_27M_7c39_7c_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_7c39_7c_27),s('type.num.num',V_27a_27))))))) => s(V_27A_27,'const.infer_t.infer_t_CASE_4'(s('type.infer_t.infer_t',V_27M_27),s('fun'('type.num.num',V_27A_27),V_27f_27),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27))) = s(V_27A_27,'const.infer_t.infer_t_CASE_4'(s('type.infer_t.infer_t',V_27M_7c39_7c_27),s('fun'('type.num.num',V_27A_27),V_27f_7c39_7c_27),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),V_27f_7c49_7c_7c39_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_7c39_7c_27))))).
fof('thm.infer_t.infer_t_nchotomy', axiom, ![V_27ii_27]: (?[V_27n_27]: s('type.infer_t.infer_t',V_27ii_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27n_27))) | (?[V_27l_27, V_27t_27]: s('type.infer_t.infer_t',V_27ii_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27l_27),s('type.ast.tctor',V_27t_27))) | ?[V_27n_27]: s('type.infer_t.infer_t',V_27ii_27) = s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27n_27)))))).
fof('thm.infer_t.infer_t_Axiom', axiom, ![V_27A_27,V_27B_27]: ![V_27f_7c48_7c_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27, V_27f4_27]: ?[V_27fn_7c48_7c_27, V_27fn_7c49_7c_27]: (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.infer_t.infer_t',V_27A_27),V_27fn_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_7c48_7c_27),s('type.num.num',V_27a_27))) & (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s(V_27A_27,'happ'(s('fun'('type.infer_t.infer_t',V_27A_27),V_27fn_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))))) = s(V_27A_27,'happ'(s('fun'(V_27B_27,V_27A_27),'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'(V_27B_27,V_27A_27)),'happ'(s('fun'('type.ast.tctor','fun'('type.list.list'('type.infer_t.infer_t'),'fun'(V_27B_27,V_27A_27))),V_27f_7c49_7c_27),s('type.ast.tctor',V_27a_7c49_7c_27))),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27))),s(V_27B_27,'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),V_27B_27),V_27fn_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c48_7c_27))))) & (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.infer_t.infer_t',V_27A_27),V_27fn_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27))) & (s(V_27B_27,'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),V_27B_27),V_27fn_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))) = s(V_27B_27,V_27f3_27) & ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s(V_27B_27,'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),V_27B_27),V_27fn_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27a_7c48_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c49_7c_27))))) = s(V_27B_27,'happ'(s('fun'(V_27B_27,V_27B_27),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,V_27B_27)),'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'(V_27A_27,'fun'(V_27B_27,V_27B_27))),'happ'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'fun'(V_27A_27,'fun'(V_27B_27,V_27B_27)))),V_27f4_27),s('type.infer_t.infer_t',V_27a_7c48_7c_27))),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c49_7c_27))),s(V_27A_27,'happ'(s('fun'('type.infer_t.infer_t',V_27A_27),V_27fn_7c48_7c_27),s('type.infer_t.infer_t',V_27a_7c48_7c_27))))),s(V_27B_27,'happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),V_27B_27),V_27fn_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27a_7c49_7c_27)))))))))).
fof('thm.infer_t.infer_t_induction', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27]: ((![V_27n_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27n_27)))))) & (![V_27l_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27l_27)))) => ![V_27t_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27l_27),s('type.ast.tctor',V_27t_27))))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27n_27)))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0')))) & ![V_27i_27, V_27l_27]: ((p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27i_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27l_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27i_27),s('type.list.list'('type.infer_t.infer_t'),V_27l_27))))))))))) => (![V_27i_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27i_27)))) & ![V_27l_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27l_27))))))).
fof('ARITY_0_1_const.infer_t.inf_type_to_string_UNION', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.infer_t.inf_type_to_string_UNION_0'),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),VV0))) = s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_UNION_1'(s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),VV0)))).
fof('ARITY_0_4_const.infer_t.infer_t_CASE', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s(V_27A_27,'happ'(s('fun'('fun'('type.num.num',V_27A_27),V_27A_27),'happ'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),'fun'('fun'('type.num.num',V_27A_27),V_27A_27)),'happ'(s('fun'('fun'('type.num.num',V_27A_27),'fun'('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),'fun'('fun'('type.num.num',V_27A_27),V_27A_27))),'happ'(s('fun'('type.infer_t.infer_t','fun'('fun'('type.num.num',V_27A_27),'fun'('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),'fun'('fun'('type.num.num',V_27A_27),V_27A_27)))),'const.infer_t.infer_t_CASE_0'),s('type.infer_t.infer_t',VV0))),s('fun'('type.num.num',V_27A_27),VV1))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),VV2))),s('fun'('type.num.num',V_27A_27),VV3))) = s(V_27A_27,'const.infer_t.infer_t_CASE_4'(s('type.infer_t.infer_t',VV0),s('fun'('type.num.num',V_27A_27),VV1),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor',V_27A_27)),VV2),s('fun'('type.num.num',V_27A_27),VV3)))).
fof('ARITY_0_1_const.semanticPrimitives.tc_to_string', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor',VV0))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor',VV0)))).
fof('_dst_x001x110x110x110x110x110x110x110x110x110x110x110x110x110_ax', axiom, ![VA3,VA,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA15,VA2,VA16,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__5, V__6, V__7, V__8, V__9, V__10, V__11, V__12, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x001x110x110x110x110x110x110x110x110x110x110x110x110x110_14'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,VA)))))))))))))),V__x),s('fun'(VA1,'fun'(VA2,VA4)),V__0),s('fun'(VA1,'fun'(VA2,VA5)),V__1),s('fun'(VA1,'fun'(VA2,VA6)),V__2),s('fun'(VA1,'fun'(VA2,VA7)),V__3),s('fun'(VA1,'fun'(VA2,VA8)),V__4),s('fun'(VA1,'fun'(VA2,VA9)),V__5),s('fun'(VA1,'fun'(VA2,VA10)),V__6),s('fun'(VA1,'fun'(VA2,VA11)),V__7),s('fun'(VA1,'fun'(VA2,VA12)),V__8),s('fun'(VA1,'fun'(VA2,VA13)),V__9),s('fun'(VA1,'fun'(VA2,VA14)),V__10),s('fun'(VA1,'fun'(VA2,VA15)),V__11),s('fun'(VA1,'fun'(VA2,VA16)),V__12))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x01x10x10x10x10x10x10x10x10x10x10x10x10x10_14'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,'fun'(VA14,'fun'(VA15,'fun'(VA16,VA)))))))))))))),V__x),s('fun'(VA2,VA4),'happ'(s('fun'(VA1,'fun'(VA2,VA4)),V__0),s(VA1,V__z))),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__1),s(VA1,V__z))),s('fun'(VA2,VA6),'happ'(s('fun'(VA1,'fun'(VA2,VA6)),V__2),s(VA1,V__z))),s('fun'(VA2,VA7),'happ'(s('fun'(VA1,'fun'(VA2,VA7)),V__3),s(VA1,V__z))),s('fun'(VA2,VA8),'happ'(s('fun'(VA1,'fun'(VA2,VA8)),V__4),s(VA1,V__z))),s('fun'(VA2,VA9),'happ'(s('fun'(VA1,'fun'(VA2,VA9)),V__5),s(VA1,V__z))),s('fun'(VA2,VA10),'happ'(s('fun'(VA1,'fun'(VA2,VA10)),V__6),s(VA1,V__z))),s('fun'(VA2,VA11),'happ'(s('fun'(VA1,'fun'(VA2,VA11)),V__7),s(VA1,V__z))),s('fun'(VA2,VA12),'happ'(s('fun'(VA1,'fun'(VA2,VA12)),V__8),s(VA1,V__z))),s('fun'(VA2,VA13),'happ'(s('fun'(VA1,'fun'(VA2,VA13)),V__9),s(VA1,V__z))),s('fun'(VA2,VA14),'happ'(s('fun'(VA1,'fun'(VA2,VA14)),V__10),s(VA1,V__z))),s('fun'(VA2,VA15),'happ'(s('fun'(VA1,'fun'(VA2,VA15)),V__11),s(VA1,V__z))),s('fun'(VA2,VA16),'happ'(s('fun'(VA1,'fun'(VA2,VA16)),V__12),s(VA1,V__z)))))).
fof('thm.infer_t.inf_type_to_string_UNION_primitive_def', axiom, s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.infer_t.inf_type_to_string_UNION_0') = s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'const.min.@_1'(s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x00x10x01_3'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'_i_0_0'),s('fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'_dst_x1x0_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'_dst_x1x0_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dstsel_0_x01x01_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x0x1_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.infer_t.infer_t'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('type.ast.tctor','const.ast.TC_tup_0'))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool')))),'_dstsel_0_x0011x0111_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))))),'_dst_x000x111_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t'))),'_dst_x000x011x100_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_int_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_char_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_string_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_ref_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_word8_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_word64_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_word8array_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_exn_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_vector_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.infer_t.infer_t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.infer_t.infer_t')),'const.infer_t.Infer_Tapp_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_array_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','bool')),'_dstsel_0_x01x01_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'_dst_x1x0_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x001x110_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.infer_t.infer_t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','bool')))),'_dstsel_0_x0011x0111_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x000x100x011_3'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.infer_t.infer_t','type.infer_t.infer_t'),'_i_0_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'_dst_x01x10_2'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('fun'('type.infer_t.infer_t','type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')),'type.list.list'('type.string.char')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dst_x01x00x10x00_4'(s('fun'('type.infer_t.infer_t','fun'('fun'('type.num.num','type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.list.list'('type.string.char')),'type.list.list'('type.string.char'))))),'const.infer_t.infer_t_CASE_0'),s('fun'('type.num.num','type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.num.num','type.list.list'('type.string.char')),'const.ASCIInumbers.num_to_dec_string_0'))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.tctor','type.list.list'('type.string.char')))),'_dst_x001x110x110x110x110x110x110x110x110x110x110x110x110x110_14'(s('fun'('type.ast.tctor','fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))))))))))))))),'const.ast.tctor_CASE_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')))),'_dst_x000x010x001x101_4'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t')),'_i_0_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1011x0100_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_int_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_int_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_char_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_char_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_string_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_string_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','type.list.list'('type.string.char')))),'_dst_x000x110x101_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')),'_dst_x0_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_array_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_array_0'))))))))))))))),s('fun'('type.num.num','type.list.list'('type.string.char')),'_dst_x0_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x001x110x110_3'(s('fun'('type.list.list'('type.infer_t.infer_t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1100x1011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.infer_t.infer_t','type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'type.list.list'('type.string.char')),'fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.infer_t.infer_t'),'type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t'))),'const.sum.INR_0'),s('fun'('type.infer_t.infer_t','fun'('type.list.list'('type.infer_t.infer_t'),'type.list.list'('type.infer_t.infer_t'))),'const.list.CONS_0')))))))))))))))))))).
fof('thm.infer_t.infer_t_23_prove_ltb', axiom, ![V_27a_27]: (((?[V_27n_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27n_27))))) | (((?[V_27v6_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))))) | ?[V_27v7_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0'))))) | ?[V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0'))))) | ?[V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0'))))) | ?[V_27v2_7c49_7c_27, V_27v22_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))) | ?[V_27v25_27, V_27v26_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))) | ?[V_27v29_27, V_27v3_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))) | ?[V_27v33_27, V_27v34_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))) | ?[V_27v37_27, V_27v38_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27v4_7c49_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27t_7c49_7c_27, V_27t2_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | ?[V_27v4_7c49_7c_27, V_27v47_27, V_27v53_27, V_27v54_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v47_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v53_27),s('type.list.list'('type.infer_t.infer_t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0')))))))) | (?[V_27ts_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))) | ?[V_27v59_27, V_27v6_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0')))))) | ((s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))) | ?[V_27v63_27, V_27v64_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0')))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0'))))) | ?[V_27v67_27, V_27v68_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0')))))))))))))))))) | ?[V_27v_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27v_7c48_7c_27))))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))) | (?[V_27t_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))) | ?[V_27t_27, V_27v73_27, V_27v74_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))) => (?[V_27v_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27v_7c48_7c_27))))) | (?[V_27n_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27n_27))))) | (?[V_27t_7c49_7c_27, V_27t2_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27v4_7c49_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27v4_7c49_7c_27, V_27v47_27, V_27v53_27, V_27v54_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v47_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v53_27),s('type.list.list'('type.infer_t.infer_t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27ts_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))) | (?[V_27v6_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0'))))) | (?[V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v7_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))) | (?[V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0'))))) | (?[V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0'))))) | (?[V_27v2_7c49_7c_27, V_27v22_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0'))))) | (?[V_27v25_27, V_27v26_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0'))))) | (?[V_27v29_27, V_27v3_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0'))))) | (?[V_27v33_27, V_27v34_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0'))))) | (?[V_27v37_27, V_27v38_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0'))))) | (?[V_27v59_27, V_27v6_7c48_7c_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0'))))) | (?[V_27v63_27, V_27v64_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0'))))) | (?[V_27v67_27, V_27v68_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0'))))) | (s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))) | (?[V_27t_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))) | ?[V_27t_27, V_27v73_27, V_27v74_27]: s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),V_27a_27) = s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))))))))))))))))))))))))))))))))).
fof('thm.infer_t.inf_type_to_string_UNION_extract|49|_def', axiom, ![V_27x_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),V_27x_27))) = s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_UNION_1'(s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),V_27x_27)))))).
fof('thm.infer_t.inf_type_to_string_UNION_extract|48|_def', axiom, ![V_27x_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t',V_27x_27))) = s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_UNION_1'(s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27x_27)))))).
fof('thm.infer_t.inf_type_to_string_ind', axiom, ![V_27R_27]: (p(s('bool','const.relation.WF_1'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27)))) => (![V_27ts_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0')))))))) => (![V_27v38_27, V_27v37_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0')))))))) => (![V_27v3_7c48_7c_27, V_27v29_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0')))))))) => (![V_27v34_27, V_27v33_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0')))))))) => (![V_27v64_27, V_27v63_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0')))))))) => (![V_27v22_27, V_27v2_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0')))))))) => (![V_27v26_27, V_27v25_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0')))))))) => (![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0')))))))) => (![V_27v6_7c48_7c_27, V_27v59_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0')))))))) => (![V_27v_7c49_7c8_27, V_27v_7c49_7c7_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0')))))))) => (![V_27v68_27, V_27v67_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0')))))))) => (![V_27v74_27, V_27v73_27, V_27t_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))) => (![V_27t_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0')))))))) => (![V_27t_27, V_27v74_27, V_27v73_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))) => (![V_27t_7c49_7c_27, V_27t2_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t2_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0')))))))) => (![V_27t2_27, V_27t_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t_7c49_7c_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0')))))))) => (![V_27v7_27, V_27v_7c49_7c_7c48_7c_27, V_27v9_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))))))))) => ![V_27P_7c48_7c_27, V_27P_7c49_7c_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27v_7c48_7c_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27n_27)))))) & (![V_27t_7c49_7c_27, V_27t2_27]: ((p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27t_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27t2_27))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0')))))) & (![V_27v4_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0')))))) & (![V_27v4_7c49_7c_27, V_27v47_27, V_27v53_27, V_27v54_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v47_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v53_27),s('type.list.list'('type.infer_t.infer_t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0')))))) & (![V_27ts_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27ts_27)))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))))) & (![V_27v6_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27)))))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0')))))) & (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0')))))) & (![V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v7_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))))) & (![V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0'))))))) & (![V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0'))))))) & (![V_27v2_7c49_7c_27, V_27v22_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0'))))))) & (![V_27v25_27, V_27v26_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0'))))))) & (![V_27v29_27, V_27v3_7c48_7c_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0'))))))) & (![V_27v33_27, V_27v34_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0'))))))) & (![V_27v37_27, V_27v38_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0'))))))) & (![V_27v59_27, V_27v6_7c48_7c_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0'))))))) & (![V_27v63_27, V_27v64_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0'))))))) & (![V_27v67_27, V_27v68_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27)))))) => p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0'))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0')))) & (![V_27t_27]: (p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27t_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))))) & ![V_27t_27, V_27v73_27, V_27v74_27]: ((p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27t_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))))))))))))))))))))))))))))))))) => (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.infer_t.infer_t','bool'),V_27P_7c48_7c_27),s('type.infer_t.infer_t',V_27v_7c48_7c_27)))) & ![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.infer_t.infer_t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c48_7c_27))))))))))))))))))))))))).
fof('thm.infer_t.inf_type_to_string_def', axiom, ![V_27R_27]: (p(s('bool','const.relation.WF_1'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27)))) => (![V_27ts_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0')))))))) => (![V_27v38_27, V_27v37_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0')))))))) => (![V_27v3_7c48_7c_27, V_27v29_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0')))))))) => (![V_27v34_27, V_27v33_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0')))))))) => (![V_27v64_27, V_27v63_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0')))))))) => (![V_27v22_27, V_27v2_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0')))))))) => (![V_27v26_27, V_27v25_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0')))))))) => (![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0')))))))) => (![V_27v6_7c48_7c_27, V_27v59_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0')))))))) => (![V_27v_7c49_7c8_27, V_27v_7c49_7c7_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0')))))))) => (![V_27v68_27, V_27v67_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0')))))))) => (![V_27v74_27, V_27v73_27, V_27t_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))) => (![V_27t_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0')))))))) => (![V_27t_27, V_27v74_27, V_27v73_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27)))))))))) => (![V_27t_7c49_7c_27, V_27t2_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t2_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0')))))))) => (![V_27t2_27, V_27t_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t',V_27t_7c49_7c_27))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0')))))))) => (![V_27v7_27, V_27v_7c49_7c_7c48_7c_27, V_27v9_27]: p(s('bool','happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool'),'happ'(s('fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'fun'('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'bool')),V_27R_27),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INR_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))))))),s('type.sum.sum'('type.infer_t.infer_t','type.list.list'('type.infer_t.infer_t')),'const.sum.INL_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))))))))) => (![V_27v_7c48_7c_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tuvar_1'(s('type.num.num',V_27v_7c48_7c_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))) & (![V_27n_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tvar_db_1'(s('type.num.num',V_27n_27))))) = s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_dec_string_1'(s('type.num.num',V_27n_27))) & (![V_27t2_27, V_27t_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t2_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t',V_27t_7c49_7c_27))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t',V_27t2_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))) & (![V_27v4_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))) & (![V_27v54_27, V_27v53_27, V_27v47_27, V_27v4_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v4_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v47_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v53_27),s('type.list.list'('type.infer_t.infer_t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))) & (![V_27ts_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),V_27ts_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))) & (![V_27v6_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_int_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_char_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_string_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_ref_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word64_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8array_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_exn_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_vector_0'))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_array_0'))) & (![V_27v9_27, V_27v7_27, V_27v_7c49_7c_7c48_7c_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v9_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c_7c48_7c_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))))))) & (![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c3_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c4_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_int_0'))))))))) & (![V_27v_7c49_7c8_27, V_27v_7c49_7c7_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v_7c49_7c7_27),s('type.list.list'('type.infer_t.infer_t'),V_27v_7c49_7c8_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_char_0'))))))))) & (![V_27v22_27, V_27v2_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v2_7c49_7c_27),s('type.list.list'('type.infer_t.infer_t'),V_27v22_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_string_0'))))))))) & (![V_27v26_27, V_27v25_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v25_27),s('type.list.list'('type.infer_t.infer_t'),V_27v26_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_ref_0'))))))))) & (![V_27v3_7c48_7c_27, V_27v29_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v29_27),s('type.list.list'('type.infer_t.infer_t'),V_27v3_7c48_7c_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8_0'))))))))) & (![V_27v34_27, V_27v33_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v33_27),s('type.list.list'('type.infer_t.infer_t'),V_27v34_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word64_0'))))))))) & (![V_27v38_27, V_27v37_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v37_27),s('type.list.list'('type.infer_t.infer_t'),V_27v38_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8array_0'))))))))) & (![V_27v6_7c48_7c_27, V_27v59_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v59_27),s('type.list.list'('type.infer_t.infer_t'),V_27v6_7c48_7c_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_exn_0'))))))))) & (![V_27v64_27, V_27v63_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v63_27),s('type.list.list'('type.infer_t.infer_t'),V_27v64_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_vector_0'))))))))) & (![V_27v68_27, V_27v67_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t','const.infer_t.Infer_Tapp_2'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v67_27),s('type.list.list'('type.infer_t.infer_t'),V_27v68_27))))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_array_0'))))))))) & (s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),'const.list.NIL_0') & (![V_27t_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.NIL_0'))))) = s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t',V_27t_27))) & ![V_27v74_27, V_27v73_27, V_27t_27]: s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27t_27),s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27))))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.infer_t.inf_type_to_string_1'(s('type.infer_t.infer_t',V_27t_27))),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.infer_t.inf_types_to_string_1'(s('type.list.list'('type.infer_t.infer_t'),'const.list.CONS_2'(s('type.infer_t.infer_t',V_27v73_27),s('type.list.list'('type.infer_t.infer_t'),V_27v74_27))))))))))))))))))))))))))))))))))))))))))))))))))))))))))).
