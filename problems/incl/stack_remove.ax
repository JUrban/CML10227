fof('thm.stack_remove.max_stack_alloc_def', axiom, s('type.num.num','const.stack_remove.max_stack_alloc_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.stack_remove.word_offset_def', axiom, ![V_27A_27]: ![V_27n_27]: s('type.fcp.cart'('bool',V_27A_27),'const.stack_remove.word_offset_1'(s('type.num.num',V_27n_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27n_27)))))).
fof('thm.stack_remove.store_list_def', axiom, s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0') = s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.NextFree_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.HeapLength_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.OtherHeap_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.AllocSize_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.Handler_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.Globals_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.ProgStart_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.CONS_2'(s('type.wordLang.store_name','const.wordLang.BitmapBase_0'),s('type.list.list'('type.wordLang.store_name'),'const.list.NIL_0')))))))))))))))))))).
fof('thm.stack_remove.store_pos_def', axiom, ![V_27name_27]: s('type.num.num','const.stack_remove.store_pos_1'(s('type.wordLang.store_name',V_27name_27))) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.pair.prod'('type.num.num','type.wordLang.store_name')),'const.list.INDEX_FIND_3'(s('type.num.num','const.num.|48|_0'),s('fun'('type.wordLang.store_name','bool'),'_dst_x1x0_2'(s('fun'('type.wordLang.store_name','fun'('type.wordLang.store_name','bool')),'=_0'),s('type.wordLang.store_name',V_27name_27))),s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0'))),s('type.num.num','const.num.|48|_0'),s('fun'('type.pair.prod'('type.num.num','type.wordLang.store_name'),'type.num.num'),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.num.num','type.wordLang.store_name'),'fun'('fun'('type.num.num','fun'('type.wordLang.store_name','type.num.num')),'type.num.num')),'const.pair.pair_CASE_0'),s('fun'('type.num.num','fun'('type.wordLang.store_name','type.num.num')),'_dst_x00x10x00_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.stack_remove.store_length_def', axiom, s('type.num.num','const.stack_remove.store_length_0') = s('type.num.num','const.bool.COND_3'(s('bool','const.arithmetic.EVEN_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0'))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.stack_remove.store_offset_def', axiom, ![V_27A_27]: ![V_27name_27]: s('type.fcp.cart'('bool',V_27A_27),'const.stack_remove.store_offset_1'(s('type.wordLang.store_name',V_27name_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.fcp.cart'('bool',V_27A_27),'const.stack_remove.word_offset_1'(s('type.num.num','const.stack_remove.store_pos_1'(s('type.wordLang.store_name',V_27name_27)))))))).
fof('thm.stack_remove.stack_err_lab_def', axiom, s('type.num.num','const.stack_remove.stack_err_lab_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.stack_remove.single_stack_alloc_def', axiom, ![V_27A_27]: ![V_27k_27, V_27n_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.single_stack_alloc_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Sub_0'),s('type.num.num',V_27k_27),s('type.num.num',V_27k_27),s('type.asm.reg_imm'(V_27A_27),'const.asm.Imm_1'(s('type.fcp.cart'('bool',V_27A_27),'const.stack_remove.word_offset_1'(s('type.num.num',V_27n_27))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.JumpLower_3'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.stack_remove.stack_err_lab_0')))))).
fof('thm.stack_remove.stack_remove_9_prove_ltb', axiom, ![V_27a_27]: (?[V_27k_27, V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27))) => ?[V_27k_27, V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27))))).
fof('thm.stack_remove.stack_alloc_ind', axiom, ![V_27P_27]: (![V_27k_27, V_27n_27]: (((~ (s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & ~ (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.stack_remove.max_stack_alloc_0')))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.stack_remove.max_stack_alloc_0'))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.num.num',V_27n_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27v_27))),s('type.num.num',V_27v_7c49_7c_27)))))).
fof('thm.stack_remove.stack_alloc_def', axiom, ![V_27A_27]: ![V_27n_27, V_27k_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0')) & s('type.stackLang.prog'(V_27A_27),'const.stack_remove.stack_alloc_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27))) = s('type.stackLang.prog'(V_27A_27),'const.bool.COND_3'(s('bool',Vv),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'),s('type.stackLang.prog'(V_27A_27),'const.bool.COND_3'(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.stack_remove.max_stack_alloc_0'))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.single_stack_alloc_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),'const.stack_remove.single_stack_alloc_2'(s('type.num.num',V_27k_27),s('type.num.num','const.stack_remove.max_stack_alloc_0'))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.stack_alloc_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.stack_remove.max_stack_alloc_0'))))))))))))).
fof('thm.stack_remove.stack_remove_|49|4_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: (?[V_27k_27, V_27p_27]: s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27k_27),s('type.stackLang.prog'(V_27A_27),V_27p_27))) => ?[V_27k_27, V_27p_27]: s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),V_27a_27) = s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.num.num',V_27k_27),s('type.stackLang.prog'(V_27A_27),V_27p_27))))).
fof('thm.stack_remove.comp_ind', axiom, ![V_27A_27]: ![V_27P_27]: (![V_27k_27, V_27p_27]: ((![V_27c_27, V_27r_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27ri_27, V_27p_7c49_7c_7c39_7c_27, V_27p2_7c39_7c_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp',V_27c_27),s('type.num.num',V_27r_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.asm.reg_imm'(V_27A_27),V_27ri_27),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_7c39_7c_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p2_7c39_7c_27))))) & (![V_27c_27, V_27r_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27ri_27, V_27p_7c49_7c_7c39_7c_27, V_27p2_7c39_7c_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp',V_27c_27),s('type.num.num',V_27r_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.asm.reg_imm'(V_27A_27),V_27ri_27),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_7c39_7c_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_27))))) & (![V_27c_7c39_7c_27, V_27r_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27, V_27ri_7c39_7c_27, V_27p_7c49_7c_7c39_7c_7c39_7c_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.While_4'(s('type.asm.cmp',V_27c_7c39_7c_27),s('type.num.num',V_27r_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_7c39_7c_27),s('type.asm.reg_imm'(V_27A_27),V_27ri_7c39_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_7c39_7c_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_7c39_7c_7c39_7c_27))))) & (![V_27ret_27, V_27dest_27, V_27exc_27, V_27v_27, V_27p2_27, V_27v2_27, V_27l_7c49_7c_27, V_27l2_27]: ((s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Call_3'(s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27ret_27),s('type.sum.sum'('type.num.num','type.num.num'),V_27dest_27),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),V_27exc_27))) & (s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),V_27exc_27) = s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.option.SOME_1'(s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),V_27v_27))) & (s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),V_27v_27) = s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.stackLang.prog'(V_27A_27),V_27p2_27),s('type.pair.prod'('type.num.num','type.num.num'),V_27v2_27))) & s('type.pair.prod'('type.num.num','type.num.num'),V_27v2_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27l_7c49_7c_27),s('type.num.num',V_27l2_27)))))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p2_27))))) & (![V_27ret_27, V_27dest_27, V_27exc_27, V_27v_27, V_27p_7c49_7c_27, V_27v2_27, V_27lr_27, V_27v4_27, V_27l_7c49_7c_27, V_27l2_27]: ((s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Call_3'(s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27ret_27),s('type.sum.sum'('type.num.num','type.num.num'),V_27dest_27),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),V_27exc_27))) & (s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27ret_27) = s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_1'(s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27v_27))) & (s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27v_27) = s('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27),s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),V_27v2_27))) & (s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),V_27v2_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.num.num',V_27lr_27),s('type.pair.prod'('type.num.num','type.num.num'),V_27v4_27))) & s('type.pair.prod'('type.num.num','type.num.num'),V_27v4_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27l_7c49_7c_27),s('type.num.num',V_27l2_27))))))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27))))) & (![V_27p_7c49_7c_27, V_27p2_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p2_27))))) & ![V_27p_7c49_7c_27, V_27p2_27]: (s('type.stackLang.prog'(V_27A_27),V_27p_27) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27),s('type.stackLang.prog'(V_27A_27),V_27p2_27))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p_7c49_7c_27))))))))))) => p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.stackLang.prog'(V_27A_27),'bool'),'happ'(s('fun'('type.num.num','fun'('type.stackLang.prog'(V_27A_27),'bool')),V_27P_27),s('type.num.num',V_27v_27))),s('type.stackLang.prog'(V_27A_27),V_27v_7c49_7c_27)))))).
fof('ARITY_1_2_const.stack_remove.comp', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',VV0))),s('type.stackLang.prog'(V_27A_27),VV1))) = s('type.stackLang.prog'(V_27A_27),'const.stack_remove.comp_2'(s('type.num.num',VV0),s('type.stackLang.prog'(V_27A_27),VV1)))).
fof('ARITY_1_2_const.stack_remove.stack_alloc', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stack_remove.stack_alloc_1'(s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.stackLang.prog'(V_27A_27),'const.stack_remove.stack_alloc_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('ARITY_0_1_const.stack_remove.word_offset', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.word_offset_0'),s('type.num.num',VV0))) = s('type.fcp.cart'('bool',V_27A_27),'const.stack_remove.word_offset_1'(s('type.num.num',VV0)))).
fof('ARITY_0_1_const.stack_remove.store_offset', axiom, ![V_27A_27]: ![VV0]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.wordLang.store_name','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.store_offset_0'),s('type.wordLang.store_name',VV0))) = s('type.fcp.cart'('bool',V_27A_27),'const.stack_remove.store_offset_1'(s('type.wordLang.store_name',VV0)))).
fof('thm.stack_remove.comp_def', axiom, ![V_27A_27]: ![V_27p_27, V_27k_27]: s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),V_27p_27))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.prog_CASE_26'(s('type.stackLang.prog'(V_27A_27),V_27p_27),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'),s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','fun'('type.wordLang.store_name','type.stackLang.prog'(V_27A_27))),'_dst_x00x01x10x11_4'(s('fun'('bool','fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))),'const.bool.COND_0'),s('fun'('type.wordLang.store_name','bool'),'_dst_x1x0_2'(s('fun'('type.wordLang.store_name','fun'('type.wordLang.store_name','bool')),'=_0'),s('type.wordLang.store_name','const.wordLang.CurrHeap_0'))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x0x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Or_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'happ'(s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.num.num','fun'('type.wordLang.store_name','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','fun'('type.wordLang.store_name','type.asm.inst'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Load_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.wordLang.store_name','type.asm.addr'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.wordLang.store_name','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.store_offset_0'))))))))),s('fun'('type.wordLang.store_name','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))),'const.bool.COND_0'),s('fun'('type.wordLang.store_name','bool'),'_dst_x1x0_2'(s('fun'('type.wordLang.store_name','fun'('type.wordLang.store_name','bool')),'=_0'),s('type.wordLang.store_name','const.wordLang.CurrHeap_0'))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Or_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'))))))),s('fun'('type.wordLang.store_name','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.wordLang.store_name','fun'('type.num.num','type.asm.inst'(V_27A_27))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Store_0'))),s('fun'('type.wordLang.store_name','type.asm.addr'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.wordLang.store_name','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.store_offset_0'))))))))),s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.sum.sum'('type.num.num','type.num.num'),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.stackLang.prog'(V_27A_27)))),'_dst_x000x100x010x001_4'(s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.sum.sum'('type.num.num','type.num.num'),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.stackLang.prog'(V_27A_27)))),'const.stackLang.Call_0'),s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))),'const.option.option_CASE_0'),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))),'_dst_x001x110_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.option.SOME_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))),'_dst_x0000x1000x0111_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))))))))))))))),s('fun'('type.sum.sum'('type.num.num','type.num.num'),'type.sum.sum'('type.num.num','type.num.num')),'_i_0_0'),s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))))),'const.option.option_CASE_0'),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'),s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.pair_CASE_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')),'type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'const.option.SOME_0'),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))))))))))))),s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))))),s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))))),'_dst_x00000x10000x01000x00100x00010x00001_6'(s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))))),'const.stackLang.If_0'),s('fun'('type.asm.cmp','type.asm.cmp'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.reg_imm'(V_27A_27)),'_i_0_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))))),s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))))),'_dst_x0000x1000x0100x0010x0001_5'(s('fun'('type.asm.cmp','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))))),'const.stackLang.While_0'),s('fun'('type.asm.cmp','type.asm.cmp'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.reg_imm'(V_27A_27)),'_i_0_0'),s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stack_remove.comp_1'(s('type.num.num',V_27k_27))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27)))),'const.stackLang.JumpLower_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.Alloc_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.Raise_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stackLang.Return_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))))),'const.stackLang.FFI_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Tick_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27)))),'const.stackLang.LocValue_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stack_remove.stack_alloc_1'(s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Add_0'))),s('type.num.num',V_27k_27))),s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.reg_imm'(V_27A_27)),'const.asm.Imm_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.word_offset_0'))))))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Store_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.asm.addr'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.word_offset_0'))))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x01x11_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Add_0'))),s('type.num.num',V_27k_27))),s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'))))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Store_0'))),s('type.asm.addr'(V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.num.num',V_27k_27))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Sub_0'))),s('type.num.num',V_27k_27))),s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'))))))))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Load_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.asm.addr'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.word_offset_0'))))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11x10_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11x10_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27))),'_dst_x11x01_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Or_0'))),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Add_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.asm.reg_imm'(V_27A_27),'happ'(s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'),s('type.num.num',V_27k_27))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Load_0'))),s('fun'('type.num.num','type.asm.addr'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x0x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Or_0'))),s('type.num.num',V_27k_27),s('type.asm.reg_imm'(V_27A_27),'happ'(s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'),s('type.num.num',V_27k_27))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Sub_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.asm.reg_imm'(V_27A_27),'happ'(s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27)))),'const.asm.Shift_1'(s('type.asm.shift','const.asm.Lsr_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.stackLang.word_shift_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1x1_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27)))),'const.asm.Shift_1'(s('type.asm.shift','const.asm.Lsl_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.stackLang.word_shift_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27))),'const.stackLang.Seq_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'happ'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('type.asm.arith'(V_27A_27),'happ'(s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Or_0'))),s('type.num.num',V_27k_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.asm.reg_imm'(V_27A_27),'happ'(s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Add_0'))),s('type.num.num',V_27k_27))),s('type.num.num',V_27k_27))),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'))))))))))),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.stackLang.prog'(V_27A_27)),'const.stackLang.list_Seq_0'),s('fun'('type.num.num','fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27)))),'_dst_x00x10x11_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Load_0'))),s('type.asm.addr'(V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27)),'happ'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.wordLang.store_name','type.fcp.cart'('bool',V_27A_27)),'const.stack_remove.store_offset_0'),s('type.wordLang.store_name','const.wordLang.BitmapBase_0'))))))))),s('fun'('type.num.num','fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27)))),'_dst_x00x11x10_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.num.num','type.stackLang.prog'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','fun'('type.num.num','type.asm.inst'(V_27A_27))),'_dst_x00x11_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27))),'_dst_x00x10x10x01_4'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.asm.reg_imm'(V_27A_27),'type.asm.arith'(V_27A_27)))),'const.asm.Binop_1'(s('type.asm.binop','const.asm.Add_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.asm.reg_imm'(V_27A_27)),'const.asm.Reg_0'))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1x1_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.arith'(V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Arith_0'),s('fun'('type.num.num','type.asm.arith'(V_27A_27)),'_dst_x1x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.asm.arith'(V_27A_27)))),'const.asm.Shift_1'(s('type.asm.shift','const.asm.Lsl_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.stackLang.word_shift_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1x0_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('type.asm.addr'(V_27A_27),'type.asm.inst'(V_27A_27))),'const.asm.Mem_1'(s('type.asm.mem_op','const.asm.Load_0'))),s('fun'('type.num.num','type.asm.addr'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.addr'(V_27A_27))),'const.asm.Addr_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.NIL_0'))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.stackLang.Halt_0')))).
fof('ARITY_1_2_const.stack_remove.prog_comp', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'happ'(s('fun'('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27))),'const.stack_remove.prog_comp_1'(s('type.num.num',VV0))),s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),VV1))) = s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.stack_remove.prog_comp_2'(s('type.num.num',VV0),s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),VV1)))).
fof('thm.stack_remove.prog_comp_def', axiom, ![V_27A_27,V_27B_27]: ![V_27k_27, V_27n_27, V_27p_27]: s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.stack_remove.prog_comp_2'(s('type.num.num',V_27k_27),s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27n_27),s('type.stackLang.prog'(V_27B_27),V_27p_27))))) = s('type.pair.prod'(V_27A_27,'type.stackLang.prog'(V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27n_27),s('type.stackLang.prog'(V_27B_27),'const.stack_remove.comp_2'(s('type.num.num',V_27k_27),s('type.stackLang.prog'(V_27B_27),V_27p_27)))))).
fof('thm.stack_remove.halt_inst_def', axiom, ![V_27A_27]: ![V_27w_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Const_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Halt_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.stack_remove.stack_remove_2|49|_prove_ltb', axiom, ![V_27A_27]: ![V_27a_7c39_7c_27]: ((?[V_27a_27, V_27t_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.pair.,_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.NIL_0'))))) | (?[V_27a_27, V_27t_27, V_27w_27, V_27xs_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.pair.,_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INL_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))))) | ?[V_27a_27, V_27t_27, V_27i_27, V_27xs_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.pair.,_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27i_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))))))) => (?[V_27a_27, V_27t_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.pair.,_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.NIL_0'))))) | (?[V_27a_27, V_27t_27, V_27w_27, V_27xs_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.pair.,_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INL_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))))) | ?[V_27a_27, V_27t_27, V_27i_27, V_27xs_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')))),'const.pair.,_2'(s('type.num.num',V_27a_27),s('type.pair.prod'('type.num.num','type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.pair.,_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27i_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))))))))).
fof('thm.stack_remove.store_list_code_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27a_27, V_27t_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'))),V_27P_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27t_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.NIL_0')))) & (![V_27a_27, V_27t_27, V_27w_27, V_27xs_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'))),V_27P_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27t_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'))),V_27P_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27t_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INL_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))))) & ![V_27a_27, V_27t_27, V_27i_27, V_27xs_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'))),V_27P_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27t_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'))),V_27P_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27t_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27i_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'bool'))),V_27P_27),s('type.num.num',V_27v_27))),s('type.num.num',V_27v_7c49_7c_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27v2_27)))))).
fof('thm.stack_remove.store_list_code_def|split|0', axiom, ![V_27A_27]: ![V_27t_27, V_27a_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.store_list_code_3'(s('type.num.num',V_27a_27),s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.NIL_0'))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0')).
fof('thm.stack_remove.store_list_code_def|split|1', axiom, ![V_27A_27]: ![V_27xs_27, V_27w_27, V_27t_27, V_27a_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.store_list_code_3'(s('type.num.num',V_27a_27),s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INL_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.list_Seq_1'(s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Const_2'(s('type.num.num',V_27t_27),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Mem_3'(s('type.asm.mem_op','const.asm.Store_0'),s('type.num.num',V_27t_27),s('type.asm.addr'(V_27A_27),'const.asm.Addr_2'(s('type.num.num',V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Add_0'),s('type.num.num',V_27a_27),s('type.num.num',V_27a_27),s('type.asm.reg_imm'(V_27A_27),'const.asm.Imm_1'(s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.NIL_0'))))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.store_list_code_3'(s('type.num.num',V_27a_27),s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27)))))).
fof('thm.stack_remove.store_list_code_def|split|2', axiom, ![V_27A_27]: ![V_27xs_27, V_27t_27, V_27i_27, V_27a_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.store_list_code_3'(s('type.num.num',V_27a_27),s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.CONS_2'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num',V_27i_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.list_Seq_1'(s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Mem_3'(s('type.asm.mem_op','const.asm.Store_0'),s('type.num.num',V_27i_27),s('type.asm.addr'(V_27A_27),'const.asm.Addr_2'(s('type.num.num',V_27a_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Add_0'),s('type.num.num',V_27a_27),s('type.num.num',V_27a_27),s('type.asm.reg_imm'(V_27A_27),'const.asm.Imm_1'(s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.NIL_0'))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.store_list_code_3'(s('type.num.num',V_27a_27),s('type.num.num',V_27t_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27)))))).
fof('thm.stack_remove.init_memory_def', axiom, ![V_27A_27]: ![V_27k_27, V_27xs_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.init_memory_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))) = s('type.stackLang.prog'(V_27A_27),'const.stackLang.list_Seq_1'(s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Const_2'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Sub_0'),s('type.num.num',V_27k_27),s('type.num.num',V_27k_27),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Const_2'(s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stackLang.Inst_1'(s('type.asm.inst'(V_27A_27),'const.asm.Mem_3'(s('type.asm.mem_op','const.asm.Store_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.addr'(V_27A_27),'const.asm.Addr_2'(s('type.num.num',V_27k_27),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.CONS_2'(s('type.stackLang.prog'(V_27A_27),'const.stack_remove.store_list_code_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),V_27xs_27))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.NIL_0')))))))))))))).
fof('thm.stack_remove.store_init_def', axiom, ![V_27A_27]: ![V_27k_27]: s('fun'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.stack_remove.store_init_1'(s('type.num.num',V_27k_27))) = s('fun'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.misc.UPDATE_LIST_2'(s('fun'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.combin.K_1'(s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INL_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.pair.,_2'(s('type.wordLang.store_name','const.wordLang.CurrHeap_0'),s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.pair.,_2'(s('type.wordLang.store_name','const.wordLang.NextFree_0'),s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.pair.,_2'(s('type.wordLang.store_name','const.wordLang.EndOfHeap_0'),s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.pair.,_2'(s('type.wordLang.store_name','const.wordLang.HeapLength_0'),s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.pair.,_2'(s('type.wordLang.store_name','const.wordLang.OtherHeap_0'),s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.pair.,_2'(s('type.wordLang.store_name','const.wordLang.BitmapBase_0'),s('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'),'const.sum.INR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.pair.prod'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num'))),'const.list.NIL_0')))))))))))))))).
fof('thm.stack_remove.init_code_def', axiom, ![V_27A_27]: ![V_27max__heap_27, V_27bitmaps_27, V_27k_27]: s('type.stackLang.prog'(V_27A_27),'const.stack_remove.init_code_3'(s('type.num.num',V_27max__heap_27),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27),s('type.num.num',V_27k_27))) = s('type.stackLang.prog'(V_27A_27),'const.bool.LET_2'(s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'('type.stackLang.prog'(V_27A_27),'fun'('type.stackLang.prog'(V_27A_27),'type.stackLang.prog'(V_27A_27)))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('bool','happ'(s('fun'('type.num.num','bool'),'const.arithmetic.<=_1'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num',V_27max__heap_27))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.stackLang.prog'(V_27A_27)),'const.stackLang.list_Seq_0'),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp','const.asm.Lower_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp','const.asm.Lower_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Sub_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_mul_0'),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num',V_27max__heap_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp','const.asm.Lower_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.num.|48|_0'))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1x1_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x0_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_mul_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1_2'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Add_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_mul_0'),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.stack_remove.max_stack_alloc_0'))))),s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp','const.asm.Lower_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Sub_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('fun'('type.num.num','type.list.list'('type.stackLang.prog'(V_27A_27))),'_dst_x0x1x0_3'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('fun'('type.num.num','type.stackLang.prog'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('fun'('type.num.num','type.asm.inst'(V_27A_27)),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.asm.inst'(V_27A_27)),'const.asm.Const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1x0_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_mul_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.fcp.cart'('bool',V_27A_27),'const.misc.bytes_in_word_0'))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp','const.asm.Lower_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Sub_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Shift_4'(s('type.asm.shift','const.asm.Lsr_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.If_5'(s('type.asm.cmp','const.asm.Test_0'),s('type.num.num','const.num.|48|_0'),s('type.asm.reg_imm'(V_27A_27),'const.asm.Imm_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Skip_0'),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Add_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Binop_4'(s('type.asm.binop','const.asm.Or_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.asm.reg_imm'(V_27A_27),'const.asm.Reg_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'happ'(s('fun'('type.asm.inst'(V_27A_27),'type.stackLang.prog'(V_27A_27)),'const.stackLang.Inst_0'),s('type.asm.inst'(V_27A_27),'const.asm.Arith_1'(s('type.asm.arith'(V_27A_27),'const.asm.Shift_4'(s('type.asm.shift','const.asm.Lsr_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.stackLang.word_shift_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.init_memory_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.APPEND_2'(s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.MAP_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.sum.INL_0'),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27))),s('type.list.list'('type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.list.MAP_2'(s('fun'('type.wordLang.store_name','type.sum.sum'('type.fcp.cart'('bool',V_27A_27),'type.num.num')),'const.stack_remove.store_init_1'(s('type.num.num',V_27k_27))),s('type.list.list'('type.wordLang.store_name'),'const.list.REVERSE_1'(s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0'))))))))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27))),'happ'(s('fun'('type.stackLang.prog'(V_27A_27),'fun'('type.list.list'('type.stackLang.prog'(V_27A_27)),'type.list.list'('type.stackLang.prog'(V_27A_27)))),'const.list.CONS_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.LocValue_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.stackLang.prog'(V_27A_27)),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.wordLang.store_name'),'const.stack_remove.store_list_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.stack_remove.init_stubs_def', axiom, ![V_27A_27]: ![V_27max__heap_27, V_27bitmaps_27, V_27k_27, V_27start_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stack_remove.init_stubs_4'(s('type.num.num',V_27max__heap_27),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27),s('type.num.num',V_27k_27),s('type.num.num',V_27start_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Seq_2'(s('type.stackLang.prog'(V_27A_27),'const.stack_remove.init_code_3'(s('type.num.num',V_27max__heap_27),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27),s('type.num.num',V_27k_27))),s('type.stackLang.prog'(V_27A_27),'const.stackLang.Call_3'(s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.option.NONE_0'),s('type.sum.sum'('type.num.num','type.num.num'),'const.sum.INL_1'(s('type.num.num',V_27start_27))),s('type.option.option'('type.pair.prod'('type.stackLang.prog'(V_27A_27),'type.pair.prod'('type.num.num','type.num.num'))),'const.option.NONE_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.stackLang.prog'(V_27A_27),'const.stack_remove.halt_inst_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.list.NIL_0')))))))).
fof('thm.stack_remove.compile_def', axiom, ![V_27A_27]: ![V_27max__heap_27, V_27bitmaps_27, V_27k_27, V_27start_27, V_27prog_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stack_remove.compile_5'(s('type.num.num',V_27max__heap_27),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27),s('type.num.num',V_27k_27),s('type.num.num',V_27start_27),s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),V_27prog_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stack_remove.init_stubs_4'(s('type.num.num',V_27max__heap_27),s('type.list.list'('type.fcp.cart'('bool',V_27A_27)),V_27bitmaps_27),s('type.num.num',V_27k_27),s('type.num.num',V_27start_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27)),'type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),'const.stack_remove.prog_comp_1'(s('type.num.num',V_27k_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.stackLang.prog'(V_27A_27))),V_27prog_27)))))).
fof('ARITY_1_2_const.stack_names.find_name', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.stack_names.find_name_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.num.num',VV1))) = s('type.num.num','const.stack_names.find_name_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.num.num',VV1)))).
