fof('thm.commonUnif.const_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool')),'=_0'),s('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'happ'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'happ'(s('fun'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'happ'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'happ'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'const.pair.,_0'),s('bool','const.bool.ARB_0'))),s('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('type.list.list'('type.string.char'),'const.bool.ARB_0'))))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.ind_type.BOTTOM_0'))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('bool','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('bool','bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_i_0_0'),s('fun'('bool','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('bool','type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'_dst_x1x0_2'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'const.pair.,_0'),s('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('type.list.list'('type.string.char'),'const.bool.ARB_0'))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.ind_type.BOTTOM_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_i_0_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.num.num','type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'happ'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'const.pair.,_0'),s('bool','const.bool.ARB_0'))),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.pair.,_0'),s('type.list.list'('type.string.char'),'const.bool.ARB_0'))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.ind_type.BOTTOM_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'happ'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.list.list'('type.string.char')),'type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'const.pair.,_0'),s('bool','const.bool.ARB_0'))),s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'const.ind_type.BOTTOM_0'))))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char')))),'type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),'_i_0_0'))))))),s('fun'('type.commonUnif.const','type.ind_type.recspace'('type.pair.prod'('bool','type.pair.prod'('type.num.num','type.list.list'('type.string.char'))))),V_27rep_27))))).
fof('thm.commonUnif.const_case_def|split|0', axiom, ![V_27A_27]: ![V_27v_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.commonUnif.const_CASE_5'(s('type.commonUnif.const','const.commonUnif.Null_0'),s(V_27A_27,V_27v_27),s('fun'('bool',V_27A_27),V_27f_27),s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27))) = s(V_27A_27,V_27v_27)).
fof('thm.commonUnif.const_case_def|split|1', axiom, ![V_27A_27]: ![V_27a_27, V_27v_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.commonUnif.const_CASE_5'(s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))),s(V_27A_27,V_27v_27),s('fun'('bool',V_27A_27),V_27f_27),s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27))) = s(V_27A_27,'happ'(s('fun'('bool',V_27A_27),V_27f_27),s('bool',V_27a_27)))).
fof('thm.commonUnif.const_case_def|split|2', axiom, ![V_27A_27]: ![V_27a_27, V_27v_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.commonUnif.const_CASE_5'(s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))),s(V_27A_27,V_27v_27),s('fun'('bool',V_27A_27),V_27f_27),s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('type.num.num',V_27a_27)))).
fof('thm.commonUnif.const_case_def|split|3', axiom, ![V_27A_27]: ![V_27a_27, V_27v_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: s(V_27A_27,'const.commonUnif.const_CASE_5'(s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_27))),s(V_27A_27,V_27v_27),s('fun'('bool',V_27A_27),V_27f_27),s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27),s('type.list.list'('type.string.char'),V_27a_27)))).
fof('thm.commonUnif.const_size_def|split|0', axiom, s('type.num.num','const.commonUnif.const_size_1'(s('type.commonUnif.const','const.commonUnif.Null_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.commonUnif.const_size_def|split|1', axiom, ![V_27a_27]: s('type.num.num','const.commonUnif.const_size_1'(s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.basicSize.bool_size_1'(s('bool',V_27a_27)))))).
fof('thm.commonUnif.const_size_def|split|2', axiom, ![V_27a_27]: s('type.num.num','const.commonUnif.const_size_1'(s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))).
fof('thm.commonUnif.const_size_def|split|3', axiom, ![V_27a_27]: s('type.num.num','const.commonUnif.const_size_1'(s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s('fun'('type.string.char','type.num.num'),'const.string.char_size_0'),s('type.list.list'('type.string.char'),V_27a_27)))))).
fof('ARITY_0_1_const.commonUnif.Num', axiom, ![VV0]: s('type.commonUnif.const','happ'(s('fun'('type.num.num','type.commonUnif.const'),'const.commonUnif.Num_0'),s('type.num.num',VV0))) = s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',VV0)))).
fof('ARITY_0_1_const.commonUnif.Bool', axiom, ![VV0]: s('type.commonUnif.const','happ'(s('fun'('bool','type.commonUnif.const'),'const.commonUnif.Bool_0'),s('bool',VV0))) = s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',VV0)))).
fof('ARITY_0_1_const.commonUnif.String', axiom, ![VV0]: s('type.commonUnif.const','happ'(s('fun'('type.list.list'('type.string.char'),'type.commonUnif.const'),'const.commonUnif.String_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.commonUnif.datatype_const', axiom, ![V_27const_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.list.list'('type.string.char'),'type.commonUnif.const'),'bool'),'happ'(s('fun'('fun'('type.num.num','type.commonUnif.const'),'fun'('fun'('type.list.list'('type.string.char'),'type.commonUnif.const'),'bool')),'happ'(s('fun'('fun'('bool','type.commonUnif.const'),'fun'('fun'('type.num.num','type.commonUnif.const'),'fun'('fun'('type.list.list'('type.string.char'),'type.commonUnif.const'),'bool'))),'happ'(s('fun'('type.commonUnif.const','fun'('fun'('bool','type.commonUnif.const'),'fun'('fun'('type.num.num','type.commonUnif.const'),'fun'('fun'('type.list.list'('type.string.char'),'type.commonUnif.const'),'bool')))),V_27const_27),s('type.commonUnif.const','const.commonUnif.Null_0'))),s('fun'('bool','type.commonUnif.const'),'const.commonUnif.Bool_0'))),s('fun'('type.num.num','type.commonUnif.const'),'const.commonUnif.Num_0'))),s('fun'('type.list.list'('type.string.char'),'type.commonUnif.const'),'const.commonUnif.String_0'))))))).
fof('thm.commonUnif.const_|49||49||split|0', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))) = s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_7c39_7c_27))) <=> s('bool',V_27a_27) = s('bool',V_27a_7c39_7c_27))).
fof('thm.commonUnif.const_|49||49||split|1', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))) = s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_7c39_7c_27))) <=> s('type.num.num',V_27a_27) = s('type.num.num',V_27a_7c39_7c_27))).
fof('thm.commonUnif.const_|49||49||split|2', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_27))) = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))) <=> s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))).
fof('thm.commonUnif.const_distinct|split|0', axiom, ![V_27a_27]: ~ (s('type.commonUnif.const','const.commonUnif.Null_0') = s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))))).
fof('thm.commonUnif.const_distinct|split|1', axiom, ![V_27a_27]: ~ (s('type.commonUnif.const','const.commonUnif.Null_0') = s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))))).
fof('thm.commonUnif.const_distinct|split|2', axiom, ![V_27a_27]: ~ (s('type.commonUnif.const','const.commonUnif.Null_0') = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_27))))).
fof('thm.commonUnif.const_distinct|split|3', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))) = s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_7c39_7c_27))))).
fof('thm.commonUnif.const_distinct|split|4', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))) = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))))).
fof('thm.commonUnif.const_distinct|split|5', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))) = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))))).
fof('thm.commonUnif.const_case_cong', axiom, ![V_27A_27]: ![V_27v_7c39_7c_27, V_27f2_7c39_7c_27, V_27f_7c49_7c_7c39_7c_27, V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27v_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27]: ((s('type.commonUnif.const',V_27M_27) = s('type.commonUnif.const',V_27M_7c39_7c_27) & ((s('type.commonUnif.const',V_27M_7c39_7c_27) = s('type.commonUnif.const','const.commonUnif.Null_0') => s(V_27A_27,V_27v_27) = s(V_27A_27,V_27v_7c39_7c_27)) & (![V_27a_27]: (s('type.commonUnif.const',V_27M_7c39_7c_27) = s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))) => s(V_27A_27,'happ'(s('fun'('bool',V_27A_27),V_27f_27),s('bool',V_27a_27))) = s(V_27A_27,'happ'(s('fun'('bool',V_27A_27),V_27f_7c39_7c_27),s('bool',V_27a_27)))) & (![V_27a_27]: (s('type.commonUnif.const',V_27M_7c39_7c_27) = s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('type.num.num',V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_7c39_7c_27),s('type.num.num',V_27a_27)))) & ![V_27a_27]: (s('type.commonUnif.const',V_27M_7c39_7c_27) = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27),s('type.list.list'('type.string.char'),V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_7c39_7c_27),s('type.list.list'('type.string.char'),V_27a_27)))))))) => s(V_27A_27,'const.commonUnif.const_CASE_5'(s('type.commonUnif.const',V_27M_27),s(V_27A_27,V_27v_27),s('fun'('bool',V_27A_27),V_27f_27),s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_27))) = s(V_27A_27,'const.commonUnif.const_CASE_5'(s('type.commonUnif.const',V_27M_7c39_7c_27),s(V_27A_27,V_27v_7c39_7c_27),s('fun'('bool',V_27A_27),V_27f_7c39_7c_27),s('fun'('type.num.num',V_27A_27),V_27f_7c49_7c_7c39_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f2_7c39_7c_27))))).
fof('thm.commonUnif.const_nchotomy', axiom, ![V_27cc_27]: (s('type.commonUnif.const',V_27cc_27) = s('type.commonUnif.const','const.commonUnif.Null_0') | (?[V_27b_27]: s('type.commonUnif.const',V_27cc_27) = s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27b_27))) | (?[V_27n_27]: s('type.commonUnif.const',V_27cc_27) = s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27n_27))) | ?[V_27s_27]: s('type.commonUnif.const',V_27cc_27) = s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('thm.commonUnif.const_Axiom', axiom, ![V_27A_27]: ![V_27f_7c48_7c_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: ?[V_27fn_27]: (s(V_27A_27,'happ'(s('fun'('type.commonUnif.const',V_27A_27),V_27fn_27),s('type.commonUnif.const','const.commonUnif.Null_0'))) = s(V_27A_27,V_27f_7c48_7c_27) & (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.commonUnif.const',V_27A_27),V_27fn_27),s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('bool',V_27A_27),V_27f_7c49_7c_27),s('bool',V_27a_27))) & (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.commonUnif.const',V_27A_27),V_27fn_27),s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27))) & ![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.commonUnif.const',V_27A_27),V_27fn_27),s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27),s('type.list.list'('type.string.char'),V_27a_27))))))).
fof('thm.commonUnif.const_induction', axiom, ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.commonUnif.const','bool'),V_27P_27),s('type.commonUnif.const','const.commonUnif.Null_0')))) & (![V_27b_27]: p(s('bool','happ'(s('fun'('type.commonUnif.const','bool'),V_27P_27),s('type.commonUnif.const','const.commonUnif.Bool_1'(s('bool',V_27b_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.commonUnif.const','bool'),V_27P_27),s('type.commonUnif.const','const.commonUnif.Num_1'(s('type.num.num',V_27n_27)))))) & ![V_27s_27]: p(s('bool','happ'(s('fun'('type.commonUnif.const','bool'),V_27P_27),s('type.commonUnif.const','const.commonUnif.String_1'(s('type.list.list'('type.string.char'),V_27s_27))))))))) => ![V_27c_27]: p(s('bool','happ'(s('fun'('type.commonUnif.const','bool'),V_27P_27),s('type.commonUnif.const',V_27c_27)))))).
fof('thm.commonUnif.extension_chain', axiom, ![V_27A_27,V_27B_27]: ![V_27subst_27, V_27source_27, V_27z_27]: ((p(s('bool','const.pred_set.FINITE_1'(s('fun'(V_27A_27,'bool'),'happ'(s('fun'('type.num.num','fun'(V_27A_27,'bool')),V_27source_27),s('type.num.num',V_27z_27)))))) & (![V_27m_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))) => p(s('bool','const.finite_map.SUBMAP_2'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27m_27))),s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27n_27))))))) & (![V_27n_27]: p(s('bool','const.pred_set.DISJOINT_2'(s('fun'(V_27A_27,'bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27n_27))))),s('fun'(V_27A_27,'bool'),'happ'(s('fun'('type.num.num','fun'(V_27A_27,'bool')),V_27source_27),s('type.num.num',V_27n_27)))))) & ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27z_27),s('type.num.num',V_27n_27)))) => s('fun'(V_27A_27,'bool'),'const.pred_set.UNION_2'(s('fun'(V_27A_27,'bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27n_27))))),s('fun'(V_27A_27,'bool'),'happ'(s('fun'('type.num.num','fun'(V_27A_27,'bool')),V_27source_27),s('type.num.num',V_27n_27))))) = s('fun'(V_27A_27,'bool'),'const.pred_set.UNION_2'(s('fun'(V_27A_27,'bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27z_27))))),s('fun'(V_27A_27,'bool'),'happ'(s('fun'('type.num.num','fun'(V_27A_27,'bool')),V_27source_27),s('type.num.num',V_27z_27))))))))) => ?[V_27x_27]: ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27n_27)))) => s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27n_27))) = s('type.finite_map.fmap'(V_27A_27,V_27B_27),'happ'(s('fun'('type.num.num','type.finite_map.fmap'(V_27A_27,V_27B_27)),V_27subst_27),s('type.num.num',V_27x_27)))))).
