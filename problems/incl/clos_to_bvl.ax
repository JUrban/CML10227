fof('thm.clos_to_bvl.closure_tag_def', axiom, s('type.num.num','const.clos_to_bvl.closure_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.clos_to_bvl.partial_app_tag_def', axiom, s('type.num.num','const.clos_to_bvl.partial_app_tag_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.clos_to_bvl.clos_tag_shift_def', axiom, ![V_27tag_27]: s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27tag_27))) = s('type.num.num','const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27tag_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num',V_27tag_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27tag_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.clos_to_bvl.partial_app_tag_neq_closure_tag', axiom, ~ (s('type.num.num','const.clos_to_bvl.partial_app_tag_0') = s('type.num.num','const.clos_to_bvl.closure_tag_0'))).
fof('thm.clos_to_bvl.clos_tag_shift_nil_tag', axiom, s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num','const.conLang.nil_tag_0'))) = s('type.num.num','const.conLang.nil_tag_0')).
fof('thm.clos_to_bvl.clos_tag_shift_cons_tag', axiom, s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num','const.conLang.cons_tag_0'))) = s('type.num.num','const.conLang.cons_tag_0')).
fof('thm.clos_to_bvl.clos_tag_shift_inj', axiom, ![V_27n2_27, V_27n_7c49_7c_27]: (s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27n_7c49_7c_27))) = s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27n2_27))) => s('type.num.num',V_27n_7c49_7c_27) = s('type.num.num',V_27n2_27))).
fof('thm.clos_to_bvl.bool_to_tag_def', axiom, ![V_27b_27]: s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s('bool',V_27b_27))) = s('type.num.num','const.bool.COND_3'(s('bool',V_27b_27),s('type.num.num','const.conLang.true_tag_0'),s('type.num.num','const.conLang.false_tag_0')))).
fof('thm.clos_to_bvl.Bool_def', axiom, ![V_27b_27]: s('type.bvl.exp','const.clos_to_bvl.Bool_1'(s('bool',V_27b_27))) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.bool_to_tag_1'(s('bool',V_27b_27))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))).
fof('ARITY_0_1_const.clos_to_bvl.compile_op', axiom, ![VV0]: s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.clos_to_bvl.compile_op_0'),s('type.closLang.op',VV0))) = s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op',VV0)))).
fof('ARITY_0_1_const.clos_to_bvl.clos_tag_shift', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'const.clos_to_bvl.clos_tag_shift_0'),s('type.num.num',VV0))) = s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',VV0)))).
fof('thm.clos_to_bvl.compile_op_primitive_def', axiom, s('fun'('type.closLang.op','type.closLang.op'),'const.clos_to_bvl.compile_op_0') = s('fun'('type.closLang.op','type.closLang.op'),'const.relation.WFREC_2'(s('fun'('type.closLang.op','fun'('type.closLang.op','bool')),'const.min.@_1'(s('fun'('fun'('type.closLang.op','fun'('type.closLang.op','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.closLang.op','type.closLang.op'),'fun'('type.closLang.op','type.closLang.op')),'_dst_x0_1'(s('fun'('type.closLang.op','type.closLang.op'),'_dst_x1x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0x0_41'(s('fun'('type.closLang.op','fun'('fun'('type.num.num','type.closLang.op'),'fun'('fun'('type.num.num','type.closLang.op'),'fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('fun'('type.num.num','type.closLang.op'),'fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('fun'('type.num.num','type.closLang.op'),'fun'('type.closLang.op','fun'('fun'('type.num.num','fun'('type.num.num','type.closLang.op')),'fun'('fun'('type.num.num','type.closLang.op'),'fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('fun'('type.num.num','type.closLang.op'),'fun'('fun'('type.num.num','type.closLang.op'),'fun'('type.closLang.op','fun'('fun'('type.integer.int','type.closLang.op'),'fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('type.closLang.op','fun'('fun'('type.ast.word_size','fun'('type.ast.opw','type.closLang.op')),'fun'('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.closLang.op'))),'fun'('type.closLang.op','fun'('type.closLang.op','type.closLang.op'))))))))))))))))))))))))))))))))))))))))),'const.closLang.op_CASE_0'),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'const.closLang.Global_0'))),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'const.closLang.SetGlobal_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.AllocGlobal_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.GlobalsPtr_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.SetGlobalsPtr_0'))),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.num.num','type.closLang.op'),'const.closLang.Cons_0'),s('fun'('type.num.num','type.num.num'),'const.clos_to_bvl.clos_tag_shift_0'))))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.El_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.LengthBlock_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Length_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.LengthByte_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.RefByte_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.RefArray_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.DerefByte_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.UpdateByte_0'))),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.num.num','type.closLang.op'),'const.closLang.FromList_0'),s('fun'('type.num.num','type.num.num'),'const.clos_to_bvl.clos_tag_shift_0'))))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.ToList_0'))),s('fun'('type.num.num','fun'('type.num.num','type.closLang.op')),'_dst_x00x11_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','fun'('type.num.num','type.closLang.op')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','type.closLang.op')),'const.closLang.TagLenEq_0'),s('fun'('type.num.num','type.num.num'),'const.clos_to_bvl.clos_tag_shift_0'))))),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.num.num','type.closLang.op'),'const.closLang.TagEq_0'),s('fun'('type.num.num','type.num.num'),'const.clos_to_bvl.clos_tag_shift_0'))))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.BlockCmp_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.IsBlock_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Ref_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Deref_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Update_0'))),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'const.closLang.Label_0'))),s('fun'('type.num.num','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.num.num','type.closLang.op'),'const.closLang.FFI_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Equal_0'))),s('fun'('type.integer.int','type.closLang.op'),'_dst_x0x1_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.integer.int','type.closLang.op'),'const.closLang.Const_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Add_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Sub_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Mult_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Div_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Mod_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Less_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.LessEq_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.Greater_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.GreaterEq_0'))),s('fun'('type.ast.word_size','fun'('type.ast.opw','type.closLang.op')),'_dst_x00x11_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.ast.word_size','fun'('type.ast.opw','type.closLang.op')),'const.closLang.WordOp_0'))),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.closLang.op'))),'_dst_x000x111_2'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('fun'('type.ast.word_size','fun'('type.ast.shift','fun'('type.num.num','type.closLang.op'))),'const.closLang.WordShift_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.WordFromInt_0'))),s('type.closLang.op','happ'(s('fun'('type.closLang.op','type.closLang.op'),'const.combin.I_0'),s('type.closLang.op','const.closLang.WordToInt_0')))))))))).
fof('thm.clos_to_bvl.clos_to_bvl_|49||48|_prove_ltb', axiom, ![V_27a_7c39_7c_27]: ((?[V_27v_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27))) | (?[V_27v_7c49_7c_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27v_7c49_7c_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.AllocGlobal_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.GlobalsPtr_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.SetGlobalsPtr_0') | (?[V_27tag_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27tag_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.El_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.LengthBlock_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Length_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.LengthByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.RefByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.RefArray_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.DerefByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.UpdateByte_0') | (?[V_27tag_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27tag_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.ToList_0') | (?[V_27tag_27, V_27a_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27tag_27),s('type.num.num',V_27a_27))) | (?[V_27tag_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27tag_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.BlockCmp_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.IsBlock_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Ref_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Deref_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Update_0') | (?[V_27v7_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27))) | (?[V_27v8_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Equal_0') | (?[V_27v9_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Add_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Sub_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Mult_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Div_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Mod_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Less_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.LessEq_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Greater_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.GreaterEq_0') | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordFromInt_0') | s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordToInt_0')))))))))))))))))))))))))))))))))))))))) => (?[V_27tag_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27tag_27))) | (?[V_27tag_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27tag_27))) | (?[V_27tag_27, V_27a_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27tag_27),s('type.num.num',V_27a_27))) | (?[V_27tag_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27tag_27))) | (?[V_27v_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27))) | (?[V_27v_7c49_7c_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27v_7c49_7c_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.AllocGlobal_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.GlobalsPtr_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.SetGlobalsPtr_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.El_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.LengthBlock_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Length_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.LengthByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.RefByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.RefArray_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.DerefByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.UpdateByte_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.ToList_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.BlockCmp_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.IsBlock_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Ref_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Deref_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Update_0') | (?[V_27v7_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27))) | (?[V_27v8_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Equal_0') | (?[V_27v9_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Add_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Sub_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Mult_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Div_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Mod_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Less_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.LessEq_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.Greater_0') | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.GreaterEq_0') | (?[V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27))) | (s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordFromInt_0') | s('type.closLang.op',V_27a_7c39_7c_27) = s('type.closLang.op','const.closLang.WordToInt_0')))))))))))))))))))))))))))))))))))))))))).
fof('thm.clos_to_bvl.compile_op_ind', axiom, ![V_27P_27]: ((![V_27tag_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27tag_27)))))) & (![V_27tag_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27tag_27)))))) & (![V_27tag_27, V_27a_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27tag_27),s('type.num.num',V_27a_27)))))) & (![V_27tag_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27tag_27)))))) & (![V_27v_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27)))))) & (![V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27v_7c49_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.AllocGlobal_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.GlobalsPtr_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.SetGlobalsPtr_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.El_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.LengthBlock_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Length_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.LengthByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.RefByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.RefArray_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.DerefByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.UpdateByte_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.ToList_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.BlockCmp_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.IsBlock_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Ref_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Deref_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Update_0')))) & (![V_27v7_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27)))))) & (![V_27v8_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Equal_0')))) & (![V_27v9_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Add_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Sub_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Mult_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Div_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Mod_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Less_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.LessEq_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.Greater_0')))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.GreaterEq_0')))) & (![V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27)))))) & (![V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27)))))) & (p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordFromInt_0')))) & p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op','const.closLang.WordToInt_0'))))))))))))))))))))))))))))))))))))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.closLang.op','bool'),V_27P_27),s('type.closLang.op',V_27v_27)))))).
fof('thm.clos_to_bvl.compile_op_def|split|0', axiom, ![V_27tag_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num',V_27tag_27))))) = s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27tag_27)))))).
fof('thm.clos_to_bvl.compile_op_def|split|1', axiom, ![V_27tag_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num',V_27tag_27))))) = s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27tag_27)))))).
fof('thm.clos_to_bvl.compile_op_def|split|2', axiom, ![V_27tag_27, V_27a_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num',V_27tag_27),s('type.num.num',V_27a_27))))) = s('type.closLang.op','const.closLang.TagLenEq_2'(s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27tag_27))),s('type.num.num',V_27a_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|3', axiom, ![V_27tag_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num',V_27tag_27))))) = s('type.closLang.op','const.closLang.FromList_1'(s('type.num.num','const.clos_to_bvl.clos_tag_shift_1'(s('type.num.num',V_27tag_27)))))).
fof('thm.clos_to_bvl.compile_op_def|split|4', axiom, ![V_27v_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27))))) = s('type.closLang.op','const.closLang.Global_1'(s('type.num.num',V_27v_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|5', axiom, ![V_27v_7c49_7c_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27v_7c49_7c_27))))) = s('type.closLang.op','const.closLang.SetGlobal_1'(s('type.num.num',V_27v_7c49_7c_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|6', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.AllocGlobal_0'))) = s('type.closLang.op','const.closLang.AllocGlobal_0')).
fof('thm.clos_to_bvl.compile_op_def|split|7', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.GlobalsPtr_0'))) = s('type.closLang.op','const.closLang.GlobalsPtr_0')).
fof('thm.clos_to_bvl.compile_op_def|split|8', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.SetGlobalsPtr_0'))) = s('type.closLang.op','const.closLang.SetGlobalsPtr_0')).
fof('thm.clos_to_bvl.compile_op_def|split|9', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.El_0'))) = s('type.closLang.op','const.closLang.El_0')).
fof('thm.clos_to_bvl.compile_op_def|split|10', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.LengthBlock_0'))) = s('type.closLang.op','const.closLang.LengthBlock_0')).
fof('thm.clos_to_bvl.compile_op_def|split|11', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Length_0'))) = s('type.closLang.op','const.closLang.Length_0')).
fof('thm.clos_to_bvl.compile_op_def|split|12', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.LengthByte_0'))) = s('type.closLang.op','const.closLang.LengthByte_0')).
fof('thm.clos_to_bvl.compile_op_def|split|13', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.RefByte_0'))) = s('type.closLang.op','const.closLang.RefByte_0')).
fof('thm.clos_to_bvl.compile_op_def|split|14', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.RefArray_0'))) = s('type.closLang.op','const.closLang.RefArray_0')).
fof('thm.clos_to_bvl.compile_op_def|split|15', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.DerefByte_0'))) = s('type.closLang.op','const.closLang.DerefByte_0')).
fof('thm.clos_to_bvl.compile_op_def|split|16', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.UpdateByte_0'))) = s('type.closLang.op','const.closLang.UpdateByte_0')).
fof('thm.clos_to_bvl.compile_op_def|split|17', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.ToList_0'))) = s('type.closLang.op','const.closLang.ToList_0')).
fof('thm.clos_to_bvl.compile_op_def|split|18', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.BlockCmp_0'))) = s('type.closLang.op','const.closLang.BlockCmp_0')).
fof('thm.clos_to_bvl.compile_op_def|split|19', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.IsBlock_0'))) = s('type.closLang.op','const.closLang.IsBlock_0')).
fof('thm.clos_to_bvl.compile_op_def|split|20', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Ref_0'))) = s('type.closLang.op','const.closLang.Ref_0')).
fof('thm.clos_to_bvl.compile_op_def|split|21', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Deref_0'))) = s('type.closLang.op','const.closLang.Deref_0')).
fof('thm.clos_to_bvl.compile_op_def|split|22', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Update_0'))) = s('type.closLang.op','const.closLang.Update_0')).
fof('thm.clos_to_bvl.compile_op_def|split|23', axiom, ![V_27v7_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27))))) = s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27v7_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|24', axiom, ![V_27v8_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27))))) = s('type.closLang.op','const.closLang.FFI_1'(s('type.num.num',V_27v8_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|25', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Equal_0'))) = s('type.closLang.op','const.closLang.Equal_0')).
fof('thm.clos_to_bvl.compile_op_def|split|26', axiom, ![V_27v9_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27))))) = s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int',V_27v9_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|27', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Add_0'))) = s('type.closLang.op','const.closLang.Add_0')).
fof('thm.clos_to_bvl.compile_op_def|split|28', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Sub_0'))) = s('type.closLang.op','const.closLang.Sub_0')).
fof('thm.clos_to_bvl.compile_op_def|split|29', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Mult_0'))) = s('type.closLang.op','const.closLang.Mult_0')).
fof('thm.clos_to_bvl.compile_op_def|split|30', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Div_0'))) = s('type.closLang.op','const.closLang.Div_0')).
fof('thm.clos_to_bvl.compile_op_def|split|31', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Mod_0'))) = s('type.closLang.op','const.closLang.Mod_0')).
fof('thm.clos_to_bvl.compile_op_def|split|32', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Less_0'))) = s('type.closLang.op','const.closLang.Less_0')).
fof('thm.clos_to_bvl.compile_op_def|split|33', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.LessEq_0'))) = s('type.closLang.op','const.closLang.LessEq_0')).
fof('thm.clos_to_bvl.compile_op_def|split|34', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.Greater_0'))) = s('type.closLang.op','const.closLang.Greater_0')).
fof('thm.clos_to_bvl.compile_op_def|split|35', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.GreaterEq_0'))) = s('type.closLang.op','const.closLang.GreaterEq_0')).
fof('thm.clos_to_bvl.compile_op_def|split|36', axiom, ![V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c_7c48_7c_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27))))) = s('type.closLang.op','const.closLang.WordOp_2'(s('type.ast.word_size',V_27v_7c49_7c_7c48_7c_27),s('type.ast.opw',V_27v_7c49_7c_7c49_7c_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|37', axiom, ![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27, V_27v_7c49_7c2_27]: s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27))))) = s('type.closLang.op','const.closLang.WordShift_3'(s('type.ast.word_size',V_27v_7c49_7c2_27),s('type.ast.shift',V_27v_7c49_7c3_27),s('type.num.num',V_27v_7c49_7c4_27)))).
fof('thm.clos_to_bvl.compile_op_def|split|38', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.WordFromInt_0'))) = s('type.closLang.op','const.closLang.WordFromInt_0')).
fof('thm.clos_to_bvl.compile_op_def|split|39', axiom, s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op','const.closLang.WordToInt_0'))) = s('type.closLang.op','const.closLang.WordToInt_0')).
fof('thm.clos_to_bvl.mk_const_def', axiom, ![V_27n_27]: s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num',V_27n_27))) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Const_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',V_27n_27))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))).
fof('ARITY_0_1_const.clos_to_bvl.mk_label', axiom, ![VV0]: s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('type.num.num',VV0))) = s('type.bvl.exp','const.clos_to_bvl.mk_label_1'(s('type.num.num',VV0)))).
fof('thm.clos_to_bvl.mk_label_def', axiom, ![V_27n_27]: s('type.bvl.exp','const.clos_to_bvl.mk_label_1'(s('type.num.num',V_27n_27))) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Label_1'(s('type.num.num',V_27n_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))).
fof('thm.clos_to_bvl.mk_el_def', axiom, ![V_27b_27, V_27i_27]: s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp',V_27b_27),s('type.bvl.exp',V_27i_27))) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.El_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27i_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27b_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))))).
fof('ARITY_0_1_const.clos_to_bvl.mk_const', axiom, ![VV0]: s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num',VV0))) = s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num',VV0)))).
fof('ARITY_1_2_const.clos_to_bvl.mk_el', axiom, ![VV0, VV1]: s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp',VV0))),s('type.bvl.exp',VV1))) = s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp',VV0),s('type.bvl.exp',VV1)))).
fof('thm.clos_to_bvl.free_let_def', axiom, ![V_27cl_27, V_27n_27]: s('type.list.list'('type.bvl.exp'),'const.clos_to_bvl.free_let_2'(s('type.bvl.exp',V_27cl_27),s('type.num.num',V_27n_27))) = s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp',V_27cl_27))),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',V_27n_27)))).
fof('ARITY_0_3_const.clos_to_bvl.code_for_recc_case', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.num.num','type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.code_for_recc_case_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.bvl.exp',VV2))) = s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.code_for_recc_case_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.bvl.exp',VV2)))).
fof('ARITY_1_2_const.bvl.Op', axiom, ![VV0, VV1]: s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op',VV0))),s('type.list.list'('type.bvl.exp'),VV1))) = s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op',VV0),s('type.list.list'('type.bvl.exp'),VV1)))).
fof('thm.clos_to_bvl.code_for_recc_case_def', axiom, ![V_27n_27, V_27num__args_27, V_27c_27]: s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.code_for_recc_case_3'(s('type.num.num',V_27n_27),s('type.num.num',V_27num__args_27),s('type.bvl.exp',V_27c_27))) = s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27num__args_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num',V_27num__args_27))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',V_27num__args_27))),s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Deref_0'))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.num.num',V_27n_27))))),s('type.bvl.exp',V_27c_27)))))))).
fof('thm.clos_to_bvl.build_aux_def|split|0', axiom, ![V_27i_27, V_27aux_27]: s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27i_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))).
fof('thm.clos_to_bvl.build_aux_def|split|1', axiom, ![V_27i_27, V_27x_27, V_27xs_27, V_27aux_27]: s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27i_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.bvl.exp'),V_27x_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27xs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27i_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.pair.prod'('type.num.num','type.bvl.exp'),V_27x_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.build_aux_LENGTH', axiom, ![V_27l_27, V_27n_27, V_27aux_27, V_27n_7c49_7c_27, V_27t_27]: (s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27l_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.num.num',V_27n_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27t_27))) => s('type.num.num',V_27n_7c49_7c_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27l_27))))))).
fof('thm.clos_to_bvl.build_aux_MOVE', axiom, ![V_27xs_27, V_27n_27, V_27aux_27, V_27n_7c49_7c_27, V_27aux_7c49_7c_27]: (s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.num.num',V_27n_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) <=> ?[V_27aux2_27]: (s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.list.NIL_0'))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.num.num',V_27n_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux2_27))) & s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.build_aux_acc', axiom, ![V_27k_27, V_27n_27, V_27aux_27]: ?[V_27aux_7c49_7c_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))).
fof('thm.clos_to_bvl.build_aux_MEM', axiom, ![V_27c_27, V_27n_27, V_27aux_27, V_27n7_27, V_27aux7_27]: (s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.num.num',V_27n7_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux7_27))) => ![V_27k_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27k_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27c_27)))))) => ?[V_27d_27]: p(s('bool','const.bool.IN_2'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27k_27))),s('type.pair.prod'('type.num.num','type.bvl.exp'),V_27d_27))),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux7_27))))))))).
fof('thm.clos_to_bvl.build_aux_APPEND|49|', axiom, ![V_27xs_27, V_27x_27, V_27n_27, V_27aux_27]: s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))),'happ'(s('fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')))),'const.list.CONS_0'),s('type.pair.prod'('type.num.num','type.bvl.exp'),V_27x_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x11_3'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.CONS_0'),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_0'),s('type.pair.prod'('type.num.num','type.bvl.exp'),V_27x_27))))))))),s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',V_27n_27),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.recc_Let_def', axiom, ![V_27n_27, V_27num__args_27, V_27i_27]: s('type.bvl.exp','const.clos_to_bvl.recc_Let_3'(s('type.num.num',V_27n_27),s('type.num.num',V_27num__args_27),s('type.num.num',V_27i_27))) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27num__args_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_label_1'(s('type.num.num',V_27n_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num',V_27i_27))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('thm.clos_to_bvl.clos_to_bvl_26_prove_ltb', axiom, ![V_27a_27]: (?[V_27n_27, V_27nargs_27, V_27k_27, V_27rest_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.bvl.exp'))),V_27a_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27nargs_27),s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num',V_27k_27),s('type.bvl.exp',V_27rest_27))))))) => ?[V_27n_27, V_27nargs_27, V_27k_27, V_27rest_27]: s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.bvl.exp'))),V_27a_27) = s('type.pair.prod'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27nargs_27),s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num',V_27k_27),s('type.bvl.exp',V_27rest_27))))))))).
fof('thm.clos_to_bvl.recc_Lets_ind', axiom, ![V_27P_27]: (![V_27n_27, V_27nargs_27, V_27k_27, V_27rest_27]: (![V_27k_7c39_7c_27]: ((~ (s('type.num.num',V_27k_27) = s('type.num.num','const.num.|48|_0')) & s('type.num.num',V_27k_7c39_7c_27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) => p(s('bool','happ'(s('fun'('type.bvl.exp','bool'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.bvl.exp','bool'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.bvl.exp','bool')))),V_27P_27),s('type.num.num',V_27n_27))),s('type.list.list'('type.num.num'),'const.list.TL_1'(s('type.list.list'('type.num.num'),V_27nargs_27))))),s('type.num.num',V_27k_7c39_7c_27))),s('type.bvl.exp',V_27rest_27))))) => p(s('bool','happ'(s('fun'('type.bvl.exp','bool'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.bvl.exp','bool'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.bvl.exp','bool')))),V_27P_27),s('type.num.num',V_27n_27))),s('type.list.list'('type.num.num'),V_27nargs_27))),s('type.num.num',V_27k_27))),s('type.bvl.exp',V_27rest_27))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27]: p(s('bool','happ'(s('fun'('type.bvl.exp','bool'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.bvl.exp','bool'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.bvl.exp','bool')))),V_27P_27),s('type.num.num',V_27v_27))),s('type.list.list'('type.num.num'),V_27v_7c49_7c_27))),s('type.num.num',V_27v2_27))),s('type.bvl.exp',V_27v3_27)))))).
fof('ARITY_0_3_const.clos_to_bvl.recc_Let', axiom, ![VV0, VV1, VV2]: s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.bvl.exp'))),'const.clos_to_bvl.recc_Let_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.num.num',VV2))) = s('type.bvl.exp','const.clos_to_bvl.recc_Let_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.num.num',VV2)))).
fof('thm.clos_to_bvl.recc_Lets_def', axiom, ![V_27rest_27, V_27nargs_27, V_27n_27, V_27k_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27k_27) = s('type.num.num','const.num.|48|_0')) & s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')),'const.clos_to_bvl.recc_Lets_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.num.num'),V_27nargs_27))),s('type.num.num',V_27k_27))),s('type.bvl.exp',V_27rest_27))) = s('type.bvl.exp','const.bool.COND_3'(s('bool',Vv),s('type.bvl.exp',V_27rest_27),s('type.bvl.exp','const.bool.LET_2'(s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1x0x1_4'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.bvl.exp'))),'const.clos_to_bvl.recc_Let_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.+_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.list.HD_1'(s('type.list.list'('type.num.num'),V_27nargs_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.num.num','type.bvl.exp'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')),'const.clos_to_bvl.recc_Lets_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.num.num'),'const.list.TL_1'(s('type.list.list'('type.num.num'),V_27nargs_27))))),s('type.bvl.exp',V_27rest_27))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27k_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.clos_to_bvl.recc_Let|48|_def', axiom, ![V_27n_27, V_27num__args_27, V_27i_27]: s('type.bvl.exp','const.clos_to_bvl.recc_Let|48|_3'(s('type.num.num',V_27n_27),s('type.num.num',V_27num__args_27),s('type.num.num',V_27i_27))) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27num__args_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_label_1'(s('type.num.num',V_27n_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Update_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num',V_27i_27))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('ARITY_2_4_const.clos_to_bvl.recc_Lets', axiom, ![VV0, VV1, VV2, VV3]: s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')),'const.clos_to_bvl.recc_Lets_2'(s('type.num.num',VV0),s('type.list.list'('type.num.num'),VV1))),s('type.num.num',VV2))),s('type.bvl.exp',VV3))) = s('type.bvl.exp','const.clos_to_bvl.recc_Lets_4'(s('type.num.num',VV0),s('type.list.list'('type.num.num'),VV1),s('type.num.num',VV2),s('type.bvl.exp',VV3)))).
fof('thm.clos_to_bvl.build_recc_lets_def', axiom, ![V_27nargs_27, V_27vs_27, V_27n_7c49_7c_27, V_27fns__l_27, V_27c3_27]: s('type.bvl.exp','const.clos_to_bvl.build_recc_lets_5'(s('type.list.list'('type.num.num'),V_27nargs_27),s('type.list.list'('type.num.num'),V_27vs_27),s('type.num.num',V_27n_7c49_7c_27),s('type.num.num',V_27fns__l_27),s('type.bvl.exp',V_27c3_27))) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Ref_0'),s('type.list.list'('type.bvl.exp'),'const.list.REVERSE_1'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.MAP_2'(s('fun'('type.num.num','type.bvl.exp'),'const.combin.K_1'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.num.num'),V_27nargs_27))),s('type.list.list'('type.bvl.exp'),'const.list.MAP_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.list.list'('type.num.num'),V_27vs_27))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.clos_to_bvl.recc_Let|48|_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_7c49_7c_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27fns__l_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.HD_1'(s('type.list.list'('type.num.num'),'const.list.REVERSE_1'(s('type.list.list'('type.num.num'),V_27nargs_27))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27fns__l_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.clos_to_bvl.recc_Lets_4'(s('type.num.num',V_27n_7c49_7c_27),s('type.list.list'('type.num.num'),'const.list.TL_1'(s('type.list.list'('type.num.num'),'const.list.REVERSE_1'(s('type.list.list'('type.num.num'),V_27nargs_27))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27fns__l_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp',V_27c3_27)))))).
fof('thm.clos_to_bvl.num_stubs_def', axiom, s('type.num.num','const.clos_to_bvl.num_stubs_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.closLang.max_app_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.closLang.max_app_0'),s('type.num.num','const.closLang.max_app_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.clos_to_bvl.equality_location_def', axiom, s('type.num.num','const.clos_to_bvl.equality_location_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.closLang.max_app_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.closLang.max_app_0'),s('type.num.num','const.closLang.max_app_0')))))).
fof('thm.clos_to_bvl.block_equality_location_def', axiom, s('type.num.num','const.clos_to_bvl.block_equality_location_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.clos_to_bvl.equality_location_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.clos_to_bvl.ToList_location_def', axiom, s('type.num.num','const.clos_to_bvl.ToList_location_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.clos_to_bvl.block_equality_location_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('ARITY_0_2_const.clos_to_bvl.mk_cl_call', axiom, ![VV0, VV1]: s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.clos_to_bvl.mk_cl_call_0'),s('type.bvl.exp',VV0))),s('type.list.list'('type.bvl.exp'),VV1))) = s('type.bvl.exp','const.clos_to_bvl.mk_cl_call_2'(s('type.bvl.exp',VV0),s('type.list.list'('type.bvl.exp'),VV1)))).
fof('thm.clos_to_bvl.mk_cl_call_def', axiom, ![V_27cl_27, V_27args_27]: s('type.bvl.exp','const.clos_to_bvl.mk_cl_call_2'(s('type.bvl.exp',V_27cl_27),s('type.list.list'('type.bvl.exp'),V_27args_27))) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvl.exp'),V_27args_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp',V_27cl_27),s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvl.exp'),V_27args_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),V_27args_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27cl_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp',V_27cl_27),s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvl.exp'),V_27args_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),V_27args_27),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27cl_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))))))).
fof('thm.clos_to_bvl.partial_app_fn_location_def', axiom, ![V_27m_27, V_27n_27]: s('type.num.num','const.clos_to_bvl.partial_app_fn_location_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.closLang.max_app_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.closLang.max_app_0'),s('type.num.num',V_27m_27))))),s('type.num.num',V_27n_27)))).
fof('thm.clos_to_bvl.mk_tick_def', axiom, ![V_27n_27, V_27e_27]: s('type.bvl.exp','const.clos_to_bvl.mk_tick_2'(s('type.num.num',V_27n_27),s('type.bvl.exp',V_27e_27))) = s('type.bvl.exp','const.arithmetic.FUNPOW_3'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.bvl.Tick_0'),s('type.num.num',V_27n_27),s('type.bvl.exp',V_27e_27)))).
fof('ARITY_0_2_const.bvl_jump.Jump', axiom, ![VV0, VV1]: s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl_jump.Jump_0'),s('type.bvl.exp',VV0))),s('type.list.list'('type.bvl.exp'),VV1))) = s('type.bvl.exp','const.bvl_jump.Jump_2'(s('type.bvl.exp',VV0),s('type.list.list'('type.bvl.exp'),VV1)))).
fof('ARITY_0_1_const.clos_to_bvl.mk_cl_call', axiom, ![VV0]: s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.clos_to_bvl.mk_cl_call_0'),s('type.bvl.exp',VV0))) = s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.clos_to_bvl.mk_cl_call_1'(s('type.bvl.exp',VV0)))).
fof('ARITY_0_2_const.list.GENLIST', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.num.num','type.list.list'(V_27A_27)),'happ'(s('fun'('fun'('type.num.num',V_27A_27),'fun'('type.num.num','type.list.list'(V_27A_27))),'const.list.GENLIST_0'),s('fun'('type.num.num',V_27A_27),VV0))),s('type.num.num',VV1))) = s('type.list.list'(V_27A_27),'const.list.GENLIST_2'(s('fun'('type.num.num',V_27A_27),VV0),s('type.num.num',VV1)))).
fof('ARITY_0_2_const.clos_to_bvl.partial_app_fn_location', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.clos_to_bvl.partial_app_fn_location_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.num.num','const.clos_to_bvl.partial_app_fn_location_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.clos_to_bvl.generate_generic_app_def', axiom, ![V_27n_27]: s('type.bvl.exp','const.clos_to_bvl.generate_generic_app_1'(s('type.num.num',V_27n_27))) = s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Sub_0'))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Less_0'))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl_jump.Jump_0'),s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x1x0x1_3'(s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'const.bvl.Call_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','fun'('type.num.num','type.bvl.exp')),'_dst_x00x11_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x01x10_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27n_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.clos_to_bvl.mk_cl_call_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))))))))))),s('type.num.num','const.closLang.max_app_0'))))),s('type.bvl.exp','const.clos_to_bvl.mk_tick_2'(s('type.num.num',V_27n_27),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.partial_app_tag_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.REVERSE_0'),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl_jump.Jump_0'),s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.clos_to_bvl.partial_app_fn_location_0'),s('type.num.num',V_27n_27))))))),s('type.num.num','const.closLang.max_app_0'))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl_jump.Jump_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Sub_0'))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.LengthBlock_0'))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.partial_app_tag_0'))))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.REVERSE_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl_jump.Jump_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Add_0'))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','fun'('type.num.num','type.bvl.exp')),'_dst_x00x11_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.clos_to_bvl.partial_app_fn_location_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.closLang.max_app_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('fun'('type.num.num','type.bvl.exp'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.closLang.max_app_0')))))))))))))).
fof('thm.clos_to_bvl.generate_partial_app_closure_fn_def', axiom, ![V_27total__args_27, V_27prev__args_27]: s('type.bvl.exp','const.clos_to_bvl.generate_partial_app_closure_fn_2'(s('type.num.num',V_27total__args_27),s('type.num.num',V_27prev__args_27))) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27total__args_27),s('type.num.num',V_27prev__args_27))))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27total__args_27),s('type.num.num',V_27prev__args_27))))),s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27total__args_27),s('type.num.num',V_27prev__args_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27prev__args_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.clos_to_bvl.mk_el_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))))))).
fof('thm.clos_to_bvl.ToList_code_def', axiom, s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.ToList_code_0') = s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Sub_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.clos_to_bvl.ToList_location_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.conLang.cons_tag_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))))))))))))).
fof('thm.clos_to_bvl.check_closure_def', axiom, ![V_27v_27, V_27e_27]: s('type.bvl.exp','const.clos_to_bvl.check_closure_2'(s('type.num.num',V_27v_27),s('type.bvl.exp',V_27e_27))) = s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.bvl.exp','const.clos_to_bvl.Bool_1'(s('bool','T_0'))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.TagEq_1'(s('type.num.num','const.clos_to_bvl.partial_app_tag_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.bvl.exp','const.clos_to_bvl.Bool_1'(s('bool','T_0'))),s('type.bvl.exp',V_27e_27)))))).
fof('thm.clos_to_bvl.equality_code_def', axiom, s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.equality_code_0') = s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.IsBlock_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.bvl.exp','const.clos_to_bvl.check_closure_2'(s('type.num.num','const.num.|48|_0'),s('type.bvl.exp','const.clos_to_bvl.check_closure_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.BlockCmp_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.clos_to_bvl.block_equality_location_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.LengthBlock_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))),s('type.bvl.exp','const.clos_to_bvl.Bool_1'(s('bool','F_0'))))))))),s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0')))))))))))).
fof('thm.clos_to_bvl.block_equality_code_def', axiom, s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.block_equality_code_0') = s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Equal_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','const.clos_to_bvl.Bool_1'(s('bool','T_0'))),s('type.bvl.exp','const.bvl.If_3'(s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.clos_to_bvl.equality_location_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_el_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.clos_to_bvl.block_equality_location_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Op_2'(s('type.closLang.op','const.closLang.Add_0'),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))),s('type.bvl.exp','const.clos_to_bvl.Bool_1'(s('bool','F_0')))))))))).
fof('ARITY_0_2_const.clos_to_bvl.generate_partial_app_closure_fn', axiom, ![VV0, VV1]: s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.bvl.exp')),'const.clos_to_bvl.generate_partial_app_closure_fn_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.bvl.exp','const.clos_to_bvl.generate_partial_app_closure_fn_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('ARITY_0_1_const.clos_to_bvl.generate_generic_app', axiom, ![VV0]: s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.generate_generic_app_0'),s('type.num.num',VV0))) = s('type.bvl.exp','const.clos_to_bvl.generate_generic_app_1'(s('type.num.num',VV0)))).
fof('thm.clos_to_bvl.init_code_def', axiom, s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.clos_to_bvl.init_code_0') = s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.sptree.fromList_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))),'happ'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.generate_generic_app_0'))))),s('type.num.num','const.closLang.max_app_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))),'happ'(s('fun'('type.num.num','type.list.list'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('fun'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.num.num','type.list.list'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.GENLIST_0'),s('fun'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')))),'const.list.GENLIST_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x00x11x11_3'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x11x00_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','fun'('type.num.num','type.bvl.exp')),'const.clos_to_bvl.generate_partial_app_closure_fn_0'))),s('type.num.num','const.closLang.max_app_0'))))),s('type.num.num','const.closLang.max_app_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.equality_code_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.block_equality_code_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.ToList_code_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.NIL_0')))))))))))).
fof('ARITY_0_2_const.clos_to_bvl.free_let', axiom, ![VV0, VV1]: s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.clos_to_bvl.free_let_0'),s('type.bvl.exp',VV0))),s('type.num.num',VV1))) = s('type.list.list'('type.bvl.exp'),'const.clos_to_bvl.free_let_2'(s('type.bvl.exp',VV0),s('type.num.num',VV1)))).
fof('ARITY_0_3_const.clos_to_bvl.build_aux', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.clos_to_bvl.build_aux_0'),s('type.num.num',VV0))),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),VV1))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),VV2))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num',VV0),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),VV1),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),VV2)))).
fof('ARITY_0_5_const.clos_to_bvl.build_recc_lets', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp'))))),'const.clos_to_bvl.build_recc_lets_0'),s('type.list.list'('type.num.num'),VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.num.num',VV2))),s('type.num.num',VV3))),s('type.bvl.exp',VV4))) = s('type.bvl.exp','const.clos_to_bvl.build_recc_lets_5'(s('type.list.list'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.num.num',VV2),s('type.num.num',VV3),s('type.bvl.exp',VV4)))).
fof('ARITY_0_3_const.list.MAP2', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![VV0, VV1, VV2]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.list.list'(V_27C_27),'type.list.list'(V_27A_27)),'happ'(s('fun'('type.list.list'(V_27B_27),'fun'('type.list.list'(V_27C_27),'type.list.list'(V_27A_27))),'happ'(s('fun'('fun'(V_27B_27,'fun'(V_27C_27,V_27A_27)),'fun'('type.list.list'(V_27B_27),'fun'('type.list.list'(V_27C_27),'type.list.list'(V_27A_27)))),'const.list.MAP2_0'),s('fun'(V_27B_27,'fun'(V_27C_27,V_27A_27)),VV0))),s('type.list.list'(V_27B_27),VV1))),s('type.list.list'(V_27C_27),VV2))) = s('type.list.list'(V_27A_27),'const.list.MAP2_3'(s('fun'(V_27B_27,'fun'(V_27C_27,V_27A_27)),VV0),s('type.list.list'(V_27B_27),VV1),s('type.list.list'(V_27C_27),VV2)))).
fof('_dst_x00x10x01x10_ax', axiom, ![VA,VA3,VA2,VA4,VA5,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x01x10_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1),s('fun'(VA1,VA5),V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x0_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z)))))).
fof('_dst_x00x00x00x00x10x01_ax', axiom, ![VA,VA3,VA4,VA5,VA6,VA1,VA2,VA7]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x00x00x00x10x01_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,V__2),s('fun'(VA1,VA6),V__3),s('fun'(VA2,VA7),V__4))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0x0x0x1_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,V__2),s(VA6,'happ'(s('fun'(VA1,VA6),V__3),s(VA1,V__z))),s('fun'(VA2,VA7),V__4)))).
fof('_dst_x000x010x001x110_ax', axiom, ![VA,VA4,VA3,VA5,VA2,VA6,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x010x001x110_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA3,VA5),V__1),s('fun'(VA1,'fun'(VA2,VA6)),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x10x01x10_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA3,VA5),V__1),s('fun'(VA2,VA6),'happ'(s('fun'(VA1,'fun'(VA2,VA6)),V__2),s(VA1,V__z)))))).
fof('_dst_x000x000x100x000x010x001_ax', axiom, ![VA,VA4,VA5,VA1,VA6,VA2,VA7,VA3,VA8]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x000x100x000x010x001_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s(VA4,V__0),s('fun'(VA1,VA5),V__1),s(VA6,V__2),s('fun'(VA2,VA7),V__3),s('fun'(VA3,VA8),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00x00x10x01_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s(VA4,V__0),s(VA5,'happ'(s('fun'(VA1,VA5),V__1),s(VA1,V__z))),s(VA6,V__2),s('fun'(VA2,VA7),V__3),s('fun'(VA3,VA8),V__4)))).
fof('_dst_x0001x1110x1100_ax', axiom, ![VA4,VA,VA3,VA5,VA2,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0001x1110x1100_3'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__0),s('fun'(VA1,'fun'(VA2,VA6)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x001x110x100_3'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,'fun'(VA3,VA5)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__0),s(VA1,V__z))),s('fun'(VA2,VA6),'happ'(s('fun'(VA1,'fun'(VA2,VA6)),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x1100x0001_ax', axiom, ![VA3,VA,VA2,VA5,VA1,VA4,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1100x0001_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA2,VA5)),V__0),s('fun'(VA4,VA6),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x100x001_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__0),s(VA1,V__z))),s('fun'(VA4,VA6),V__1)))).
fof('_dst_x0000x1000x0100x1111_ax', axiom, ![VA,VA5,VA6,VA2,VA3,VA4,VA7,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1000x0100x1111_4'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA1,VA5),V__0),s('fun'(VA2,VA6),V__1),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x000x100x111_4'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s(VA5,'happ'(s('fun'(VA1,VA5),V__0),s(VA1,V__z))),s('fun'(VA2,VA6),V__1),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__2),s(VA1,V__z)))))).
fof('_dst_x0000x0000x0100x1000x0010x0001_ax', axiom, ![VA,VA5,VA2,VA6,VA7,VA1,VA3,VA8,VA4,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0000x0100x1000x0010x0001_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s(VA5,V__0),s('fun'(VA2,VA6),V__1),s('fun'(VA1,VA7),V__2),s('fun'(VA3,VA8),V__3),s('fun'(VA4,VA9),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x000x100x000x010x001_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s(VA5,V__0),s('fun'(VA2,VA6),V__1),s(VA7,'happ'(s('fun'(VA1,VA7),V__2),s(VA1,V__z))),s('fun'(VA3,VA8),V__3),s('fun'(VA4,VA9),V__4)))).
fof('_dst_x00001x11110x11100_ax', axiom, ![VA5,VA,VA4,VA6,VA2,VA3,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00001x11110x11100_3'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA6)))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0001x1110x1100_3'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA6)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA7)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA7))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000x11101x01110_ax', axiom, ![VA,VA5,VA6,VA1,VA2,VA3,VA4,VA7]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11101x01110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,VA6)))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1101x1110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,VA6)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__1)))).
fof('_dst_x00000x11100x10011_ax', axiom, ![VA,VA2,VA3,VA6,VA4,VA5,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11100x10011_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__0),s('fun'(VA1,'fun'(VA4,'fun'(VA5,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1100x0011_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__0),s(VA1,V__z))),s('fun'(VA4,'fun'(VA5,VA7)),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA5,VA7))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000x11100x00001_ax', axiom, ![VA4,VA,VA2,VA3,VA6,VA1,VA5,VA7]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11100x00001_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__0),s('fun'(VA5,VA7),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1100x0001_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__0),s(VA1,V__z))),s('fun'(VA5,VA7),V__1)))).
fof('_dst_x00000x10000x00100x01000x00010x00001_ax', axiom, ![VA,VA6,VA1,VA3,VA7,VA2,VA8,VA4,VA9,VA5,VA10]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x10000x00100x01000x00010x00001_6'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))),V__x),s('fun'(VA1,VA6),V__0),s('fun'(VA3,VA7),V__1),s('fun'(VA2,VA8),V__2),s('fun'(VA4,VA9),V__3),s('fun'(VA5,VA10),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0000x0100x1000x0010x0001_6'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))),V__x),s(VA6,'happ'(s('fun'(VA1,VA6),V__0),s(VA1,V__z))),s('fun'(VA3,VA7),V__1),s('fun'(VA2,VA8),V__2),s('fun'(VA4,VA9),V__3),s('fun'(VA5,VA10),V__4)))).
fof('_dst_x00000x01000x10100x11111_ax', axiom, ![VA,VA6,VA7,VA2,VA3,VA4,VA5,VA8,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x01000x10100x11111_4'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA2,VA6),V__0),s('fun'(VA1,'fun'(VA3,VA7)),V__1),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1000x0100x1111_4'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA2,VA6),V__0),s('fun'(VA3,VA7),'happ'(s('fun'(VA1,'fun'(VA3,VA7)),V__1),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__2),s(VA1,V__z)))))).
fof('_dst_x000001x011110x111100_ax', axiom, ![VA6,VA,VA5,VA7,VA2,VA3,VA4,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000001x011110x111100_3'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA7)))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA8)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00001x11110x11100_3'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA7)))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA8))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA8)))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x111101x001110_ax', axiom, ![VA,VA2,VA6,VA7,VA1,VA3,VA4,VA5,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x111101x001110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA7))))),V__0),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11101x01110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA7)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA7))))),V__0),s(VA1,V__z))),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))),V__1)))).
fof('_dst_x000000x111100x100000_ax', axiom, ![VA5,VA6,VA,VA2,VA3,VA4,VA7,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x111100x100000_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__0),s('fun'(VA1,VA8),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11100x00000_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__0),s(VA1,V__z))),s(VA8,'happ'(s('fun'(VA1,VA8),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x111100x010011_ax', axiom, ![VA,VA3,VA4,VA7,VA1,VA2,VA5,VA6,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x111100x010011_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__0),s('fun'(VA2,'fun'(VA5,'fun'(VA6,VA8))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11100x10011_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA5,'fun'(VA6,VA8))),V__1)))).
fof('_dst_x000000x111001x000110_ax', axiom, ![VA,VA2,VA3,VA6,VA7,VA1,VA4,VA5,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x111001x000110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,VA7)))),V__0),s('fun'(VA4,'fun'(VA5,VA8)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11001x00110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA6,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,VA7)))),V__0),s(VA1,V__z))),s('fun'(VA4,'fun'(VA5,VA8)),V__1)))).
fof('_dst_x000000x011100x110111_ax', axiom, ![VA,VA3,VA7,VA2,VA4,VA5,VA6,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x011100x110111_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11100x10111_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__0),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x011100x100001_ax', axiom, ![VA5,VA,VA2,VA3,VA4,VA7,VA6,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x011100x100001_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__0),s('fun'(VA1,'fun'(VA6,VA8)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11100x00001_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__0),s('fun'(VA6,VA8),'happ'(s('fun'(VA1,'fun'(VA6,VA8)),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x001000x110100x111111_ax', axiom, ![VA,VA7,VA8,VA2,VA3,VA4,VA5,VA6,VA9,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x001000x110100x111111_4'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,VA))),V__x),s('fun'(VA3,VA7),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA8))),V__1),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01000x10100x11111_4'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,VA))),V__x),s('fun'(VA3,VA7),V__0),s('fun'(VA2,'fun'(VA4,VA8)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA8))),V__1),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__2),s(VA1,V__z)))))).
fof('_dst_x0000001x1011110x1111100_ax', axiom, ![VA7,VA,VA6,VA8,VA2,VA3,VA4,VA5,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000001x1011110x1111100_3'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,VA))),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA9))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000001x011110x111100_3'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,VA))),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8)))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA9)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA9))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x1111101x0001110_ax', axiom, ![VA,VA2,VA3,VA7,VA8,VA1,VA4,VA5,VA6,VA9]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111101x0001110_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA7,VA8)))))),V__0),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA9))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111101x001110_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA7,VA8))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA7,VA8)))))),V__0),s(VA1,V__z))),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA9))),V__1)))).
fof('_dst_x0000000x1111100x0100000_ax', axiom, ![VA6,VA7,VA,VA3,VA4,VA5,VA8,VA1,VA2,VA9]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111100x0100000_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__0),s('fun'(VA2,VA9),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111100x100000_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__0),s(VA1,V__z))),s('fun'(VA2,VA9),V__1)))).
fof('_dst_x0000000x1111100x0010011_ax', axiom, ![VA,VA2,VA4,VA5,VA8,VA1,VA3,VA6,VA7,VA9]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111100x0010011_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__0),s('fun'(VA3,'fun'(VA6,'fun'(VA7,VA9))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111100x010011_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__0),s(VA1,V__z))),s('fun'(VA3,'fun'(VA6,'fun'(VA7,VA9))),V__1)))).
fof('_dst_x0000000x1111001x0000110_ax', axiom, ![VA,VA2,VA3,VA4,VA7,VA8,VA1,VA5,VA6,VA9]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111001x0000110_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA7,VA8))))),V__0),s('fun'(VA5,'fun'(VA6,VA9)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111001x000110_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA7,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA7,VA8))))),V__0),s(VA1,V__z))),s('fun'(VA5,'fun'(VA6,VA9)),V__1)))).
fof('_dst_x0000000x1011110x1100001_ax', axiom, ![VA,VA3,VA4,VA5,VA6,VA8,VA2,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1011110x1100001_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA7,VA9))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x011110x100001_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8)))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA7,VA9)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA7,VA9))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x1011100x0100001_ax', axiom, ![VA6,VA,VA3,VA4,VA5,VA8,VA1,VA2,VA7,VA9]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1011100x0100001_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),V__0),s('fun'(VA2,'fun'(VA7,VA9)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x011100x100001_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA7,VA9)),V__1)))).
fof('_dst_x0000000x0111111x1100000_ax', axiom, ![VA,VA3,VA4,VA5,VA6,VA7,VA8,VA2,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0111111x1100000_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),V__0),s('fun'(VA1,'fun'(VA2,VA9)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111111x100000_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),V__0),s('fun'(VA2,VA9),'happ'(s('fun'(VA1,'fun'(VA2,VA9)),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x0011100x1110111_ax', axiom, ![VA,VA4,VA8,VA2,VA3,VA5,VA6,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0011100x1110111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x011100x110111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000001x11011110x11111100_ax', axiom, ![VA8,VA,VA7,VA9,VA2,VA3,VA4,VA5,VA6,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000001x11011110x11111100_3'(s('fun'(VA8,'fun'(VA9,'fun'(VA10,VA))),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA10)))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000001x1011110x1111100_3'(s('fun'(VA8,'fun'(VA9,'fun'(VA10,VA))),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA10))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA10)))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x11111100x00100000_ax', axiom, ![VA7,VA8,VA,VA2,VA4,VA5,VA6,VA9,VA1,VA3,VA10]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x11111100x00100000_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__0),s('fun'(VA3,VA10),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1111100x0100000_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__0),s(VA1,V__z))),s('fun'(VA3,VA10),V__1)))).
fof('_dst_x00000000x11111100x00010011_ax', axiom, ![VA,VA2,VA3,VA5,VA6,VA9,VA1,VA4,VA7,VA8,VA10]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x11111100x00010011_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__0),s('fun'(VA4,'fun'(VA7,'fun'(VA8,VA10))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1111100x0010011_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__0),s(VA1,V__z))),s('fun'(VA4,'fun'(VA7,'fun'(VA8,VA10))),V__1)))).
fof('_dst_x00000000x11111001x10000110_ax', axiom, ![VA,VA2,VA3,VA4,VA5,VA8,VA9,VA6,VA7,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x11111001x10000110_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA8,VA9)))))),V__0),s('fun'(VA1,'fun'(VA6,'fun'(VA7,VA10))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1111001x0000110_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA8,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA8,VA9)))))),V__0),s(VA1,V__z))),s('fun'(VA6,'fun'(VA7,VA10)),'happ'(s('fun'(VA1,'fun'(VA6,'fun'(VA7,VA10))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x10111111x11100000_ax', axiom, ![VA,VA4,VA5,VA6,VA7,VA8,VA9,VA2,VA3,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x10111111x11100000_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA10))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x0111111x1100000_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9)))))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9))))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA10)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA10))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x01011100x10100001_ax', axiom, ![VA7,VA,VA2,VA4,VA5,VA6,VA9,VA3,VA8,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x01011100x10100001_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA8,VA10))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1011100x0100001_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))),V__0),s('fun'(VA3,'fun'(VA8,VA10)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA8,VA10))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x111111001x010000110_ax', axiom, ![VA,VA3,VA4,VA5,VA6,VA9,VA10,VA1,VA2,VA7,VA8,VA11]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x111111001x010000110_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA9,VA10))))))),V__0),s('fun'(VA2,'fun'(VA7,'fun'(VA8,VA11))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x11111001x10000110_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA9,VA10)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA9,VA10))))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA7,'fun'(VA8,VA11))),V__1)))).
fof('thm.clos_to_bvl.compile_exps_tupled_AUX_def', axiom, ![V_27R_27]: s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_tupled_aux_1'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'bool')),V_27R_27))) = s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.relation.WFREC_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'bool')),V_27R_27),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.pair_CASE_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x010x001x101_4'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0001x1110x1110_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.list.list_CASE_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x001x010x110x110x110x110x110x110x110x110x110x110_12'(s('fun'('type.closLang.exp','fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'fun'('fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('fun'('type.closLang.exp','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'fun'('fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))))))),'const.closLang.exp_CASE_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x10011x11100_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x10110x11001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x00110x11001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')))),'_dst_x000x111x000_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'_dst_x000x100x010x001_4'(s('fun'('type.bvl.exp','fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp'))),'const.bvl.If_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1001x1110_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x0010x1101_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_i_0_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.bvl.Raise_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1001x1110_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x0010x1101_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01_3'(s('fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Handle_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.bvl.Tick_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x0010x1101_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'const.bvl.Call_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.num.num'),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x10101x11010_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x01010x10101_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')))),'_dst_x000x111x000_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'_dst_x000x100x011x011_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.bvl.exp','fun'('fun'('type.num.num','type.bvl.exp'),'type.bvl.exp'))),'const.option.option_CASE_0'),s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x11x01_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.clos_to_bvl.mk_cl_call_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.list.GENLIST_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'))))))),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.num.num','type.bvl.exp'))),'_dst_x000x010x001x110_4'(s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'const.bvl.Call_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_i_0_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x111111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x110111x001000_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x110111x001000_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x001011x110100_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11101x10110_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11100x11011_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')))),'_dst_x000x111x000_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.bvl.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl.Op_0'),s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.REVERSE_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')))),'_dst_x000x010x101_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp'))),'_dst_x00x10x01_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'const.list.MAP_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x0000x1101x0010_3'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x000x010x101_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'_dst_x000x110x001_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp'))),'_dst_x00x10x11_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.list.GENLIST_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp'))),'_dst_x00x10x01_3'(s('fun'('type.bvl.exp','fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.clos_to_bvl.free_let_0'),s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))),s('fun'('type.option.option'('type.list.list'('type.num.num')),'type.list.list'('type.num.num')),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.num.num'),'fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.list.list'('type.num.num')))),'const.option.option_CASE_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))),s('fun'('type.option.option'('type.num.num'),'type.num.num'),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.num.num','fun'('fun'('type.num.num','type.num.num'),'type.num.num'))),'const.option.option_CASE_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x111111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x110111x001000_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x110111x001000_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x001000x110100x111111_4'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp'))),'_i_0_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))),'_dst_x00000001x11011110x11111100_3'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.list.list_CASE_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000001x111110_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.pair_CASE_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))))),'_dst_x0000000x1011110x1100001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))))),'_dst_x0000000x1111101x0001110_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))))),'_dst_x0000000x0011100x1110111_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x00011x11100_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x101x010_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.bvl.exp','type.list.list'('type.bvl.exp')),'_dst_x1x0_2'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.bvl.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl.Op_0'),s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.REVERSE_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp')))),'_dst_x000x100x011_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'_dst_x00x01x10_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'const.list.MAP_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))))))))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dstsel_0_x011111_1'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x10000x01111_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x0000x1101x0010_3'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x000x100x011_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'_dst_x000x110x001_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'_dst_x00x01x11_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.list.GENLIST_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'_dst_x00x01x10_3'(s('fun'('type.bvl.exp','fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.clos_to_bvl.free_let_0'),s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))),'_dst_x00000000x11111100x00100000_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))))),'_dst_x0000000x1111111x0000011_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))),'_dst_x00000000x10111111x11100000_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))))))),'_dst_x000000000x111111001x010000110_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))),'_dst_x00000000x11111100x00010011_3'(s('fun'('fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.closLang.exp','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))))),'_dst_x00000000x01011100x10100001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x000001x111110_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.bvl.exp','type.list.list'('type.bvl.exp')),'_dst_x1x0_2'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))))),'_dst_x00000x10000x00100x01000x00010x00001_6'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp'))))),'const.clos_to_bvl.build_recc_lets_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x101x010_2'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.clos_to_bvl.build_aux_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.MAP2_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.code_for_recc_case_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.num.num'),'const.list.LENGTH_0'))))))),s('fun'('type.option.option'('type.list.list'('type.num.num')),'type.list.list'('type.num.num')),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.list.list'('type.num.num')),'fun'('type.list.list'('type.num.num'),'fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.list.list'('type.num.num')))),'const.option.option_CASE_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))),s('fun'('type.option.option'('type.num.num'),'type.num.num'),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.num.num','fun'('fun'('type.num.num','type.num.num'),'type.num.num'))),'const.option.option_CASE_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.op','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x0010x1101_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.closLang.op','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp'))),'const.bool.COND_0'),s('fun'('type.closLang.op','bool'),'_dst_x1x0_2'(s('fun'('type.closLang.op','fun'('type.closLang.op','bool')),'=_0'),s('type.closLang.op','const.closLang.ToList_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'const.bvl.Call_0'),s('type.num.num','const.num.|48|_0'))),s('type.option.option'('type.num.num'),'happ'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('type.num.num','const.clos_to_bvl.ToList_location_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl.Op_0'),s('type.closLang.op','const.closLang.LengthBlock_0'))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl.Op_0'),s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.conLang.nil_tag_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))),s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp'))),'const.bool.COND_0'),s('fun'('type.closLang.op','bool'),'_dst_x1x0_2'(s('fun'('type.closLang.op','fun'('type.closLang.op','bool')),'=_0'),s('type.closLang.op','const.closLang.Equal_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'const.bvl.Call_0'),s('type.num.num','const.num.|48|_0'))),s('type.option.option'('type.num.num'),'happ'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('type.num.num','const.clos_to_bvl.equality_location_0'))))),s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.closLang.op','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.bvl.Op_0'),s('fun'('type.closLang.op','type.closLang.op'),'const.clos_to_bvl.compile_op_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11111_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.combin.I_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x10011x11100_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x00010x11101_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dstsel_0_x0111_1'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'))))))))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dstsel_0_x011_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0')))))))))))))))))).
fof('thm.clos_to_bvl.clos_to_bvl_48_prove_ltb', axiom, ![V_27a_27]: ((?[V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | ((?[V_27v_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27x2_27, V_27x3_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27),s('type.closLang.exp',V_27x3_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27xs_27, V_27x2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27x2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27dest_27, V_27xs_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27dest_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27loc__opt_27, V_27x_7c49_7c_27, V_27xs2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27xs2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27loc__opt_27, V_27vs__opt_27, V_27num__args_27, V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vs__opt_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27loc__opt_27, V_27vsopt_27, V_27fns_27, V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | ?[V_27op_27, V_27xs_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))))))))) | ?[V_27y_27, V_27xs_27, V_27x_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) => (?[V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_27, V_27y_27, V_27xs_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27v_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27x2_27, V_27x3_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27),s('type.closLang.exp',V_27x3_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27xs_27, V_27x2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27op_27, V_27xs_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27loc__opt_27, V_27x_7c49_7c_27, V_27xs2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27xs2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27loc__opt_27, V_27vs__opt_27, V_27num__args_27, V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vs__opt_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27loc__opt_27, V_27vsopt_27, V_27fns_27, V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | (?[V_27x_7c49_7c_27, V_27x2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) | ?[V_27dest_27, V_27xs_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27dest_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))))))))))))).
fof('ARITY_0_1_const.clos_to_bvl.code_for_recc_case', axiom, ![VV0]: s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.code_for_recc_case_0'),s('type.num.num',VV0))) = s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.clos_to_bvl.code_for_recc_case_1'(s('type.num.num',VV0)))).
fof('thm.clos_to_bvl.compile_exps_ind', axiom, ![V_27P_27]: ((![V_27aux_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))) & (![V_27x_27, V_27y_27, V_27xs_27, V_27aux_27]: ((![V_27c_7c49_7c_27, V_27aux_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27v_27, V_27aux_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))) & (![V_27x_7c49_7c_27, V_27x2_27, V_27x3_27, V_27aux_27]: ((![V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27c2_27, V_27aux2_27]: ((s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) & s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux2_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x3_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux2_27))))) & (![V_27c_7c49_7c_27, V_27aux_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27),s('type.closLang.exp',V_27x3_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27xs_27, V_27x2_27, V_27aux_27]: ((![V_27c_7c49_7c_27, V_27aux_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27x_7c49_7c_27, V_27aux_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27x_7c49_7c_27, V_27aux_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27op_27, V_27xs_27, V_27aux_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27loc__opt_27, V_27x_7c49_7c_27, V_27xs2_27, V_27aux_27]: ((![V_27c_7c49_7c_27, V_27aux_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),V_27xs2_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27xs2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27loc__opt_27, V_27vs__opt_27, V_27num__args_27, V_27x_7c49_7c_27, V_27aux_27]: (![V_27loc_27, V_27vs_27]: ((s('type.num.num',V_27loc_27) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))) & s('type.list.list'('type.num.num'),V_27vs_27) = s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vs__opt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0')))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vs__opt_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27loc__opt_27, V_27vsopt_27, V_27fns_27, V_27x_7c49_7c_27, V_27aux_27]: ((![V_27loc_27, V_27vs_27, V_27v2_27, V_27v3_27, V_27num__args_27, V_27exp_27, V_27c_7c49_7c_27, V_27aux_7c49_7c_27, V_27c3_27]: ((s('type.num.num',V_27loc_27) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))) & (s('type.list.list'('type.num.num'),V_27vs_27) = s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.NIL_0') & (s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v2_27) = s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27exp_27))) & (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27exp_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) & s('type.bvl.exp',V_27c3_27) = s('type.bvl.exp','const.bvl.Let_2'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.APPEND_2'(s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num',V_27num__args_27))),s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num',V_27num__args_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.clos_to_bvl.free_let_2'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num',V_27num__args_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27vs_27))))))),s('type.bvl.exp','const.list.HD_1'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27))))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'const.pair.,_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27loc_27),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('type.pair.prod'('type.num.num','type.bvl.exp'),'const.pair.,_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27num__args_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.bvl.exp',V_27c3_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))))) & (![V_27loc_27, V_27vs_27, V_27v2_27, V_27v3_27, V_27num__args_27, V_27exp_27]: ((s('type.num.num',V_27loc_27) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))) & (s('type.list.list'('type.num.num'),V_27vs_27) = s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.NIL_0') & s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v2_27) = s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27exp_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27exp_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27loc_27, V_27vs_27, V_27v2_27, V_27v3_27, V_27v6_27, V_27v7_27, V_27fns__l_27, V_27l_27, V_27cs_27, V_27aux_7c49_7c_27, V_27cs_7c49_7c_27, V_27n2_27, V_27aux2_27]: ((s('type.num.num',V_27loc_27) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))) & (s('type.list.list'('type.num.num'),V_27vs_27) = s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v6_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v7_27))) & (s('type.num.num',V_27fns__l_27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))) & (s('type.num.num',V_27l_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27fns__l_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27vs_27))))) & (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27cs_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.list.MAP2_3'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.clos_to_bvl.code_for_recc_case_1'(s('type.num.num',V_27l_27))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))),s('type.list.list'('type.bvl.exp'),V_27cs_27))) & s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.num.num',V_27n2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux2_27))) = s('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.build_aux_3'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27loc_27),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),V_27cs_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux2_27))))) & (![V_27loc_27, V_27vs_27, V_27v2_27, V_27v3_27, V_27v6_27, V_27v7_27, V_27fns__l_27, V_27l_27]: ((s('type.num.num',V_27loc_27) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))) & (s('type.list.list'('type.num.num'),V_27vs_27) = s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v3_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.CONS_2'(s('type.pair.prod'('type.num.num','type.closLang.exp'),V_27v6_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27v7_27))) & (s('type.num.num',V_27fns__l_27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))) & s('type.num.num',V_27l_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27fns__l_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27vs_27)))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & ![V_27loc_27, V_27vs_27]: ((s('type.num.num',V_27loc_27) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))) & (s('type.list.list'('type.num.num'),V_27vs_27) = s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))) & s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.list.NIL_0'))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & (![V_27x_7c49_7c_27, V_27x2_27, V_27aux_27]: ((![V_27c_7c49_7c_27, V_27aux_7c49_7c_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_7c49_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))))) & p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))) & ![V_27dest_27, V_27xs_27, V_27aux_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27dest_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))))))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),V_27P_27),s('type.list.list'('type.closLang.exp'),V_27v_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27v_7c49_7c_27)))))).
fof('thm.clos_to_bvl.compile_exps_def|split|0', axiom, ![V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))).
fof('ARITY_1_2_const.clos_to_bvl.compile_exps', axiom, ![VV0, VV1]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),VV0))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),VV1))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),VV0),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),VV1)))).
fof('thm.clos_to_bvl.compile_exps_def|split|1', axiom, ![V_27y_27, V_27xs_27, V_27x_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27y_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.compile_exps_def|split|2', axiom, ![V_27v_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.closLang.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num',V_27v_27))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))).
fof('thm.clos_to_bvl.compile_exps_def|split|3', axiom, ![V_27x3_27, V_27x2_27, V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.If_3'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27),s('type.closLang.exp',V_27x3_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x110x001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')))),'_dst_x000x111x000_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'_dst_x000x100x010x001_4'(s('fun'('type.bvl.exp','fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp'))),'const.bvl.If_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x3_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.compile_exps_def|split|4', axiom, ![V_27xs_27, V_27x2_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Let_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.closLang.exp',V_27x2_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_i_0_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.compile_exps_def|split|5', axiom, ![V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Raise_1'(s('type.closLang.exp',V_27x_7c49_7c_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.bvl.Raise_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.compile_exps_def|split|6', axiom, ![V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Tick_1'(s('type.closLang.exp',V_27x_7c49_7c_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.bvl.exp','type.bvl.exp'),'const.bvl.Tick_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('ARITY_2_3_const.bvl.Call', axiom, ![VV0, VV1, VV2]: s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Call_2'(s('type.num.num',VV0),s('type.option.option'('type.num.num'),VV1))),s('type.list.list'('type.bvl.exp'),VV2))) = s('type.bvl.exp','const.bvl.Call_3'(s('type.num.num',VV0),s('type.option.option'('type.num.num'),VV1),s('type.list.list'('type.bvl.exp'),VV2)))).
fof('thm.clos_to_bvl.compile_exps_def|split|7', axiom, ![V_27xs_27, V_27op_27, V_27aux_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.Equal_0')) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.closLang.op',V_27op_27) = s('type.closLang.op','const.closLang.ToList_0')) & s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Op_2'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp')),'const.bool.COND_1'(s('bool',Vv_27))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Call_2'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.clos_to_bvl.ToList_location_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.LengthBlock_0'))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','const.bvl.Var_1'(s('type.num.num','const.num.|48|_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','happ'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.conLang.nil_tag_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp')),'const.bool.COND_1'(s('bool',Vv))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Call_2'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.clos_to_bvl.equality_location_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.clos_to_bvl.compile_op_1'(s('type.closLang.op',V_27op_27))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))))).
fof('thm.clos_to_bvl.compile_exps_def|split|8', axiom, ![V_27xs2_27, V_27x_7c49_7c_27, V_27loc__opt_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.App_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closLang.exp',V_27x_7c49_7c_27),s('type.list.list'('type.closLang.exp'),V_27xs2_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x11x11_3'(s('fun'('type.bvl.exp','fun'('fun'('type.num.num','type.bvl.exp'),'type.bvl.exp')),'const.option.option_CASE_1'(s('type.option.option'('type.num.num'),V_27loc__opt_27))),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x11x01_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_i_0_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1x1_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'const.clos_to_bvl.mk_cl_call_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.list.GENLIST_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'))))))),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.num.num','type.bvl.exp'))),'_dst_x000x010x001x110_4'(s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'const.bvl.Call_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_i_0_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),V_27xs2_27))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('ARITY_1_2_const.clos_to_bvl.free_let', axiom, ![VV0, VV1]: s('type.list.list'('type.bvl.exp'),'happ'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.clos_to_bvl.free_let_1'(s('type.bvl.exp',VV0))),s('type.num.num',VV1))) = s('type.list.list'('type.bvl.exp'),'const.clos_to_bvl.free_let_2'(s('type.bvl.exp',VV0),s('type.num.num',VV1)))).
fof('thm.clos_to_bvl.compile_exps_def|split|9', axiom, ![V_27x_7c49_7c_27, V_27vs__opt_27, V_27num__args_27, V_27loc__opt_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Fn_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vs__opt_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27x_7c49_7c_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x11x00_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1101x0110_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1100x1011_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.bvl.exp')),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.REVERSE_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp'))),'_dst_x00x10x01_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'happ'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.bvl.exp','const.clos_to_bvl.mk_const_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27num__args_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'const.list.MAP_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))))))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x000x101x010_3'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27num__args_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.APPEND_1'(s('type.list.list'('type.bvl.exp'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num',V_27num__args_27))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'_dst_x0x1_2'(s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.clos_to_bvl.free_let_1'(s('type.bvl.exp','happ'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.num.num',V_27num__args_27))))),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))),s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vs__opt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))))),s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0')))))).
fof('ARITY_0_2_const.clos_to_bvl.compile_exps', axiom, ![VV0, VV1]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.closLang.exp'),VV0))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),VV1))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),VV0),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),VV1)))).
fof('ARITY_1_5_const.clos_to_bvl.build_recc_lets', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('type.bvl.exp','happ'(s('fun'('type.bvl.exp','type.bvl.exp'),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')))),'const.clos_to_bvl.build_recc_lets_1'(s('type.list.list'('type.num.num'),VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.num.num',VV2))),s('type.num.num',VV3))),s('type.bvl.exp',VV4))) = s('type.bvl.exp','const.clos_to_bvl.build_recc_lets_5'(s('type.list.list'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.num.num',VV2),s('type.num.num',VV3),s('type.bvl.exp',VV4)))).
fof('_dst_x000x100x000x010x001_ax', axiom, ![VA,VA4,VA1,VA5,VA2,VA6,VA3,VA7]: ![V__x, V__0, V__1, V__2, V__3, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x000x010x001_5'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))),V__x),s('fun'(VA1,VA4),V__0),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s('fun'(VA3,VA7),V__3))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00x10x01_5'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s('fun'(VA3,VA7),V__3)))).
fof('_dst_x0000x0100x1000x0010x0001_ax', axiom, ![VA,VA2,VA5,VA6,VA1,VA3,VA7,VA4,VA8]: ![V__x, V__0, V__1, V__2, V__3, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0100x1000x0010x0001_5'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))),V__x),s('fun'(VA2,VA5),V__0),s('fun'(VA1,VA6),V__1),s('fun'(VA3,VA7),V__2),s('fun'(VA4,VA8),V__3))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x100x000x010x001_5'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))),V__x),s('fun'(VA2,VA5),V__0),s(VA6,'happ'(s('fun'(VA1,VA6),V__1),s(VA1,V__z))),s('fun'(VA3,VA7),V__2),s('fun'(VA4,VA8),V__3)))).
fof('thm.clos_to_bvl.compile_exps_def|split|10', axiom, ![V_27x_7c49_7c_27, V_27vsopt_27, V_27loc__opt_27, V_27fns_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Letrec_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27),s('type.closLang.exp',V_27x_7c49_7c_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x11_2'(s('fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.list.list_CASE_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0001x1110x1100_3'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'fun'('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.list.list_CASE_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x001x110_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.pair_CASE_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1110x0001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11101x01110_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11100x10111_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x00011x11100_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x101x010_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.bvl.exp','type.list.list'('type.bvl.exp')),'_dst_x1x0_2'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.bvl.exp'))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Op_1'(s('type.closLang.op','const.closLang.Cons_1'(s('type.num.num','const.clos_to_bvl.closure_tag_0'))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'const.list.REVERSE_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp')))),'_dst_x000x100x011_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_label_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'_dst_x00x01x10_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'_dst_x0x1_2'(s('fun'('type.num.num','type.bvl.exp'),'const.clos_to_bvl.mk_const_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.bvl.exp')),'const.list.MAP_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))))))))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x0000x1101x0010_3'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.CONS_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x000x100x011_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'))),'_dst_x000x110x001_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Let_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'_dst_x00x01x11_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'const.list.GENLIST_1'(s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'))),s('fun'('type.num.num','type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.list.list'('type.bvl.exp'))),'_dst_x00x01x10_3'(s('fun'('type.bvl.exp','fun'('type.num.num','type.list.list'('type.bvl.exp'))),'const.clos_to_bvl.free_let_0'),s('fun'('type.num.num','type.bvl.exp'),'const.bvl.Var_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))))),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))))))),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1x0_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1100x0000_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x111x011_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x0000x1111x0000_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))))),'_dst_x000000x111001x000110_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11100x10011_3'(s('fun'('fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x11100x00001_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))))),'_dst_x00000x00001x11110_3'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.bvl.exp','type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.bvl.exp','type.list.list'('type.bvl.exp')),'_dst_x1x0_2'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')))),'_dst_x0000x0100x1000x0010x0001_5'(s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.bvl.exp')))),'const.clos_to_bvl.build_recc_lets_1'(s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x101x010_2'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'const.clos_to_bvl.build_aux_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'))))),s('fun'('type.num.num','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp')))),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.MAP2_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.code_for_recc_case_0'),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.num.num'),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))))),s('type.num.num','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27fns_27))))))))),s('type.list.list'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.num.num')),V_27vsopt_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))))),s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0')))))).
fof('thm.clos_to_bvl.compile_exps_def|split|11', axiom, ![V_27x2_27, V_27x_7c49_7c_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Handle_2'(s('type.closLang.exp',V_27x_7c49_7c_27),s('type.closLang.exp',V_27x2_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'_dst_x00x11x00_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp')),'_dst_x00x10x01_3'(s('fun'('type.bvl.exp','fun'('type.bvl.exp','type.bvl.exp')),'const.bvl.Handle_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.list.HD_0'))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x2_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27x_7c49_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.compile_exps_def|split|12', axiom, ![V_27xs_27, V_27dest_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp','const.closLang.Call_2'(s('type.num.num',V_27dest_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp')),'_dst_x0x1x0_3'(s('fun'('type.bvl.exp','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.bvl.exp'),'const.bvl.Call_2'(s('type.num.num','const.num.|48|_0'),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27dest_27),s('type.num.num','const.clos_to_bvl.num_stubs_0'))))))),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_52_prove_ltb', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27f_27, V_27x_27]: s(V_27C_27,'const.pair.UNCURRY_2'(s('fun'(V_27A_27,'fun'(V_27B_27,V_27C_27)),V_27f_27),s('type.pair.prod'(V_27A_27,V_27B_27),V_27x_27))) = s(V_27C_27,'happ'(s('fun'(V_27B_27,V_27C_27),'happ'(s('fun'(V_27A_27,'fun'(V_27B_27,V_27C_27)),V_27f_27),s(V_27A_27,'const.pair.FST_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27x_27))))),s(V_27B_27,'const.pair.SND_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27x_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_53_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27, V_27y_27, V_27z_27]: (s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27x_27),s(V_27B_27,V_27y_27))) = s('type.pair.prod'(V_27A_27,V_27B_27),V_27z_27) <=> (s(V_27A_27,V_27x_27) = s(V_27A_27,'const.pair.FST_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27z_27))) & s(V_27B_27,V_27y_27) = s(V_27B_27,'const.pair.SND_1'(s('type.pair.prod'(V_27A_27,V_27B_27),V_27z_27)))))).
fof('thm.clos_to_bvl.compile_exps_acc', axiom, ![V_27xs_27, V_27aux_27]: p(s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.bvl.exp'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.list.list'('type.bvl.exp'),'type.num.num'),'const.list.LENGTH_0'),s('type.num.num','happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.num.num'),'const.list.LENGTH_0'),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool'),'bool'),'?_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'bool')),'=_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.APPEND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))))))).
fof('thm.clos_to_bvl.compile_exps_LENGTH', axiom, ![V_27xs_27, V_27c_27, V_27aux_7c49_7c_27, V_27aux_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) => s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.bvl.exp'),V_27c_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))))).
fof('thm.clos_to_bvl.compile_exps_SING', axiom, ![V_27x_27, V_27c_27, V_27aux_7c49_7c_27, V_27aux_27]: (s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_exps_2'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_2'(s('type.list.list'('type.bvl.exp'),V_27c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_7c49_7c_27))) => ?[V_27d_27]: s('type.list.list'('type.bvl.exp'),V_27c_27) = s('type.list.list'('type.bvl.exp'),'const.list.CONS_2'(s('type.bvl.exp',V_27d_27),s('type.list.list'('type.bvl.exp'),'const.list.NIL_0'))))).
fof('thm.clos_to_bvl.compile_exps_CONS', axiom, ![V_27xs_27, V_27x_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.compile_exps_SNOC', axiom, ![V_27xs_27, V_27x_27, V_27aux_27]: s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.SNOC_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27))) = s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.bvl.exp'))),'const.list.APPEND_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27x_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))),s('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.clos_to_bvl.compile_exps_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),V_27aux_27)))))).
fof('thm.clos_to_bvl.config_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x00x11x00_3'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'const.ind_type.BOTTOM_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num'))),'_i_0_0'))))))),s('fun'('type.clos_to_bvl.config','type.ind_type.recspace'('type.pair.prod'('type.num.num','type.num.num'))),V_27rep_27))))).
fof('thm.clos_to_bvl.config_case_def', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27f_27]: s(V_27A_27,'const.clos_to_bvl.config_CASE_2'(s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))),s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27),s('type.num.num',V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27)))).
fof('thm.clos_to_bvl.config_size_def', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.clos_to_bvl.config_size_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27)))))).
fof('thm.clos_to_bvl.config_next_loc', axiom, ![V_27n_27, V_27n_7c48_7c_27]: s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.num.num',V_27n_27)).
fof('thm.clos_to_bvl.config_start', axiom, ![V_27n_27, V_27n_7c48_7c_27]: s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.num.num',V_27n_7c48_7c_27)).
fof('thm.clos_to_bvl.config_next_loc_fupd', axiom, ![V_27f_27, V_27n_27, V_27n_7c48_7c_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.clos_to_bvl.config_start_fupd', axiom, ![V_27f_27, V_27n_27, V_27n_7c48_7c_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num',V_27n_7c48_7c_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_7|49|_prove_ltb', axiom, ![V_27f_27, V_27c_27]: s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c_27)))).
fof('thm.clos_to_bvl.clos_to_bvl_72_prove_ltb', axiom, ![V_27f_27, V_27c_27]: s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',V_27c_27)))).
fof('thm.clos_to_bvl.clos_to_bvl_73_prove_ltb', axiom, ![V_27f_27, V_27c_27]: s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_74_prove_ltb', axiom, ![V_27f_27, V_27c_27]: s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',V_27c_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_76_prove_ltb', axiom, ![V_27g_27, V_27f_27, V_27c_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))),s('type.clos_to_bvl.config',V_27c_27)))).
fof('thm.clos_to_bvl.clos_to_bvl_77_prove_ltb', axiom, ![V_27g_27, V_27f_27, V_27c_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))),s('type.clos_to_bvl.config',V_27c_27)))).
fof('ARITY_1_2_const.clos_to_bvl.config_next_loc_fupd', axiom, ![VV0, VV1]: s('type.clos_to_bvl.config','happ'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),VV0))),s('type.clos_to_bvl.config',VV1))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.clos_to_bvl.config',VV1)))).
fof('thm.clos_to_bvl.config_fupdfupds_comp|split|0', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27)))))).
fof('thm.clos_to_bvl.config_fupdfupds_comp|split|1', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),V_27h_27))))) = s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),V_27h_27)))).
fof('ARITY_1_2_const.clos_to_bvl.config_start_fupd', axiom, ![VV0, VV1]: s('type.clos_to_bvl.config','happ'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),VV0))),s('type.clos_to_bvl.config',VV1))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.clos_to_bvl.config',VV1)))).
fof('thm.clos_to_bvl.config_fupdfupds_comp|split|2', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27)))))).
fof('thm.clos_to_bvl.config_fupdfupds_comp|split|3', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),V_27h_27))))) = s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),V_27h_27)))).
fof('thm.clos_to_bvl.clos_to_bvl_8|48|_prove_ltb', axiom, ![V_27g_27, V_27f_27, V_27c_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.clos_to_bvl.config',V_27c_27)))))).
fof('thm.clos_to_bvl.config_fupdcanon_comp|split|0', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.clos_to_bvl.config_fupdcanon_comp|split|1', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),V_27h_27))))) = s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_next_loc_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),'const.combin.o_2'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'const.clos_to_bvl.config_start_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.clos_to_bvl.config'),V_27h_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_83_prove_ltb', axiom, ![V_27c2_27, V_27c_7c49_7c_27]: (s('type.clos_to_bvl.config',V_27c_7c49_7c_27) = s('type.clos_to_bvl.config',V_27c2_27) <=> (s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c_7c49_7c_27))) = s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c2_27))) & s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',V_27c_7c49_7c_27))) = s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',V_27c2_27)))))).
fof('thm.clos_to_bvl.config_component_equality', axiom, ![V_27c_7c49_7c_27, V_27c2_27]: (s('type.clos_to_bvl.config',V_27c_7c49_7c_27) = s('type.clos_to_bvl.config',V_27c2_27) <=> (s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c_7c49_7c_27))) = s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c2_27))) & s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',V_27c_7c49_7c_27))) = s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',V_27c2_27)))))).
fof('thm.clos_to_bvl.clos_to_bvl_85_prove_ltb', axiom, ![V_27n_7c48_7c_27, V_27n_27, V_27c_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config','const.bool.ARB_0')))))).
fof('thm.clos_to_bvl.clos_to_bvl_86_prove_ltb', axiom, ![V_27c_27]: ?[V_27n_7c48_7c_27, V_27n_27]: s('type.clos_to_bvl.config',V_27c_27) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config','const.bool.ARB_0')))))).
fof('thm.clos_to_bvl.clos_to_bvl_87_prove_ltb', axiom, ![V_27P_27]: (![V_27c_27]: p(s('bool','happ'(s('fun'('type.clos_to_bvl.config','bool'),V_27P_27),s('type.clos_to_bvl.config',V_27c_27)))) <=> ![V_27n_7c48_7c_27, V_27n_27]: p(s('bool','happ'(s('fun'('type.clos_to_bvl.config','bool'),V_27P_27),s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config','const.bool.ARB_0')))))))))).
fof('thm.clos_to_bvl.clos_to_bvl_88_prove_ltb', axiom, ![V_27P_27]: (?[V_27c_27]: p(s('bool','happ'(s('fun'('type.clos_to_bvl.config','bool'),V_27P_27),s('type.clos_to_bvl.config',V_27c_27)))) <=> ?[V_27n_7c48_7c_27, V_27n_27]: p(s('bool','happ'(s('fun'('type.clos_to_bvl.config','bool'),V_27P_27),s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config','const.bool.ARB_0')))))))))).
fof('thm.clos_to_bvl.config_updates_eq_literal', axiom, ![V_27c_27, V_27n_7c48_7c_27, V_27n_27]: s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config',V_27c_27))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.clos_to_bvl.config','const.bool.ARB_0')))))).
fof('thm.clos_to_bvl.config_literal_|49||49|', axiom, ![V_27n_7c48_7c_7c49_7c_27, V_27n_7c49_7c_27, V_27n_7c48_7c2_27, V_27n2_27]: (s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_7c49_7c_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c49_7c_27))),s('type.clos_to_bvl.config','const.bool.ARB_0'))))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c2_27))),s('type.clos_to_bvl.config','const.clos_to_bvl.config_start_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n2_27))),s('type.clos_to_bvl.config','const.bool.ARB_0'))))) <=> (s('type.num.num',V_27n_7c48_7c_7c49_7c_27) = s('type.num.num',V_27n_7c48_7c2_27) & s('type.num.num',V_27n_7c49_7c_27) = s('type.num.num',V_27n2_27)))).
fof('thm.clos_to_bvl.datatype_config', axiom, ![V_27start_27, V_27record_27, V_27next__loc_27, V_27config_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'happ'(s('fun'('type.min.ind','fun'('type.num.num','fun'('type.num.num','bool'))),V_27record_27),s('type.min.ind',V_27config_27))),s('type.num.num',V_27next__loc_27))),s('type.num.num',V_27start_27))))))).
fof('thm.clos_to_bvl.config_|49||49|', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27]: (s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))) = s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27a_7c48_7c_7c39_7c_27),s('type.num.num',V_27a_7c49_7c_7c39_7c_27))) <=> (s('type.num.num',V_27a_7c48_7c_27) = s('type.num.num',V_27a_7c48_7c_7c39_7c_27) & s('type.num.num',V_27a_7c49_7c_27) = s('type.num.num',V_27a_7c49_7c_7c39_7c_27)))).
fof('thm.clos_to_bvl.config_case_cong', axiom, ![V_27A_27]: ![V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27]: ((s('type.clos_to_bvl.config',V_27M_27) = s('type.clos_to_bvl.config',V_27M_7c39_7c_27) & ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (s('type.clos_to_bvl.config',V_27M_7c39_7c_27) = s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))) => s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27),s('type.num.num',V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_7c39_7c_27),s('type.num.num',V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))))) => s(V_27A_27,'const.clos_to_bvl.config_CASE_2'(s('type.clos_to_bvl.config',V_27M_27),s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27))) = s(V_27A_27,'const.clos_to_bvl.config_CASE_2'(s('type.clos_to_bvl.config',V_27M_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_7c39_7c_27))))).
fof('thm.clos_to_bvl.config_nchotomy', axiom, ![V_27cc_27]: ?[V_27n_27, V_27n_7c48_7c_27]: s('type.clos_to_bvl.config',V_27cc_27) = s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.clos_to_bvl.config_Axiom', axiom, ![V_27A_27]: ![V_27f_27]: ?[V_27fn_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s(V_27A_27,'happ'(s('fun'('type.clos_to_bvl.config',V_27A_27),V_27fn_27),s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27))))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.num.num','fun'('type.num.num',V_27A_27)),V_27f_27),s('type.num.num',V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27)))).
fof('thm.clos_to_bvl.config_induction', axiom, ![V_27P_27]: (![V_27n_27, V_27n_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.clos_to_bvl.config','bool'),V_27P_27),s('type.clos_to_bvl.config','const.clos_to_bvl.recordtype|46|config_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27n_7c48_7c_27)))))) => ![V_27c_27]: p(s('bool','happ'(s('fun'('type.clos_to_bvl.config','bool'),V_27P_27),s('type.clos_to_bvl.config',V_27c_27)))))).
fof('ARITY_1_2_const.clos_number.renumber_code_locs_list', axiom, ![VV0, VV1]: s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp'))),'const.clos_number.renumber_code_locs_list_1'(s('type.num.num',VV0))),s('type.list.list'('type.closLang.exp'),VV1))) = s('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'const.clos_number.renumber_code_locs_list_2'(s('type.num.num',VV0),s('type.list.list'('type.closLang.exp'),VV1)))).
fof('ARITY_0_1_const.clos_annotate.annotate', axiom, ![VV0]: s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'const.clos_annotate.annotate_0'),s('type.list.list'('type.closLang.exp'),VV0))) = s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),VV0)))).
fof('ARITY_0_1_const.clos_to_bvl.config_start', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.clos_to_bvl.config','type.num.num'),'const.clos_to_bvl.config_start_0'),s('type.clos_to_bvl.config',VV0))) = s('type.num.num','const.clos_to_bvl.config_start_1'(s('type.clos_to_bvl.config',VV0)))).
fof('ARITY_0_2_const.clos_to_bvl.config_next_loc_fupd', axiom, ![VV0, VV1]: s('type.clos_to_bvl.config','happ'(s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.clos_to_bvl.config','type.clos_to_bvl.config')),'const.clos_to_bvl.config_next_loc_fupd_0'),s('fun'('type.num.num','type.num.num'),VV0))),s('type.clos_to_bvl.config',VV1))) = s('type.clos_to_bvl.config','const.clos_to_bvl.config_next_loc_fupd_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.clos_to_bvl.config',VV1)))).
fof('thm.clos_to_bvl.compile_def', axiom, ![V_27c_27, V_27e_27]: s('type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.clos_to_bvl.compile_2'(s('type.clos_to_bvl.config',V_27c_27),s('type.closLang.exp',V_27e_27))) = s('type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'happ'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp')),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('fun'('type.clos_to_bvl.config','type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.clos_to_bvl.config','type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.clos_to_bvl.config','type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x01x10_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.clos_to_bvl.config','fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.closLang.exp'),'fun'('type.db_vars.db_var_set','type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x100x010_3'(s('fun'('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.bool.LET_0'),s('fun'('type.clos_to_bvl.config','fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'fun'('type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.UNCURRY_0'),s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))))),'_dst_x000x100x111_3'(s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.clos_to_bvl.config','type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.pair.,_0'),s('fun'('type.clos_to_bvl.config','type.clos_to_bvl.config'),'_i_0_0'),s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.bvl.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.APPEND_0'),s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.APPEND_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.pair.prod'('type.num.num','type.bvl.exp')),'const.clos_to_bvl.init_code_0'))))),s('fun'('type.clos_to_bvl.config','fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x0x1_2'(s('fun'('fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'fun'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'const.list.MAP_0'),s('fun'('type.clos_to_bvl.config','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.bvl.exp'),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))),'const.pair.,_0'),s('fun'('type.clos_to_bvl.config','type.num.num'),'const.clos_to_bvl.config_start_0'),s('fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp')),'happ'(s('fun'('type.num.num','fun'('type.bvl.exp','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.pair.,_0'),s('type.num.num','const.num.|48|_0'))))))))))))))),s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'type.pair.prod'('type.list.list'('type.bvl.exp'),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp')))))),'const.clos_to_bvl.compile_exps_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.bvl.exp'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'const.clos_annotate.annotate_0'))))),s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_remove.remove_0'))),s('fun'('type.num.num','type.clos_to_bvl.config'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.clos_to_bvl.config','type.clos_to_bvl.config')),'const.clos_to_bvl.config_next_loc_fupd_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.combin.K_0'),s('type.clos_to_bvl.config',V_27c_27))))))))),s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.num.num','type.list.list'('type.closLang.exp'))),'const.clos_number.renumber_code_locs_list_1'(s('type.num.num','const.clos_to_bvl.config_next_loc_1'(s('type.clos_to_bvl.config',V_27c_27))))))))),s('type.list.list'('type.closLang.exp'),'const.clos_mti.intro_multi_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27e_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))))).
