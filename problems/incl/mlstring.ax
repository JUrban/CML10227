fof('thm.mlstring.irreflexive_inv_image', axiom, ![V_27B_27,V_27A_27]: ![V_27R_27, V_27f_27]: (p(s('bool','const.relation.irreflexive_1'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27)))) => p(s('bool','const.relation.irreflexive_1'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),'const.relation.inv_image_2'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('fun'(V_27B_27,V_27A_27),V_27f_27)))))))).
fof('thm.mlstring.trichotomous_inv_image', axiom, ![V_27B_27,V_27A_27]: ![V_27R_27, V_27f_27]: ((p(s('bool','const.relation.trichotomous_1'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27)))) & p(s('bool','const.pred_set.INJ_3'(s('fun'(V_27B_27,V_27A_27),V_27f_27),s('fun'(V_27B_27,'bool'),'const.pred_set.UNIV_0'),s('fun'(V_27A_27,'bool'),'const.pred_set.UNIV_0'))))) => p(s('bool','const.relation.trichotomous_1'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),'const.relation.inv_image_2'(s('fun'(V_27A_27,'fun'(V_27A_27,'bool')),V_27R_27),s('fun'(V_27B_27,V_27A_27),V_27f_27)))))))).
fof('thm.mlstring.mlstring_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'type.ind_type.recspace'('type.list.list'('type.string.char'))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.ind_type.recspace'('type.list.list'('type.string.char'))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.list.list'('type.string.char'))),'type.ind_type.recspace'('type.list.list'('type.string.char')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.list.list'('type.string.char')),'const.ind_type.BOTTOM_0'))))))))),s('fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'fun'('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.list.list'('type.string.char')),'type.ind_type.recspace'('type.list.list'('type.string.char'))),'_i_0_0'))))))),s('fun'('type.mlstring.mlstring','type.ind_type.recspace'('type.list.list'('type.string.char'))),V_27rep_27))))).
fof('ARITY_0_2_const.mlstring.mlstring_CASE', axiom, ![V_27A_27]: ![VV0, VV1]: s(V_27A_27,'happ'(s('fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27),'happ'(s('fun'('type.mlstring.mlstring','fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27)),'const.mlstring.mlstring_CASE_0'),s('type.mlstring.mlstring',VV0))),s('fun'('type.list.list'('type.string.char'),V_27A_27),VV1))) = s(V_27A_27,'const.mlstring.mlstring_CASE_2'(s('type.mlstring.mlstring',VV0),s('fun'('type.list.list'('type.string.char'),V_27A_27),VV1)))).
fof('thm.mlstring.mlstring_case_def', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27]: s(V_27A_27,'const.mlstring.mlstring_CASE_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27a_27))),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27),s('type.list.list'('type.string.char'),V_27a_27)))).
fof('thm.mlstring.mlstring_size_def', axiom, ![V_27a_27]: s('type.num.num','const.mlstring.mlstring_size_1'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s('fun'('type.string.char','type.num.num'),'const.string.char_size_0'),s('type.list.list'('type.string.char'),V_27a_27)))))).
fof('ARITY_0_1_const.mlstring.strlit', axiom, ![VV0]: s('type.mlstring.mlstring','happ'(s('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'const.mlstring.strlit_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.mlstring.datatype_mlstring', axiom, ![V_27mlstring_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'bool'),V_27mlstring_27),s('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'const.mlstring.strlit_0'))))))).
fof('thm.mlstring.mlstring_|49||49|', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27a_27))) = s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))) <=> s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))).
fof('thm.mlstring.mlstring_case_cong', axiom, ![V_27A_27]: ![V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27]: ((s('type.mlstring.mlstring',V_27M_27) = s('type.mlstring.mlstring',V_27M_7c39_7c_27) & ![V_27a_27]: (s('type.mlstring.mlstring',V_27M_7c39_7c_27) = s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27),s('type.list.list'('type.string.char'),V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c39_7c_27),s('type.list.list'('type.string.char'),V_27a_27))))) => s(V_27A_27,'const.mlstring.mlstring_CASE_2'(s('type.mlstring.mlstring',V_27M_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27))) = s(V_27A_27,'const.mlstring.mlstring_CASE_2'(s('type.mlstring.mlstring',V_27M_7c39_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c39_7c_27))))).
fof('thm.mlstring.mlstring_nchotomy', axiom, ![V_27mm_27]: ?[V_27s_27]: s('type.mlstring.mlstring',V_27mm_27) = s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.mlstring.mlstring_Axiom', axiom, ![V_27A_27]: ![V_27f_27]: ?[V_27fn_27]: ![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.mlstring.mlstring',V_27A_27),V_27fn_27),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27),s('type.list.list'('type.string.char'),V_27a_27)))).
fof('thm.mlstring.mlstring_induction', axiom, ![V_27P_27]: (![V_27s_27]: p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),V_27P_27),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) => ![V_27m_27]: p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),V_27P_27),s('type.mlstring.mlstring',V_27m_27)))))).
fof('thm.mlstring.implode_def', axiom, s('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'const.mlstring.implode_0') = s('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'const.mlstring.strlit_0')).
fof('thm.mlstring.explode_def', axiom, ![V_27ls_27]: s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27ls_27))))) = s('type.list.list'('type.string.char'),V_27ls_27)).
fof('ARITY_0_1_const.mlstring.implode', axiom, ![VV0]: s('type.mlstring.mlstring','happ'(s('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'const.mlstring.implode_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.mlstring.mlstring','const.mlstring.implode_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.mlstring.explode_implode', axiom, ![V_27x_27]: s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring','const.mlstring.implode_1'(s('type.list.list'('type.string.char'),V_27x_27))))) = s('type.list.list'('type.string.char'),V_27x_27)).
fof('thm.mlstring.implode_explode', axiom, ![V_27x_27]: s('type.mlstring.mlstring','const.mlstring.implode_1'(s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27x_27))))) = s('type.mlstring.mlstring',V_27x_27)).
fof('thm.mlstring.explode_|49||49|', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: (s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27s_7c49_7c_27))) = s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27s2_27))) <=> s('type.mlstring.mlstring',V_27s_7c49_7c_27) = s('type.mlstring.mlstring',V_27s2_27))).
fof('thm.mlstring.implode_BIJ', axiom, p(s('bool','const.pred_set.BIJ_3'(s('fun'('type.list.list'('type.string.char'),'type.mlstring.mlstring'),'const.mlstring.implode_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.UNIV_0'),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.UNIV_0'))))).
fof('ARITY_0_1_const.mlstring.explode', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.mlstring.mlstring','type.list.list'('type.string.char')),'const.mlstring.explode_0'),s('type.mlstring.mlstring',VV0))) = s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',VV0)))).
fof('thm.mlstring.explode_BIJ', axiom, p(s('bool','const.pred_set.BIJ_3'(s('fun'('type.mlstring.mlstring','type.list.list'('type.string.char')),'const.mlstring.explode_0'),s('fun'('type.mlstring.mlstring','bool'),'const.pred_set.UNIV_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.pred_set.UNIV_0'))))).
fof('thm.mlstring.strcat_def', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: s('type.mlstring.mlstring','const.mlstring.strcat_2'(s('type.mlstring.mlstring',V_27s_7c49_7c_27),s('type.mlstring.mlstring',V_27s2_27))) = s('type.mlstring.mlstring','const.mlstring.implode_1'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27s2_27)))))))).
fof('thm.mlstring.strlen_def', axiom, ![V_27s_27]: s('type.num.num','const.mlstring.strlen_1'(s('type.mlstring.mlstring',V_27s_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.mlstring.explode_1'(s('type.mlstring.mlstring',V_27s_27)))))).
fof('thm.mlstring.mlstring_24_prove_ltb', axiom, ![V_27a_27]: (?[V_27s_7c49_7c_27, V_27s2_27]: s('type.pair.prod'('type.mlstring.mlstring','type.mlstring.mlstring'),V_27a_27) = s('type.pair.prod'('type.mlstring.mlstring','type.mlstring.mlstring'),'const.pair.,_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s2_27))))) => ?[V_27s_7c49_7c_27, V_27s2_27]: s('type.pair.prod'('type.mlstring.mlstring','type.mlstring.mlstring'),V_27a_27) = s('type.pair.prod'('type.mlstring.mlstring','type.mlstring.mlstring'),'const.pair.,_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s2_27))))))).
fof('thm.mlstring.mlstring_lt_ind', axiom, ![V_27P_27]: (![V_27s_7c49_7c_27, V_27s2_27]: p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),V_27P_27),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))))),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s2_27)))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),V_27P_27),s('type.mlstring.mlstring',V_27v_27))),s('type.mlstring.mlstring',V_27v_7c49_7c_27)))))).
fof('ARITY_0_2_const.mlstring.mlstring_lt', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.mlstring.mlstring','bool'),'happ'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0'),s('type.mlstring.mlstring',VV0))),s('type.mlstring.mlstring',VV1))) = s('bool','const.mlstring.mlstring_lt_2'(s('type.mlstring.mlstring',VV0),s('type.mlstring.mlstring',VV1)))).
fof('thm.mlstring.mlstring_lt_def', axiom, ![V_27s2_27, V_27s_7c49_7c_27]: s('bool','const.mlstring.mlstring_lt_2'(s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.mlstring.mlstring','const.mlstring.strlit_1'(s('type.list.list'('type.string.char'),V_27s2_27))))) = s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))).
fof('ARITY_0_2_const.string.string_lt', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'const.string.string_lt_0'),s('type.list.list'('type.string.char'),VV0))),s('type.list.list'('type.string.char'),VV1))) = s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),VV0),s('type.list.list'('type.string.char'),VV1)))).
fof('thm.mlstring.mlstring_lt_inv_image', axiom, s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0') = s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.relation.inv_image_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'const.string.string_lt_0'),s('fun'('type.mlstring.mlstring','type.list.list'('type.string.char')),'const.mlstring.explode_0')))).
fof('thm.mlstring.mlstring_29_prove_ltb', axiom, p(s('bool','const.relation.transitive_1'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0'))))).
fof('thm.mlstring.mlstring_3|48|_prove_ltb', axiom, p(s('bool','const.relation.irreflexive_1'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0'))))).
fof('thm.mlstring.mlstring_3|49|_prove_ltb', axiom, p(s('bool','const.relation.trichotomous_1'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0'))))).
fof('thm.mlstring.StrongLinearOrder_mlstring_lt', axiom, p(s('bool','const.relation.StrongLinearOrder_1'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0'))))).
fof('thm.mlstring.mlstring_cmp_def', axiom, s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0') = s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.toto.TO_of_LinearOrder_1'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','bool')),'const.mlstring.mlstring_lt_0')))).
fof('thm.mlstring.TotOrd_mlstring_cmp', axiom, p(s('bool','const.toto.TotOrd_1'(s('fun'('type.mlstring.mlstring','fun'('type.mlstring.mlstring','type.toto.cpn')),'const.mlstring.mlstring_cmp_0'))))).
