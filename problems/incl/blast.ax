fof('thm.blast.bcarry_def', axiom, ![V_27x_27, V_27y_27, V_27c_27]: (p(s('bool','const.blast.bcarry_3'(s('bool',V_27x_27),s('bool',V_27y_27),s('bool',V_27c_27)))) <=> ((p(s('bool',V_27x_27)) & p(s('bool',V_27y_27))) | ((p(s('bool',V_27x_27)) | p(s('bool',V_27y_27))) & p(s('bool',V_27c_27)))))).
fof('thm.blast.BCARRY_def|split|0', axiom, ![V_27x_27, V_27y_27, V_27c_27]: s('bool','const.blast.BCARRY_4'(s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27))) = s('bool',V_27c_27)).
fof('thm.blast.BCARRY_def|split|1', axiom, ![V_27i_27, V_27x_27, V_27y_27, V_27c_27]: s('bool','const.blast.BCARRY_4'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27i_27))),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27))) = s('bool','const.blast.bcarry_3'(s('bool','happ'(s('fun'('type.num.num','bool'),V_27x_27),s('type.num.num',V_27i_27))),s('bool','happ'(s('fun'('type.num.num','bool'),V_27y_27),s('type.num.num',V_27i_27))),s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27)))))).
fof('thm.blast.BCARRY_def_compute|split|1', axiom, ![V_27i_27, V_27x_27, V_27y_27, V_27c_27]: s('bool','const.blast.BCARRY_4'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27))) = s('bool','const.blast.bcarry_3'(s('bool','happ'(s('fun'('type.num.num','bool'),V_27x_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('bool','happ'(s('fun'('type.num.num','bool'),V_27y_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('bool','const.blast.BCARRY_4'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27)))))).
fof('thm.blast.BCARRY_def_compute|split|2', axiom, ![V_27i_27, V_27x_27, V_27y_27, V_27c_27]: s('bool','const.blast.BCARRY_4'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27i_27))))),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27))) = s('bool','const.blast.bcarry_3'(s('bool','happ'(s('fun'('type.num.num','bool'),V_27x_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))))),s('bool','happ'(s('fun'('type.num.num','bool'),V_27y_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))))),s('bool','const.blast.BCARRY_4'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27i_27))))),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27)))))).
fof('thm.blast.bsum_def', axiom, ![V_27x_27, V_27y_27, V_27c_27]: (p(s('bool','const.blast.bsum_3'(s('bool',V_27x_27),s('bool',V_27y_27),s('bool',V_27c_27)))) <=> ((p(s('bool',V_27x_27)) <=> ~ (p(s('bool',V_27y_27)))) <=> ~ (p(s('bool',V_27c_27)))))).
fof('thm.blast.BSUM_def', axiom, ![V_27i_27, V_27x_27, V_27y_27, V_27c_27]: s('bool','const.blast.BSUM_4'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27))) = s('bool','const.blast.bsum_3'(s('bool','happ'(s('fun'('type.num.num','bool'),V_27x_27),s('type.num.num',V_27i_27))),s('bool','happ'(s('fun'('type.num.num','bool'),V_27y_27),s('type.num.num',V_27i_27))),s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),V_27y_27),s('bool',V_27c_27)))))).
fof('thm.blast.blast_5_prove_ltb', axiom, ![V_27b_27, V_27n_27]: (s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27b_27),s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.num.|48|_0') | s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27b_27),s('type.num.num',V_27b_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.blast.blast_6_prove_ltb', axiom, ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))))))).
fof('thm.blast.BCARRY_LEM', axiom, ![V_27i_27, V_27x_27, V_27y_27, V_27c_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27i_27)))) => s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27y_27))),s('bool',V_27c_27))) = s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27i_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27i_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27x_27))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27i_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27y_27))))),s('type.num.num','const.bool.COND_3'(s('bool',V_27c_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0'))))))))).
fof('thm.blast.BCARRY_EQ', axiom, ![V_27n_27, V_27c_27, V_27x_7c49_7c_27, V_27x2_27, V_27y_7c49_7c_27, V_27y2_27]: (![V_27i_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27)))) => (s('bool','happ'(s('fun'('type.num.num','bool'),V_27x_7c49_7c_27),s('type.num.num',V_27i_27))) = s('bool','happ'(s('fun'('type.num.num','bool'),V_27x2_27),s('type.num.num',V_27i_27))) & s('bool','happ'(s('fun'('type.num.num','bool'),V_27y_7c49_7c_27),s('type.num.num',V_27i_27))) = s('bool','happ'(s('fun'('type.num.num','bool'),V_27y2_27),s('type.num.num',V_27i_27))))) => s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),V_27x_7c49_7c_27),s('fun'('type.num.num','bool'),V_27y_7c49_7c_27),s('bool',V_27c_27))) = s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),V_27x2_27),s('fun'('type.num.num','bool'),V_27y2_27),s('bool',V_27c_27))))).
fof('thm.blast.BSUM_EQ', axiom, ![V_27n_27, V_27c_27, V_27x_7c49_7c_27, V_27x2_27, V_27y_7c49_7c_27, V_27y2_27]: (![V_27i_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27)))) => (s('bool','happ'(s('fun'('type.num.num','bool'),V_27x_7c49_7c_27),s('type.num.num',V_27i_27))) = s('bool','happ'(s('fun'('type.num.num','bool'),V_27x2_27),s('type.num.num',V_27i_27))) & s('bool','happ'(s('fun'('type.num.num','bool'),V_27y_7c49_7c_27),s('type.num.num',V_27i_27))) = s('bool','happ'(s('fun'('type.num.num','bool'),V_27y2_27),s('type.num.num',V_27i_27))))) => s('bool','const.blast.BSUM_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),V_27x_7c49_7c_27),s('fun'('type.num.num','bool'),V_27y_7c49_7c_27),s('bool',V_27c_27))) = s('bool','const.blast.BSUM_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),V_27x2_27),s('fun'('type.num.num','bool'),V_27y2_27),s('bool',V_27c_27))))).
fof('thm.blast.blast_|49||48|_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27x_27, V_27y_27, V_27c_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27y_27),s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) => s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','bool'),'const.combin.o_2'(s('fun'('bool','bool'),'|dollar|not_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27y_27))))))),s('bool',V_27c_27))) = s('bool','const.blast.BCARRY_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.words.dimword_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27y_27))))),s('bool',V_27c_27))))).
fof('thm.blast.blast_|49||49|_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27x_27, V_27y_27, V_27c_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))) => s('bool','const.blast.BSUM_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num',V_27y_27))))),s('bool',V_27c_27))) = s('bool','const.blast.BSUM_4'(s('type.num.num',V_27n_27),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27y_27))),s('bool',V_27c_27))))).
fof('thm.blast.blast_|49|2_prove_ltb', axiom, ![V_27n_27, V_27a_27, V_27b_27]: s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27a_27))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27b_27))))),s('type.num.num','const.bit.BITS_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27))),s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.blast.blast_|49|3_prove_ltb', axiom, ![V_27n_27, V_27a_27, V_27b_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('bool','const.bit.BIT_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27a_27))) = s('bool','const.bit.BIT_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27b_27))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('bool','const.bit.BIT_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27a_27))) = s('bool','const.bit.BIT_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27b_27)))) & s('bool','const.bit.BIT_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('bool','const.bool.COND_3'(s('bool','const.bit.BIT_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27a_27))),s('type.num.num','const.bit.BITS_3'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('bool',Vv_27),s('bool',Vv)))))).
fof('thm.blast.BSUM_LEM', axiom, ![V_27i_27, V_27x_27, V_27y_27, V_27c_27]: s('bool','const.blast.BSUM_4'(s('type.num.num',V_27i_27),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27x_27))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27y_27))),s('bool',V_27c_27))) = s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.bit.BIT_0'),s('type.num.num',V_27i_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27))),s('type.num.num','const.bool.COND_3'(s('bool',V_27c_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0')))))))).
fof('ARITY_0_4_const.blast.BSUM', axiom, ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('bool','bool'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('bool','bool')),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('bool','bool'))),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('bool','bool')))),'const.blast.BSUM_0'),s('type.num.num',VV0))),s('fun'('type.num.num','bool'),VV1))),s('fun'('type.num.num','bool'),VV2))),s('bool',VV3))) = s('bool','const.blast.BSUM_4'(s('type.num.num',VV0),s('fun'('type.num.num','bool'),VV1),s('fun'('type.num.num','bool'),VV2),s('bool',VV3)))).
fof('thm.blast.BITWISE_ADD', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_add_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x1x0x0x0_4'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('bool','bool')))),'const.blast.BSUM_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))),s('bool','F_0')))))).
fof('thm.blast.BITWISE_SUB', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_sub_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x1x0x0x0_4'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'fun'('fun'('type.num.num','bool'),'fun'('bool','bool')))),'const.blast.BSUM_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('fun'('type.num.num','bool'),'const.combin.o_2'(s('fun'('bool','bool'),'|dollar|not_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))),s('bool','T_0')))))).
fof('thm.blast.BITWISE_LO', axiom, ![V_27A_27]: ![V_27x_27, V_27y_27]: (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27),s('type.fcp.cart'('bool',V_27A_27),V_27y_27)))) <=> ~ (p(s('bool','const.blast.BCARRY_4'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27x_27))),s('fun'('type.num.num','bool'),'const.combin.o_2'(s('fun'('bool','bool'),'|dollar|not_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27y_27))))),s('bool','T_0'))))))).
fof('ARITY_0_1_const.fcp.FCP', axiom, ![V_27B_27,V_27A_27]: ![VV0]: s('type.fcp.cart'(V_27A_27,V_27B_27),'happ'(s('fun'('fun'('type.num.num',V_27A_27),'type.fcp.cart'(V_27A_27,V_27B_27)),'const.fcp.FCP_0'),s('fun'('type.num.num',V_27A_27),VV0))) = s('type.fcp.cart'(V_27A_27,V_27B_27),'const.fcp.FCP_1'(s('fun'('type.num.num',V_27A_27),VV0)))).
fof('thm.blast.blast_|49|8_prove_ltb', axiom, ![V_27A_27]: ![V_27n_27, V_27w_27, V_27m_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) => s('type.fcp.cart'('bool',V_27A_27),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_i_0_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'type.fcp.cart'('bool',V_27A_27)),'const.fcp.FCP_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.word_lsl_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',V_27n_27))))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))).
fof('thm.blast.blast_|49|9_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_i_0_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'type.fcp.cart'('bool',V_27A_27)),'const.fcp.FCP_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.word_lsl_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.blast.BITWISE_MUL', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mul_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.list.FOLDL_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','type.fcp.cart'('bool',V_27A_27))),'_dst_x00x10x01_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27))),'const.words.word_add_0'),s('fun'('type.fcp.cart'('bool',V_27A_27),'type.fcp.cart'('bool',V_27A_27)),'_i_0_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'type.fcp.cart'('bool',V_27A_27)),'const.fcp.FCP_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))).
fof('thm.blast.blast_2|49|_prove_ltb', axiom, ![V_27P_27, V_27n_27, V_27f_27]: (![V_27j_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27j_27),s('type.num.num',V_27n_27)))) => ~ (p(s('bool','happ'(s('fun'('type.num.num','bool'),V_27P_27),s('type.num.num',V_27j_27)))))) => s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),V_27P_27),s('fun'('type.num.num','bool'),V_27f_27))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',V_27n_27))))) = s('bool','F_0'))).
fof('thm.blast.blast_22_prove_ltb', axiom, ![V_27f_27, V_27P_27, V_27i_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27)))) & (p(s('bool','happ'(s('fun'('type.num.num','bool'),V_27P_27),s('type.num.num',V_27i_27)))) & ![V_27i_7c48_7c_27, V_27j_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),V_27P_27),s('type.num.num',V_27i_7c48_7c_27)))) & (p(s('bool','happ'(s('fun'('type.num.num','bool'),V_27P_27),s('type.num.num',V_27j_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27i_7c48_7c_27),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27j_27),s('type.num.num',V_27n_27))))))) => s('type.num.num',V_27i_7c48_7c_27) = s('type.num.num',V_27j_27)))) => s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),V_27P_27),s('fun'('type.num.num','bool'),V_27f_27))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',V_27n_27))))) = s('bool','happ'(s('fun'('type.num.num','bool'),V_27f_27),s('type.num.num',V_27i_27))))).
fof('thm.blast.blast_23_prove_ltb', axiom, ![V_27B_27,V_27A_27]: ![V_27h_27, V_27w_27, V_27P_27, V_27a_27]: (s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0'))) => ((s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num',V_27h_27),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27h_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27a_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.n2w_1'(s('type.num.num','const.num.|48|_0')))) <=> s('type.fcp.cart'('bool',V_27A_27),V_27a_27) = s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))).
fof('thm.blast.blast_24_prove_ltb', axiom, ![V_27A_27]: ![V_27l_27, V_27i_27, V_27p_27, V_27b_27]: ((p(s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'(V_27A_27,'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'(V_27A_27,'bool'),V_27p_27))),s('bool',V_27i_27),s('type.list.list'(V_27A_27),V_27l_27)))) & p(s('bool',V_27b_27))) <=> ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool',V_27i_27)) & p(s('bool',V_27b_27)))) & p(s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'(V_27A_27,'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'(V_27A_27,'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'|slash||bslash|_1'(s('bool',V_27b_27))),s('fun'(V_27A_27,'bool'),V_27p_27))))),s('bool',Vv),s('type.list.list'(V_27A_27),V_27l_27))))))).
fof('thm.blast.blast_25_prove_ltb', axiom, ![V_27A_27]: ![V_27P_27, V_27n_27, V_27m_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))) => (p(s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','bool'),V_27P_27))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',V_27n_27)))))) <=> (p(s('bool','const.list.FOLDL_3'(s('fun'('bool','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','bool'),V_27P_27))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',V_27n_27)))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0'))))))).
fof('ARITY_0_3_const.list.FOLDL', axiom, ![V_27B_27,V_27A_27]: ![VV0, VV1, VV2]: s(V_27B_27,'happ'(s('fun'('type.list.list'(V_27A_27),V_27B_27),'happ'(s('fun'(V_27B_27,'fun'('type.list.list'(V_27A_27),V_27B_27)),'happ'(s('fun'('fun'(V_27B_27,'fun'(V_27A_27,V_27B_27)),'fun'(V_27B_27,'fun'('type.list.list'(V_27A_27),V_27B_27))),'const.list.FOLDL_0'),s('fun'(V_27B_27,'fun'(V_27A_27,V_27B_27)),VV0))),s(V_27B_27,VV1))),s('type.list.list'(V_27A_27),VV2))) = s(V_27B_27,'const.list.FOLDL_3'(s('fun'(V_27B_27,'fun'(V_27A_27,V_27B_27)),VV0),s(V_27B_27,VV1),s('type.list.list'(V_27A_27),VV2)))).
fof('thm.blast.blast_26_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'))))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.blast.word_lsl_bv_expand', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0')))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> (~ (p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('type.num.num','const.num.|48|_0'))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.num.|48|_0')))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsl_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool',Vv_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'))))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('bool',Vv))))))))))).
fof('thm.blast.blast_28_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'))))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.blast.word_lsr_bv_expand', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0')))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> (~ (p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('type.num.num','const.num.|48|_0'))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.num.|48|_0')))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_lsr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool',Vv_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'))))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('bool',Vv))))))))))).
fof('ARITY_1_2_const.words.word_asr', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.word_asr_1'(s('type.fcp.cart'('bool',V_27A_27),VV0))),s('type.num.num',VV1))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_2'(s('type.fcp.cart'('bool',V_27A_27),VV0),s('type.num.num',VV1)))).
fof('thm.blast.blast_3|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27)))) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x10_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.word_asr_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool',Vv))))))))).
fof('thm.blast.blast_3|49|_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27f_27, V_27b_27, V_27g_27]: s('type.fcp.cart'('bool',V_27B_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27B_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),V_27f_27))),s('type.fcp.cart'('bool',V_27B_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),V_27g_27))))) = s('type.fcp.cart'('bool',V_27B_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),V_27f_27),s('fun'('type.num.num','bool'),V_27g_27)))))).
fof('thm.blast.blast_32_prove_ltb', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27)))) & p(s('bool','const.words.word_msb_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27)))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0')))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.num.|48|_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.words.word_or_2'(s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x10_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.word_asr_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('bool',Vv_27))))),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool',Vv))))))))))))).
fof('thm.blast.word_asr_bv_expand', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: ?[Vv]: ((p(s('bool',Vv)) <=> (p(s('bool','const.words.word_lo_2'(s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27)))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.num.|48|_0')))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & s('type.fcp.cart'('bool',V_27A_27),'const.words.word_asr_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'const.combin.K_1'(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('type.num.num','const.num.|48|_0'))))))),s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_bits_3'(s('type.num.num','const.bit.LOG2_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x10_3'(s('fun'('type.fcp.cart'('bool',V_27A_27),'fun'('type.num.num','bool')),'const.fcp.fcp_index_0'),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.word_asr_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('bool',Vv_27))),s('bool',Vv))))))))))).
fof('thm.blast.word_ror_bv_expand', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_ror_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x11x00_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
fof('thm.blast.word_rol_bv_expand', axiom, ![V_27A_27]: ![V_27w_27, V_27m_27]: s('type.fcp.cart'('bool',V_27A_27),'const.words.word_rol_bv_2'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27),s('type.fcp.cart'('bool',V_27A_27),V_27m_27))) = s('type.fcp.cart'('bool',V_27A_27),'const.fcp.FCP_1'(s('fun'('type.num.num','bool'),'_dst_x0x1x0x0_4'(s('fun'('fun'('bool','fun'('type.num.num','bool')),'fun'('bool','fun'('type.list.list'('type.num.num'),'bool'))),'const.list.FOLDL_0'),s('fun'('type.num.num','fun'('bool','fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('bool','bool'),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.fcp.cart'('bool',V_27A_27),'bool'),'=_1'(s('type.fcp.cart'('bool',V_27A_27),'const.words.word_mod_2'(s('type.fcp.cart'('bool',V_27A_27),V_27m_27),s('type.fcp.cart'('bool',V_27A_27),'happ'(s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))),s('fun'('type.num.num','type.fcp.cart'('bool',V_27A_27)),'const.words.n2w_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.num.num','bool'),'const.fcp.fcp_index_1'(s('type.fcp.cart'('bool',V_27A_27),V_27w_27))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x11x00_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.MOD_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.-_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))),s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0'))))))))))),s('bool','F_0'),s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num','const.fcp.dimindex_1'(s('type.bool.itself'(V_27A_27),'const.bool.the_value_0')))))))))).
