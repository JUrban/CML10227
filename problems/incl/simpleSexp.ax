fof('thm.simpleSexp.sexp_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')))),'_dst_x0000x0111x1011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'const.pair.,_0'),s('type.list.list'('type.string.char'),'const.bool.ARB_0'))),s('type.num.num','const.bool.ARB_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))))),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))))),'const.ind_type.FCONS_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')))),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))))),'const.ind_type.FCONS_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'const.ind_type.BOTTOM_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'_i_0_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'_i_0_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'const.ind_type.BOTTOM_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_i_0_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'const.pair.,_0'),s('type.list.list'('type.string.char'),'const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'const.ind_type.BOTTOM_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('fun'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'const.pair.,_0'),s('type.num.num','const.bool.ARB_0'))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'const.ind_type.BOTTOM_0'))))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num')),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),'_i_0_0'))))))),s('fun'('type.simpleSexp.sexp','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'))),V_27rep_27))))).
fof('ARITY_0_5_const.simpleSexp.sexp_CASE', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4]: s(V_27A_27,'happ'(s('fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27),'happ'(s('fun'('fun'('type.num.num',V_27A_27),'fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27)),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),V_27A_27),'fun'('fun'('type.num.num',V_27A_27),'fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27))),'happ'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),'fun'('fun'('type.list.list'('type.string.char'),V_27A_27),'fun'('fun'('type.num.num',V_27A_27),'fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27)))),'happ'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),'fun'('fun'('type.list.list'('type.string.char'),V_27A_27),'fun'('fun'('type.num.num',V_27A_27),'fun'('fun'('type.list.list'('type.string.char'),V_27A_27),V_27A_27))))),'const.simpleSexp.sexp_CASE_0'),s('type.simpleSexp.sexp',VV0))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),VV1))),s('fun'('type.list.list'('type.string.char'),V_27A_27),VV2))),s('fun'('type.num.num',V_27A_27),VV3))),s('fun'('type.list.list'('type.string.char'),V_27A_27),VV4))) = s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',VV0),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),VV1),s('fun'('type.list.list'('type.string.char'),V_27A_27),VV2),s('fun'('type.num.num',V_27A_27),VV3),s('fun'('type.list.list'('type.string.char'),V_27A_27),VV4)))).
fof('thm.simpleSexp.sexp_case_def|split|0', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('type.simpleSexp.sexp',V_27a_7c48_7c_27))),s('type.simpleSexp.sexp',V_27a_7c49_7c_27)))).
fof('thm.simpleSexp.sexp_case_def|split|1', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('type.list.list'('type.string.char'),V_27a_27)))).
fof('thm.simpleSexp.sexp_case_def|split|2', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27)))).
fof('thm.simpleSexp.sexp_case_def|split|3', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_27))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27),s('type.list.list'('type.string.char'),V_27a_27)))).
fof('thm.simpleSexp.sexp_size_def|split|0', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27))),s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp',V_27a_7c49_7c_27)))))))).
fof('thm.simpleSexp.sexp_size_def|split|1', axiom, ![V_27a_27]: s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s('fun'('type.string.char','type.num.num'),'const.string.char_size_0'),s('type.list.list'('type.string.char'),V_27a_27)))))).
fof('thm.simpleSexp.sexp_size_def|split|2', axiom, ![V_27a_27]: s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))).
fof('thm.simpleSexp.sexp_size_def|split|3', axiom, ![V_27a_27]: s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.list.list_size_2'(s('fun'('type.string.char','type.num.num'),'const.string.char_size_0'),s('type.list.list'('type.string.char'),V_27a_27)))))).
fof('ARITY_0_1_const.simpleSexp.SX_SYM', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_SYM_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('ARITY_0_1_const.simpleSexp.SX_STR', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_STR_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('ARITY_0_1_const.simpleSexp.SX_NUM', axiom, ![VV0]: s('type.simpleSexp.sexp','happ'(s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'),s('type.num.num',VV0))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',VV0)))).
fof('ARITY_0_2_const.simpleSexp.SX_CONS', axiom, ![VV0, VV1]: s('type.simpleSexp.sexp','happ'(s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('type.simpleSexp.sexp',VV0))),s('type.simpleSexp.sexp',VV1))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',VV0),s('type.simpleSexp.sexp',VV1)))).
fof('thm.simpleSexp.datatype_sexp', axiom, ![V_27sexp_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'bool'),'happ'(s('fun'('fun'('type.num.num','type.simpleSexp.sexp'),'fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'fun'('fun'('type.num.num','type.simpleSexp.sexp'),'fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'bool'))),'happ'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'fun'('fun'('type.num.num','type.simpleSexp.sexp'),'fun'('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'bool')))),V_27sexp_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_SYM_0'))),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_STR_0'))))))).
fof('thm.simpleSexp.sexp_|49||49||split|0', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27]: (s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_7c39_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_7c39_7c_27))) <=> (s('type.simpleSexp.sexp',V_27a_7c48_7c_27) = s('type.simpleSexp.sexp',V_27a_7c48_7c_7c39_7c_27) & s('type.simpleSexp.sexp',V_27a_7c49_7c_27) = s('type.simpleSexp.sexp',V_27a_7c49_7c_7c39_7c_27)))).
fof('thm.simpleSexp.sexp_|49||49||split|1', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))) <=> s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))).
fof('thm.simpleSexp.sexp_|49||49||split|2', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_7c39_7c_27))) <=> s('type.num.num',V_27a_27) = s('type.num.num',V_27a_7c39_7c_27))).
fof('thm.simpleSexp.sexp_|49||49||split|3', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))) <=> s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))).
fof('thm.simpleSexp.sexp_distinct|split|0', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))))).
fof('thm.simpleSexp.sexp_distinct|split|1', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))))).
fof('thm.simpleSexp.sexp_distinct|split|2', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_27))))).
fof('thm.simpleSexp.sexp_distinct|split|3', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_7c39_7c_27))))).
fof('thm.simpleSexp.sexp_distinct|split|4', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))))).
fof('thm.simpleSexp.sexp_distinct|split|5', axiom, ![V_27a_7c39_7c_27, V_27a_27]: ~ (s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_7c39_7c_27))))).
fof('thm.simpleSexp.sexp_case_cong', axiom, ![V_27A_27]: ![V_27f3_7c39_7c_27, V_27f2_7c39_7c_27, V_27f_7c49_7c_7c39_7c_27, V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: ((s('type.simpleSexp.sexp',V_27M_27) = s('type.simpleSexp.sexp',V_27M_7c39_7c_27) & (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (s('type.simpleSexp.sexp',V_27M_7c39_7c_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))) => s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('type.simpleSexp.sexp',V_27a_7c48_7c_27))),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))) = s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_7c39_7c_27),s('type.simpleSexp.sexp',V_27a_7c48_7c_27))),s('type.simpleSexp.sexp',V_27a_7c49_7c_27)))) & (![V_27a_27]: (s('type.simpleSexp.sexp',V_27M_7c39_7c_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('type.list.list'('type.string.char'),V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_7c39_7c_27),s('type.list.list'('type.string.char'),V_27a_27)))) & (![V_27a_27]: (s('type.simpleSexp.sexp',V_27M_7c39_7c_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_7c39_7c_27),s('type.num.num',V_27a_27)))) & ![V_27a_27]: (s('type.simpleSexp.sexp',V_27M_7c39_7c_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27),s('type.list.list'('type.string.char'),V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_7c39_7c_27),s('type.list.list'('type.string.char'),V_27a_27)))))))) => s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',V_27M_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27))) = s(V_27A_27,'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',V_27M_7c39_7c_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp',V_27A_27)),V_27f_7c39_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_7c39_7c_27),s('fun'('type.num.num',V_27A_27),V_27f2_7c39_7c_27),s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_7c39_7c_27))))).
fof('thm.simpleSexp.sexp_nchotomy', axiom, ![V_27ss_27]: (?[V_27s_27, V_27s_7c48_7c_27]: s('type.simpleSexp.sexp',V_27ss_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_27),s('type.simpleSexp.sexp',V_27s_7c48_7c_27))) | (?[V_27s_27]: s('type.simpleSexp.sexp',V_27ss_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27n_27]: s('type.simpleSexp.sexp',V_27ss_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))) | ?[V_27s_27]: s('type.simpleSexp.sexp',V_27ss_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('thm.simpleSexp.sexp_Axiom', axiom, ![V_27A_27]: ![V_27f_7c48_7c_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: ?[V_27fn_27]: (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),V_27fn_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))))) = s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)),'happ'(s('fun'('type.simpleSexp.sexp','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))),'happ'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)))),V_27f_7c48_7c_27),s('type.simpleSexp.sexp',V_27a_7c48_7c_27))),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))),s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),V_27fn_27),s('type.simpleSexp.sexp',V_27a_7c48_7c_27))))),s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),V_27fn_27),s('type.simpleSexp.sexp',V_27a_7c49_7c_27))))) & (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),V_27fn_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_7c49_7c_27),s('type.list.list'('type.string.char'),V_27a_27))) & (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),V_27fn_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),V_27f2_27),s('type.num.num',V_27a_27))) & ![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexp',V_27A_27),V_27fn_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f3_27),s('type.list.list'('type.string.char'),V_27a_27))))))).
fof('thm.simpleSexp.sexp_induction', axiom, ![V_27P_27]: ((![V_27s_27, V_27s_7c48_7c_27]: ((p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_27)))) & p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_7c48_7c_27))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_27),s('type.simpleSexp.sexp',V_27s_7c48_7c_27))))))) & (![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27)))))) & ![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))))))) => ![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_27)))))).
fof('thm.simpleSexp.valid_first_symchar_def', axiom, ![V_27c_27]: (p(s('bool','const.simpleSexp.valid_first_symchar_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.string.isGraph_1'(s('type.string.char',V_27c_27)))) & (~ (p(s('bool','const.bool.IN_2'(s('type.string.char',V_27c_27),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.EMPTY_0'))))))))))))))) & ~ (p(s('bool','const.string.isDigit_1'(s('type.string.char',V_27c_27))))))))).
fof('ARITY_0_1_const.simpleSexp.valid_symchar', axiom, ![VV0]: s('bool','happ'(s('fun'('type.string.char','bool'),'const.simpleSexp.valid_symchar_0'),s('type.string.char',VV0))) = s('bool','const.simpleSexp.valid_symchar_1'(s('type.string.char',VV0)))).
fof('thm.simpleSexp.valid_symchar_def', axiom, ![V_27c_27]: (p(s('bool','const.simpleSexp.valid_symchar_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.string.isGraph_1'(s('type.string.char',V_27c_27)))) & ~ (p(s('bool','const.bool.IN_2'(s('type.string.char',V_27c_27),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.INSERT_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('fun'('type.string.char','bool'),'const.pred_set.EMPTY_0')))))))))))))).
fof('thm.simpleSexp.valid_symbol_def|split|0', axiom, s('bool','const.simpleSexp.valid_symbol_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('bool','F_0')).
fof('thm.simpleSexp.valid_symbol_def|split|1', axiom, ![V_27c_27, V_27cs_27]: (p(s('bool','const.simpleSexp.valid_symbol_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27cs_27)))))) <=> (p(s('bool','const.simpleSexp.valid_first_symchar_1'(s('type.string.char',V_27c_27)))) & p(s('bool','const.list.EVERY_2'(s('fun'('type.string.char','bool'),'const.simpleSexp.valid_symchar_0'),s('type.list.list'('type.string.char'),V_27cs_27))))))).
fof('ARITY_0_1_const.simpleSexp.valid_sexp', axiom, ![VV0]: s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),'const.simpleSexp.valid_sexp_0'),s('type.simpleSexp.sexp',VV0))) = s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp',VV0)))).
fof('ARITY_0_1_const.simpleSexp.valid_symbol', axiom, ![VV0]: s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'const.simpleSexp.valid_symbol_0'),s('type.list.list'('type.string.char'),VV0))) = s('bool','const.simpleSexp.valid_symbol_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.simpleSexp.valid_sexp_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','bool'),'const.simpleSexp.valid_sexp_0') = s('fun'('type.simpleSexp.sexp','bool'),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'_dst_x01x10_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x011_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','bool'),'fun'('type.simpleSexp.sexp','bool')),'_dst_x01x10x00x00x00_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('fun'('type.list.list'('type.string.char'),'bool'),'fun'('fun'('type.num.num','bool'),'fun'('fun'('type.list.list'('type.string.char'),'bool'),'bool'))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('fun'('type.simpleSexp.sexp','bool'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x111_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('fun'('type.simpleSexp.sexp','bool'),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','bool'),'fun'('type.simpleSexp.sexp','bool')),'_i_0_0'),s('fun'('fun'('type.simpleSexp.sexp','bool'),'fun'('type.simpleSexp.sexp','bool')),'_i_0_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.simpleSexp.valid_symbol_0'))),s('fun'('type.num.num','bool'),'_dst_x0_1'(s('bool','happ'(s('fun'('bool','bool'),'const.combin.I_0'),s('bool','T_0'))))),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.list.EVERY_1'(s('fun'('type.string.char','bool'),'const.string.isPrint_0')))))))))).
fof('thm.simpleSexp.simpleSexp_23_prove_ltb', axiom, ![V_27a_27]: ((?[V_27s_7c49_7c_27, V_27s2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27),s('type.simpleSexp.sexp',V_27s2_27))) | (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) => (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))) | (?[V_27s_7c49_7c_27, V_27s2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27),s('type.simpleSexp.sexp',V_27s2_27))) | (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))) | ?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27)))))))).
fof('thm.simpleSexp.valid_sexp_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & (![V_27s_7c49_7c_27, V_27s2_27]: ((p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s2_27))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27),s('type.simpleSexp.sexp',V_27s2_27))))))) & (![V_27s_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27)))))) & ![V_27v3_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.simpleSexp.valid_sexp_def|split|0', axiom, ![V_27s_27]: s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('bool','const.simpleSexp.valid_symbol_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.simpleSexp.valid_sexp_def|split|1', axiom, ![V_27s2_27, V_27s_7c49_7c_27]: (p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27),s('type.simpleSexp.sexp',V_27s2_27)))))) <=> (p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27)))) & p(s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp',V_27s2_27))))))).
fof('thm.simpleSexp.valid_sexp_def|split|2', axiom, ![V_27s_27]: s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('bool','const.list.EVERY_2'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.simpleSexp.valid_sexp_def|split|3', axiom, ![V_27v3_27]: s('bool','const.simpleSexp.valid_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('bool','T_0')).
fof('thm.simpleSexp.destSXNUM_def', axiom, ![V_27n_27]: s('type.num.num','const.simpleSexp.destSXNUM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27n_27))))) = s('type.num.num',V_27n_27)).
fof('thm.simpleSexp.destSXSYM_def', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.simpleSexp.destSXSYM_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.list.list'('type.string.char'),V_27s_27)).
fof('thm.simpleSexp.destSXCONS_def', axiom, ![V_27a_27, V_27d_27]: s('type.pair.prod'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.simpleSexp.destSXCONS_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp',V_27d_27))))) = s('type.pair.prod'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'const.pair.,_2'(s('type.simpleSexp.sexp',V_27a_27),s('type.simpleSexp.sexp',V_27d_27)))).
fof('ARITY_0_1_const.simpleSexp.strip_sxcons', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.strip_sxcons_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.simpleSexp.strip_sxcons_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.strip_sxcons_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x0111x1101_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x100x011_3'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'=_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))),s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_dst_x101x010_2'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool'))),'_i_0_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'))))))))))))))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.combin.I_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'_dst_x01x10x00x00x00_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.num.num','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))))),'_dst_x000x010x101_3'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'const.option.OPTION_MAP_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'_i_0_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1x0x0_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))),s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0'))),s('fun'('type.num.num','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0')))))))))).
fof('thm.simpleSexp.simpleSexp_3|48|_prove_ltb', axiom, ![V_27a_27]: (?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp',V_27s_27) => ?[V_27s_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp',V_27s_27))).
fof('thm.simpleSexp.strip_sxcons_ind', axiom, ![V_27P_27]: (![V_27s_27]: (![V_27h_27, V_27t_27]: (s('type.simpleSexp.sexp',V_27s_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27h_27),s('type.simpleSexp.sexp',V_27t_27))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27t_27))))) => p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27s_27))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.simpleSexp.strip_sxcons_def', axiom, ![V_27s_27]: s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.strip_sxcons_0'),s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',V_27s_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp')),'fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.list.list'('type.simpleSexp.sexp')))),'const.option.OPTION_MAP_0'),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.simpleSexp.sexp'),'type.list.list'('type.simpleSexp.sexp'))),'const.list.CONS_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.strip_sxcons_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'_dst_x0x1x0x0_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'=_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),'const.list.NIL_0'))),s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0'))),s('fun'('type.num.num','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.NONE_0')))))).
fof('thm.simpleSexp.sxMEM_def', axiom, ![V_27e_27, V_27s_27]: (p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27e_27),s('type.simpleSexp.sexp',V_27s_27)))) <=> ?[V_27l_27]: (s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27s_27))) = s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.option.SOME_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))) & p(s('bool','const.bool.IN_2'(s('type.simpleSexp.sexp',V_27e_27),s('fun'('type.simpleSexp.sexp','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.simpleSexp.sexp'),V_27l_27))))))))).
fof('thm.simpleSexp.sxMEM_sizelt', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: (p(s('bool','const.simpleSexp.sxMEM_2'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27),s('type.simpleSexp.sexp',V_27s2_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp',V_27s_7c49_7c_27))),s('type.num.num','const.simpleSexp.sexp_size_1'(s('type.simpleSexp.sexp',V_27s2_27)))))))).
fof('ARITY_0_1_const.simpleSexp.dstrip_sexp', axiom, ![VV0]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0'),s('type.simpleSexp.sexp',VV0))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp',VV0)))).
fof('thm.simpleSexp.dstrip_sexp_primitive_def', axiom, s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.simpleSexp.dstrip_sexp_0') = s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.relation.WFREC_2'(s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'const.min.@_1'(s('fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x1x0x0x0x0_5'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.combin.I_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x10x00x01x00x00_6'(s('fun'('type.simpleSexp.sexp','fun'('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))))))),'const.simpleSexp.sexp_CASE_0'),s('fun'('type.simpleSexp.sexp','type.simpleSexp.sexp'),'_i_0_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))))),s('fun'('type.simpleSexp.sexp','fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x00x01x10_3'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'const.option.OPTION_MAP_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'),s('fun'('type.simpleSexp.sexp','type.option.option'('type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.strip_sxcons_0'))),s('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))))),s('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.combin.I_0'),s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')))))))))))).
fof('thm.simpleSexp.simpleSexp_36_prove_ltb', axiom, ![V_27a_27]: ((?[V_27sym_27, V_27args_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27sym_27),s('type.simpleSexp.sexp',V_27args_27))) | (?[V_27v2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))) => (?[V_27sym_27, V_27args_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27sym_27),s('type.simpleSexp.sexp',V_27args_27))) | (?[V_27v2_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))) | (?[V_27v3_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))) | ?[V_27v4_27]: s('type.simpleSexp.sexp',V_27a_27) = s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27)))))))).
fof('thm.simpleSexp.dstrip_sexp_ind', axiom, ![V_27P_27]: ((![V_27sym_27, V_27args_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27sym_27),s('type.simpleSexp.sexp',V_27args_27)))))) & (![V_27v2_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27)))))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27)))))) & ![V_27v4_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexp','bool'),V_27P_27),s('type.simpleSexp.sexp',V_27v_27)))))).
fof('thm.simpleSexp.dstrip_sexp_def|split|0', axiom, ![V_27sym_27, V_27args_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_CONS_2'(s('type.simpleSexp.sexp',V_27sym_27),s('type.simpleSexp.sexp',V_27args_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.sexp_CASE_5'(s('type.simpleSexp.sexp',V_27sym_27),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'_dst_x0_1'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'fun'('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))))),'const.option.OPTION_MAP_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.simpleSexp.sexp'),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'const.pair.,_0'),s('type.option.option'('type.list.list'('type.simpleSexp.sexp')),'const.simpleSexp.strip_sxcons_1'(s('type.simpleSexp.sexp',V_27args_27))))),s('fun'('type.num.num','type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0'))),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')))))).
fof('thm.simpleSexp.dstrip_sexp_def|split|1', axiom, ![V_27v2_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),V_27v2_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')).
fof('thm.simpleSexp.dstrip_sexp_def|split|2', axiom, ![V_27v3_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_NUM_1'(s('type.num.num',V_27v3_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')).
fof('thm.simpleSexp.dstrip_sexp_def|split|3', axiom, ![V_27v4_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.simpleSexp.dstrip_sexp_1'(s('type.simpleSexp.sexp','const.simpleSexp.SX_STR_1'(s('type.list.list'('type.string.char'),V_27v4_27))))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.simpleSexp.sexp'))),'const.option.NONE_0')).
fof('thm.simpleSexp.simpleSexp_39_prove_ltb', axiom, ?[V_27n_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))).
fof('thm.simpleSexp.sexpNT_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.simpleSexp.sexpNT','type.num.num'),V_27rep_27))))).
fof('thm.simpleSexp.sexpNT_BIJ|split|0', axiom, ![V_27a_27]: s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27a_27))))) = s('type.simpleSexp.sexpNT',V_27a_27)).
fof('thm.simpleSexp.sexpNT_BIJ|split|1', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num',V_27r_27))))) = s('type.num.num',V_27r_27))).
fof('thm.simpleSexp.sexpNT2num_num2sexpNT', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num',V_27r_27))))) = s('type.num.num',V_27r_27))).
fof('thm.simpleSexp.num2sexpNT_|49||49|', axiom, ![V_27r_27, V_27r_7c39_7c_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) => (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_7c39_7c_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) => (s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num',V_27r_27))) = s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num',V_27r_7c39_7c_27))) <=> s('type.num.num',V_27r_27) = s('type.num.num',V_27r_7c39_7c_27))))).
fof('thm.simpleSexp.sexpNT2num_|49||49|', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27a_27))) = s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27a_7c39_7c_27))) <=> s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT',V_27a_7c39_7c_27))).
fof('thm.simpleSexp.num2sexpNT_ONTO', axiom, ![V_27a_27]: ?[V_27r_27]: (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num',V_27r_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.simpleSexp.sexpNT2num_ONTO', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) <=> ?[V_27a_27]: s('type.num.num',V_27r_27) = s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27a_27))))).
fof('thm.simpleSexp.num2sexpNT_thm|split|0', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.num.|48|_0'))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|1', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|2', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|3', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|4', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|5', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|6', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|7', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|8', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|9', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|10', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|11', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|12', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|13', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|14', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|15', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|16', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0')).
fof('thm.simpleSexp.num2sexpNT_thm|split|17', axiom, s('type.simpleSexp.sexpNT','const.simpleSexp.num2sexpNT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0')).
fof('thm.simpleSexp.sexpNT2num_thm|split|0', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.simpleSexp.sexpNT2num_thm|split|1', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|2', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|3', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|4', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|5', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|6', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|7', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|8', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|9', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|10', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|11', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|12', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|13', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|14', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|15', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|16', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.simpleSexp.sexpNT2num_thm|split|17', axiom, s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.simpleSexp.sexpNT_EQ_sexpNT', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT',V_27a_7c39_7c_27) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27a_27))) = s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27a_7c39_7c_27))))).
fof('thm.simpleSexp.sexpNT_size_def', axiom, ![V_27x_27]: s('type.num.num','const.simpleSexp.sexpNT_size_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.num.|48|_0')).
fof('thm.simpleSexp.sexpNT_CASE', axiom, ![V_27A_27]: ![V_27x_27, V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & ?[Vv_27_27_27]: ((p(s('bool',Vv_27_27_27)) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & ?[Vv_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27)) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) & ?[Vv_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27)) <=> s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT',V_27x_27),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,'const.bool.COND_3'(s('bool',Vv_27_27_27_27_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27))))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(V_27A_27,'const.bool.COND_3'(s('bool',Vv_27_27_27_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s(V_27A_27,V_27v5_27),s(V_27A_27,'const.bool.COND_3'(s('bool',Vv_27_27_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27))))))))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(V_27A_27,V_27v8_27),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(V_27A_27,V_27v9_27),s(V_27A_27,'const.bool.COND_3'(s('bool',Vv_27_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27))))))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s(V_27A_27,'const.bool.COND_3'(s('bool',Vv_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27))),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num','const.simpleSexp.sexpNT2num_1'(s('type.simpleSexp.sexpNT',V_27x_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,'const.bool.COND_3'(s('bool',Vv),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27)))))))))))))))))))).
fof('thm.simpleSexp.sexpNT_case_def|split|0', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c48_7c_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|1', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|2', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v2_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|3', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v3_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|4', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v4_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|5', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v5_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|6', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v6_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|7', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v7_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|8', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v8_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|9', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v9_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|10', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c_7c48_7c_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|11', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c_7c49_7c_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|12', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c2_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|13', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c3_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|14', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c4_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|15', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c5_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|16', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c6_27)).
fof('thm.simpleSexp.sexpNT_case_def|split|17', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,V_27v_7c49_7c7_27)).
fof('thm.simpleSexp.datatype_sexpNT', axiom, ![V_27sexpNT_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool'))))))))))))))))),'happ'(s('fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','fun'('type.simpleSexp.sexpNT','bool')))))))))))))))))),V_27sexpNT_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))))))).
fof('thm.simpleSexp.sexpNT_case_cong', axiom, ![V_27A_27]: ![V_27v9_7c39_7c_27, V_27v8_7c39_7c_27, V_27v7_7c39_7c_27, V_27v6_7c39_7c_27, V_27v5_7c39_7c_27, V_27v4_7c39_7c_27, V_27v3_7c39_7c_27, V_27v2_7c39_7c_27, V_27v_7c49_7c7_7c39_7c_27, V_27v_7c49_7c6_7c39_7c_27, V_27v_7c49_7c5_7c39_7c_27, V_27v_7c49_7c4_7c39_7c_27, V_27v_7c49_7c3_7c39_7c_27, V_27v_7c49_7c2_7c39_7c_27, V_27v_7c49_7c_7c49_7c_7c39_7c_27, V_27v_7c49_7c_7c48_7c_7c39_7c_27, V_27v_7c49_7c_7c39_7c_27, V_27v_7c48_7c_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27v_7c48_7c_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27, V_27v6_27, V_27v7_27, V_27v8_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27, V_27v_7c49_7c3_27, V_27v_7c49_7c4_27, V_27v_7c49_7c5_27, V_27v_7c49_7c6_27, V_27v_7c49_7c7_27]: ((s('type.simpleSexp.sexpNT',V_27M_27) = s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0') => s(V_27A_27,V_27v_7c48_7c_27) = s(V_27A_27,V_27v_7c48_7c_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0') => s(V_27A_27,V_27v_7c49_7c_27) = s(V_27A_27,V_27v_7c49_7c_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0') => s(V_27A_27,V_27v2_27) = s(V_27A_27,V_27v2_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0') => s(V_27A_27,V_27v3_27) = s(V_27A_27,V_27v3_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0') => s(V_27A_27,V_27v4_27) = s(V_27A_27,V_27v4_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0') => s(V_27A_27,V_27v5_27) = s(V_27A_27,V_27v5_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0') => s(V_27A_27,V_27v6_27) = s(V_27A_27,V_27v6_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0') => s(V_27A_27,V_27v7_27) = s(V_27A_27,V_27v7_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0') => s(V_27A_27,V_27v8_27) = s(V_27A_27,V_27v8_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0') => s(V_27A_27,V_27v9_27) = s(V_27A_27,V_27v9_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0') => s(V_27A_27,V_27v_7c49_7c_7c48_7c_27) = s(V_27A_27,V_27v_7c49_7c_7c48_7c_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0') => s(V_27A_27,V_27v_7c49_7c_7c49_7c_27) = s(V_27A_27,V_27v_7c49_7c_7c49_7c_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0') => s(V_27A_27,V_27v_7c49_7c2_27) = s(V_27A_27,V_27v_7c49_7c2_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0') => s(V_27A_27,V_27v_7c49_7c3_27) = s(V_27A_27,V_27v_7c49_7c3_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0') => s(V_27A_27,V_27v_7c49_7c4_27) = s(V_27A_27,V_27v_7c49_7c4_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0') => s(V_27A_27,V_27v_7c49_7c5_27) = s(V_27A_27,V_27v_7c49_7c5_7c39_7c_27)) & ((s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0') => s(V_27A_27,V_27v_7c49_7c6_27) = s(V_27A_27,V_27v_7c49_7c6_7c39_7c_27)) & (s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0') => s(V_27A_27,V_27v_7c49_7c7_27) = s(V_27A_27,V_27v_7c49_7c7_7c39_7c_27)))))))))))))))))))) => s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT',V_27M_27),s(V_27A_27,V_27v_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_27),s(V_27A_27,V_27v2_27),s(V_27A_27,V_27v3_27),s(V_27A_27,V_27v4_27),s(V_27A_27,V_27v5_27),s(V_27A_27,V_27v6_27),s(V_27A_27,V_27v7_27),s(V_27A_27,V_27v8_27),s(V_27A_27,V_27v9_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_27),s(V_27A_27,V_27v_7c49_7c2_27),s(V_27A_27,V_27v_7c49_7c3_27),s(V_27A_27,V_27v_7c49_7c4_27),s(V_27A_27,V_27v_7c49_7c5_27),s(V_27A_27,V_27v_7c49_7c6_27),s(V_27A_27,V_27v_7c49_7c7_27))) = s(V_27A_27,'const.simpleSexp.sexpNT_CASE_19'(s('type.simpleSexp.sexpNT',V_27M_7c39_7c_27),s(V_27A_27,V_27v_7c48_7c_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_7c39_7c_27),s(V_27A_27,V_27v2_7c39_7c_27),s(V_27A_27,V_27v3_7c39_7c_27),s(V_27A_27,V_27v4_7c39_7c_27),s(V_27A_27,V_27v5_7c39_7c_27),s(V_27A_27,V_27v6_7c39_7c_27),s(V_27A_27,V_27v7_7c39_7c_27),s(V_27A_27,V_27v8_7c39_7c_27),s(V_27A_27,V_27v9_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_7c48_7c_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c_7c49_7c_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c2_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c3_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c4_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c5_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c6_7c39_7c_27),s(V_27A_27,V_27v_7c49_7c7_7c39_7c_27))))).
fof('thm.simpleSexp.sexpNT_nchotomy', axiom, ![V_27a_27]: (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0') | (s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0') | s('type.simpleSexp.sexpNT',V_27a_27) = s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))))))))))))))))))).
fof('thm.simpleSexp.sexpNT_Axiom', axiom, ![V_27A_27]: ![V_27x_7c48_7c_27, V_27x_7c49_7c_27, V_27x2_27, V_27x3_27, V_27x4_27, V_27x5_27, V_27x6_27, V_27x7_27, V_27x8_27, V_27x9_27, V_27x_7c49_7c_7c48_7c_27, V_27x_7c49_7c_7c49_7c_27, V_27x_7c49_7c2_27, V_27x_7c49_7c3_27, V_27x_7c49_7c4_27, V_27x_7c49_7c5_27, V_27x_7c49_7c6_27, V_27x_7c49_7c7_27]: ?[V_27f_27]: (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))) = s(V_27A_27,V_27x_7c48_7c_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))) = s(V_27A_27,V_27x_7c49_7c_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))) = s(V_27A_27,V_27x2_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))) = s(V_27A_27,V_27x3_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))) = s(V_27A_27,V_27x4_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))) = s(V_27A_27,V_27x5_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))) = s(V_27A_27,V_27x6_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))) = s(V_27A_27,V_27x7_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))) = s(V_27A_27,V_27x8_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))) = s(V_27A_27,V_27x9_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))) = s(V_27A_27,V_27x_7c49_7c_7c48_7c_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))) = s(V_27A_27,V_27x_7c49_7c_7c49_7c_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))) = s(V_27A_27,V_27x_7c49_7c2_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))) = s(V_27A_27,V_27x_7c49_7c3_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))) = s(V_27A_27,V_27x_7c49_7c4_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))) = s(V_27A_27,V_27x_7c49_7c5_27) & (s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))) = s(V_27A_27,V_27x_7c49_7c6_27) & s(V_27A_27,'happ'(s('fun'('type.simpleSexp.sexpNT',V_27A_27),V_27f_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))) = s(V_27A_27,V_27x_7c49_7c7_27))))))))))))))))))).
fof('thm.simpleSexp.sexpNT_induction', axiom, ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0')))) & (p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0')))) & p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))))))))))))))))))) => ![V_27a_27]: p(s('bool','happ'(s('fun'('type.simpleSexp.sexpNT','bool'),V_27P_27),s('type.simpleSexp.sexpNT',V_27a_27)))))).
fof('ARITY_0_1_const.simpleSexp.valid_first_symchar', axiom, ![VV0]: s('bool','happ'(s('fun'('type.string.char','bool'),'const.simpleSexp.valid_first_symchar_0'),s('type.string.char',VV0))) = s('bool','const.simpleSexp.valid_first_symchar_1'(s('type.string.char',VV0)))).
fof('thm.simpleSexp.sexpG_def', axiom, s('type.grammar.grammar'('type.string.char','type.simpleSexp.sexpNT'),'const.simpleSexp.sexpG_0') = s('type.grammar.grammar'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.grammar_start_fupd_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.combin.K_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))),s('type.grammar.grammar'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.grammar_rules_fupd_2'(s('fun'('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'const.combin.K_1'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FUPDATE_2'(s('type.finite_map.fmap'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'const.finite_map.FEMPTY_0'),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.string.char','bool'),'const.string.isSpace_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.string.char','bool'),'const.string.isDigit_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('fun'('type.string.char','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.string.char','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.string.char','bool'),'_dst_x1x0_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'happ'(s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.string.char','bool'),'const.simpleSexp.valid_first_symchar_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.UNION_2'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'happ'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'happ'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.NT_1'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))))),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.INSERT_2'(s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.EMPTY_0'))))))))),s('type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'happ'(s('fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'happ'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'type.pair.prod'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'const.pair.,_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))))),s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'const.pred_set.GSPEC_1'(s('fun'('type.string.char','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'fun'('bool','type.pair.prod'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'const.pair.,_0'),s('fun'('type.string.char','type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x0x1x0_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'),s('fun'('type.string.char','type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.grammar.TOK_0'),s('type.list.list'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.string.char','bool'),'const.simpleSexp.valid_symchar_0'))))))))))),s('type.grammar.grammar'('type.string.char','type.simpleSexp.sexpNT'),'const.bool.ARB_0')))))).
fof('thm.simpleSexp.ptree_digit_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'happ'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))))))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.grammar.destTOK_0'),s('fun'('type.string.char','type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.string.char','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'const.option.NONE_0')))))))))))))))))))).
fof('thm.simpleSexp.simpleSexp_79_prove_ltb', axiom, ![V_27a_27]: ((?[V_27v_7c48_7c_27]: s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))) | ?[V_27ntm_27, V_27args_27]: s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))) => (?[V_27v_7c48_7c_27]: s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))) | ?[V_27ntm_27, V_27args_27]: s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))).
fof('thm.simpleSexp.ptree_digit_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & ![V_27ntm_27, V_27args_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_27)))))).
fof('ARITY_0_1_const.simpleSexp.ptree_digit', axiom, ![VV0]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.num.num'),'const.simpleSexp.ptree_digit_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_digit_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.num.num'),'const.simpleSexp.ptree_digit_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_digit_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_digit_0'))))) & s('type.option.option'('type.num.num'),'const.simpleSexp.ptree_digit_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.num.num'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.option.option'('type.num.num'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.grammar.destTOK_0'),s('fun'('type.string.char','type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.string.char','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'const.option.NONE_0'))))))))))))).
fof('_dst_x0000000x1111111x1110000_ax', axiom, ![VA,VA4,VA5,VA6,VA7,VA8,VA2,VA3,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1111111x1110000_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA9))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x111111x110000_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA9)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA9))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x01111111x11110000_ax', axiom, ![VA,VA5,VA6,VA7,VA8,VA9,VA2,VA3,VA4,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x01111111x11110000_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA10)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1111111x1110000_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA9))))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA10))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA10)))),V__1),s(VA1,V__z)))))).
fof('thm.simpleSexp.ptree_sexpnum_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_sexpnum_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.num.num','bool')))))))),'_dst_x00000000x01111111x11110000_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.num.num','bool'))))))),'_dst_x0000000x0100000x1011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.num.num','bool')))))),'_dst_x000000x111000x001111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.num.num','bool')))),'_dst_x0000x1110x0111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.num.num','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num'))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'happ'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')),'const.combin.I_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')))),'_dst_x001x010x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')))),'_dst_x000x001x110_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.num.num','type.option.option'('type.num.num')))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x00x11_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x01x10_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'const.option.NONE_0')))))))))))))))))))).
fof('thm.simpleSexp.ptree_sexpnum_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & ![V_27ntm_27, V_27args_27]: (![V_27d_27, V_27v3_27, V_27d_7c39_7c_27, V_27v7_27, V_27dn_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27d_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27d_7c39_7c_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & s('type.option.option'('type.num.num'),'const.simpleSexp.ptree_digit_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27d_7c39_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27dn_27))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27d_27))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_27)))))).
fof('ARITY_0_1_const.simpleSexp.ptree_sexpnum', axiom, ![VV0]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_sexpnum_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.num.num'),'const.simpleSexp.ptree_sexpnum_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_sexpnum_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.num.num'),'const.simpleSexp.ptree_sexpnum_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_sexpnum_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpnum_0'))))) & s('type.option.option'('type.num.num'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_sexpnum_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.num.num'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('type.option.option'('type.num.num'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x01x10x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'type.option.option'('type.num.num')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num'))),'_dst_x00x01x10_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_digit_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_sexpnum_0'),s('fun'('type.num.num','fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x00x11_2'(s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x01x10_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.num.num')),'_dst_x0_1'(s('type.option.option'('type.num.num'),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_WS_primitive_def', axiom, ![V_27A_27]: s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_WS_0') = s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'_dst_x0_1'(s('type.option.option'('type.one.one'),'happ'(s('fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one')),'const.combin.I_0'),s('type.option.option'('type.one.one'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))))))),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x0_1'(s('type.option.option'('type.one.one'),'const.option.NONE_0')))))))))))))))))))))).
fof('thm.simpleSexp.simpleSexp_87_prove_ltb', axiom, ![V_27A_27]: ![V_27a_27]: ((?[V_27v_7c48_7c_27]: s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))) | ?[V_27ntm_27, V_27args_27]: s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27)))) => (?[V_27v_7c48_7c_27]: s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))) | ?[V_27ntm_27, V_27args_27]: s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27a_27) = s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27)))))).
fof('thm.simpleSexp.ptree_WS_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & ![V_27ntm_27, V_27args_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_27)))))).
fof('ARITY_0_1_const.simpleSexp.ptree_WS', axiom, ![V_27A_27]: ![VV0]: s('type.option.option'('type.one.one'),'happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_WS_0'),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.one.one'),'const.simpleSexp.ptree_WS_1'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_WS_def|split|0', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27]: s('type.option.option'('type.one.one'),'const.simpleSexp.ptree_WS_1'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.one.one'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_WS_def|split|1', axiom, ![V_27A_27]: ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WS_0'))))) & s('type.option.option'('type.one.one'),'const.simpleSexp.ptree_WS_1'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.one.one'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('type.option.option'('type.one.one'),'happ'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')),'happ'(s('fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.one.one'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x0_1'(s('type.option.option'('type.one.one'),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_grabWS_primitive_def', axiom, ![V_27A_27]: s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0') = s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x0111111x1110010_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool')))))),'_dst_x000000x010000x101111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11100x00111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x111x001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))))),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'))),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one'))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'_dst_x0_1'(s('type.option.option'('type.one.one'),'happ'(s('fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one')),'const.combin.I_0'),s('type.option.option'('type.one.one'),'const.option.NONE_0'))))),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one')),'const.combin.I_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))))),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')))),'_dst_x000x010x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_WS_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one'))),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one'))),'_i_0_0'),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))))),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x0_1'(s('type.option.option'('type.one.one'),'const.option.NONE_0')))))))))))))))))))).
fof('thm.simpleSexp.ptree_grabWS_ind', axiom, ![V_27A_27]: ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & ![V_27ntm_27, V_27args_27]: (![V_27w_27, V_27v3_27, V_27g_27, V_27v7_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))) & (s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27g_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27v7_27))) & s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'const.list.NIL_0')))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27g_27))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27)))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_27)))))).
fof('ARITY_0_1_const.simpleSexp.ptree_grabWS', axiom, ![V_27A_27]: ![VV0]: s('type.option.option'('type.one.one'),'happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.one.one'),'const.simpleSexp.ptree_grabWS_1'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_grabWS_def|split|0', axiom, ![V_27A_27]: ![V_27v_7c48_7c_27]: s('type.option.option'('type.one.one'),'const.simpleSexp.ptree_grabWS_1'(s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,'type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.one.one'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_grabWS_def|split|1', axiom, ![V_27A_27]: ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_grabWS_0'))))) & s('type.option.option'('type.one.one'),'happ'(s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.one.one'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('type.option.option'('type.one.one'),'happ'(s('fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')),'happ'(s('fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.one.one'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('type.option.option'('type.one.one'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.one.one'),'fun'('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'type.option.option'('type.one.one')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_WS_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'type.option.option'('type.one.one'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))))),s('fun'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'(V_27A_27,'type.simpleSexp.sexpNT')),'type.option.option'('type.one.one')),'_dst_x0_1'(s('type.option.option'('type.one.one'),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_normstrchar_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_normstrchar_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))))))),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0')))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_normstrchar', axiom, ![VV0]: s('type.option.option'('type.string.char'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_normstrchar_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_normstrchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_normstrchar_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_normstrchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.string.char'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_normstrchar_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_normstrchar_0'))))) & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_normstrchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('type.option.option'('type.string.char'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))))))))).
fof('thm.simpleSexp.ptree_escapablechar_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapablechar_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))))))),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0')))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_escapablechar', axiom, ![VV0]: s('type.option.option'('type.string.char'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapablechar_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_escapablechar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_escapablechar_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_escapablechar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.string.char'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_escapablechar_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapablechar_0'))))) & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_escapablechar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('type.option.option'('type.string.char'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))))))))).
fof('thm.simpleSexp.ptree_escapedstrchar_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapedstrchar_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))))))),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapablechar_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0')))))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_escapedstrchar', axiom, ![VV0]: s('type.option.option'('type.string.char'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapedstrchar_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_escapedstrchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_escapedstrchar_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_escapedstrchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.string.char'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_escapedstrchar_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_escapedstrchar_0'))))) & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_escapedstrchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char'))),'happ'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('bool',Vv))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('type.option.option'('type.string.char'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapablechar_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_strchar_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_strchar_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))))))),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_normstrchar_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapedstrchar_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0')))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_strchar', axiom, ![VV0]: s('type.option.option'('type.string.char'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_strchar_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_strchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_strchar_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_strchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.string.char'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_strchar_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strchar_0'))))) & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_strchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('type.option.option'('type.string.char'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_normstrchar_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_escapedstrchar_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))))))))).
fof('thm.simpleSexp.ptree_strcontents_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_strcontents_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool')))))))),'_dst_x00000000x01111111x11100100_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool'))))))),'_dst_x0000000x0100000x1011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool')))))),'_dst_x000000x111000x011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool'))))),'_dst_x00000x01110x10011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'bool')),'=_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_strchar_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'))))))))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x101_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_strchar_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_i_0_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')))))))))))))))))))).
fof('thm.simpleSexp.ptree_strcontents_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & ![V_27ntm_27, V_27args_27]: (![V_27sc_27, V_27v3_27, V_27ss_27, V_27v7_27, V_27c_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27sc_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27ss_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_strchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27sc_27))) = s('type.option.option'('type.string.char'),'const.option.SOME_1'(s('type.string.char',V_27c_27))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27ss_27))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_27)))))).
fof('ARITY_0_1_const.simpleSexp.ptree_strcontents', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_strcontents_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_strcontents_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_strcontents_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_strcontents_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_strcontents_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_strcontents_0'))))) & s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_strcontents_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_strchar_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_strcontents_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_sexpstr_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpstr_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))))))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x101x010x000_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_strcontents_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')))))))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_sexpstr', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpstr_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_sexpstr_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_sexpstr_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_sexpstr_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_sexpstr_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpstr_0'))))) & s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_sexpstr_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('bool',Vv))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x101x010x000_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_strcontents_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))))))))))))).
fof('thm.simpleSexp.ptree_first_symchar_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_first_symchar_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))))))),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0')))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_first_symchar', axiom, ![VV0]: s('type.option.option'('type.string.char'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_first_symchar_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_first_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_first_symchar_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_first_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.string.char'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_first_symchar_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_first_symchar_0'))))) & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_first_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('type.option.option'('type.string.char'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))))))))).
fof('thm.simpleSexp.ptree_symchar_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_symchar_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'happ'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'type.option.option'('type.string.char')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))))))),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0')))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_symchar', axiom, ![VV0]: s('type.option.option'('type.string.char'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_symchar_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_symchar_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.string.char'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_symchar_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchar_0'))))) & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.string.char'),'const.option.NONE_0'),s('type.option.option'('type.string.char'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')),'happ'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.string.char'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char'))),'_dst_x01x10x00_3'(s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.string.char','type.option.option'('type.string.char')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'type.option.option'('type.string.char')))),'const.grammar.symbol_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','type.option.option'('type.string.char'))),'_dst_x00x10x01x00_4'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.string.char'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'type.option.option'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.string.char')),'_dst_x0_1'(s('type.option.option'('type.string.char'),'const.option.NONE_0'))))))))))))).
fof('thm.simpleSexp.ptree_symchars_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_symchars_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.string.char','bool'),'bool'),'!_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool')))))))),'_dst_x00000000x01111111x11100100_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool'))))))),'_dst_x0000000x0100000x1011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool')))))),'_dst_x000000x111000x011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool'))))),'_dst_x00000x01110x10011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.string.char','bool'))),'_dst_x000x010x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','bool')),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.string.char'),'fun'('type.option.option'('type.string.char'),'bool')),'=_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_symchar_0'),s('fun'('type.string.char','type.option.option'('type.string.char')),'const.option.SOME_0'))))))))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x1001x0110_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_i_0_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x010x101_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_symchar_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_i_0_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')))))))))))))))))))).
fof('thm.simpleSexp.ptree_symchars_ind', axiom, ![V_27P_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & ![V_27ntm_27, V_27args_27]: (![V_27f_27, V_27v3_27, V_27s_27, V_27v7_27, V_27c_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27f_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & s('type.option.option'('type.string.char'),'const.simpleSexp.ptree_symchar_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27f_27))) = s('type.option.option'('type.string.char'),'const.option.SOME_1'(s('type.string.char',V_27c_27))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_27)))))).
fof('ARITY_0_1_const.simpleSexp.ptree_symchars', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_symchars_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_symchars_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_symchars_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_symchars_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_symchars_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_symchars_0'))))) & s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_symchars_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_symchar_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_symchars_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_sexpsym_primitive_def', axiom, s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpsym_0') = s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.relation.WFREC_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'const.min.@_1'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))),'const.combin.I_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('type.option.option'('type.list.list'('type.string.char')),'type.option.option'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))))))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_first_symchar_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_symchars_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')))))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_sexpsym', axiom, ![VV0]: s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpsym_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_sexpsym_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_sexpsym_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_sexpsym_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_sexpsym_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpsym_0'))))) & s('type.option.option'('type.list.list'('type.string.char')),'const.simpleSexp.ptree_sexpsym_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.list.list'('type.string.char')),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('type.option.option'('type.list.list'('type.string.char')),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char')))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'type.option.option'('type.list.list'('type.string.char'))))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.string.char'),'fun'('fun'('type.string.char','type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.string.char')),'const.simpleSexp.ptree_first_symchar_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.string.char','type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'type.option.option'('type.list.list'('type.string.char')))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_symchars_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.list.list'('type.string.char'))),'const.option.SOME_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char')))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.list.list'('type.string.char'))),'_dst_x0_1'(s('type.option.option'('type.list.list'('type.string.char')),'const.option.NONE_0'))))))))))))))).
fof('_dst_x0000x0101x1010x0000_ax', axiom, ![VA,VA2,VA4,VA5,VA3,VA6,VA1,VA7]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0101x1010x0000_4'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA2,'fun'(VA4,VA5)),V__0),s('fun'(VA1,'fun'(VA3,VA6)),V__1),s(VA7,V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x101x010x000_4'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA2,'fun'(VA4,VA5)),V__0),s('fun'(VA3,VA6),'happ'(s('fun'(VA1,'fun'(VA3,VA6)),V__1),s(VA1,V__z))),s(VA7,V__2)))).
fof('_dst_x00000x10101x01010x00000_ax', axiom, ![VA,VA3,VA5,VA6,VA1,VA2,VA4,VA7,VA8]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x10101x01010x00000_4'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA6))),V__0),s('fun'(VA2,'fun'(VA4,VA7)),V__1),s(VA8,V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0101x1010x0000_4'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,VA))),V__x),s('fun'(VA3,'fun'(VA5,VA6)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA6))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA4,VA7)),V__1),s(VA8,V__2)))).
fof('_dst_x000000x010101x101010x000000_ax', axiom, ![VA,VA2,VA4,VA6,VA7,VA3,VA5,VA8,VA1,VA9]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x010101x101010x000000_4'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,VA))),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA6,VA7))),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA8))),V__1),s(VA9,V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x10101x01010x00000_4'(s('fun'(VA7,'fun'(VA8,'fun'(VA9,VA))),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA6,VA7))),V__0),s('fun'(VA3,'fun'(VA5,VA8)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA5,VA8))),V__1),s(VA1,V__z))),s(VA9,V__2)))).
fof('thm.simpleSexp.ptree_sexp_UNION_AUX_def', axiom, ![V_27R_27]: s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_UNION_aux_1'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),V_27R_27))) = s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'const.relation.WFREC_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),V_27R_27),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x001x110_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x010x101_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_0'))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x010x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpsym_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_SYM_0'))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_sexpnum_0'),s('fun'('type.num.num','type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpstr_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_STR_0'))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))),'_dst_x0001x1110x1110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x010x101x000_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))))),'_dst_x00001x00000x11110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))))),'_dst_x000001x111110x111110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))))),'_dst_x00000x01001x10110x00000_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x001x110_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_0'))))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))))))),'_dst_x0000001x1111110x0000000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))))))),'_dst_x000000x010101x101010x000000_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_dst_x000x100x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INL_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INL_0'))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.grammar.parsetree_CASE_0'),s('fun'('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x111_2'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x010x000x101_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('type.simpleSexp.sexp','happ'(s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_SYM_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x110x101_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dstsel_0_x01_1'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_0'))))))),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0')))))))))))))))))))))))))).
fof('ARITY_0_1_const.simpleSexp.ptree_sexp_UNION_aux', axiom, ![VV0]: s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp'))),'const.simpleSexp.ptree_sexp_UNION_aux_0'),s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),VV0))) = s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_UNION_aux_1'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),VV0)))).
fof('ARITY_0_1_const.simpleSexp.ptree_sexp_UNION', axiom, ![VV0]: s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_UNION_0'),s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),VV0))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_UNION_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),VV0)))).
fof('_dst_x000000x010110x101001_ax', axiom, ![VA,VA2,VA4,VA5,VA7,VA3,VA6,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x010110x101001_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA7))),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA6,VA8))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x10110x01001_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA7))),V__0),s('fun'(VA3,'fun'(VA6,VA8)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA6,VA8))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x001110x110111_ax', axiom, ![VA,VA3,VA7,VA2,VA4,VA5,VA6,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x001110x110111_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA7))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01110x10111_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA7))),V__0),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x0001110x1110111_ax', axiom, ![VA,VA4,VA8,VA2,VA3,VA5,VA6,VA7,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0001110x1110111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x001110x110111_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA8))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA9)))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x00001110x11110111_ax', axiom, ![VA,VA5,VA9,VA2,VA3,VA4,VA6,VA7,VA8,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x00001110x11110111_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x0001110x1110111_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA9))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000x000111000x111001111_ax', axiom, ![VA,VA4,VA5,VA10,VA2,VA3,VA6,VA7,VA8,VA9,VA11,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))))))),'_dst_x000000000x000111000x111001111_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA10))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA)))))))),'_dst_x00000000x00111000x11001111_3'(s('fun'(VA10,'fun'(VA11,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA10))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA11))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000000x0111000000x1001111111_ax', axiom, ![VA,VA2,VA3,VA11,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA12,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA)))))))))),'_dst_x0000000000x0111000000x1001111111_3'(s('fun'(VA11,'fun'(VA12,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA11))),V__0),s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12)))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))))),'_dst_x000000000x111000000x001111111_3'(s('fun'(VA11,'fun'(VA12,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA11))),V__0),s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12))))))),'happ'(s('fun'(VA1,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12)))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000000x0011100000x1101111111_ax', axiom, ![VA,VA3,VA11,VA2,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA12,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA)))))))))),'_dst_x0000000000x0011100000x1101111111_3'(s('fun'(VA11,'fun'(VA12,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA11))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12))))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))))),'_dst_x000000000x011100000x101111111_3'(s('fun'(VA11,'fun'(VA12,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA11))),V__0),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12)))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12))))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000000x0000111000x1111001111_ax', axiom, ![VA,VA5,VA6,VA11,VA2,VA3,VA4,VA7,VA8,VA9,VA10,VA12,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA)))))))))),'_dst_x0000000000x0000111000x1111001111_3'(s('fun'(VA11,'fun'(VA12,VA)),V__x),s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA11))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12)))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))))))),'_dst_x000000000x000111000x111001111_3'(s('fun'(VA11,'fun'(VA12,VA)),V__x),s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA11))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA12)))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000000x11100000000x01111111111_ax', axiom, ![VA,VA12,VA1,VA2,VA3,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA13]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA)))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA))))))))))),'_dst_x00000000000x11100000000x01111111111_3'(s('fun'(VA12,'fun'(VA13,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA12))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA13)))))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA)))))))))),'_dst_x0000000000x1100000000x1111111111_3'(s('fun'(VA12,'fun'(VA13,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA12)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA12))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA13)))))))))),V__1)))).
fof('_dst_x00000000000x01111111111x11100100000_ax', axiom, ![VA,VA4,VA5,VA7,VA8,VA9,VA10,VA11,VA12,VA2,VA3,VA6,VA13,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA)))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA))))))))))),'_dst_x00000000000x01111111111x11100100000_3'(s('fun'(VA12,'fun'(VA13,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA12)))))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,VA13)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA)))))))))),'_dst_x0000000000x1111111111x1100100000_3'(s('fun'(VA12,'fun'(VA13,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA12)))))))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA6,VA13))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,VA13)))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000000x00011100000x11101111111_ax', axiom, ![VA,VA4,VA12,VA2,VA3,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA13,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA)))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA))))))))))),'_dst_x00000000000x00011100000x11101111111_3'(s('fun'(VA12,'fun'(VA13,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA12))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA13)))))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA)))))))))),'_dst_x0000000000x0011100000x1101111111_3'(s('fun'(VA12,'fun'(VA13,VA)),V__x),s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA12))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA13))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,VA13)))))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000000000x001110000000x110111111111_ax', axiom, ![VA,VA3,VA13,VA2,VA4,VA5,VA6,VA7,VA8,VA9,VA10,VA11,VA12,VA14,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,VA))))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,VA)))))))))))),'_dst_x000000000000x001110000000x110111111111_3'(s('fun'(VA13,'fun'(VA14,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA13))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,VA14))))))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,VA))))))))))),'_dst_x00000000000x01110000000x10111111111_3'(s('fun'(VA13,'fun'(VA14,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA13))),V__0),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,VA14)))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,VA14))))))))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000000000x0111111111111x1110010000000_ax', axiom, ![VA,VA4,VA5,VA7,VA8,VA9,VA10,VA11,VA12,VA13,VA14,VA2,VA3,VA6,VA15,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA)))))))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA))))))))))))),'_dst_x0000000000000x0111111111111x1110010000000_3'(s('fun'(VA14,'fun'(VA15,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA14)))))))))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,VA15)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA)))))))))))),'_dst_x000000000000x111111111111x110010000000_3'(s('fun'(VA14,'fun'(VA15,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,'fun'(VA11,'fun'(VA12,'fun'(VA13,VA14)))))))))))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA6,VA15))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA6,VA15)))),V__1),s(VA1,V__z)))))).
fof('thm.simpleSexp.ptree_sexp_UNION_primitive_def', axiom, s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_UNION_0') = s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp'))),'const.simpleSexp.ptree_sexp_UNION_aux_0'),s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'const.min.@_1'(s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x0111111x1111000_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))),'_dst_x000000x010000x101111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11100x00111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x111x001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x0111111x1110010_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))),'_dst_x000000x010000x101111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11100x00111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x111x001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_0'))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x0111111x1110010_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))),'_dst_x000000x010000x101111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11100x01111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'_dst_x0000x0111x1001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x01x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))),'_dst_x000000000x111111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))))),'_dst_x0000000000x1111111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))))),'_dst_x00000000000x01111111111x11100100000_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))))))),'_dst_x0000000000x0100000000x1011111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))),'_dst_x000000000x111000000x011111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))))),'_dst_x00000000x01110000x10011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))),'_dst_x000000x011100x100111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'_dst_x0000x0111x1011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x001x110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_0'))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))),'_dst_x000000000x111111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))))),'_dst_x0000000000x1111111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))))),'_dst_x00000000000x11111111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))))))),'_dst_x000000000000x111111111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))))))),'_dst_x0000000000000x0111111111111x1110010000000_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))))))))),'_dst_x000000000000x010000000000x101111111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))))),'_dst_x00000000000x11100000000x01111111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))))))),'_dst_x0000000000x0111000000x1001111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))))),'_dst_x00000000x01110000x10111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x0011100x1100111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x00111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))),'_dst_x0000x0001x1110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_dst_x000x100x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))),'_dst_x000000000x111111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))))),'_dst_x0000000000x1111111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))))),'_dst_x00000000000x11111111111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))))))))),'_dst_x000000000000x111111111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))))))))),'_dst_x0000000000000x1111111111111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))))))))),'_dst_x00000000000000x11111111111111x11100000010000_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))))))))),'_dst_x00000000000000x00100000000000x11011111111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool'))))))))))))),'_dst_x0000000000000x0111000000000x1011111111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))))))),'_dst_x000000000000x001110000000x110111111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool'))))))))))),'_dst_x00000000000x00011100000x11101111111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))))),'_dst_x0000000000x0000111000x1111001111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))),'_dst_x00000000x00001110x11110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool'))))))),'_dst_x0000000x0000010x1111101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','bool')))))),'_dst_x000000x010110x101001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_dst_x000x100x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'bool')),'=_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp'))),'const.simpleSexp.ptree_sexp_UNION_aux_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INL_0'))),s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.simpleSexp.sexp','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))),'_dst_x00000000x11111111x11100100_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))))),'_dst_x00000000x00100000x11011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool'))))))),'_dst_x0000000x0111000x1011111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))))),'_dst_x000000x001110x110011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.simpleSexp.sexp','bool')))),'_dst_x0000x0010x1101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','bool'))),'_dst_x000x110x001_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'bool')),'=_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'type.option.option'('type.simpleSexp.sexp'))),'const.simpleSexp.ptree_sexp_UNION_aux_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))))),s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_0'))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))))),'_dst_x0000000x0111111x1111000_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')))))),'_dst_x000000x010000x101111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool'),'_dst_x1x0_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'bool')),'=_0'),s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'happ'(s('fun'('type.simpleSexp.sexpNT','type.sum.sum'('type.simpleSexp.sexpNT','type.num.num')),'const.sum.INL_0'),s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))))))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))))),'_dst_x00000x11100x00111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x111x001_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.list.CONS_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'bool')),'=_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'bool')),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')))),'_dstsel_0_x0001x0110_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x0x1_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_0'))),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))))),'_dst_x00x11_2'(s('fun'('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'_dst_x00x11_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_dst_x01x10_2'(s('fun'('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.grammar.Nd_0'),s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'_i_0_0')))))))))))))))))))))))))))))))))))))))))))))).
fof('thm.simpleSexp.simpleSexp_|49|36_prove_ltb', axiom, ![V_27a_27]: (((?[V_27v_7c48_7c_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) | ?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))) | ((?[V_27v_7c49_7c_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c49_7c_27))))))) | ?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))) | ((?[V_27v2_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v2_27))))))))) | ?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))))) | (?[V_27v3_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INR_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v3_27))))))))) | ?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INR_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))))))))) => (?[V_27v_7c48_7c_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) | (?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) | (?[V_27v_7c49_7c_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c49_7c_27))))))) | (?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))) | (?[V_27v2_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v2_27))))))))) | (?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))))) | (?[V_27v3_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INR_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v3_27))))))))) | ?[V_27ntm_27, V_27args_27]: s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),V_27a_27) = s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INR_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))))))))))))).
fof('thm.simpleSexp.ptree_sexp_UNION_extract3_def', axiom, ![V_27x_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexpseq_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_UNION_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INR_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27)))))))))).
fof('thm.simpleSexp.ptree_sexp_UNION_extract2_def', axiom, ![V_27x_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp|48|_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_UNION_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27)))))))))).
fof('thm.simpleSexp.ptree_sexp_UNION_extract|49|_def', axiom, ![V_27x_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_WSsexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_UNION_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INR_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27)))))))).
fof('thm.simpleSexp.ptree_sexp_UNION_extract|48|_def', axiom, ![V_27x_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_UNION_1'(s('type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.sum.sum'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')))),'const.sum.INL_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27x_27)))))).
fof('thm.simpleSexp.ptree_sexp_ind', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27, V_27P2_27, V_27P3_27]: ((![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c48_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))))) & (![V_27ntm_27, V_27args_27]: (![V_27w_27, V_27v3_27, V_27g_27, V_27v7_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0')))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c49_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c48_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))) & (![V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c49_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c49_7c_27)))))) & (![V_27ntm_27, V_27args_27]: (![V_27g_27, V_27v3_27, V_27s_27, V_27v7_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0')))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P2_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c49_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))) & (![V_27v2_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P2_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v2_27)))))) & (![V_27ntm_27, V_27args_27]: ((![V_27s_27, V_27v3_27, V_27w_27, V_27v7_27, V_27g_27, V_27v_7c49_7c_7c49_7c_27, V_27rp_27, V_27v_7c49_7c5_27, V_27rp_7c39_7c_27, V_27v_7c49_7c9_27, V_27a_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c_7c49_7c_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c_7c49_7c_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c5_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c5_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_7c39_7c_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c9_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c9_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & ((s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))) & (s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))) & s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_7c39_7c_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))) & s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27))) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.SOME_1'(s('type.simpleSexp.sexp',V_27a_27))))))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c48_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_27))))) & (![V_27s_27, V_27v3_27, V_27w_27, V_27v7_27, V_27g_27, V_27v_7c49_7c_7c49_7c_27, V_27rp_27, V_27v_7c49_7c5_27, V_27rp_7c39_7c_27, V_27v_7c49_7c9_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c_7c49_7c_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c_7c49_7c_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c5_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c5_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_7c39_7c_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c9_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c9_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & (s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))) & (s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))) & s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_7c39_7c_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c48_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27))))) & (![V_27s_27, V_27v3_27, V_27w_27, V_27v7_27, V_27g_27, V_27v_7c49_7c_7c49_7c_27, V_27rp_27, V_27v_7c49_7c5_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27g_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c_7c49_7c_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c_7c49_7c_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c5_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v_7c49_7c5_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & (s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))) & s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27rp_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P3_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27))))) & ![V_27s_27, V_27v3_27, V_27w_27, V_27v7_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27) = s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c49_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27)))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P2_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))))) & (![V_27v3_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P3_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v3_27)))))) & ![V_27ntm_27, V_27args_27]: ((![V_27w_27, V_27v3_27, V_27s_27, V_27v7_27, V_27x_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0') & s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_WSsexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27))) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.SOME_1'(s('type.simpleSexp.sexp',V_27x_27))))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P3_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27))))) & ![V_27w_27, V_27v3_27, V_27s_27, V_27v7_27]: ((~ (~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27))) & (s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v3_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.CONS_2'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27s_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27))) & s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27v7_27) = s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'const.list.NIL_0')))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c49_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27w_27)))))) => p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P3_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27)))))))))))))) => (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c48_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P_7c49_7c_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P2_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27)))) & ![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),V_27P3_27),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))))))).
fof('thm.simpleSexp.ptree_sexp_def|split|0', axiom, ![V_27v_7c48_7c_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c48_7c_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0')).
fof('ARITY_0_1_const.simpleSexp.ptree_WSsexp', axiom, ![VV0]: s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_WSsexp_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_WSsexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_sexp_def|split|1', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp_0'))))) & s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x01x10_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_WSsexp_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_sexp_def|split|2', axiom, ![V_27v_7c49_7c_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_WSsexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v_7c49_7c_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0')).
fof('ARITY_0_1_const.simpleSexp.ptree_sexp|48|', axiom, ![VV0]: s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp|48|_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp|48|_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_sexp_def|split|3', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_WSsexp_0'))))) & s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_WSsexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp|48|_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))).
fof('thm.simpleSexp.ptree_sexp_def|split|4', axiom, ![V_27v2_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp|48|_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v2_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0')).
fof('ARITY_0_1_const.simpleSexp.ptree_sexp', axiom, ![VV0]: s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('ARITY_0_1_const.simpleSexp.ptree_sexpseq', axiom, ![VV0]: s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexpseq_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0))) = s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexpseq_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),VV0)))).
fof('thm.simpleSexp.ptree_sexp_def|split|5', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexp|48|_0'))))) & s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexp|48|_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'happ'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('bool',Vv))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x10x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x1_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_CHOICE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpsym_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_SYM_0'))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.num.num')),'const.simpleSexp.ptree_sexpnum_0'),s('fun'('type.num.num','type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.num.num','type.simpleSexp.sexp'),'const.simpleSexp.SX_NUM_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.list.list'('type.string.char'))),'const.simpleSexp.ptree_sexpstr_0'),s('fun'('type.list.list'('type.string.char'),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0x1_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.list.list'('type.string.char'),'type.simpleSexp.sexp'),'const.simpleSexp.SX_STR_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x110x110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01x00_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_WSsexp_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))),'_dst_x0001x0000x1110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))))),'_dst_x00001x11110x11110_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))))),'_dst_x0000x1001x0110x0000_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x01x10_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_IGNORE_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.one.one')),'const.simpleSexp.ptree_grabWS_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexpseq_0'))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))))))),'_dst_x000001x111110x000000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')))))),'_dst_x00000x10101x01010x00000_4'(s('fun'('bool','fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('type.option.option'('type.simpleSexp.sexp'),'type.option.option'('type.simpleSexp.sexp')))),'const.bool.COND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'))),'_dst_x000x100x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool'),'_dst_x1x0_2'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'bool')),'=_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.TOK_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexp_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))))))),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))))))))).
fof('thm.simpleSexp.ptree_sexp_def|split|6', axiom, ![V_27v3_27]: s('type.option.option'('type.simpleSexp.sexp'),'const.simpleSexp.ptree_sexpseq_1'(s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Lf_1'(s('type.grammar.symbol'('type.string.char','type.simpleSexp.sexpNT'),V_27v3_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0')).
fof('thm.simpleSexp.ptree_sexp_def|split|7', axiom, ![V_27ntm_27, V_27args_27]: ?[Vv]: ((p(s('bool',Vv)) <=> ~ (s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27) = s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),'const.sum.INL_1'(s('type.simpleSexp.sexpNT','const.simpleSexp.sxnt_sexpseq_0'))))) & s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexpseq_0'),s('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'const.grammar.Nd_2'(s('type.sum.sum'('type.simpleSexp.sexpNT','type.num.num'),V_27ntm_27),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))))) = s('type.option.option'('type.simpleSexp.sexp'),'const.bool.COND_3'(s('bool',Vv),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')),'happ'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp'))),'happ'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),V_27args_27))),s('type.option.option'('type.simpleSexp.sexp'),'happ'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('type.simpleSexp.sexp','const.simpleSexp.SX_SYM_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')))),'_dst_x001x110x000_3'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'type.option.option'('type.simpleSexp.sexp')))),'const.list.list_CASE_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_WSsexp_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x10x01_3'(s('fun'('type.option.option'('type.simpleSexp.sexp'),'fun'('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'type.option.option'('type.simpleSexp.sexp'))),'const.option.OPTION_BIND_0'),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'type.option.option'('type.simpleSexp.sexp')),'const.simpleSexp.ptree_sexpseq_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp'))),'_dst_x00x11_2'(s('fun'('type.simpleSexp.sexp','type.option.option'('type.simpleSexp.sexp')),'const.option.SOME_0'),s('fun'('type.simpleSexp.sexp','fun'('type.simpleSexp.sexp','type.simpleSexp.sexp')),'const.simpleSexp.SX_CONS_0'))))))),s('fun'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT'),'fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp'))),'_dst_x0_1'(s('fun'('type.list.list'('type.grammar.parsetree'('type.string.char','type.simpleSexp.sexpNT')),'type.option.option'('type.simpleSexp.sexp')),'_dst_x0_1'(s('type.option.option'('type.simpleSexp.sexp'),'const.option.NONE_0'))))))))))))))).
