fof('thm.clos_annotateProof.v_rel|48|_def', axiom, ![Vx, Vx_27, Vx0, Vx1, Vx_270, Vx_27_27]: (p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',Vx),s('type.num.num',Vx_27),s('type.sptree.spt'('type.num.num'),Vx0),s('type.list.list'('type.closSem.v'),Vx1),s('type.list.list'('type.closSem.v'),Vx_270),s('type.num.num',Vx_27_27)))) <=> ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: ((?[V_27j_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))) | (?[V_27w_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))) | (?[V_27t_27, V_27xs_27, V_27ys_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))) | (?[V_27r_7c49_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))) | (?[V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))) | ?[V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27))))) & ![V_27a2_7c48_7c_27, V_27a3_7c48_7c_27, V_27a4_7c48_7c_27, V_27a5_7c48_7c_27, V_27a6_7c48_7c_27, V_27a7_7c48_7c_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a2_7c48_7c_27))))),s('type.num.num',V_27a7_7c48_7c_27)))) | ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num',V_27a3_7c48_7c_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27))))))))) | ?[V_27v_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a7_7c48_7c_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a2_7c48_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27a2_7c48_7c_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27a7_7c48_7c_27))),s('type.num.num',V_27a3_7c48_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a4_7c48_7c_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_7c48_7c_27),s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_7c48_7c_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27)))))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_7c48_7c_27))),s('type.num.num',V_27a3_7c48_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a4_7c48_7c_27))),s('type.list.list'('type.closSem.v'),V_27a5_7c48_7c_27))),s('type.list.list'('type.closSem.v'),V_27a6_7c48_7c_27))),s('type.num.num',V_27a7_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',Vx))),s('type.num.num',Vx_27))),s('type.sptree.spt'('type.num.num'),Vx0))),s('type.list.list'('type.closSem.v'),Vx1))),s('type.list.list'('type.closSem.v'),Vx_270))),s('type.num.num',Vx_27_27))))))).
fof('ARITY_0_2_const.clos_annotateProof.v_rel', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',VV0))),s('type.closSem.v',VV1))) = s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',VV0),s('type.closSem.v',VV1)))).
fof('thm.clos_annotateProof.v_rel|49|_def', axiom, ![Vx, Vx_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',Vx),s('type.closSem.v',Vx_27)))) <=> ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27a_7c48_7c_7c48_7c_27, V_27a_7c49_7c_7c48_7c_27]: ((?[V_27j_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))) & s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))) | (?[V_27w_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))) & s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))) | (?[V_27t_27, V_27xs_27, V_27ys_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & (s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))) | (?[V_27r_7c49_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))) & s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))) | (?[V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))) & (s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))) | ?[V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))) & (s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_7c48_7c_27))))) & ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a2_27))))),s('type.num.num',V_27a7_27)))) | ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num',V_27a3_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27))))))))) | ?[V_27v_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a7_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27a2_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27a7_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27a3_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27a6_27)))))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',Vx))),s('type.closSem.v',Vx_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|0', axiom, ![V_27j_27]: p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|1', axiom, ![V_27w_27]: p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|2', axiom, ![V_27t_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|3', axiom, ![V_27r_7c49_7c_27]: p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|4', axiom, ![V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num',V_27m_27),s('type.num.num',V_27num__args_27),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_7c39_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27num__args_27),s('type.num.num',V_27n_27))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','const.closProps.every_Fn_vs_NONE_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27)))))))).
fof('ARITY_0_6_const.clos_annotateProof.env_ok', axiom, ![VV0, VV1, VV2, VV3, VV4, VV5]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.sptree.spt'('type.num.num'),VV2))),s('type.list.list'('type.closSem.v'),VV3))),s('type.list.list'('type.closSem.v'),VV4))),s('type.num.num',VV5))) = s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.closSem.v'),VV3),s('type.list.list'('type.closSem.v'),VV4),s('type.num.num',VV5)))).
fof('thm.clos_annotateProof.v_rel_rules|split|5', axiom, ![V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27)))))))).
fof('thm.clos_annotateProof.v_rel_rules|split|6', axiom, ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27n_27)))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.v_rel_rules|split|7', axiom, ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27)))) & (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))))))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.v_rel_rules|split|8', axiom, ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27, V_27v_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27m_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))))))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.v_rel_ind', axiom, ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27j_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))))),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27t_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))))))) & (![V_27r_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))))),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))))) & (![V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))))))) & (![V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27))))),s('type.num.num',V_27n_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27, V_27v_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))))))))))) => (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27a_7c48_7c_27),s('type.closSem.v',V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27))))) & ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: (p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27a2_27),s('type.num.num',V_27a3_27),s('type.sptree.spt'('type.num.num'),V_27a4_27),s('type.list.list'('type.closSem.v'),V_27a5_27),s('type.list.list'('type.closSem.v'),V_27a6_27),s('type.num.num',V_27a7_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))))))).
fof('thm.clos_annotateProof.v_rel_strongind', axiom, ![V_27v__rel_7c39_7c_27, V_27env__ok_7c39_7c_27]: ((![V_27j_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))))),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))))) & (![V_27w_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))))),s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))))) & (![V_27t_27, V_27xs_27, V_27ys_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27))),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))))))) & (![V_27r_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))))),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))))) & (![V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27)))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27)))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27))),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))))))) & (![V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x1111x1111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27))),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27)))))))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27))))),s('type.num.num',V_27n_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & (![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_27)))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))) & ![V_27env2_27, V_27env2_7c39_7c_27, V_27i_27, V_27l_27, V_27m_27, V_27n_27, V_27v_27]: ((p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27m_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27)))))) & p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.closSem.v'),V_27env2_27))))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num',V_27l_27))),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27m_27))),s('type.num.num',V_27l_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env2_27))),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27))))))))))))) => (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),V_27v__rel_7c39_7c_27),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27))))) & ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),V_27env__ok_7c39_7c_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.list.list'('type.closSem.v'),V_27a6_27))),s('type.num.num',V_27a7_27)))))))).
fof('thm.clos_annotateProof.v_rel_cases|split|0', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27a_7c48_7c_27))),s('type.closSem.v',V_27a_7c49_7c_27)))) <=> (?[V_27j_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27j_27)))) | (?[V_27w_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27w_27)))) | (?[V_27t_27, V_27xs_27, V_27ys_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27t_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))))) | (?[V_27r_7c49_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27))) & s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27r_7c49_7c_27)))) | (?[V_27c_27, V_27c_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27i_27, V_27m_27, V_27num__args_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27num__args_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('type.num.num',V_27m_27))),s('type.num.num',V_27num__args_27))),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_7c39_7c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.num.num',V_27n_27))),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('type.num.num',V_27num__args_27))),s('type.num.num',V_27n_27))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'))),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num',V_27n_27))),s('type.num.num',V_27num__args_27))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),'happ'(s('fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp')),'happ'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.closLang.exp',V_27c_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num',V_27m_27) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))) | ?[V_27cs_27, V_27cs_7c39_7c_27, V_27env_27, V_27env_7c39_7c_27, V_27index_27, V_27p_27, V_27vals_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27a_7c48_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27index_27))) & (s('type.closSem.v',V_27a_7c49_7c_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27p_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27index_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))))),'_dst_x000000x101000x110111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11111x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x11011x00100_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x011x100_2'(s('fun'('type.closLang.exp','fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x0110_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))))),'_dst_x00000x11001x10111_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x0100x0000x0010x0000x0000x1001_7'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))))),'const.clos_annotateProof.env_ok_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))))))).
fof('thm.clos_annotateProof.v_rel_cases|split|1', axiom, ![V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27]: (p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27a2_27),s('type.num.num',V_27a3_27),s('type.sptree.spt'('type.num.num'),V_27a4_27),s('type.list.list'('type.closSem.v'),V_27a5_27),s('type.list.list'('type.closSem.v'),V_27a6_27),s('type.num.num',V_27a7_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a2_27))),s('type.num.num',V_27a7_27)))) | ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num',V_27a3_27)))) & (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27))))))))) | ?[V_27v_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a7_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a2_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27a2_27)))))) & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27a7_27),s('type.num.num',V_27a3_27))),s('type.sptree.spt'('type.num.num'),V_27a4_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27v_27))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a7_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a5_27)))))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27v_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27a6_27)))))) & p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.list.EL_2'(s('type.num.num',V_27a7_27),s('type.list.list'('type.closSem.v'),V_27a5_27))),s('type.closSem.v','const.list.EL_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a3_27),s('type.num.num',V_27v_27))),s('type.list.list'('type.closSem.v'),V_27a6_27)))))))))))))))).
fof('thm.clos_annotateProof.v_rel_simp|split|0', axiom, ![V_27y_27, V_27x_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x_27))),s('type.closSem.v',V_27y_27)))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|1', axiom, ![V_27y_27, V_27n_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27n_27))),s('type.closSem.v',V_27y_27)))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Word64_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one'))))))),V_27n_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|2', axiom, ![V_27y_27, V_27n_7c39_7c_27, V_27l_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27l_27))))),s('type.closSem.v',V_27y_27)))) <=> ?[V_27ys_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27ys_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27l_27),s('type.list.list'('type.closSem.v'),V_27ys_27))))))).
fof('thm.clos_annotateProof.v_rel_simp|split|3', axiom, ![V_27y_27, V_27x_7c39_7c_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27x_7c39_7c_27))),s('type.closSem.v',V_27y_27)))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27x_7c39_7c_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|4', axiom, ![V_27y_27, V_27x_7c39_7c_27, V_27w_27, V_27v_27, V_27n_7c39_7c_7c39_7c_27, V_27l_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27n_7c39_7c_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27l_27),s('type.list.list'('type.closSem.v'),V_27v_27),s('type.num.num',V_27x_7c39_7c_27),s('type.closLang.exp',V_27w_27))))),s('type.closSem.v',V_27y_27)))) <=> ?[V_27c_7c39_7c_27, V_27env_7c39_7c_27, V_27i_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27n_7c39_7c_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num',V_27x_7c39_7c_27),s('type.closLang.exp',V_27c_7c39_7c_27))) & (s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27w_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27v_27))),s('type.num.num',V_27x_7c39_7c_27),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_7c39_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_7c48_7c_27]: ((p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_7c48_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27w_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27x_7c39_7c_27),s('type.num.num',V_27n_7c48_7c_27))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27v_27))),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27v_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_7c48_7c_27),s('type.num.num',V_27x_7c39_7c_27))))))) & (p(s('bool','const.closProps.every_Fn_vs_NONE_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27w_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27l_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))))))))).
fof('ARITY_2_6_const.clos_annotateProof.env_ok', axiom, ![VV0, VV1, VV2, VV3, VV4, VV5]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'const.clos_annotateProof.env_ok_2'(s('type.num.num',VV0),s('type.num.num',VV1))),s('type.sptree.spt'('type.num.num'),VV2))),s('type.list.list'('type.closSem.v'),VV3))),s('type.list.list'('type.closSem.v'),VV4))),s('type.num.num',VV5))) = s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.closSem.v'),VV3),s('type.list.list'('type.closSem.v'),VV4),s('type.num.num',VV5)))).
fof('_dst_x00000x10100x11011_ax', axiom, ![VA,VA3,VA6,VA2,VA4,VA5,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x10100x11011_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA3,VA6)),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,VA7)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0100x1011_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA3,VA6),'happ'(s('fun'(VA1,'fun'(VA3,VA6)),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,VA7)))),V__1),s(VA1,V__z)))))).
fof('thm.clos_annotateProof.v_rel_simp|split|5', axiom, ![V_27y_27, V_27x5_27, V_27x4_27, V_27x3_27, V_27x2_27, V_27x_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27x_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27x2_27),s('type.list.list'('type.closSem.v'),V_27x3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27),s('type.num.num',V_27x5_27))))),s('type.closSem.v',V_27y_27)))) <=> ?[V_27cs_7c39_7c_27, V_27env_7c39_7c_27, V_27vals_7c39_7c_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27x_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27),s('type.num.num',V_27x5_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x10100x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x1101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1101x0010_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'_dst_x00x01x00x10_4'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27x3_27))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool'))),'_dst_x000x111x010_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x1101x1011_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27))))))))),s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x000x010x000x000x101_5'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'const.clos_annotateProof.env_ok_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27x3_27))),s('type.num.num','const.num.|48|_0'))),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27x3_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27))))))))))))),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_7c39_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27x2_27),s('type.list.list'('type.closSem.v'),V_27vals_7c39_7c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x5_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27))))))))))).
fof('thm.clos_annotateProof.v_rel_simp|split|6', axiom, ![V_27y_27, V_27x_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27y_27),s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x_27)))))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|7', axiom, ![V_27y_27, V_27n_7c39_7c_27, V_27l_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27y_27))),s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27l_27)))))) <=> ?[V_27xs_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Block_2'(s('type.num.num',V_27n_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27xs_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27l_27))))))).
fof('thm.clos_annotateProof.v_rel_simp|split|8', axiom, ![V_27y_27, V_27x_7c39_7c_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27y_27),s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27x_7c39_7c_27)))))) <=> s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27x_7c39_7c_27))))).
fof('thm.clos_annotateProof.v_rel_simp|split|9', axiom, ![V_27y_27, V_27x_7c39_7c_27, V_27w_27, V_27v_27, V_27n_7c39_7c_7c39_7c_27, V_27l_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27y_27))),s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27n_7c39_7c_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27l_27),s('type.list.list'('type.closSem.v'),V_27v_27),s('type.num.num',V_27x_7c39_7c_27),s('type.closLang.exp',V_27w_27)))))) <=> ?[V_27c_27, V_27env_27, V_27i_27, V_27vals_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Closure_5'(s('type.option.option'('type.num.num'),V_27n_7c39_7c_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.num.num',V_27x_7c39_7c_27),s('type.closLang.exp',V_27c_27))) & (s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.num.num',V_27x_7c39_7c_27),s('type.sptree.spt'('type.num.num'),V_27i_27))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27w_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & (![V_27n_7c48_7c_27]: ((p(s('bool','const.closProps.fv_2'(s('type.num.num',V_27n_7c48_7c_27),s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27x_7c39_7c_27),s('type.num.num',V_27n_7c48_7c_27))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27v_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_7c48_7c_27),s('type.num.num',V_27x_7c39_7c_27))))))) & (p(s('bool','const.closProps.every_Fn_vs_NONE_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0')))))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27l_27)))))))))).
fof('thm.clos_annotateProof.v_rel_simp|split|10', axiom, ![V_27y_27, V_27x5_27, V_27x4_27, V_27x3_27, V_27x2_27, V_27x_7c49_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27y_27))),s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27x_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27x2_27),s('type.list.list'('type.closSem.v'),V_27x3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27),s('type.num.num',V_27x5_27)))))) <=> ?[V_27cs_27, V_27env_27, V_27vals_27]: (s('type.closSem.v',V_27y_27) = s('type.closSem.v','const.closSem.Recclosure_5'(s('type.option.option'('type.num.num'),V_27x_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.num.num',V_27x5_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.closLang.exp','bool')),'fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool'))))),'_dst_x00000x10100x11011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111x1101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1101x0010_3'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.list.list'('type.closLang.exp'),'bool')),'=_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp')))),'_dst_x00x01x00x10_4'(s('fun'('type.list.list'('type.closLang.exp'),'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.closLang.exp'))))),'const.clos_annotate.shift_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'type.list.list'('type.closLang.exp')),'const.pair.FST_0'),s('fun'('type.closLang.exp','type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set')),'const.clos_free.free_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))),s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool'))),'_dst_x000x111x010_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'!_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')))),'_dst_x0000x1101x1011_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.num.num','fun'('type.closLang.exp','fun'('type.num.num','bool'))),'_dst_x000x011x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.closLang.exp','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))),s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool'))),'_dst_x000x010x000x000x101_5'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'fun'('type.num.num','bool')))),'const.clos_annotateProof.env_ok_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))),s('type.num.num','const.num.|48|_0'))),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27x3_27),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))))),s('fun'('type.closLang.exp','bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.closLang.exp','type.list.list'('type.closLang.exp')),'_dst_x1x0_2'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27),s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27x4_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27vals_27),s('type.list.list'('type.closSem.v'),V_27x2_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x5_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.closLang.exp')),V_27cs_27))))))))))).
fof('thm.clos_annotateProof.v_rel_Boolv|split|0', axiom, ![V_27x_27, V_27b_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27x_27),s('type.closSem.v','const.closSem.Boolv_1'(s('bool',V_27b_27)))))) <=> s('type.closSem.v',V_27x_27) = s('type.closSem.v','const.closSem.Boolv_1'(s('bool',V_27b_27))))).
fof('thm.clos_annotateProof.v_rel_Boolv|split|1', axiom, ![V_27x_27, V_27b_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Boolv_1'(s('bool',V_27b_27))),s('type.closSem.v',V_27x_27)))) <=> s('type.closSem.v',V_27x_27) = s('type.closSem.v','const.closSem.Boolv_1'(s('bool',V_27b_27))))).
fof('thm.clos_annotateProof.v_rel_Unit|split|0', axiom, ![V_27x_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27x_27),s('type.closSem.v','const.closSem.Unit_0')))) <=> s('type.closSem.v',V_27x_27) = s('type.closSem.v','const.closSem.Unit_0'))).
fof('thm.clos_annotateProof.v_rel_Unit|split|1', axiom, ![V_27x_27]: (p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v','const.closSem.Unit_0'),s('type.closSem.v',V_27x_27)))) <=> s('type.closSem.v',V_27x_27) = s('type.closSem.v','const.closSem.Unit_0'))).
fof('thm.clos_annotateProof.clos_annotateProof_9_prove_ltb', axiom, ![V_27n_27, V_27m_27, V_27l_7c49_7c_27, V_27l_27, V_27i_27, V_27env2_7c39_7c_27, V_27env2_27, V_27env_7c49_7c_7c39_7c_27, V_27env_7c49_7c_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27env_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27env2_27)))) & (s('type.num.num',V_27l_7c49_7c_27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_7c49_7c_27))) & (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27l_7c49_7c_27),s('type.num.num',V_27n_27)))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env_7c49_7c_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27l_7c49_7c_27))))))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27l_27),s('type.num.num',V_27l_7c49_7c_27))),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.closSem.v'),V_27env_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27env_7c49_7c_7c39_7c_27))),s('type.list.list'('type.closSem.v'),'const.list.APPEND_2'(s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.list.list'('type.closSem.v'),V_27env2_7c39_7c_27))),s('type.num.num',V_27n_27)))))).
fof('thm.clos_annotateProof.state_rel_def', axiom, ![V_27FFI_27]: ![V_27s_27, V_27t_27]: (p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s_27),s('type.closSem.state'(V_27FFI_27),V_27t_27)))) <=> (s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))) = s('type.num.num','const.closSem.state_clock_1'(s('type.closSem.state'(V_27FFI_27),V_27t_27))) & (s('type.ffi.ffi_state'(V_27FFI_27),'const.closSem.state_ffi_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))) = s('type.ffi.ffi_state'(V_27FFI_27),'const.closSem.state_ffi_1'(s('type.closSem.state'(V_27FFI_27),V_27t_27))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.option.option'('type.closSem.v'),'fun'('type.option.option'('type.closSem.v'),'bool')),'const.option.OPTREL_1'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))),s('type.list.list'('type.option.option'('type.closSem.v')),'const.closSem.state_globals_1'(s('type.closSem.state'(V_27FFI_27),V_27t_27)))))) & (s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))))) = s('fun'('type.num.num','bool'),'const.finite_map.FDOM_1'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(V_27FFI_27),V_27t_27))))) & (![V_27n_27, V_27r_7c49_7c_27]: (s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))),s('type.num.num',V_27n_27))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),V_27r_7c49_7c_27))) => ?[V_27r2_27]: (s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.closSem.ref'('type.closSem.v')),'const.closSem.state_refs_1'(s('type.closSem.state'(V_27FFI_27),V_27t_27))),s('type.num.num',V_27n_27))) = s('type.option.option'('type.closSem.ref'('type.closSem.v')),'const.option.SOME_1'(s('type.closSem.ref'('type.closSem.v'),V_27r2_27))) & p(s('bool','const.closProps.ref_rel_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.ref'('type.closSem.v'),V_27r_7c49_7c_27),s('type.closSem.ref'('type.closSem.v'),V_27r2_27)))))) & ![V_27name_27, V_27arity_27, V_27c_27]: (s('type.option.option'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27FFI_27),V_27s_27))),s('type.num.num',V_27name_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27arity_27),s('type.closLang.exp',V_27c_27))))) => ?[V_27c2_27]: (s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27arity_27),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'))) = s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp',V_27c2_27),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) & s('type.option.option'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.finite_map.FLOOKUP_2'(s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27FFI_27),V_27t_27))),s('type.num.num',V_27name_27))) = s('type.option.option'('type.pair.prod'('type.num.num','type.closLang.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.num.num','type.closLang.exp'),'const.pair.,_2'(s('type.num.num',V_27arity_27),s('type.closLang.exp',V_27c2_27)))))))))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49||49|_prove_ltb', axiom, ![V_27l_7c39_7c_27, V_27l_27]: (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27l_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27l_27)))) => p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v','const.closSem.list_to_v_1'(s('type.list.list'('type.closSem.v'),V_27l_7c39_7c_27))))),s('type.closSem.v','const.closSem.list_to_v_1'(s('type.list.list'('type.closSem.v'),V_27l_27)))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|2_prove_ltb', axiom, ![V_27h_27, V_27h_7c39_7c_27]: (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27h_27))),s('type.closSem.v',V_27h_7c39_7c_27)))) => ((s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.v_to_list_1'(s('type.closSem.v',V_27h_27))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.NONE_0') & s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.v_to_list_1'(s('type.closSem.v',V_27h_7c39_7c_27))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.NONE_0')) | ?[V_27x_27, V_27x_7c39_7c_27]: (s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.v_to_list_1'(s('type.closSem.v',V_27h_27))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.SOME_1'(s('type.list.list'('type.closSem.v'),V_27x_27))) & (s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.v_to_list_1'(s('type.closSem.v',V_27h_7c39_7c_27))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.SOME_1'(s('type.list.list'('type.closSem.v'),V_27x_7c39_7c_27))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27x_27),s('type.list.list'('type.closSem.v'),V_27x_7c39_7c_27))))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|3_prove_ltb|split|0', axiom, ![V_27h_7c49_7c_27, V_27u_7c49_7c_27, V_27h2_27, V_27u2_27]: ((p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27h_7c49_7c_27),s('type.closSem.v',V_27h2_27)))) & p(s('bool','const.clos_annotateProof.v_rel_2'(s('type.closSem.v',V_27u_7c49_7c_27),s('type.closSem.v',V_27u2_27))))) => s('type.semanticPrimitives.eq_result','const.closSem.do_eq_2'(s('type.closSem.v',V_27h_7c49_7c_27),s('type.closSem.v',V_27u_7c49_7c_27))) = s('type.semanticPrimitives.eq_result','const.closSem.do_eq_2'(s('type.closSem.v',V_27h2_27),s('type.closSem.v',V_27u2_27))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|3_prove_ltb|split|1', axiom, ![V_27h_7c49_7c_27, V_27u_7c49_7c_27, V_27h2_27, V_27u2_27]: ((p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27h_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27h2_27)))) & p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27u_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27u2_27))))) => s('type.semanticPrimitives.eq_result','const.closSem.do_eq_list_2'(s('type.list.list'('type.closSem.v'),V_27h_7c49_7c_27),s('type.list.list'('type.closSem.v'),V_27u_7c49_7c_27))) = s('type.semanticPrimitives.eq_result','const.closSem.do_eq_list_2'(s('type.list.list'('type.closSem.v'),V_27h2_27),s('type.list.list'('type.closSem.v'),V_27u2_27))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|4_prove_ltb', axiom, ![V_27A_27]: ![V_27xs_27, V_27x_27, V_27s_7c49_7c_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op','const.closLang.UpdateByte_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),V_27x_27))) => ?[V_27x_7c49_7c_27, V_27x2_27, V_27x3_27]: s('type.list.list'('type.closSem.v'),V_27xs_27) = s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.RefPtr_1'(s('type.num.num',V_27x_7c49_7c_27))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x2_27))),s('type.list.list'('type.closSem.v'),'const.list.CONS_2'(s('type.closSem.v','const.closSem.Number_1'(s('type.integer.int',V_27x3_27))),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'))))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|5_prove_ltb', axiom, ![V_27A_27]: ![V_27ys_27, V_27xs_27, V_27v_27, V_27t_7c49_7c_27, V_27s2_27, V_27s_7c49_7c_27, V_27op_27]: ((p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27),s('type.closSem.state'(V_27A_27),V_27t_7c49_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) & s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.closSem.v',V_27v_27),s('type.closSem.state'(V_27A_27),V_27s2_27))))))) => ?[V_27w_27, V_27t2_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closSem.v'),V_27ys_27),s('type.closSem.state'(V_27A_27),V_27t_7c49_7c_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'const.pair.,_2'(s('type.closSem.v',V_27w_27),s('type.closSem.state'(V_27A_27),V_27t2_27))))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27v_27))),s('type.closSem.v',V_27w_27)))) & p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27A_27),V_27s2_27),s('type.closSem.state'(V_27A_27),V_27t2_27)))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|6_prove_ltb', axiom, ![V_27A_27]: ![V_27ys_27, V_27xs_27, V_27t_7c49_7c_27, V_27s_7c49_7c_27, V_27op_27, V_27err_27]: ((p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27),s('type.closSem.state'(V_27A_27),V_27t_7c49_7c_27)))) & (p(s('bool','const.list.LIST_REL_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.list.list'('type.closSem.v'),V_27ys_27)))) & (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closSem.v'),V_27xs_27),s('type.closSem.state'(V_27A_27),V_27s_7c49_7c_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),V_27err_27))) & ~ (s('type.semanticPrimitives.error_result'('type.closSem.v'),V_27err_27) = s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) => ?[V_27w_27]: (s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.closSem.do_app_3'(s('type.closLang.op',V_27op_27),s('type.list.list'('type.closSem.v'),V_27ys_27),s('type.closSem.state'(V_27A_27),V_27t_7c49_7c_27))) = s('type.semanticPrimitives.result'('type.pair.prod'('type.closSem.v','type.closSem.state'(V_27A_27)),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),V_27w_27))) & p(s('bool','const.evalProps.exc_rel_3'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.semanticPrimitives.error_result'('type.closSem.v'),V_27err_27),s('type.semanticPrimitives.error_result'('type.closSem.v'),V_27w_27))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|7_prove_ltb', axiom, ![V_27y_27, V_27n_27, V_27k_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),V_27y_27)))))) & p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27y_27))))) => s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.num.num'),V_27y_27))),s('type.sptree.spt'('type.num.num'),'const.clos_annotate.shifted_env_2'(s('type.num.num',V_27k_27),s('type.list.list'('type.num.num'),V_27y_27))))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27n_27))))))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|8_prove_ltb', axiom, ?[V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c76_7c49_7c7_7c48_7c_7c48_7c_27]: ~ (p(s('bool',V_27_7c37_7c_7c37_7cgenvar_7c37_7c_7c37_7c76_7c49_7c7_7c48_7c_7c48_7c_27)))).
fof('thm.clos_annotateProof.clos_annotateProof_|49|9_prove_ltb', axiom, ![V_27x_27, V_27m_27, V_27live_27, V_27l_27, V_27k_27, V_27i_27, V_27env2_27, V_27env_27]: ((p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env2_27),s('type.num.num',V_27k_27)))) & (p(s('bool','const.bool.IN_2'(s('type.num.num',V_27k_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27live_27)))))) & (p(s('bool','const.list.ALL_DISTINCT_1'(s('type.list.list'('type.num.num'),V_27live_27)))) & s('type.option.option'('type.list.list'('type.closSem.v')),'const.closSem.lookup_vars_2'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.num.num','type.num.num'),'const.clos_annotate.get_var_3'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27))))),s('type.list.list'('type.num.num'),V_27live_27))))),s('type.list.list'('type.closSem.v'),V_27env2_27))) = s('type.option.option'('type.list.list'('type.closSem.v')),'const.option.SOME_1'(s('type.list.list'('type.closSem.v'),V_27x_27)))))) => p(s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27))),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),'const.clos_annotate.shifted_env_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27))))),s('type.list.list'('type.num.num'),V_27live_27))))),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27x_27),s('type.num.num',V_27k_27)))))).
fof('thm.clos_annotateProof.clos_annotateProof_2|48|_prove_ltb', axiom, ![V_27m_27, V_27l_27, V_27i_27, V_27fns_27, V_27index_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27index_27),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closLang.exp'),V_27fns_27)))))) => s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.EL_2'(s('type.num.num',V_27index_27),s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),V_27fns_27))))),s('type.num.num',V_27l_27),s('type.num.num',V_27m_27),s('type.sptree.spt'('type.num.num'),V_27i_27))))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))) = s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),'const.list.CONS_2'(s('type.closLang.exp','const.list.EL_2'(s('type.num.num',V_27index_27),s('type.list.list'('type.closLang.exp'),V_27fns_27))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))))),s('type.num.num',V_27l_27),s('type.num.num',V_27m_27),s('type.sptree.spt'('type.num.num'),V_27i_27))))).
fof('ARITY_5_6_const.clos_annotateProof.env_ok', axiom, ![VV0, VV1, VV2, VV3, VV4, VV5]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.clos_annotateProof.env_ok_5'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.closSem.v'),VV3),s('type.list.list'('type.closSem.v'),VV4))),s('type.num.num',VV5))) = s('bool','const.clos_annotateProof.env_ok_6'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.closSem.v'),VV3),s('type.list.list'('type.closSem.v'),VV4),s('type.num.num',VV5)))).
fof('thm.clos_annotateProof.clos_annotateProof_2|49|_prove_ltb|split|0', axiom, ![V_27FFI_27]: ![V_27xs_27, V_27env_27, V_27s_7c49_7c_27, V_27env_7c39_7c_27, V_27t_7c49_7c_27, V_27res_27, V_27s2_27, V_27m_27, V_27l_27, V_27i_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_27),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27FFI_27),V_27s2_27))) & (~ (s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.closSem.v'),V_27env_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27))) & (p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.list.list'('type.closLang.exp'),'bool')),'const.closProps.fv_0'),s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('fun'('type.num.num','bool'),'const.clos_annotateProof.env_ok_5'(s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27),s('type.list.list'('type.closSem.v'),V_27env_27),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27)))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),V_27xs_27)))) & (p(s('bool','const.finite_map.FEVERY_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'_dst_x0x1x0_3'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.closLang.exp'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.num.num','type.closLang.exp')),'const.pair.SND_0'))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27)))))) & p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27),s('type.closSem.state'(V_27FFI_27),V_27t_7c49_7c_27)))))))))) => ?[V_27res_7c39_7c_27, V_27t2_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))))),s('type.num.num',V_27m_27),s('type.num.num',V_27l_27),s('type.sptree.spt'('type.num.num'),V_27i_27))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27t_7c49_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27t2_27))) & (p(s('bool','const.evalProps.result_rel_4'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.LIST_REL_1'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'))),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_7c39_7c_27)))) & p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s2_27),s('type.closSem.state'(V_27FFI_27),V_27t2_27)))))))).
fof('thm.clos_annotateProof.clos_annotateProof_2|49|_prove_ltb|split|1', axiom, ![V_27FFI_27]: ![V_27loc__opt_27, V_27f_27, V_27args_27, V_27s_7c49_7c_27, V_27res_27, V_27s2_27, V_27f_7c39_7c_27, V_27args_7c39_7c_27, V_27s_7c49_7c_7c39_7c_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closSem.v',V_27f_27),s('type.list.list'('type.closSem.v'),V_27args_27),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27FFI_27),V_27s2_27))) & (p(s('bool','happ'(s('fun'('type.closSem.v','bool'),'happ'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.closSem.v',V_27f_27))),s('type.closSem.v',V_27f_7c39_7c_27)))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closSem.v'),'bool'),'happ'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.LIST_REL_1'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'))),s('type.list.list'('type.closSem.v'),V_27args_27))),s('type.list.list'('type.closSem.v'),V_27args_7c39_7c_27)))) & (p(s('bool','const.finite_map.FEVERY_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'_dst_x0x1x0_3'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.closLang.exp'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.num.num','type.closLang.exp')),'const.pair.SND_0'))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27)))))) & (p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_7c39_7c_27)))) & ~ (s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))))))) => ?[V_27res_7c39_7c_27, V_27s2_7c39_7c_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_app_4'(s('type.option.option'('type.num.num'),V_27loc__opt_27),s('type.closSem.v',V_27f_7c39_7c_27),s('type.list.list'('type.closSem.v'),V_27args_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_7c39_7c_27))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27s2_7c39_7c_27))) & (p(s('bool','const.evalProps.result_rel_4'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.LIST_REL_1'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'))),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_7c39_7c_27)))) & p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s2_27),s('type.closSem.state'(V_27FFI_27),V_27s2_7c39_7c_27)))))))).
fof('thm.clos_annotateProof.clos_annotateProof_22_prove_ltb', axiom, ![V_27x_27, V_27env_7c39_7c_27]: p(s('bool','const.pred_set.SUBSET_2'(s('fun'('type.num.num','bool'),V_27x_27),s('fun'('type.num.num','bool'),'const.clos_annotateProof.env_ok_5'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'),s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27))))))).
fof('thm.clos_annotateProof.annotate_correct', axiom, ![V_27FFI_27]: ![V_27xs_27, V_27t_7c49_7c_27, V_27s2_27, V_27s_7c49_7c_27, V_27res_27, V_27env_7c39_7c_27]: ((s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),'const.list.NIL_0'),s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.closSem.state'(V_27FFI_27),V_27s2_27))) & (~ (s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27) = s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.closSem.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('type.list.list'('type.closLang.exp'),V_27xs_27)))) & (p(s('bool','const.finite_map.FEVERY_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.closLang.exp'),'bool'),'const.closProps.every_Fn_vs_NONE_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.list.list'('type.closLang.exp')),'_dst_x0x1x0_3'(s('fun'('type.closLang.exp','fun'('type.list.list'('type.closLang.exp'),'type.list.list'('type.closLang.exp'))),'const.list.CONS_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.closLang.exp'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.closLang.exp'),'type.closLang.exp'),'const.pair.SND_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'type.pair.prod'('type.num.num','type.closLang.exp')),'const.pair.SND_0'))),s('type.list.list'('type.closLang.exp'),'const.list.NIL_0'))))),s('type.finite_map.fmap'('type.num.num','type.pair.prod'('type.num.num','type.closLang.exp')),'const.closSem.state_code_1'(s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27)))))) & p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s_7c49_7c_27),s('type.closSem.state'(V_27FFI_27),V_27t_7c49_7c_27)))))))) => ?[V_27res_7c39_7c_27, V_27t2_27]: (s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.closSem.evaluate_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27))),'const.pair.,_2'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))),s('type.pair.prod'('type.list.list'('type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.list.list'('type.closSem.v'),V_27env_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27t_7c49_7c_27))))))) = s('type.pair.prod'('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),'type.closSem.state'(V_27FFI_27)),'const.pair.,_2'(s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_7c39_7c_27),s('type.closSem.state'(V_27FFI_27),V_27t2_27))) & (p(s('bool','const.evalProps.result_rel_4'(s('fun'('type.list.list'('type.closSem.v'),'fun'('type.list.list'('type.closSem.v'),'bool')),'const.list.LIST_REL_1'(s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'))),s('fun'('type.closSem.v','fun'('type.closSem.v','bool')),'const.clos_annotateProof.v_rel_0'),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_27),s('type.semanticPrimitives.result'('type.list.list'('type.closSem.v'),'type.closSem.v'),V_27res_7c39_7c_27)))) & p(s('bool','const.clos_annotateProof.state_rel_2'(s('type.closSem.state'(V_27FFI_27),V_27s2_27),s('type.closSem.state'(V_27FFI_27),V_27t2_27)))))))).
fof('thm.clos_annotateProof.every_Fn_vs_SOME_shift', axiom, ![V_27a_27, V_27b_27, V_27c_27, V_27d_27]: p(s('bool','const.closProps.every_Fn_vs_SOME_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),V_27a_27),s('type.num.num',V_27b_27),s('type.num.num',V_27c_27),s('type.sptree.spt'('type.num.num'),V_27d_27))))))).
fof('thm.clos_annotateProof.every_Fn_vs_SOME_annotate', axiom, ![V_27es_27]: p(s('bool','const.closProps.every_Fn_vs_SOME_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))))))).
fof('thm.clos_annotateProof.every_Fn_SOME_shift', axiom, ![V_27a_27, V_27b_27, V_27c_27, V_27d_27]: s('bool','const.closProps.every_Fn_SOME_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),V_27a_27),s('type.num.num',V_27b_27),s('type.num.num',V_27c_27),s('type.sptree.spt'('type.num.num'),V_27d_27))))) = s('bool','const.closProps.every_Fn_SOME_1'(s('type.list.list'('type.closLang.exp'),V_27a_27)))).
fof('thm.clos_annotateProof.every_Fn_SOME_free', axiom, ![V_27es_27]: s('bool','const.closProps.every_Fn_SOME_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))))))) = s('bool','const.closProps.every_Fn_SOME_1'(s('type.list.list'('type.closLang.exp'),V_27es_27)))).
fof('thm.clos_annotateProof.every_Fn_SOME_annotate', axiom, ![V_27es_27]: s('bool','const.closProps.every_Fn_SOME_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),V_27es_27))))) = s('bool','const.closProps.every_Fn_SOME_1'(s('type.list.list'('type.closLang.exp'),V_27es_27)))).
fof('thm.clos_annotateProof.clos_annotateProof_29_prove_ltb', axiom, ![V_27xs_27, V_27env_27, V_27s_7c49_7c_27, V_27env_7c39_7c_27]: s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.shift_4'(s('type.list.list'('type.closLang.exp'),V_27xs_27),s('type.num.num',V_27env_27),s('type.num.num',V_27s_7c49_7c_27),s('type.sptree.spt'('type.num.num'),V_27env_7c39_7c_27))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))).
fof('thm.clos_annotateProof.clos_annotateProof_3|48|_prove_ltb', axiom, ![V_27xs_27]: s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.pair.FST_1'(s('type.pair.prod'('type.list.list'('type.closLang.exp'),'type.db_vars.db_var_set'),'const.clos_free.free_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27))))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27xs_27)))).
fof('thm.clos_annotateProof.annotate_code_locs', axiom, ![V_27ls_27]: s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),'const.clos_annotate.annotate_1'(s('type.list.list'('type.closLang.exp'),V_27ls_27))))) = s('type.list.list'('type.num.num'),'const.closProps.code_locs_1'(s('type.list.list'('type.closLang.exp'),V_27ls_27)))).
