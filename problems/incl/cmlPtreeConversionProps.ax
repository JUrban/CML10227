fof('thm.cmlPtreeConversionProps.ptree_head_TOK|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27sym_27, V_27pt_27]: (s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27))) = s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27sym_27))) <=> s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27) = s('type.grammar.parsetree'(V_27A_27,V_27B_27),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27sym_27))))))).
fof('thm.cmlPtreeConversionProps.ptree_head_TOK|split|1', axiom, ![V_27B_27,V_27A_27]: ![V_27sym_27, V_27pt_27]: (s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27sym_27))) = s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27))) <=> s('type.grammar.parsetree'(V_27A_27,V_27B_27),V_27pt_27) = s('type.grammar.parsetree'(V_27A_27,V_27B_27),'const.grammar.Lf_1'(s('type.grammar.symbol'(V_27A_27,V_27B_27),'const.grammar.TOK_1'(s(V_27A_27,V_27sym_27))))))).
fof('thm.cmlPtreeConversionProps.UQTyOp_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQTyOp_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27utyop_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.cmlPtreeConversion.ptree_UQTyop_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27utyop_27))))).
fof('thm.cmlPtreeConversionProps.TyOp_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTyOp_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27tyop_27]: s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_Tyop_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27tyop_27))))).
fof('thm.cmlPtreeConversionProps.TyvarN_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTyvarN_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27tyvn_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.cmlPtreeConversion.ptree_TyvarN_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27tyvn_27))))).
fof('ARITY_3_4_const.cmlPtreeConversion.ptree_linfix', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.list.list'(V_27A_27)),'happ'(s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'('type.list.list'(V_27A_27))),'const.cmlPtreeConversion.ptree_linfix_3'(s('type.gram.MMLnonT',VV0),s('type.tokens.token',VV1),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'(V_27A_27)),VV2))),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),VV3))) = s('type.option.option'('type.list.list'(V_27A_27)),'const.cmlPtreeConversion.ptree_linfix_4'(s('type.gram.MMLnonT',VV0),s('type.tokens.token',VV1),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'(V_27A_27)),VV2),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),VV3)))).
fof('thm.cmlPtreeConversionProps.TyVarList_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTyVarList_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27tyvnms_27]: s('type.option.option'('type.list.list'('type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_linfix_4'(s('type.gram.MMLnonT','const.gram.nTyVarList_0'),s('type.tokens.token','const.tokens.CommaT_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'('type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_TyvarN_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.list.list'('type.list.list'('type.string.char')),V_27tyvnms_27))))).
fof('thm.cmlPtreeConversionProps.TypeName_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeName_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27tn_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_TypeName_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),V_27tn_27))))).
fof('thm.cmlPtreeConversionProps.tuplify_OK', axiom, ![V_27tl_27]: (~ (s('type.list.list'('type.ast.t'),V_27tl_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0')) => ?[V_27t_27]: s('type.option.option'('type.ast.t'),'const.cmlPtreeConversion.tuplify_1'(s('type.list.list'('type.ast.t'),V_27tl_27))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27))))).
fof('thm.cmlPtreeConversionProps.Type_OK|48|', axiom, ![V_27toks_27, V_27pt_27, V_27N_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) => (((p(s('bool','const.bool.IN_2'(s('type.gram.MMLnonT',V_27N_27),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nType_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nDType_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nTbase_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.EMPTY_0')))))))))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',V_27N_27)))))) => ?[V_27t_27]: s('type.option.option'('type.ast.t'),'const.cmlPtreeConversion.ptree_Type_2'(s('type.gram.MMLnonT',V_27N_27),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPType_0'))))) => ?[V_27tl_27]: (s('type.option.option'('type.list.list'('type.ast.t')),'const.cmlPtreeConversion.ptree_PType_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.t')),'const.option.SOME_1'(s('type.list.list'('type.ast.t'),V_27tl_27))) & ~ (s('type.list.list'('type.ast.t'),V_27tl_27) = s('type.list.list'('type.ast.t'),'const.list.NIL_0')))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeList|49|_0'))))) => ?[V_27tl_27]: s('type.option.option'('type.list.list'('type.ast.t')),'const.cmlPtreeConversion.ptree_TypeList|49|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.t')),'const.option.SOME_1'(s('type.list.list'('type.ast.t'),V_27tl_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeList2_0'))))) => ?[V_27tl_27]: s('type.option.option'('type.list.list'('type.ast.t')),'const.cmlPtreeConversion.ptree_Typelist2_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.t')),'const.option.SOME_1'(s('type.list.list'('type.ast.t'),V_27tl_27))))))))).
fof('thm.cmlPtreeConversionProps.Type_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nType_0'))))))) => ?[V_27t_27]: s('type.option.option'('type.ast.t'),'const.cmlPtreeConversion.ptree_Type_2'(s('type.gram.MMLnonT','const.gram.nType_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.t'),'const.option.SOME_1'(s('type.ast.t',V_27t_27))))).
fof('thm.cmlPtreeConversionProps.V_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nV_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27i_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.cmlPtreeConversion.ptree_V_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27i_27))))).
fof('thm.cmlPtreeConversionProps.FQV_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFQV_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27i_27]: s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_FQV_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i_27))))).
fof('thm.cmlPtreeConversionProps.UQConstructorName_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nUQConstructorName_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27i_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.cmlPtreeConversion.ptree_UQConstructorName_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27i_27))))).
fof('thm.cmlPtreeConversionProps.ConstructorName_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nConstructorName_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27i_27]: s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_ConstructorName_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27i_27))))).
fof('thm.cmlPtreeConversionProps.Ops_OK|48|', axiom, ![V_27toks_27, V_27pt_27, V_27N_27]: ((p(s('bool','const.bool.IN_2'(s('type.gram.MMLnonT',V_27N_27),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nMultOps_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nAddOps_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nListOps_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nRelOps_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nCompOps_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.EMPTY_0')))))))))))))) & (p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',V_27N_27)))))))) => ?[V_27opv_27]: s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.cmlPtreeConversion.ptree_Op_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.id'('type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27opv_27))))).
fof('thm.cmlPtreeConversionProps.cmlPtreeConversionProps_|49|4_prove_ltb', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27l_7c49_7c_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27l2_27))) <=> s('type.list.list'('type.tokens.token'),V_27l_7c49_7c_27) = s('type.list.list'('type.tokens.token'),V_27l2_27))).
fof('thm.cmlPtreeConversionProps.Pattern_OK|48|', axiom, ![V_27toks_27, V_27pt_27, V_27N_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) => (((p(s('bool','const.bool.IN_2'(s('type.gram.MMLnonT',V_27N_27),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nPattern_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nPtuple_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nPapp_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nPbase_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.EMPTY_0')))))))))))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',V_27N_27)))))) => ?[V_27p_27]: s('type.option.option'('type.ast.pat'),'const.cmlPtreeConversion.ptree_Pattern_2'(s('type.gram.MMLnonT',V_27N_27),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.pat'),'const.option.SOME_1'(s('type.ast.pat',V_27p_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPatternList_0'))))) => ?[V_27pl_27]: (s('type.option.option'('type.list.list'('type.ast.pat')),'const.cmlPtreeConversion.ptree_Plist_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.pat')),'const.option.SOME_1'(s('type.list.list'('type.ast.pat'),V_27pl_27))) & ~ (s('type.list.list'('type.ast.pat'),V_27pl_27) = s('type.list.list'('type.ast.pat'),'const.list.NIL_0'))))))).
fof('thm.cmlPtreeConversionProps.Pattern_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPattern_0'))))))) => ?[V_27p_27]: s('type.option.option'('type.ast.pat'),'const.cmlPtreeConversion.ptree_Pattern_2'(s('type.gram.MMLnonT','const.gram.nPattern_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.pat'),'const.option.SOME_1'(s('type.ast.pat',V_27p_27))))).
fof('thm.cmlPtreeConversionProps.Eseq_encode_OK', axiom, ![V_27l_27]: (~ (s('type.list.list'('type.ast.exp'),V_27l_27) = s('type.list.list'('type.ast.exp'),'const.list.NIL_0')) => ?[V_27e_27]: s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.Eseq_encode_1'(s('type.list.list'('type.ast.exp'),V_27l_27))) = s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',V_27e_27))))).
fof('thm.cmlPtreeConversionProps.OpID_OK', axiom, ![V_27toks_27, V_27pt_27]: ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nOpID_0'))))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))))) => ?[V_27astv_27]: s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_OpID_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',V_27astv_27))))).
fof('thm.cmlPtreeConversionProps.PbaseList|49|_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPbaseList|49|_0'))))))) => ?[V_27pl_27]: (s('type.option.option'('type.list.list'('type.ast.pat')),'const.cmlPtreeConversion.ptree_PbaseList|49|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.pat')),'const.option.SOME_1'(s('type.list.list'('type.ast.pat'),V_27pl_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.ast.pat'),V_27pl_27))))))))).
fof('thm.cmlPtreeConversionProps.E_OK|48|', axiom, ![V_27toks_27, V_27pt_27, V_27N_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) => (((p(s('bool','const.bool.IN_2'(s('type.gram.MMLnonT',V_27N_27),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nE|39|_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEhandle_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicOR_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElogicAND_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtuple_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEmult_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEadd_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nElistop_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nErel_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEcomp_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbefore_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEtyped_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEapp_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.INSERT_2'(s('type.gram.MMLnonT','const.gram.nEbase_0'),s('fun'('type.gram.MMLnonT','bool'),'const.pred_set.EMPTY_0')))))))))))))))))))))))))))))))))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT',V_27N_27)))))) => ?[V_27t_27]: s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT',V_27N_27),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',V_27t_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nEseq_0'))))) => ?[V_27el_27]: (s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Eseq_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),V_27el_27))) & ~ (s('type.list.list'('type.ast.exp'),V_27el_27) = s('type.list.list'('type.ast.exp'),'const.list.NIL_0')))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPEs_0'))))) => ?[V_27pes_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.cmlPtreeConversion.ptree_PEs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp'))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.ast.pat','type.ast.exp')),V_27pes_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist2_0'))))) => ?[V_27el_27]: s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist2_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),V_27el_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'))))) => ?[V_27el_27]: s('type.option.option'('type.list.list'('type.ast.exp')),'const.cmlPtreeConversion.ptree_Exprlist_2'(s('type.gram.MMLnonT','const.gram.nElist|49|_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.exp')),'const.option.SOME_1'(s('type.list.list'('type.ast.exp'),V_27el_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDecs_0'))))) => ?[V_27lds_27]: s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.cmlPtreeConversion.ptree_LetDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))))),'const.option.SOME_1'(s('type.list.list'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),V_27lds_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE_0'))))) => ?[V_27pe_27]: s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),V_27pe_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nPE|39|_0'))))) => ?[V_27pe_27]: s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.cmlPtreeConversion.ptree_PE|39|_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.pair.prod'('type.ast.pat','type.ast.exp')),'const.option.SOME_1'(s('type.pair.prod'('type.ast.pat','type.ast.exp'),V_27pe_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nLetDec_0'))))) => ?[V_27ld_27]: s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.cmlPtreeConversion.ptree_LetDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))))),'const.option.SOME_1'(s('type.sum.sum'('type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),V_27ld_27)))) & ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))) => ?[V_27fds_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27fds_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nFDecl_0'))))) => ?[V_27fd_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.cmlPtreeConversion.ptree_FDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')),V_27fd_27)))))))))))))))).
fof('thm.cmlPtreeConversionProps.E_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nE_0'))))))) => ?[V_27t_27]: s('type.option.option'('type.ast.exp'),'const.cmlPtreeConversion.ptree_Expr_2'(s('type.gram.MMLnonT','const.gram.nE_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.exp'),'const.option.SOME_1'(s('type.ast.exp',V_27t_27))))).
fof('thm.cmlPtreeConversionProps.AndFDecls_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) & s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nAndFDecls_0'))))))) => ?[V_27fds_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.cmlPtreeConversion.ptree_AndFDecls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27fds_27))))).
fof('thm.cmlPtreeConversionProps.Dconstructor_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDconstructor_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27dc_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'const.cmlPtreeConversion.ptree_Dconstructor_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')),V_27dc_27))))).
fof('thm.cmlPtreeConversionProps.DtypeCons_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDtypeCons_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27dtc_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.cmlPtreeConversion.ptree_linfix_4'(s('type.gram.MMLnonT','const.gram.nDtypeCons_0'),s('type.tokens.token','const.tokens.BarT_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.cmlPtreeConversion.ptree_Dconstructor_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))),V_27dtc_27))))).
fof('thm.cmlPtreeConversionProps.DtypeDecl_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDtypeDecl_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27dtd_27]: s('type.option.option'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'const.cmlPtreeConversion.ptree_DtypeDecl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))),V_27dtd_27))))).
fof('thm.cmlPtreeConversionProps.DtypeDecls_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDtypeDecls_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27td_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.cmlPtreeConversion.ptree_linfix_4'(s('type.gram.MMLnonT','const.gram.nDtypeDecls_0'),s('type.tokens.token','const.tokens.AndT_0'),s('fun'('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),'type.option.option'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.cmlPtreeConversion.ptree_DtypeDecl_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27td_27))))).
fof('thm.cmlPtreeConversionProps.TypeDec_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeDec_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27td_27]: s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.cmlPtreeConversion.ptree_TypeDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t'))))))),'const.option.SOME_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.list.list'('type.string.char')),'type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.ast.t')))))),V_27td_27))))).
fof('thm.cmlPtreeConversionProps.TypeAbbrevDec_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTypeAbbrevDec_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27td_27]: s('type.option.option'('type.ast.dec'),'const.cmlPtreeConversion.ptree_TypeAbbrevDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.dec'),'const.option.SOME_1'(s('type.ast.dec',V_27td_27))))).
fof('thm.cmlPtreeConversionProps.Decl_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDecl_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27d_27]: s('type.option.option'('type.ast.dec'),'const.cmlPtreeConversion.ptree_Decl_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.dec'),'const.option.SOME_1'(s('type.ast.dec',V_27d_27))))).
fof('thm.cmlPtreeConversionProps.Decls_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nDecls_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27ds_27]: s('type.option.option'('type.list.list'('type.ast.dec')),'const.cmlPtreeConversion.ptree_Decls_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.dec')),'const.option.SOME_1'(s('type.list.list'('type.ast.dec'),V_27ds_27))))).
fof('thm.cmlPtreeConversionProps.OptTypEqn_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nOptTypEqn_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27typopt_27]: s('type.option.option'('type.option.option'('type.ast.t')),'const.cmlPtreeConversion.ptree_OptTypEqn_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.option.option'('type.ast.t')),'const.option.SOME_1'(s('type.option.option'('type.ast.t'),V_27typopt_27))))).
fof('thm.cmlPtreeConversionProps.SpecLine_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nSpecLine_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27sl_27]: s('type.option.option'('type.ast.spec'),'const.cmlPtreeConversion.ptree_SpecLine_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.spec'),'const.option.SOME_1'(s('type.ast.spec',V_27sl_27))))).
fof('thm.cmlPtreeConversionProps.SpecLineList_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nSpecLineList_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27sl_27]: s('type.option.option'('type.list.list'('type.ast.spec')),'const.cmlPtreeConversion.ptree_SpeclineList_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.spec')),'const.option.SOME_1'(s('type.list.list'('type.ast.spec'),V_27sl_27))))).
fof('thm.cmlPtreeConversionProps.StructName_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nStructName_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27sl_27]: s('type.option.option'('type.list.list'('type.string.char')),'const.cmlPtreeConversion.ptree_StructName_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.string.char')),'const.option.SOME_1'(s('type.list.list'('type.string.char'),V_27sl_27))))).
fof('thm.cmlPtreeConversionProps.SignatureValue_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nSignatureValue_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27sv_27]: s('type.option.option'('type.list.list'('type.ast.spec')),'const.cmlPtreeConversion.ptree_SignatureValue_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.spec')),'const.option.SOME_1'(s('type.list.list'('type.ast.spec'),V_27sv_27))))).
fof('thm.cmlPtreeConversionProps.Structure_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nStructure_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27s_27]: s('type.option.option'('type.ast.top'),'const.cmlPtreeConversion.ptree_Structure_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.top'),'const.option.SOME_1'(s('type.ast.top',V_27s_27))))).
fof('thm.cmlPtreeConversionProps.TopLevelDec_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTopLevelDec_0'))))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))))) => ?[V_27t_27]: s('type.option.option'('type.ast.top'),'const.cmlPtreeConversion.ptree_TopLevelDec_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.ast.top'),'const.option.SOME_1'(s('type.ast.top',V_27t_27))))).
fof('thm.cmlPtreeConversionProps.TopLevelDecs_OK', axiom, ![V_27toks_27, V_27pt_27]: ((p(s('bool','const.grammar.valid_ptree_2'(s('type.grammar.grammar'('type.tokens.token','type.gram.MMLnonT'),'const.gram.cmlG_0'),s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) & s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.list.MAP_2'(s('fun'('type.tokens.token','type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.TOK_0'),s('type.list.list'('type.tokens.token'),V_27toks_27))) = s('type.list.list'('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT')),'const.grammar.ptree_fringe_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27)))) => ((s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nTopLevelDecs_0'))))) => ?[V_27ts_27]: s('type.option.option'('type.list.list'('type.ast.top')),'const.cmlPtreeConversion.ptree_TopLevelDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.top')),'const.option.SOME_1'(s('type.list.list'('type.ast.top'),V_27ts_27)))) & (s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.ptree_head_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.grammar.symbol'('type.tokens.token','type.gram.MMLnonT'),'const.grammar.NT_1'(s('type.sum.sum'('type.gram.MMLnonT','type.num.num'),'const.sum.INL_1'(s('type.gram.MMLnonT','const.gram.nNonETopLevelDecs_0'))))) => ?[V_27ts_27]: s('type.option.option'('type.list.list'('type.ast.top')),'const.cmlPtreeConversion.ptree_NonETopLevelDecs_1'(s('type.grammar.parsetree'('type.tokens.token','type.gram.MMLnonT'),V_27pt_27))) = s('type.option.option'('type.list.list'('type.ast.top')),'const.option.SOME_1'(s('type.list.list'('type.ast.top'),V_27ts_27))))))).
