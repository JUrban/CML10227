fof('thm.logroot.logroot_|48|_prove_ltb', axiom, ![V_27d_27, V_27c_27, V_27b_27, V_27a_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27c_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27d_27))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27c_27),s('type.num.num',V_27d_27)))))))).
fof('thm.logroot.logroot_|49|_prove_ltb', axiom, ![V_27a_27, V_27b_27, V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27r_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27r_27))))))))).
fof('thm.logroot.logroot_2_prove_ltb', axiom, ![V_27b_27, V_27a_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27)))))))).
fof('thm.logroot.logroot_3_prove_ltb', axiom, ![V_27e_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27e_27)))) => (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27e_27),s('type.num.num',V_27a_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27e_27),s('type.num.num',V_27b_27))))))))).
fof('thm.logroot.LT_EXP_ISO', axiom, ![V_27e_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27e_27)))) => s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27e_27),s('type.num.num',V_27a_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27e_27),s('type.num.num',V_27b_27))))))).
fof('thm.logroot.LE_EXP_ISO', axiom, ![V_27e_27, V_27a_27, V_27b_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27e_27)))) => s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27e_27),s('type.num.num',V_27a_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27e_27),s('type.num.num',V_27b_27))))))).
fof('thm.logroot.EXP_LT_ISO', axiom, ![V_27a_27, V_27b_27, V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => s('bool','const.prim_rec.<_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27r_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27r_27))))))).
fof('thm.logroot.EXP_LE_ISO', axiom, ![V_27a_27, V_27b_27, V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27r_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27r_27))))))).
fof('thm.logroot.ROOT_exists', axiom, ![V_27r_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => ?[V_27rt_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27rt_27),s('type.num.num',V_27r_27))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27rt_27))),s('type.num.num',V_27r_27))))))))).
fof('thm.logroot.ROOT', axiom, ![V_27r_27, V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27r_27))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27n_27))))),s('type.num.num',V_27r_27))))))))).
fof('thm.logroot.ROOT_UNIQUE', axiom, ![V_27r_27, V_27n_27, V_27p_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27p_27),s('type.num.num',V_27r_27))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27p_27))),s('type.num.num',V_27r_27))))))) => s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27n_27))) = s('type.num.num',V_27p_27))).
fof('thm.logroot.logroot_|49||49|_prove_ltb', axiom, ![V_27a_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))))) => ?[V_27log_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27log_27))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27log_27))))))))))).
fof('thm.logroot.LOG_exists', axiom, ?[V_27f_27]: ![V_27a_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))))) => (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),V_27f_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27n_27))))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.num.SUC_1'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),V_27f_27),s('type.num.num',V_27a_27))),s('type.num.num',V_27n_27))))))))))))).
fof('thm.logroot.LOG', axiom, ![V_27a_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))))) => (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))))))))))))).
fof('thm.logroot.LOG_UNIQUE', axiom, ![V_27a_27, V_27n_27, V_27p_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27p_27))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27p_27))))))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))) = s('type.num.num',V_27p_27))).
fof('thm.logroot.LOG_ADD|49|', axiom, ![V_27n_27, V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))),s('type.num.num',V_27b_27))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27b_27))))))))).
fof('thm.logroot.logroot_|49|6_prove_ltb', axiom, ![V_27a_27]: s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27a_27)))).
fof('thm.logroot.LOG_BASE', axiom, ![V_27a_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27a_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.logroot.LOG_EXP', axiom, ![V_27n_27, V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27b_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))))))).
fof('thm.logroot.LOG_|49|', axiom, ![V_27a_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0'))).
fof('thm.logroot.LOG_DIV', axiom, ![V_27a_27, V_27x_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27x_27))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27x_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27a_27))))))))).
fof('thm.logroot.LOG_ADD', axiom, ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27c_27))))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27c_27))))))) = s('type.num.num',V_27c_27))).
fof('thm.logroot.LOG_LE_MONO', axiom, ![V_27a_27, V_27x_27, V_27y_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27x_27))))) => (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27)))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27x_27))),s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27y_27))))))))).
fof('thm.logroot.LOG_RWT', axiom, ![V_27m_27, V_27n_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27m_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27))),s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27m_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27))))))))))).
fof('thm.logroot.LOG_EQ_|48|', axiom, ![V_27a_27, V_27b_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27))))) => (s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))) = s('type.num.num','const.num.|48|_0') <=> p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27a_27))))))).
fof('thm.logroot.LOG_MULT', axiom, ![V_27b_27, V_27x_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27x_27))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27x_27))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27x_27))))))).
fof('thm.logroot.LOG_add_digit', axiom, ![V_27b_27, V_27x_27, V_27y_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27b_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27y_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27b_27)))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27y_27))),s('type.num.num',V_27x_27))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27y_27))))))).
fof('thm.logroot.logroot_27_prove_ltb', axiom, ![V_27d_27, V_27c_27, V_27b_27, V_27a_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27c_27)))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27d_27))))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27c_27),s('type.num.num',V_27d_27)))))))).
fof('thm.logroot.logroot_28_prove_ltb', axiom, ![V_27a_27, V_27b_27, V_27c_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27b_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27c_27))))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num',V_27c_27))),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27c_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27c_27)))))))))).
fof('thm.logroot.logroot_29_prove_ltb', axiom, ![V_27e_27, V_27b_27, V_27a_27]: s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27e_27))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27e_27))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num',V_27e_27)))).
fof('thm.logroot.ROOT_DIV', axiom, ![V_27r_27, V_27x_27, V_27y_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27y_27))))) => s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27x_27))),s('type.num.num',V_27y_27))) = s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27y_27),s('type.num.num',V_27r_27))))))))).
fof('thm.logroot.ROOT_LE_MONO', axiom, ![V_27r_27, V_27x_27, V_27y_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27)))) => p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27x_27))),s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27y_27))))))))).
fof('thm.logroot.EXP_MUL', axiom, ![V_27a_27, V_27b_27, V_27c_27]: s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27b_27))),s('type.num.num',V_27c_27))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27b_27),s('type.num.num',V_27c_27)))))).
fof('thm.logroot.LOG_ROOT', axiom, ![V_27a_27, V_27x_27, V_27r_27]: ((p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27a_27)))) & (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27x_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))))) => s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27x_27))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.logroot.LOG_2'(s('type.num.num',V_27a_27),s('type.num.num',V_27x_27))),s('type.num.num',V_27r_27))))).
fof('thm.logroot.logroot_34_prove_ltb', axiom, ![V_27n_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))))).
fof('thm.logroot.LOG_MOD', axiom, ![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27n_27)))) => s('type.num.num',V_27n_27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.logroot.LOG_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.logroot.LOG_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))))))))))).
fof('thm.logroot.logroot_36_prove_ltb', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27)))) => s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',V_27r_27))) = s('type.num.num','const.num.|48|_0'))).
fof('ARITY_0_2_const.arithmetic.EXP', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.EXP_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.logroot.ROOT_COMPUTE', axiom, ![V_27r_27, V_27n_27]: (p(s('bool','happ'(s('fun'('type.num.num','bool'),'const.prim_rec.<_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',V_27r_27)))) => (s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.|48|_0') & s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.bool.LET_2'(s('fun'('type.num.num','type.num.num'),'_dst_x0x1x1x1_4'(s('fun'('bool','fun'('type.num.num','fun'('type.num.num','type.num.num'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('type.num.num','bool'),'const.prim_rec.<_1'(s('type.num.num',V_27n_27))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.EXP_0'),s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('type.num.num',V_27r_27))))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.logroot.ROOT_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.EXP_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27r_27)))))))))))))).
fof('thm.logroot.SQRTd_def', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num',V_27n_27))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.logroot.ROOT_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.logroot.ROOT_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27))),s('type.num.num','const.logroot.ROOT_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27n_27)))))))))).
fof('thm.logroot.logroot_4|48|_prove_ltb', axiom, s('type.num.num','const.logroot.ROOT_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.|48|_0')).
fof('_dst_x00x01x10x11_ax', axiom, ![VA,VA3,VA4,VA2,VA5,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x01x10x11_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA2,VA3),V__0),s('fun'(VA1,VA4),V__1),s('fun'(VA1,'fun'(VA2,VA5)),V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x1x0x1_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA2,VA3),V__0),s(VA4,'happ'(s('fun'(VA1,VA4),V__1),s(VA1,V__z))),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__2),s(VA1,V__z)))))).
fof('thm.logroot.iSQRT|48|_def', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT|48|_1'(s('type.num.num',V_27n_27))) = s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x01x10x11_4'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.SND_0'))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.SND_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.iSQRT|49|_def', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT|49|_1'(s('type.num.num',V_27n_27))) = s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x01x10x11_4'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.SND_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1x1_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.SND_0'))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num',V_27n_27)))))).
fof('_dst_x000x001x110x101_ax', axiom, ![VA,VA4,VA2,VA5,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x001x110x101_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),V__0),s('fun'(VA1,'fun'(VA2,VA5)),V__1),s('fun'(VA1,'fun'(VA3,VA6)),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x01x10x01_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA3,VA4),V__0),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__1),s(VA1,V__z))),s('fun'(VA3,VA6),'happ'(s('fun'(VA1,'fun'(VA3,VA6)),V__2),s(VA1,V__z)))))).
fof('thm.logroot.iSQRT2_def', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT2_1'(s('type.num.num',V_27n_27))) = s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x11x11_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_dst_x000x001x110x101_4'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.SND_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.iSQRT3_def', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT3_1'(s('type.num.num',V_27n_27))) = s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x11x11_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_dst_x000x001x110x101_4'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'_dst_x00x01x10_3'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.num.SUC_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.SND_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|0', axiom, s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))).
fof('thm.logroot.numeral_sqrt|split|1', axiom, s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.|48|_0')))).
fof('thm.logroot.numeral_sqrt|split|2', axiom, s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.logroot.numeral_sqrt|split|3', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT3_1'(s('type.num.num',V_27n_27)))).
fof('thm.logroot.numeral_sqrt|split|4', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT|48|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|5', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|6', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|7', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT|48|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|8', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|9', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_sqrt|split|10', axiom, ![V_27n_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.iSQRT3_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27)))))).
fof('thm.logroot.numeral_root2', axiom, ![V_27n_27]: s('type.num.num','const.logroot.ROOT_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',V_27n_27))))) = s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.logroot.SQRTd_1'(s('type.num.num',V_27n_27)))))).
