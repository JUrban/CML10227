fof('thm.string.string_|48|_prove_ltb', axiom, ?[V_27n_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))).
fof('thm.string.char_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('fun'('type.string.char','type.num.num'),V_27rep_27))))).
fof('thm.string.char_BIJ|split|0', axiom, ![V_27a_27]: s('type.string.char','const.string.CHR_1'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))))) = s('type.string.char',V_27a_27)).
fof('thm.string.char_BIJ|split|1', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) <=> s('type.num.num','const.string.ORD_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27r_27))))) = s('type.num.num',V_27r_27))).
fof('thm.string.ORD_|49||49|', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))) = s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_7c39_7c_27))) <=> s('type.string.char',V_27a_27) = s('type.string.char',V_27a_7c39_7c_27))).
fof('thm.string.CHR_|49||49|', axiom, ![V_27r_27, V_27r_7c39_7c_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) => (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_7c39_7c_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) => (s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27r_27))) = s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27r_7c39_7c_27))) <=> s('type.num.num',V_27r_27) = s('type.num.num',V_27r_7c39_7c_27))))).
fof('thm.string.ORD_ONTO', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) <=> ?[V_27a_27]: s('type.num.num',V_27r_27) = s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))))).
fof('thm.string.CHR_ONTO', axiom, ![V_27a_27]: ?[V_27r_27]: (s('type.string.char',V_27a_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27r_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))).
fof('thm.string.ORD_CHR', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) <=> s('type.num.num','const.string.ORD_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27r_27))))) = s('type.num.num',V_27r_27))).
fof('thm.string.ORD_CHR_RWT', axiom, ![V_27r_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27r_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) => s('type.num.num','const.string.ORD_1'(s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27r_27))))) = s('type.num.num',V_27r_27))).
fof('ARITY_0_1_const.string.ORD', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('type.string.char',VV0))) = s('type.num.num','const.string.ORD_1'(s('type.string.char',VV0)))).
fof('thm.string.ORD_CHR_COMPUTE', axiom, ![V_27_3e_7c32_7c255_27, V_27n_27]: s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27n_27))))) = s('type.num.num','const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))),s('type.num.num',V_27n_27),s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),'const.combin.FAIL_2'(s('fun'('type.string.char','type.num.num'),'const.string.ORD_0'),s('bool',V_27_3e_7c32_7c255_27))),s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27n_27)))))))).
fof('thm.string.ORD_BOUND', axiom, ![V_27c_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))).
fof('thm.string.char_nchotomy', axiom, ![V_27c_27]: ?[V_27n_27]: s('type.string.char',V_27c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27n_27)))).
fof('thm.string.ranged_char_nchotomy', axiom, ![V_27c_27]: ?[V_27n_27]: (s('type.string.char',V_27c_27) = s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27n_27))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))))).
fof('thm.string.isLower_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isLower_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))).
fof('ARITY_0_1_const.string.isUpper', axiom, ![VV0]: s('bool','happ'(s('fun'('type.string.char','bool'),'const.string.isUpper_0'),s('type.string.char',VV0))) = s('bool','const.string.isUpper_1'(s('type.string.char',VV0)))).
fof('thm.string.isUpper_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isUpper_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))).
fof('thm.string.isDigit_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isDigit_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))).
fof('ARITY_0_1_const.string.isAlpha', axiom, ![VV0]: s('bool','happ'(s('fun'('type.string.char','bool'),'const.string.isAlpha_0'),s('type.string.char',VV0))) = s('bool','const.string.isAlpha_1'(s('type.string.char',VV0)))).
fof('thm.string.isAlpha_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isAlpha_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.string.isLower_1'(s('type.string.char',V_27c_27)))) | p(s('bool','const.string.isUpper_1'(s('type.string.char',V_27c_27))))))).
fof('thm.string.isHexDigit_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isHexDigit_1'(s('type.string.char',V_27c_27)))) <=> ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) | ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))) | (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))).
fof('thm.string.isAlphaNum_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isAlphaNum_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.string.isAlpha_1'(s('type.string.char',V_27c_27)))) | p(s('bool','const.string.isDigit_1'(s('type.string.char',V_27c_27))))))).
fof('ARITY_0_1_const.string.isPrint', axiom, ![VV0]: s('bool','happ'(s('fun'('type.string.char','bool'),'const.string.isPrint_0'),s('type.string.char',VV0))) = s('bool','const.string.isPrint_1'(s('type.string.char',VV0)))).
fof('thm.string.isPrint_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isPrint_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))))))).
fof('thm.string.isSpace_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isSpace_1'(s('type.string.char',V_27c_27)))) <=> (s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | (p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27)))))) & p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))).
fof('thm.string.isGraph_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isGraph_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.string.isPrint_1'(s('type.string.char',V_27c_27)))) & ~ (p(s('bool','const.string.isSpace_1'(s('type.string.char',V_27c_27)))))))).
fof('thm.string.isPunct_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isPunct_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.string.isGraph_1'(s('type.string.char',V_27c_27)))) & ~ (p(s('bool','const.string.isAlphaNum_1'(s('type.string.char',V_27c_27)))))))).
fof('thm.string.isAscii_def', axiom, ![V_27c_27]: s('bool','const.string.isAscii_1'(s('type.string.char',V_27c_27))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))).
fof('thm.string.isCntrl_def', axiom, ![V_27c_27]: (p(s('bool','const.string.isCntrl_1'(s('type.string.char',V_27c_27)))) <=> (p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))))))))).
fof('thm.string.toLower_def', axiom, ![V_27c_27]: s('type.string.char','const.string.toLower_1'(s('type.string.char',V_27c_27))) = s('type.string.char','const.bool.COND_3'(s('bool','const.string.isUpper_1'(s('type.string.char',V_27c_27))),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.string.char',V_27c_27)))).
fof('thm.string.toUpper_def', axiom, ![V_27c_27]: s('type.string.char','const.string.toUpper_1'(s('type.string.char',V_27c_27))) = s('type.string.char','const.bool.COND_3'(s('bool','const.string.isLower_1'(s('type.string.char',V_27c_27))),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.string.char',V_27c_27)))).
fof('thm.string.char_lt_def', axiom, ![V_27a_27, V_27b_27]: s('bool','const.string.char_lt_2'(s('type.string.char',V_27a_27),s('type.string.char',V_27b_27))) = s('bool','const.prim_rec.<_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27b_27)))))).
fof('thm.string.char_le_def', axiom, ![V_27a_27, V_27b_27]: s('bool','const.string.char_le_2'(s('type.string.char',V_27a_27),s('type.string.char',V_27b_27))) = s('bool','const.arithmetic.<=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27b_27)))))).
fof('thm.string.char_gt_def', axiom, ![V_27a_27, V_27b_27]: s('bool','const.string.char_gt_2'(s('type.string.char',V_27a_27),s('type.string.char',V_27b_27))) = s('bool','const.arithmetic.>_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27b_27)))))).
fof('thm.string.char_ge_def', axiom, ![V_27a_27, V_27b_27]: s('bool','const.string.char_ge_2'(s('type.string.char',V_27a_27),s('type.string.char',V_27b_27))) = s('bool','const.arithmetic.>=_2'(s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27a_27))),s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27b_27)))))).
fof('thm.string.CHAR_EQ_THM', axiom, ![V_27c_7c49_7c_27, V_27c2_27]: (s('type.string.char',V_27c_7c49_7c_27) = s('type.string.char',V_27c2_27) <=> s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c_7c49_7c_27))) = s('type.num.num','const.string.ORD_1'(s('type.string.char',V_27c2_27))))).
fof('thm.string.CHAR_INDUCT_THM', axiom, ![V_27P_27]: (![V_27n_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))))))))) => p(s('bool','happ'(s('fun'('type.string.char','bool'),V_27P_27),s('type.string.char','const.string.CHR_1'(s('type.num.num',V_27n_27))))))) => ![V_27c_27]: p(s('bool','happ'(s('fun'('type.string.char','bool'),V_27P_27),s('type.string.char',V_27c_27)))))).
fof('ARITY_0_1_const.string.char_size', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.string.char','type.num.num'),'const.string.char_size_0'),s('type.string.char',VV0))) = s('type.num.num','const.string.char_size_1'(s('type.string.char',VV0)))).
fof('thm.string.char_size_def', axiom, ![V_27c_27]: s('type.num.num','const.string.char_size_1'(s('type.string.char',V_27c_27))) = s('type.num.num','const.num.|48|_0')).
fof('thm.string.SUB_def', axiom, ![V_27s_27, V_27n_27]: s('type.string.char','const.string.SUB_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.num.num'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.num.num',V_27n_27))))) = s('type.string.char','const.list.EL_2'(s('type.num.num',V_27n_27),s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.string.STR_def', axiom, ![V_27c_27]: s('type.list.list'('type.string.char'),'const.string.STR_1'(s('type.string.char',V_27c_27))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0')))).
fof('_dst_x1x0x0_ax', axiom, ![VA,VA1,VA2,VA3]: ![V__x, V__0, V__1, V__z]: s(VA,'happ'(s('fun'(VA1,VA),'_dst_x1x0x0_3'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s(VA2,V__0),s(VA3,V__1))),s(VA1,V__z))) = s(VA,'happ'(s('fun'(VA3,VA),'happ'(s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s(VA1,V__z))),s(VA2,V__0))),s(VA3,V__1)))).
fof('_dst_x01x10x00_ax', axiom, ![VA2,VA,VA3,VA1,VA4]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x10x00_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),V__x),s('fun'(VA1,VA3),V__0),s(VA4,V__1))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x0_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s(VA4,V__1)))).
fof('thm.string.TOCHAR_primitive_def', axiom, s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.string.TOCHAR_0') = s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.relation.WFREC_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'const.min.@_1'(s('fun'('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.list.list'('type.string.char'),'type.string.char'),'fun'('type.list.list'('type.string.char'),'type.string.char')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'type.string.char'),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.string.char')),'type.string.char'))),'const.list.list_CASE_0'),s('type.string.char','const.bool.ARB_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.string.char')),'_dst_x01x10x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.string.char')),'type.string.char'))),'const.list.list_CASE_0'),s('fun'('type.string.char','type.string.char'),'const.combin.I_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.string.char')),'_dst_x0_1'(s('fun'('type.list.list'('type.string.char'),'type.string.char'),'_dst_x0_1'(s('type.string.char','const.bool.ARB_0')))))))))))))).
fof('thm.string.string_38_prove_ltb', axiom, ![V_27a_27]: ((s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0') | (?[V_27c_27]: s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ?[V_27v6_27, V_27v4_27, V_27v5_27]: s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v6_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v4_27),s('type.list.list'('type.string.char'),V_27v5_27))))))) => (?[V_27c_27]: s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | (s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0') | ?[V_27v6_27, V_27v4_27, V_27v5_27]: s('type.list.list'('type.string.char'),V_27a_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v6_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v4_27),s('type.list.list'('type.string.char'),V_27v5_27))))))))).
fof('thm.string.TOCHAR_ind', axiom, ![V_27P_27]: ((![V_27c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) & ![V_27v6_27, V_27v4_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v6_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27v4_27),s('type.list.list'('type.string.char'),V_27v5_27)))))))))) => ![V_27v_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),V_27P_27),s('type.list.list'('type.string.char'),V_27v_27)))))).
fof('ARITY_0_1_const.string.TOCHAR', axiom, ![VV0]: s('type.string.char','happ'(s('fun'('type.list.list'('type.string.char'),'type.string.char'),'const.string.TOCHAR_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.string.char','const.string.TOCHAR_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.string.TOCHAR_def', axiom, ![V_27c_27]: s('type.string.char','const.string.TOCHAR_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) = s('type.string.char',V_27c_27)).
fof('thm.string.SUBSTRING_def', axiom, ![V_27s_27, V_27i_27, V_27n_27]: s('type.list.list'('type.string.char'),'const.string.SUBSTRING_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27))))))) = s('type.list.list'('type.string.char'),'const.rich_list.SEG_3'(s('type.num.num',V_27n_27),s('type.num.num',V_27i_27),s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.string.TRANSLATE_def', axiom, ![V_27f_27, V_27s_27]: s('type.list.list'('type.string.char'),'const.string.TRANSLATE_2'(s('fun'('type.string.char','type.list.list'('type.string.char')),V_27f_27),s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.string.char','type.list.list'('type.string.char')),V_27f_27),s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.string.string_43_prove_ltb', axiom, ![V_27A_27]: ![V_27P_27, V_27l_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),'const.pair.SND_1'(s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'const.rich_list.SPLITP_2'(s('fun'(V_27A_27,'bool'),V_27P_27),s('type.list.list'(V_27A_27),V_27l_27))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27l_27))))))).
fof('thm.string.string_44_prove_ltb', axiom, ![V_27A_27]: ![V_27l_27]: (~ (s('type.list.list'(V_27A_27),V_27l_27) = s('type.list.list'(V_27A_27),'const.list.NIL_0')) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),'const.list.TL_1'(s('type.list.list'(V_27A_27),V_27l_27))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(V_27A_27),V_27l_27)))))))).
fof('thm.string.string_46_prove_ltb', axiom, ![V_27a_27]: ((?[V_27P_27]: s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ?[V_27P_27, V_27h_27, V_27t_27]: s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27)))))) => (?[V_27P_27]: s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | ?[V_27P_27, V_27h_27, V_27t_27]: s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('fun'('type.string.char','bool'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27)))))))).
fof('thm.string.TOKENS_ind', axiom, ![V_27P_7c39_7c_27]: ((![V_27P_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) & ![V_27P_27, V_27h_27, V_27t_27]: ((![V_27l_27, V_27r_27]: ((s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27l_27),s('type.list.list'('type.string.char'),V_27r_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.rich_list.SPLITP_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))))) & p(s('bool','const.list.NULL_1'(s('type.list.list'('type.string.char'),V_27l_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.TL_1'(s('type.list.list'('type.string.char'),V_27r_27))))))) & ![V_27l_27, V_27r_27]: ((s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27l_27),s('type.list.list'('type.string.char'),V_27r_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.rich_list.SPLITP_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))))) & ~ (p(s('bool','const.list.NULL_1'(s('type.list.list'('type.string.char'),V_27l_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),V_27r_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27)))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27v_27))),s('type.list.list'('type.string.char'),V_27v_7c49_7c_27)))))).
fof('thm.string.TOKENS_def|split|0', axiom, ![V_27P_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.string.TOKENS_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')).
fof('ARITY_0_1_const.list.NULL', axiom, ![V_27A_27]: ![VV0]: s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'const.list.NULL_0'),s('type.list.list'(V_27A_27),VV0))) = s('bool','const.list.NULL_1'(s('type.list.list'(V_27A_27),VV0)))).
fof('ARITY_1_2_const.string.TOKENS', axiom, ![VV0, VV1]: s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.TOKENS_1'(s('fun'('type.string.char','bool'),VV0))),s('type.list.list'('type.string.char'),VV1))) = s('type.list.list'('type.list.list'('type.string.char')),'const.string.TOKENS_2'(s('fun'('type.string.char','bool'),VV0),s('type.list.list'('type.string.char'),VV1)))).
fof('ARITY_0_1_const.list.TL', axiom, ![V_27A_27]: ![VV0]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'const.list.TL_0'),s('type.list.list'(V_27A_27),VV0))) = s('type.list.list'(V_27A_27),'const.list.TL_1'(s('type.list.list'(V_27A_27),VV0)))).
fof('_dst_x00x10x01x11_ax', axiom, ![VA,VA3,VA4,VA2,VA5,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x01x11_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1),s('fun'(VA1,'fun'(VA2,VA5)),V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x1_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__2),s(VA1,V__z)))))).
fof('thm.string.TOKENS_def|split|1', axiom, ![V_27t_27, V_27h_27, V_27P_27]: s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.TOKENS_1'(s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27h_27))),s('type.list.list'('type.string.char'),V_27t_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char')))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.list.NULL_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.TOKENS_1'(s('fun'('type.string.char','bool'),V_27P_27))),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.list.TL_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.TOKENS_1'(s('fun'('type.string.char','bool'),V_27P_27))))))))),s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.rich_list.SPLITP_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27h_27))),s('type.list.list'('type.string.char'),V_27t_27)))))))).
fof('thm.string.FIELDS_ind', axiom, ![V_27P_7c39_7c_27]: ((![V_27P_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) & ![V_27P_27, V_27h_27, V_27t_27]: ((![V_27l_27, V_27r_27]: ((s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27l_27),s('type.list.list'('type.string.char'),V_27r_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.rich_list.SPLITP_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))))) & p(s('bool','const.list.NULL_1'(s('type.list.list'('type.string.char'),V_27l_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.TL_1'(s('type.list.list'('type.string.char'),V_27r_27))))))) & ![V_27l_27, V_27r_27]: ((s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27l_27),s('type.list.list'('type.string.char'),V_27r_27))) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.rich_list.SPLITP_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))))) & (~ (p(s('bool','const.list.NULL_1'(s('type.list.list'('type.string.char'),V_27l_27))))) & ~ (p(s('bool','const.list.NULL_1'(s('type.list.list'('type.string.char'),V_27r_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.TL_1'(s('type.list.list'('type.string.char'),V_27r_27)))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27)))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('fun'('type.string.char','bool'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_7c39_7c_27),s('fun'('type.string.char','bool'),V_27v_27))),s('type.list.list'('type.string.char'),V_27v_7c49_7c_27)))))).
fof('thm.string.FIELDS_def|split|0', axiom, ![V_27P_27]: s('type.list.list'('type.list.list'('type.string.char')),'const.string.FIELDS_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.list.list'('type.list.list'('type.string.char')),'const.list.CONS_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0')))).
fof('ARITY_1_2_const.string.FIELDS', axiom, ![VV0, VV1]: s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.FIELDS_1'(s('fun'('type.string.char','bool'),VV0))),s('type.list.list'('type.string.char'),VV1))) = s('type.list.list'('type.list.list'('type.string.char')),'const.string.FIELDS_2'(s('fun'('type.string.char','bool'),VV0),s('type.list.list'('type.string.char'),VV1)))).
fof('thm.string.FIELDS_def|split|1', axiom, ![V_27t_27, V_27h_27, V_27P_27]: s('type.list.list'('type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.FIELDS_1'(s('fun'('type.string.char','bool'),V_27P_27))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27h_27))),s('type.list.list'('type.string.char'),V_27t_27))))) = s('type.list.list'('type.list.list'('type.string.char')),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char')))),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.list.NULL_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.FIELDS_1'(s('fun'('type.string.char','bool'),V_27P_27))),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.list.TL_0'))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char')))),'_dst_x00x01x10x11_4'(s('fun'('bool','fun'('type.list.list'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.string.char'),'bool'),'const.list.NULL_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.list.CONS_0'),s('type.list.list'('type.list.list'('type.string.char')),'const.list.NIL_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char')))),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.list.list'('type.string.char')),'type.list.list'('type.list.list'('type.string.char')))),'const.list.CONS_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.list.list'('type.string.char'))),'const.string.FIELDS_1'(s('fun'('type.string.char','bool'),V_27P_27))),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.list.TL_0'))))))))))),s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.rich_list.SPLITP_2'(s('fun'('type.string.char','bool'),V_27P_27),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char',V_27h_27))),s('type.list.list'('type.string.char'),V_27t_27)))))))).
fof('thm.string.IMPLODE_def|split|0', axiom, s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),'const.list.NIL_0')).
fof('thm.string.IMPLODE_def|split|1', axiom, ![V_27c_27, V_27cs_27]: s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27cs_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27cs_27)))))).
fof('thm.string.EXPLODE_def|split|0', axiom, s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),'const.list.NIL_0')).
fof('thm.string.EXPLODE_def|split|1', axiom, ![V_27c_27, V_27s_27]: s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.string.IMPLODE_EXPLODE_I|split|0', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),V_27s_27)).
fof('thm.string.IMPLODE_EXPLODE_I|split|1', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),V_27s_27)).
fof('thm.string.IMPLODE_EXPLODE', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.list.list'('type.string.char'),V_27s_27)).
fof('thm.string.EXPLODE_IMPLODE', axiom, ![V_27cs_27]: s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27cs_27))))) = s('type.list.list'('type.string.char'),V_27cs_27)).
fof('thm.string.EXPLODE_ONTO', axiom, ![V_27cs_27]: ?[V_27s_27]: s('type.list.list'('type.string.char'),V_27cs_27) = s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.string.IMPLODE_ONTO', axiom, ![V_27s_27]: ?[V_27cs_27]: s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27cs_27)))).
fof('thm.string.EXPLODE_|49||49|', axiom, ![V_27s2_27, V_27s_7c49_7c_27]: (s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))) = s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s2_27))) <=> s('type.list.list'('type.string.char'),V_27s_7c49_7c_27) = s('type.list.list'('type.string.char'),V_27s2_27))).
fof('thm.string.IMPLODE_|49||49|', axiom, ![V_27cs2_27, V_27cs_7c49_7c_27]: (s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27cs_7c49_7c_27))) = s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27cs2_27))) <=> s('type.list.list'('type.string.char'),V_27cs_7c49_7c_27) = s('type.list.list'('type.string.char'),V_27cs2_27))).
fof('thm.string.string_64_prove_ltb', axiom, ![V_27A_27]: ![V_27b_27, V_27g_27]: ?[V_27f_27]: (s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27),s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))))) = s(V_27A_27,V_27b_27) & ![V_27c_27, V_27t_27]: s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27),s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27t_27))))))) = s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,V_27A_27)),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,V_27A_27))),V_27g_27),s('type.string.char',V_27c_27))),s('type.list.list'('type.string.char'),V_27t_27))),s(V_27A_27,'happ'(s('fun'('type.list.list'('type.string.char'),V_27A_27),V_27f_27),s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27t_27))))))))).
fof('thm.string.STRING_ACYCLIC|split|0', axiom, ![V_27s_27, V_27c_27]: ~ (s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),V_27s_27))).
fof('thm.string.STRING_ACYCLIC|split|1', axiom, ![V_27s_27, V_27c_27]: ~ (s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))))).
fof('ARITY_0_1_const.string.SUBSTRING', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.string.char')),'const.string.SUBSTRING_0'),s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),VV0))) = s('type.list.list'('type.string.char'),'const.string.SUBSTRING_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),VV0)))).
fof('ARITY_0_1_const.string.EXTRACT', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'type.list.list'('type.string.char')),'const.string.EXTRACT_0'),s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),VV0))) = s('type.list.list'('type.string.char'),'const.string.EXTRACT_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),VV0)))).
fof('_dst_x01x10x10_ax', axiom, ![VA2,VA,VA3,VA4,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x10x10_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA1,VA4),V__1))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x0_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s(VA4,'happ'(s('fun'(VA1,VA4),V__1),s(VA1,V__z)))))).
fof('_dst_x001x110x110_ax', axiom, ![VA3,VA,VA4,VA2,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x001x110x110_3'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,'fun'(VA2,VA4)),V__0),s('fun'(VA1,'fun'(VA2,VA5)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x01x10x10_3'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA2,VA4),'happ'(s('fun'(VA1,'fun'(VA2,VA4)),V__0),s(VA1,V__z))),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__1),s(VA1,V__z)))))).
fof('thm.string.EXTRACT_primitive_def', axiom, s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'type.list.list'('type.string.char')),'const.string.EXTRACT_0') = s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'type.list.list'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'bool')),'const.min.@_1'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'bool')),'bool'),'const.relation.WF_0'))),s('fun'('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'type.list.list'('type.string.char')),'fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'type.list.list'('type.string.char'))),'_dst_x0_1'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'type.list.list'('type.string.char')),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'fun'('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char'))),'const.pair.pair_CASE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'type.list.list'('type.string.char'))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'fun'('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char'))),'const.pair.pair_CASE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','fun'('type.option.option'('type.num.num'),'type.list.list'('type.string.char')))),'_dst_x001x110x110_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.num.num','type.list.list'('type.string.char')),'type.list.list'('type.string.char')))),'const.option.option_CASE_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.string.char')),'const.string.SUBSTRING_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x00x10x11_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x11_2'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('fun'('type.list.list'('type.string.char'),'type.num.num'),'const.list.LENGTH_0'))))))))))),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','fun'('type.num.num','type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','fun'('type.num.num','type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.string.char')),'const.string.SUBSTRING_0'),s('fun'('type.list.list'('type.string.char'),'fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0')))))))))))))))))).
fof('thm.string.string_67_prove_ltb', axiom, ![V_27a_27]: ((?[V_27s_27, V_27i_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))) | ?[V_27s_27, V_27i_27, V_27n_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27n_27)))))))) => (?[V_27s_27, V_27i_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))) | ?[V_27s_27, V_27i_27, V_27n_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27n_27)))))))))).
fof('thm.string.EXTRACT_ind', axiom, ![V_27P_27]: ((![V_27s_27, V_27i_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'bool'),V_27P_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.NONE_0')))))))) & ![V_27s_27, V_27i_27, V_27n_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'bool'),V_27P_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27n_27))))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'bool'),V_27P_27),s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27v_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27v_7c49_7c_27),s('type.option.option'('type.num.num'),V_27v2_27)))))))))).
fof('thm.string.EXTRACT_def|split|0', axiom, ![V_27s_27, V_27i_27]: s('type.list.list'('type.string.char'),'const.string.EXTRACT_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))))) = s('type.list.list'('type.string.char'),'const.string.SUBSTRING_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.num.num',V_27i_27)))))))))).
fof('thm.string.EXTRACT_def|split|1', axiom, ![V_27s_27, V_27n_27, V_27i_27]: s('type.list.list'('type.string.char'),'const.string.EXTRACT_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.option.option'('type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.option.option'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27n_27))))))))) = s('type.list.list'('type.string.char'),'const.string.SUBSTRING_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27i_27),s('type.num.num',V_27n_27)))))))).
fof('thm.string.STRLEN_EXPLODE_THM', axiom, ![V_27s_27]: s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.string.DEST_STRING_def|split|0', axiom, s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.option.NONE_0')).
fof('thm.string.DEST_STRING_def|split|1', axiom, ![V_27c_27, V_27rst_27]: s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27rst_27))))) = s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'const.pair.,_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27rst_27)))))).
fof('thm.string.DEST_STRING_LEMS|split|0', axiom, ![V_27s_27]: (s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.option.NONE_0') <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.DEST_STRING_LEMS|split|1', axiom, ![V_27t_27, V_27c_27, V_27s_27]: (s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'const.pair.,_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27t_27))))) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27t_27))))).
fof('thm.string.IMPLODE_EQ_EMPTYSTRING|split|0', axiom, ![V_27l_27]: (s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27l_27))) = s('type.list.list'('type.string.char'),'const.list.NIL_0') <=> s('type.list.list'('type.string.char'),V_27l_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.IMPLODE_EQ_EMPTYSTRING|split|1', axiom, ![V_27l_27]: (s('type.list.list'('type.string.char'),'const.list.NIL_0') = s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27l_27))) <=> s('type.list.list'('type.string.char'),V_27l_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.EXPLODE_EQ_NIL|split|0', axiom, ![V_27s_27]: (s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),'const.list.NIL_0') <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.EXPLODE_EQ_NIL|split|1', axiom, ![V_27s_27]: (s('type.list.list'('type.string.char'),'const.list.NIL_0') = s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.EXPLODE_EQ_THM|split|0', axiom, ![V_27s_27, V_27h_27, V_27t_27]: (s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))) = s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27t_27))))))).
fof('thm.string.EXPLODE_EQ_THM|split|1', axiom, ![V_27s_27, V_27h_27, V_27t_27]: (s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))) <=> s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27t_27))))))).
fof('thm.string.IMPLODE_EQ_THM|split|0', axiom, ![V_27c_27, V_27s_27, V_27l_27]: (s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27l_27))) <=> s('type.list.list'('type.string.char'),V_27l_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('thm.string.IMPLODE_EQ_THM|split|1', axiom, ![V_27c_27, V_27s_27, V_27l_27]: (s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27l_27))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))) <=> s('type.list.list'('type.string.char'),V_27l_27) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('ARITY_0_1_const.string.EXPLODE', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.string.EXPLODE_0'),s('type.list.list'('type.string.char'),VV0))) = s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),VV0)))).
fof('thm.string.EXPLODE_DEST_STRING', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.string.EXPLODE_0'),s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),'const.option.option_CASE_3'(s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s_27))),s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char'))),'const.pair.pair_CASE_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'_dst_x00x10x01_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.string.EXPLODE_0')))))))).
fof('thm.string.IMPLODE_STRING', axiom, ![V_27clist_27]: s('type.list.list'('type.string.char'),'const.string.IMPLODE_1'(s('type.list.list'('type.string.char'),V_27clist_27))) = s('type.list.list'('type.string.char'),'const.list.FOLDR_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.string.char'),V_27clist_27)))).
fof('thm.string.STRLEN_EQ_|48|', axiom, ![V_27l_27]: (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27l_27))) = s('type.num.num','const.num.|48|_0') <=> s('type.list.list'('type.string.char'),V_27l_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.STRLEN_THM|split|0', axiom, s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.string.STRLEN_THM|split|1', axiom, ![V_27h_27, V_27t_27]: s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27t_27))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27t_27)))))).
fof('thm.string.STRCAT_def|split|0', axiom, ![V_27l_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.string.char'),V_27l_27))) = s('type.list.list'('type.string.char'),V_27l_27)).
fof('thm.string.STRCAT_def|split|1', axiom, ![V_27l_7c49_7c_27, V_27l2_27, V_27h_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),V_27l_7c49_7c_27))),s('type.list.list'('type.string.char'),V_27l2_27))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27h_27),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),V_27l2_27)))))).
fof('thm.string.STRCAT', axiom, ![V_27s2_27, V_27s_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))).
fof('thm.string.STRCAT_EQNS|split|0', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.string.char'),V_27s_27))) = s('type.list.list'('type.string.char'),V_27s_27)).
fof('thm.string.STRCAT_EQNS|split|1', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),V_27s_27)).
fof('thm.string.STRCAT_EQNS|split|2', axiom, ![V_27s2_27, V_27s_7c49_7c_27, V_27c_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),V_27s2_27))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))))).
fof('thm.string.STRCAT_ASSOC', axiom, ![V_27l_7c49_7c_27, V_27l2_27, V_27l3_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l2_27),s('type.list.list'('type.string.char'),V_27l3_27))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),V_27l2_27))),s('type.list.list'('type.string.char'),V_27l3_27)))).
fof('thm.string.STRCAT_|49||49||split|0', axiom, ![V_27l_7c49_7c_27, V_27l2_27, V_27l3_27]: (s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),V_27l2_27))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),V_27l3_27))) <=> s('type.list.list'('type.string.char'),V_27l2_27) = s('type.list.list'('type.string.char'),V_27l3_27))).
fof('thm.string.STRCAT_|49||49||split|1', axiom, ![V_27l_7c49_7c_27, V_27l2_27, V_27l3_27]: (s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l2_27),s('type.list.list'('type.string.char'),V_27l_7c49_7c_27))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l3_27),s('type.list.list'('type.string.char'),V_27l_7c49_7c_27))) <=> s('type.list.list'('type.string.char'),V_27l2_27) = s('type.list.list'('type.string.char'),V_27l3_27))).
fof('thm.string.STRCAT_ACYCLIC|split|0', axiom, ![V_27s_27, V_27s_7c49_7c_27]: (s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))) <=> s('type.list.list'('type.string.char'),V_27s_7c49_7c_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.STRCAT_ACYCLIC|split|1', axiom, ![V_27s_27, V_27s_7c49_7c_27]: (s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s_27))) <=> s('type.list.list'('type.string.char'),V_27s_7c49_7c_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0'))).
fof('thm.string.STRCAT_EXPLODE', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27))) = s('type.list.list'('type.string.char'),'const.list.FOLDR_3'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.list.list'('type.string.char'),V_27s2_27),s('type.list.list'('type.string.char'),'const.string.EXPLODE_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27)))))).
fof('thm.string.STRCAT_EQ_EMPTY', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: (s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),V_27l2_27))) = s('type.list.list'('type.string.char'),'const.list.NIL_0') <=> (s('type.list.list'('type.string.char'),V_27l_7c49_7c_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0') & s('type.list.list'('type.string.char'),V_27l2_27) = s('type.list.list'('type.string.char'),'const.list.NIL_0')))).
fof('thm.string.STRLEN_CAT', axiom, ![V_27l_7c49_7c_27, V_27l2_27]: s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27),s('type.list.list'('type.string.char'),V_27l2_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27l_7c49_7c_27))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.string.char'),V_27l2_27)))))).
fof('ARITY_0_2_const.list.isPREFIX', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'bool')),'const.list.isPREFIX_0'),s('type.list.list'(V_27A_27),VV0))),s('type.list.list'(V_27A_27),VV1))) = s('bool','const.list.isPREFIX_2'(s('type.list.list'(V_27A_27),VV0),s('type.list.list'(V_27A_27),VV1)))).
fof('_dst_x00x10x00x01_ax', axiom, ![VA,VA3,VA1,VA4,VA2,VA5]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x00x01_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,VA3),V__0),s(VA4,V__1),s('fun'(VA2,VA5),V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0x1_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s(VA4,V__1),s('fun'(VA2,VA5),V__2)))).
fof('thm.string.isPREFIX_DEF', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'const.list.isPREFIX_0'),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),V_27s2_27))) = s('bool','happ'(s('fun'('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'bool')),'bool'),'happ'(s('fun'('type.pair.prod'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')))),'fun'('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'bool')),'bool')),'const.pair.pair_CASE_0'),s('type.pair.prod'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')))),'const.pair.,_2'(s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s2_27))))))),s('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'bool')),'_dst_x00x10x00x01_4'(s('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'fun'('bool','fun'('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')))),'_i_0_0'),s('bool','T_0'),s('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'bool')),'_dst_x00x10x00x01_4'(s('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'fun'('bool','fun'('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')))),'_i_0_0'),s('bool','F_0'),s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'bool')),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')),'bool')),'const.pair.pair_CASE_0'),s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'fun'('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')),'bool')),'const.pair.pair_CASE_0'),s('fun'('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'_i_0_0'),s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'fun'('type.string.char','fun'('type.list.list'('type.string.char'),'bool')))),'_dst_x0000x1010x0101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.string.char','fun'('type.string.char','bool')),'_dst_x01x10_2'(s('fun'('type.string.char','fun'('type.string.char','bool')),'=_0'),s('fun'('type.string.char','type.string.char'),'_i_0_0'))),s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'_dst_x01x10_2'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),'const.list.isPREFIX_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'_i_0_0')))))))))))))))).
fof('thm.string.isPREFIX_IND', axiom, ![V_27P_27]: (![V_27s_7c49_7c_27, V_27s2_27]: (![V_27c_27, V_27t_7c49_7c_27, V_27t2_27]: ((s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))) = s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'const.pair.,_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27t_7c49_7c_27))))) & s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.string.DEST_STRING_1'(s('type.list.list'('type.string.char'),V_27s2_27))) = s('type.option.option'('type.pair.prod'('type.string.char','type.list.list'('type.string.char'))),'const.option.SOME_1'(s('type.pair.prod'('type.string.char','type.list.list'('type.string.char')),'const.pair.,_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27t2_27)))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),V_27t_7c49_7c_27))),s('type.list.list'('type.string.char'),V_27t2_27))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),V_27s2_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),V_27v_27))),s('type.list.list'('type.string.char'),V_27v_7c49_7c_27)))))).
fof('thm.string.isPREFIX_STRCAT', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: (p(s('bool','const.list.isPREFIX_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))) <=> ?[V_27s3_27]: s('type.list.list'('type.string.char'),V_27s2_27) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s3_27))))).
fof('thm.string.string_98_prove_ltb', axiom, ![V_27a_27]: ((?[V_27s_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | (?[V_27c_27, V_27s_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))))) | ?[V_27c2_27, V_27s2_27, V_27c_7c49_7c_27, V_27s_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c2_27),s('type.list.list'('type.string.char'),V_27s2_27))))))) => (?[V_27s_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) | (?[V_27c_27, V_27s_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))))) | ?[V_27c_7c49_7c_27, V_27s_7c49_7c_27, V_27c2_27, V_27s2_27]: s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),V_27a_27) = s('type.pair.prod'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c2_27),s('type.list.list'('type.string.char'),V_27s2_27))))))))).
fof('thm.string.string_lt_ind', axiom, ![V_27P_27]: ((![V_27s_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),V_27s_27))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))) & (![V_27c_27, V_27s_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27)))))) & ![V_27c_7c49_7c_27, V_27s_7c49_7c_27, V_27c2_27, V_27s2_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),V_27s2_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c2_27),s('type.list.list'('type.string.char'),V_27s2_27))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.string.char'),'bool'),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'bool')),V_27P_27),s('type.list.list'('type.string.char'),V_27v_27))),s('type.list.list'('type.string.char'),V_27v_7c49_7c_27)))))).
fof('thm.string.string_lt_def|split|0', axiom, ![V_27s_27]: s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),'const.list.NIL_0'))) = s('bool','F_0')).
fof('thm.string.string_lt_def|split|1', axiom, ![V_27s_27, V_27c_27]: s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),V_27s_27))))) = s('bool','T_0')).
fof('thm.string.string_lt_def|split|2', axiom, ![V_27s2_27, V_27s_7c49_7c_27, V_27c2_27, V_27c_7c49_7c_27]: (p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c2_27),s('type.list.list'('type.string.char'),V_27s2_27)))))) <=> (p(s('bool','const.string.char_lt_2'(s('type.string.char',V_27c_7c49_7c_27),s('type.string.char',V_27c2_27)))) | (s('type.string.char',V_27c_7c49_7c_27) = s('type.string.char',V_27c2_27) & p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))))))).
fof('thm.string.string_le_def', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: (p(s('bool','const.string.string_le_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))) <=> (s('type.list.list'('type.string.char'),V_27s_7c49_7c_27) = s('type.list.list'('type.string.char'),V_27s2_27) | p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27))))))).
fof('thm.string.string_gt_def', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: s('bool','const.string.string_gt_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27))) = s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s2_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27)))).
fof('thm.string.string_ge_def', axiom, ![V_27s_7c49_7c_27, V_27s2_27]: s('bool','const.string.string_ge_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27))) = s('bool','const.string.string_le_2'(s('type.list.list'('type.string.char'),V_27s2_27),s('type.list.list'('type.string.char'),V_27s_7c49_7c_27)))).
fof('thm.string.string_lt_nonrefl', axiom, ![V_27s_27]: ~ (p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),V_27s_27)))))).
fof('thm.string.string_lt_antisym', axiom, ![V_27s_27, V_27t_27]: ~ ((p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),V_27t_27)))) & p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27t_27),s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('thm.string.string_lt_cases', axiom, ![V_27s_27, V_27t_27]: (s('type.list.list'('type.string.char'),V_27s_27) = s('type.list.list'('type.string.char'),V_27t_27) | (p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_27),s('type.list.list'('type.string.char'),V_27t_27)))) | p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27t_27),s('type.list.list'('type.string.char'),V_27s_27))))))).
fof('thm.string.string_lt_trans', axiom, ![V_27s_7c49_7c_27, V_27s2_27, V_27s3_27]: ((p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s2_27)))) & p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s2_27),s('type.list.list'('type.string.char'),V_27s3_27))))) => p(s('bool','const.string.string_lt_2'(s('type.list.list'('type.string.char'),V_27s_7c49_7c_27),s('type.list.list'('type.string.char'),V_27s3_27)))))).
