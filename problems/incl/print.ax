fof('thm.print.type_to_string_UNION_primitive_def', axiom, s('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'const.print.type_to_string_UNION_0') = s('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'const.relation.WFREC_2'(s('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'const.min.@_1'(s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'const.relation.WF_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','fun'('type.ast.t','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.ast.t','fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.ast.t','fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.ast.t','fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x00x10x01_3'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.ast.t','type.ast.t'),'_i_0_0'),s('fun'('type.ast.t','type.list.list'('type.ast.t')),'_dst_x1x0_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','fun'('type.ast.t','bool'))),'_dstsel_0_x001x011_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.ast.t','fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.ast.t','fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.ast.t','fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.ast.t','type.list.list'('type.ast.t')),'_dst_x1x0_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dstsel_0_x01x01_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x0x1_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'type.ast.t'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('type.ast.tctor','const.ast.TC_tup_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool')))),'_dstsel_0_x0011x0111_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))))),'_dst_x000x111_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t'))),'_dst_x000x011x100_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_int_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_char_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_string_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_ref_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_word8_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_word64_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_word8array_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_exn_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_vector_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dstsel_0_x011x011_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.ast.t')),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.ast.t')),'const.ast.Tapp_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))),s('type.ast.tctor','const.ast.TC_array_0'))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','bool')),'_dstsel_0_x01x01_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','type.list.list'('type.ast.t')),'_dst_x1x0_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','fun'('type.ast.t','bool')))),'_dstsel_0_x0001x0111_2'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','fun'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x001x110_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.ast.t'),'bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ast.t','bool'),'bool'),'!_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'bool')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','bool')))),'_dstsel_0_x0011x0111_2'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x000x100x011_3'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.ast.t','type.ast.t'),'_i_0_0'),s('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.t','type.list.list'('type.ast.t'))),'_dst_x01x10_2'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char'))),'_dst_x01x10x10_3'(s('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'fun'('fun'('type.ast.t','type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')),'type.list.list'('type.string.char')))),'const.sum.sum_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dst_x01x00x00x10_4'(s('fun'('type.ast.t','fun'('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'fun'('fun'('type.num.num','type.list.list'('type.string.char')),'fun'('fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.list.list'('type.string.char'))),'type.list.list'('type.string.char'))))),'const.ast.t_CASE_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.num.num','type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.num.num','type.list.list'('type.string.char')),'const.ASCIInumbers.num_to_dec_string_0'))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.tctor','type.list.list'('type.string.char')))),'_dst_x001x110x110x110x110x110x110x110x110x110x110x110x110x110_14'(s('fun'('type.ast.tctor','fun'('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))))))))))))))),'const.ast.tctor_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')))),'_dst_x000x010x001x101_4'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t')),'_i_0_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.id'('type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1011x0100_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.list.list'('type.string.char')),'_dst_x0x1_2'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('fun'('type.ast.id'('type.list.list'('type.string.char')),'type.ast.tctor'),'const.ast.TC_name_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_int_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_int_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_char_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_char_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_string_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_string_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x001x000x110_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))))),'_dst_x0001x1110x0000_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.ast.t','type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.ast.t','type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.ast.t','type.list.list'('type.string.char')))),'_dst_x000x110x101_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x0_1'(s('fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')),'_dst_x0_1'(s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))))))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_array_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111x000_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x000x111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.ast.tctor','type.list.list'('type.string.char')),'const.semanticPrimitives.tc_to_string_0'),s('type.ast.tctor','const.ast.TC_array_0'))))))))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dst_x001x110x110_3'(s('fun'('type.list.list'('type.ast.t'),'fun'('type.list.list'('type.string.char'),'fun'('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))),'type.list.list'('type.string.char')))),'const.list.list_CASE_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1111_2'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'const.combin.I_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char'))))),'_dst_x0000x1100x1011_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','type.list.list'('type.string.char'))),'_dstsel_0_x01_1'(s('fun'('type.ast.t','type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INL_0'))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'happ'(s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.string.char','fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.CONS_0'),s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('fun'('fun'('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'type.list.list'('type.string.char')),'fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.string.char')))),'_dstsel_0_x011_1'(s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.ast.t'),'type.sum.sum'('type.ast.t','type.list.list'('type.ast.t'))),'const.sum.INR_0'),s('fun'('type.ast.t','fun'('type.list.list'('type.ast.t'),'type.list.list'('type.ast.t'))),'const.list.CONS_0')))))))))))))))))).
fof('thm.print.print_|49|_prove_ltb', axiom, ![V_27a_27]: (((?[V_27tvn_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27tvn_27))))) | (?[V_27n_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27))))) | ((?[V_27v6_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))))) | ?[V_27v7_27, V_27v9_27, V_27v_7c49_7c_7c48_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v9_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0'))))) | ?[V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c3_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0'))))) | ?[V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c7_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0'))))) | ?[V_27v2_7c49_7c_27, V_27v22_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v2_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))) | ?[V_27v25_27, V_27v26_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v25_27),s('type.list.list'('type.ast.t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))) | ?[V_27v29_27, V_27v3_7c48_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v29_27),s('type.list.list'('type.ast.t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))) | ?[V_27v33_27, V_27v34_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v33_27),s('type.list.list'('type.ast.t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))) | ?[V_27v37_27, V_27v38_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v37_27),s('type.list.list'('type.ast.t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27v4_7c49_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27t_7c49_7c_27, V_27t2_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t2_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | ?[V_27v4_7c49_7c_27, V_27v47_27, V_27v53_27, V_27v54_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v47_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v53_27),s('type.list.list'('type.ast.t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0')))))))) | (?[V_27ts_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))) | ?[V_27v59_27, V_27v6_7c48_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v59_27),s('type.list.list'('type.ast.t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0')))))) | ((s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))) | ?[V_27v63_27, V_27v64_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v63_27),s('type.list.list'('type.ast.t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0')))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0'))))) | ?[V_27v67_27, V_27v68_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v67_27),s('type.list.list'('type.ast.t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0')))))))))))))))))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'))) | (?[V_27t_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))) | ?[V_27t_27, V_27v73_27, V_27v74_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v73_27),s('type.list.list'('type.ast.t'),V_27v74_27)))))))))) => (?[V_27tvn_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27tvn_27))))) | (?[V_27n_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27))))) | (?[V_27t_7c49_7c_27, V_27t2_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t2_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27v4_7c49_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27v4_7c49_7c_27, V_27v47_27, V_27v53_27, V_27v54_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v47_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v53_27),s('type.list.list'('type.ast.t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) | (?[V_27ts_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))) | (?[V_27v6_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0'))))) | (?[V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v7_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v9_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))) | (?[V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c3_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0'))))) | (?[V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c7_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0'))))) | (?[V_27v2_7c49_7c_27, V_27v22_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v2_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0'))))) | (?[V_27v25_27, V_27v26_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v25_27),s('type.list.list'('type.ast.t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0'))))) | (?[V_27v29_27, V_27v3_7c48_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v29_27),s('type.list.list'('type.ast.t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0'))))) | (?[V_27v33_27, V_27v34_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v33_27),s('type.list.list'('type.ast.t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0'))))) | (?[V_27v37_27, V_27v38_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v37_27),s('type.list.list'('type.ast.t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0'))))) | (?[V_27v59_27, V_27v6_7c48_7c_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v59_27),s('type.list.list'('type.ast.t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0'))))) | (?[V_27v63_27, V_27v64_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v63_27),s('type.list.list'('type.ast.t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0'))))) | (?[V_27v67_27, V_27v68_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v67_27),s('type.list.list'('type.ast.t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0'))))) | (s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'))) | (?[V_27t_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))) | ?[V_27t_27, V_27v73_27, V_27v74_27]: s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),V_27a_27) = s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v73_27),s('type.list.list'('type.ast.t'),V_27v74_27)))))))))))))))))))))))))))))))))))))))).
fof('thm.print.type_to_string_UNION_extract|49|_def', axiom, ![V_27x_27]: s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),V_27x_27))) = s('type.list.list'('type.string.char'),'const.print.type_to_string_UNION_1'(s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INR_1'(s('type.list.list'('type.ast.t'),V_27x_27)))))).
fof('thm.print.type_to_string_UNION_extract|48|_def', axiom, ![V_27x_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t',V_27x_27))) = s('type.list.list'('type.string.char'),'const.print.type_to_string_UNION_1'(s('type.sum.sum'('type.ast.t','type.list.list'('type.ast.t')),'const.sum.INL_1'(s('type.ast.t',V_27x_27)))))).
fof('thm.print.type_to_string_ind', axiom, ![V_27P_7c48_7c_27, V_27P_7c49_7c_27]: ((![V_27tvn_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27tvn_27)))))) & (![V_27n_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27)))))) & (![V_27t_7c49_7c_27, V_27t2_27]: ((p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t',V_27t_7c49_7c_27)))) & p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t',V_27t2_27))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t2_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0')))))) & (![V_27v4_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0')))))) & (![V_27v4_7c49_7c_27, V_27v47_27, V_27v53_27, V_27v54_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v47_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v53_27),s('type.list.list'('type.ast.t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0')))))) & (![V_27ts_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27ts_27)))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))))) & (![V_27v6_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27)))))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0')))))) & (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0')))))) & (![V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27v7_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v9_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v9_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))))) & (![V_27v_7c49_7c3_27, V_27v_7c49_7c4_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c3_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c4_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c3_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0'))))))) & (![V_27v_7c49_7c7_27, V_27v_7c49_7c8_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c7_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c8_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c7_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0'))))))) & (![V_27v2_7c49_7c_27, V_27v22_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v2_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v22_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v2_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0'))))))) & (![V_27v25_27, V_27v26_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v25_27),s('type.list.list'('type.ast.t'),V_27v26_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v25_27),s('type.list.list'('type.ast.t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0'))))))) & (![V_27v29_27, V_27v3_7c48_7c_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v29_27),s('type.list.list'('type.ast.t'),V_27v3_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v29_27),s('type.list.list'('type.ast.t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0'))))))) & (![V_27v33_27, V_27v34_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v33_27),s('type.list.list'('type.ast.t'),V_27v34_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v33_27),s('type.list.list'('type.ast.t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0'))))))) & (![V_27v37_27, V_27v38_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v37_27),s('type.list.list'('type.ast.t'),V_27v38_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v37_27),s('type.list.list'('type.ast.t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0'))))))) & (![V_27v59_27, V_27v6_7c48_7c_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v59_27),s('type.list.list'('type.ast.t'),V_27v6_7c48_7c_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v59_27),s('type.list.list'('type.ast.t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0'))))))) & (![V_27v63_27, V_27v64_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v63_27),s('type.list.list'('type.ast.t'),V_27v64_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v63_27),s('type.list.list'('type.ast.t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0'))))))) & (![V_27v67_27, V_27v68_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v67_27),s('type.list.list'('type.ast.t'),V_27v68_27)))))) => p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v67_27),s('type.list.list'('type.ast.t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0'))))))) & (p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0')))) & (![V_27t_27]: (p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t',V_27t_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))))) & ![V_27t_27, V_27v73_27, V_27v74_27]: ((p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t',V_27t_27)))) & p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v73_27),s('type.list.list'('type.ast.t'),V_27v74_27))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v73_27),s('type.list.list'('type.ast.t'),V_27v74_27)))))))))))))))))))))))))))))))))))))))) => (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.ast.t','bool'),V_27P_7c48_7c_27),s('type.ast.t',V_27v_7c48_7c_27)))) & ![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.ast.t'),'bool'),V_27P_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v_7c48_7c_27))))))).
fof('thm.print.type_to_string_def|split|0', axiom, ![V_27tvn_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tvar_1'(s('type.list.list'('type.string.char'),V_27tvn_27))))) = s('type.list.list'('type.string.char'),V_27tvn_27)).
fof('thm.print.type_to_string_def|split|1', axiom, ![V_27n_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tvar_db_1'(s('type.num.num',V_27n_27))))) = s('type.list.list'('type.string.char'),'const.ASCIInumbers.num_to_dec_string_1'(s('type.num.num',V_27n_27)))).
fof('thm.print.type_to_string_def|split|2', axiom, ![V_27t2_27, V_27t_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t2_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t',V_27t_7c49_7c_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t',V_27t2_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))).
fof('thm.print.type_to_string_def|split|3', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))))))))).
fof('thm.print.type_to_string_def|split|4', axiom, ![V_27v4_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))))))))).
fof('thm.print.type_to_string_def|split|5', axiom, ![V_27v54_27, V_27v53_27, V_27v47_27, V_27v4_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v4_7c49_7c_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v47_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v53_27),s('type.list.list'('type.ast.t'),V_27v54_27))))))),s('type.ast.tctor','const.ast.TC_fn_0'))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))))))))).
fof('thm.print.type_to_string_def|split|6', axiom, ![V_27ts_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),V_27ts_27),s('type.ast.tctor','const.ast.TC_tup_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),V_27ts_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))).
fof('thm.print.type_to_string_def|split|7', axiom, ![V_27v6_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27))))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v6_27)))))).
fof('thm.print.type_to_string_def|split|8', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_int_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_int_0')))).
fof('thm.print.type_to_string_def|split|9', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_char_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_char_0')))).
fof('thm.print.type_to_string_def|split|10', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_string_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_string_0')))).
fof('thm.print.type_to_string_def|split|11', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_ref_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_ref_0')))).
fof('thm.print.type_to_string_def|split|12', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8_0')))).
fof('thm.print.type_to_string_def|split|13', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word64_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word64_0')))).
fof('thm.print.type_to_string_def|split|14', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_word8array_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8array_0')))).
fof('thm.print.type_to_string_def|split|15', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_exn_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_exn_0')))).
fof('thm.print.type_to_string_def|split|16', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_vector_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_vector_0')))).
fof('thm.print.type_to_string_def|split|17', axiom, s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'),s('type.ast.tctor','const.ast.TC_array_0'))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_array_0')))).
fof('thm.print.type_to_string_def|split|18', axiom, ![V_27v9_27, V_27v7_27, V_27v_7c49_7c_7c48_7c_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v9_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27))))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v9_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c_7c48_7c_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_name_1'(s('type.ast.id'('type.list.list'('type.string.char')),V_27v7_27)))))))).
fof('thm.print.type_to_string_def|split|19', axiom, ![V_27v_7c49_7c4_27, V_27v_7c49_7c3_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c3_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c4_27))),s('type.ast.tctor','const.ast.TC_int_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c3_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c4_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_int_0')))))).
fof('thm.print.type_to_string_def|split|20', axiom, ![V_27v_7c49_7c8_27, V_27v_7c49_7c7_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c7_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c8_27))),s('type.ast.tctor','const.ast.TC_char_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v_7c49_7c7_27),s('type.list.list'('type.ast.t'),V_27v_7c49_7c8_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_char_0')))))).
fof('thm.print.type_to_string_def|split|21', axiom, ![V_27v22_27, V_27v2_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v2_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v22_27))),s('type.ast.tctor','const.ast.TC_string_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v2_7c49_7c_27),s('type.list.list'('type.ast.t'),V_27v22_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_string_0')))))).
fof('thm.print.type_to_string_def|split|22', axiom, ![V_27v26_27, V_27v25_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v25_27),s('type.list.list'('type.ast.t'),V_27v26_27))),s('type.ast.tctor','const.ast.TC_ref_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v25_27),s('type.list.list'('type.ast.t'),V_27v26_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_ref_0')))))).
fof('thm.print.type_to_string_def|split|23', axiom, ![V_27v3_7c48_7c_27, V_27v29_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v29_27),s('type.list.list'('type.ast.t'),V_27v3_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_word8_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v29_27),s('type.list.list'('type.ast.t'),V_27v3_7c48_7c_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8_0')))))).
fof('thm.print.type_to_string_def|split|24', axiom, ![V_27v34_27, V_27v33_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v33_27),s('type.list.list'('type.ast.t'),V_27v34_27))),s('type.ast.tctor','const.ast.TC_word64_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v33_27),s('type.list.list'('type.ast.t'),V_27v34_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word64_0')))))).
fof('thm.print.type_to_string_def|split|25', axiom, ![V_27v38_27, V_27v37_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v37_27),s('type.list.list'('type.ast.t'),V_27v38_27))),s('type.ast.tctor','const.ast.TC_word8array_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v37_27),s('type.list.list'('type.ast.t'),V_27v38_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_word8array_0')))))).
fof('thm.print.type_to_string_def|split|26', axiom, ![V_27v6_7c48_7c_27, V_27v59_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v59_27),s('type.list.list'('type.ast.t'),V_27v6_7c48_7c_27))),s('type.ast.tctor','const.ast.TC_exn_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v59_27),s('type.list.list'('type.ast.t'),V_27v6_7c48_7c_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_exn_0')))))).
fof('thm.print.type_to_string_def|split|27', axiom, ![V_27v64_27, V_27v63_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v63_27),s('type.list.list'('type.ast.t'),V_27v64_27))),s('type.ast.tctor','const.ast.TC_vector_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v63_27),s('type.list.list'('type.ast.t'),V_27v64_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_vector_0')))))).
fof('thm.print.type_to_string_def|split|28', axiom, ![V_27v68_27, V_27v67_27]: s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t','const.ast.Tapp_2'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v67_27),s('type.list.list'('type.ast.t'),V_27v68_27))),s('type.ast.tctor','const.ast.TC_array_0'))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v67_27),s('type.list.list'('type.ast.t'),V_27v68_27))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.tc_to_string_1'(s('type.ast.tctor','const.ast.TC_array_0')))))).
fof('thm.print.type_to_string_def|split|29', axiom, s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),'const.list.NIL_0')).
fof('thm.print.type_to_string_def|split|30', axiom, ![V_27t_27]: s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.NIL_0'))))) = s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t',V_27t_27)))).
fof('thm.print.type_to_string_def|split|31', axiom, ![V_27v74_27, V_27v73_27, V_27t_27]: s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27t_27),s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v73_27),s('type.list.list'('type.ast.t'),V_27v74_27))))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t',V_27t_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.print.types_to_string_1'(s('type.list.list'('type.ast.t'),'const.list.CONS_2'(s('type.ast.t',V_27v73_27),s('type.list.list'('type.ast.t'),V_27v74_27)))))))).
fof('thm.print.print_envM_def', axiom, ![V_27A_27]: ![V_27envM_27]: s('type.list.list'('type.string.char'),'const.print.print_envM_1'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27)),V_27envM_27))) = s('type.list.list'('type.string.char'),'const.list.FLAT_1'(s('type.list.list'('type.list.list'('type.string.char')),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27),'type.list.list'('type.string.char')),'const.pair.UNCURRY_1'(s('fun'('type.list.list'('type.string.char'),'fun'(V_27A_27,'type.list.list'('type.string.char'))),'_dst_x00x10x00_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char')),'happ'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),V_27A_27)),V_27envM_27)))))).
fof('thm.print.print_lit_def|split|0', axiom, ![V_27i_27]: s('type.list.list'('type.string.char'),'const.print.print_lit_1'(s('type.ast.lit','const.ast.IntLit_1'(s('type.integer.int',V_27i_27))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.int_to_string_1'(s('type.integer.int',V_27i_27)))).
fof('thm.print.print_lit_def|split|1', axiom, ![V_27c_27]: s('type.list.list'('type.string.char'),'const.print.print_lit_1'(s('type.ast.lit','const.ast.Char_1'(s('type.string.char',V_27c_27))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))),s('type.list.list'('type.string.char'),'const.semanticPrimitives.string_to_string_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char',V_27c_27),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))).
fof('thm.print.print_lit_def|split|2', axiom, ![V_27s_27]: s('type.list.list'('type.string.char'),'const.print.print_lit_1'(s('type.ast.lit','const.ast.StrLit_1'(s('type.list.list'('type.string.char'),V_27s_27))))) = s('type.list.list'('type.string.char'),'const.semanticPrimitives.string_to_string_1'(s('type.list.list'('type.string.char'),V_27s_27)))).
fof('thm.print.print_lit_def|split|3', axiom, ![V_27w_27]: s('type.list.list'('type.string.char'),'const.print.print_lit_1'(s('type.ast.lit','const.ast.Word8_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.words.word_to_hex_string_1'(s('type.fcp.cart'('bool','type.fcp.bit|48|'('type.fcp.bit|48|'('type.fcp.bit|48|'('type.one.one')))),V_27w_27)))))).
fof('thm.print.print_v_def|split|0', axiom, ![V_27l_27]: s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Litv_1'(s('type.ast.lit',V_27l_27))))) = s('type.list.list'('type.string.char'),'const.print.print_lit_1'(s('type.ast.lit',V_27l_27)))).
fof('thm.print.print_v_def|split|1', axiom, ![V_27t_27, V_27v_7c48_7c_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27t_27) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27t_27) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.SOME_1'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn'),'const.pair.,_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.semanticPrimitives.tid_or_exn','const.semanticPrimitives.TypeId_1'(s('type.ast.id'('type.list.list'('type.string.char')),'const.ast.Short_1'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27t_27) = s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),'const.option.NONE_0')) & s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Conv_2'(s('type.option.option'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.tid_or_exn')),V_27t_27),s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c48_7c_27))))) = s('type.list.list'('type.string.char'),'const.bool.COND_3'(s('bool',Vv_27_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.bool.COND_3'(s('bool',Vv_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.string.char'),'const.bool.COND_3'(s('bool',Vv),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))))))))))))))))))).
fof('thm.print.print_v_def|split|2', axiom, ![V_27v_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Vectorv_1'(s('type.list.list'('type.semanticPrimitives.v'),V_27v_7c49_7c_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))).
fof('thm.print.print_v_def|split|3', axiom, ![V_27v2_27, V_27v3_27, V_27v4_27]: s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Closure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v2_27),s('type.list.list'('type.string.char'),V_27v3_27),s('type.ast.exp',V_27v4_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))).
fof('thm.print.print_v_def|split|4', axiom, ![V_27v5_27, V_27v6_27, V_27v7_27]: s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Recclosure_3'(s('type.semanticPrimitives.environment'('type.semanticPrimitives.v'),V_27v5_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.pair.prod'('type.list.list'('type.string.char'),'type.ast.exp'))),V_27v6_27),s('type.list.list'('type.string.char'),V_27v7_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))).
fof('thm.print.print_v_def|split|5', axiom, ![V_27v8_27]: s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v','const.semanticPrimitives.Loc_1'(s('type.num.num',V_27v8_27))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))).
fof('thm.print.print_|49||48|_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: (((s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0'))) | ?[V_27v7_27, V_27v8_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),V_27v7_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27v8_27)))))) | (?[V_27v_7c49_7c2_27, V_27v_7c49_7c_7c49_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),V_27v_7c49_7c_7c49_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c2_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0'))) | ?[V_27types_27, V_27x_27, V_27v_27, V_27envE_27, V_27x_7c39_7c_27, V_27n_27, V_27t_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),'const.pair.,_2'(s(V_27A_27,V_27x_7c39_7c_27),s('type.pair.prod'(V_27B_27,'type.ast.t'),'const.pair.,_2'(s(V_27B_27,V_27n_27),s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.semanticPrimitives.v',V_27v_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))) => (s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0'))) | (?[V_27x_7c39_7c_27, V_27n_27, V_27t_27, V_27types_27, V_27x_27, V_27v_27, V_27envE_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),'const.pair.,_2'(s(V_27A_27,V_27x_7c39_7c_27),s('type.pair.prod'(V_27B_27,'type.ast.t'),'const.pair.,_2'(s(V_27B_27,V_27n_27),s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.semanticPrimitives.v',V_27v_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))) | (?[V_27v7_27, V_27v8_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),V_27v7_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27v8_27))))) | ?[V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),V_27v_7c49_7c_7c49_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c2_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0')))))))).
fof('thm.print.print_envE_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0')))) & (![V_27x_7c39_7c_27, V_27n_27, V_27t_27, V_27types_27, V_27x_27, V_27v_27, V_27envE_27]: (p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),'const.pair.,_2'(s(V_27A_27,V_27x_7c39_7c_27),s('type.pair.prod'(V_27B_27,'type.ast.t'),'const.pair.,_2'(s(V_27B_27,V_27n_27),s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.semanticPrimitives.v',V_27v_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))) & (![V_27v7_27, V_27v8_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),V_27v7_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27v8_27)))))) & ![V_27v_7c49_7c_7c49_7c_27, V_27v_7c49_7c2_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),V_27v_7c49_7c_7c49_7c_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c2_27))))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0'))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27v_7c49_7c_27)))))).
fof('thm.print.print_envE_def|split|0', axiom, ![V_27A_27,V_27B_27]: s('type.list.list'('type.string.char'),'const.print.print_envE_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.NIL_0'),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.NIL_0'))) = s('type.list.list'('type.string.char'),'const.list.NIL_0')).
fof('thm.print.print_envE_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27x_7c39_7c_27, V_27x_27, V_27v_27, V_27types_27, V_27t_27, V_27n_27, V_27envE_27]: s('type.list.list'('type.string.char'),'const.print.print_envE_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t')),'const.pair.,_2'(s(V_27A_27,V_27x_7c39_7c_27),s('type.pair.prod'(V_27B_27,'type.ast.t'),'const.pair.,_2'(s(V_27B_27,V_27n_27),s('type.ast.t',V_27t_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),'const.list.CONS_2'(s('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'),'const.pair.,_2'(s('type.list.list'('type.string.char'),V_27x_27),s('type.semanticPrimitives.v',V_27v_27))),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.string.char'),V_27x_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.print.type_to_string_1'(s('type.ast.t',V_27t_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))),s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v',V_27v_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))),s('type.list.list'('type.string.char'),'const.print.print_envE_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27)))))).
fof('thm.print.print_|49|5_prove_ltb', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27a_27]: (((?[V_27v_7c49_7c_27, V_27mn_27, V_27v2_27, V_27v3_27, V_27v4_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27mn_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27v2_27),s('type.list.list'('type.ast.dec'),V_27v3_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27v4_27))))))) | ?[V_27types_27, V_27v_7c48_7c_27, V_27envM_27, V_27envE_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27v_7c48_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27C_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27)))))))))) | (?[V_27v9_27, V_27e_27, V_27v_7c49_7c_7c48_7c_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v9_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top',V_27v_7c49_7c_7c48_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27))))))))) | (?[V_27v7_27, V_27v8_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v7_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top',V_27v8_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))))) | ?[V_27v5_27, V_27v6_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v5_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top',V_27v6_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0')))))))))))) => (?[V_27types_27, V_27v_7c48_7c_27, V_27envM_27, V_27envE_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27v_7c48_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27C_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))))) | (?[V_27v_7c49_7c_27, V_27mn_27, V_27v2_27, V_27v3_27, V_27v4_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27mn_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27v2_27),s('type.list.list'('type.ast.dec'),V_27v3_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27v4_27))))))) | (?[V_27v5_27, V_27v6_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v5_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top',V_27v6_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))))))) | (?[V_27v7_27, V_27v8_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v7_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top',V_27v8_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))))) | ?[V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27e_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'))),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v9_27),s('type.pair.prod'('type.ast.top','type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s('type.ast.top',V_27v_7c49_7c_7c48_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27))))))))))))))).
fof('thm.print.print_result_ind', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27P_27]: ((![V_27types_27, V_27v_7c48_7c_27, V_27envM_27, V_27envE_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'))),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27))),s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27v_7c48_7c_27))))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27C_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27)))))))) & (![V_27v_7c49_7c_27, V_27mn_27, V_27v2_27, V_27v3_27, V_27v4_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'))),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c_27))),s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27mn_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27v2_27),s('type.list.list'('type.ast.dec'),V_27v3_27))))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27v4_27)))))) & (![V_27v5_27, V_27v6_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'))),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v5_27))),s('type.ast.top',V_27v6_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0')))))))) & (![V_27v7_27, V_27v8_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'))),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v7_27))),s('type.ast.top',V_27v8_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) & ![V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27e_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'))),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v9_27))),s('type.ast.top',V_27v_7c49_7c_7c48_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27)))))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),'fun'('type.ast.top','fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'))),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_27))),s('type.ast.top',V_27v_7c49_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),V_27v2_27)))))).
fof('thm.print.print_result_def|split|0', axiom, ![V_27C_27,V_27A_27,V_27B_27]: ![V_27v_7c48_7c_27, V_27types_27, V_27envM_27, V_27envE_27]: s('type.list.list'('type.string.char'),'const.print.print_result_3'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27),s('type.ast.top','const.ast.Tdec_1'(s('type.ast.dec',V_27v_7c48_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27C_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))) = s('type.list.list'('type.string.char'),'const.print.print_envE_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27types_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27)))).
fof('thm.print.print_result_def|split|1', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27v4_27, V_27v3_27, V_27v2_27, V_27v_7c49_7c_27, V_27mn_27]: s('type.list.list'('type.string.char'),'const.print.print_result_3'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v_7c49_7c_27),s('type.ast.top','const.ast.Tmod_3'(s('type.list.list'('type.string.char'),V_27mn_27),s('type.option.option'('type.list.list'('type.ast.spec')),V_27v2_27),s('type.list.list'('type.ast.dec'),V_27v3_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),V_27v4_27))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))))))))))),s('type.list.list'('type.string.char'),V_27mn_27))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))).
fof('thm.print.print_result_def|split|2', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27v6_27, V_27v5_27]: s('type.list.list'('type.string.char'),'const.print.print_result_3'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v5_27),s('type.ast.top',V_27v6_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))).
fof('thm.print.print_result_def|split|3', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27v8_27, V_27v7_27]: s('type.list.list'('type.string.char'),'const.print.print_result_3'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v7_27),s('type.ast.top',V_27v8_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))).
fof('thm.print.print_result_def|split|4', axiom, ![V_27A_27,V_27B_27,V_27C_27]: ![V_27v9_27, V_27v_7c49_7c_7c48_7c_27, V_27e_27]: s('type.list.list'('type.string.char'),'const.print.print_result_3'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,'type.ast.t'))),V_27v9_27),s('type.ast.top',V_27v_7c49_7c_7c48_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27C_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27))))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v',V_27e_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))).
fof('thm.print.print_2|48|_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: ((?[V_27types_27, V_27envM_27, V_27envE_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27types_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27B_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))) | (?[V_27v3_27, V_27e_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27v3_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27))))))) | (?[V_27v_7c49_7c_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27v_7c49_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) | ?[V_27v_7c48_7c_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27v_7c48_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0')))))))))) => (?[V_27types_27, V_27envM_27, V_27envE_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27types_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27B_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))) | (?[V_27v_7c48_7c_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27v_7c48_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))))) | (?[V_27v_7c49_7c_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27v_7c49_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) | ?[V_27v3_27, V_27e_27]: s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),V_27a_27) = s('type.pair.prod'(V_27A_27,'type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v')),'const.pair.,_2'(s(V_27A_27,V_27v3_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27)))))))))))).
fof('thm.print.print_prog_result_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27types_27, V_27envM_27, V_27envE_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),V_27P_27),s(V_27A_27,V_27types_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27B_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27)))))))) & (![V_27v_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),V_27P_27),s(V_27A_27,V_27v_7c48_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0')))))))) & (![V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),V_27P_27),s(V_27A_27,V_27v_7c49_7c_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0')))))))) & ![V_27v3_27, V_27e_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),V_27P_27),s(V_27A_27,V_27v3_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27))))))))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool'),'happ'(s('fun'(V_27A_27,'fun'('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'bool')),V_27P_27),s(V_27A_27,V_27v_27))),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),V_27v_7c49_7c_27)))))).
fof('ARITY_0_1_const.print.print_v', axiom, ![VV0]: s('type.list.list'('type.string.char'),'happ'(s('fun'('type.semanticPrimitives.v','type.list.list'('type.string.char')),'const.print.print_v_0'),s('type.semanticPrimitives.v',VV0))) = s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v',VV0)))).
fof('thm.print.print_prog_result_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27types_27, V_27envM_27, V_27envE_27]: s('type.list.list'('type.string.char'),'const.print.print_prog_result_2'(s(V_27A_27,V_27types_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rval_1'(s('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'const.pair.,_2'(s(V_27B_27,V_27envM_27),s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27))))))) = s('type.list.list'('type.string.char'),'const.option.option_CASE_3'(s('type.option.option'('type.semanticPrimitives.v'),'const.alist.ALOOKUP_2'(s('type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v')),V_27envE_27),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'),s('fun'('type.semanticPrimitives.v','type.list.list'('type.string.char')),'_dst_x0x1x0_3'(s('fun'('type.list.list'('type.string.char'),'fun'('type.list.list'('type.string.char'),'type.list.list'('type.string.char'))),'const.list.APPEND_0'),s('fun'('type.semanticPrimitives.v','type.list.list'('type.string.char')),'const.print.print_v_0'),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))).
fof('thm.print.print_prog_result_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27v_7c48_7c_27]: s('type.list.list'('type.string.char'),'const.print.print_prog_result_2'(s(V_27A_27,V_27v_7c48_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtimeout_error_0'))))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))))))))).
fof('thm.print.print_prog_result_def|split|2', axiom, ![V_27A_27,V_27B_27]: ![V_27v_7c49_7c_27]: s('type.list.list'('type.string.char'),'const.print.print_prog_result_2'(s(V_27A_27,V_27v_7c49_7c_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rabort_1'(s('type.semanticPrimitives.abort','const.semanticPrimitives.Rtype_error_0'))))))) = s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))))))))))))))))))))))))).
fof('thm.print.print_prog_result_def|split|3', axiom, ![V_27A_27,V_27B_27]: ![V_27v3_27, V_27e_27]: s('type.list.list'('type.string.char'),'const.print.print_prog_result_2'(s(V_27A_27,V_27v3_27),s('type.semanticPrimitives.result'('type.pair.prod'(V_27B_27,'type.list.list'('type.pair.prod'('type.list.list'('type.string.char'),'type.semanticPrimitives.v'))),'type.semanticPrimitives.v'),'const.semanticPrimitives.Rerr_1'(s('type.semanticPrimitives.error_result'('type.semanticPrimitives.v'),'const.semanticPrimitives.Rraise_1'(s('type.semanticPrimitives.v',V_27e_27))))))) = s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.APPEND_2'(s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0'))))))))))))),s('type.list.list'('type.string.char'),'const.print.print_v_1'(s('type.semanticPrimitives.v',V_27e_27))))),s('type.list.list'('type.string.char'),'const.list.CONS_2'(s('type.string.char','const.string.CHR_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.list.list'('type.string.char'),'const.list.NIL_0')))))).
