fof('thm.reg_alloc.is_stack_var_def', axiom, ![V_27n_27]: (p(s('bool','const.reg_alloc.is_stack_var_1'(s('type.num.num',V_27n_27)))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))).
fof('ARITY_0_1_const.reg_alloc.is_phy_var', axiom, ![VV0]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('type.num.num',VV0))) = s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',VV0)))).
fof('thm.reg_alloc.is_phy_var_def', axiom, ![V_27n_27]: (p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27n_27)))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.num.|48|_0'))).
fof('thm.reg_alloc.is_alloc_var_def', axiom, ![V_27n_27]: (p(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27n_27)))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))).
fof('thm.reg_alloc.convention_partitions|split|0', axiom, ![V_27n_27]: (p(s('bool','const.reg_alloc.is_stack_var_1'(s('type.num.num',V_27n_27)))) <=> (~ (p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27n_27))))) & ~ (p(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27n_27)))))))).
fof('thm.reg_alloc.convention_partitions|split|1', axiom, ![V_27n_27]: (p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27n_27)))) <=> (~ (p(s('bool','const.reg_alloc.is_stack_var_1'(s('type.num.num',V_27n_27))))) & ~ (p(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27n_27)))))))).
fof('thm.reg_alloc.convention_partitions|split|2', axiom, ![V_27n_27]: (p(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27n_27)))) <=> (~ (p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27n_27))))) & ~ (p(s('bool','const.reg_alloc.is_stack_var_1'(s('type.num.num',V_27n_27)))))))).
fof('ARITY_1_2_const.sptree.lookup', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.option.option'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27)),'const.sptree.lookup_1'(s('type.num.num',VV0))),s('type.sptree.spt'(V_27A_27),VV1))) = s('type.option.option'(V_27A_27),'const.sptree.lookup_2'(s('type.num.num',VV0),s('type.sptree.spt'(V_27A_27),VV1)))).
fof('thm.reg_alloc.lookup_g_def', axiom, ![V_27x_27, V_27y_27, V_27g_27]: s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('bool','const.option.option_CASE_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'const.sptree.lookup_1'(s('type.num.num',V_27x_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))),s('bool','F_0'),s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one')),'const.sptree.lookup_1'(s('type.num.num',V_27y_27))),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))))))).
fof('ARITY_1_3_const.sptree.insert', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.sptree.spt'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'(V_27A_27)),'happ'(s('fun'(V_27A_27,'fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'(V_27A_27))),'const.sptree.insert_1'(s('type.num.num',VV0))),s(V_27A_27,VV1))),s('type.sptree.spt'(V_27A_27),VV2))) = s('type.sptree.spt'(V_27A_27),'const.sptree.insert_3'(s('type.num.num',VV0),s(V_27A_27,VV1),s('type.sptree.spt'(V_27A_27),VV2)))).
fof('thm.reg_alloc.dir_g_insert_def', axiom, ![V_27x_27, V_27y_27, V_27g_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.dir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.bool.LET_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.sptree.insert_1'(s('type.num.num',V_27x_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))),s('type.sptree.spt'('type.one.one'),'const.option.option_CASE_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))),s('type.sptree.spt'('type.one.one'),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.one.one','fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.sptree.insert_1'(s('type.num.num',V_27y_27))),s('type.one.one','const.one.one_0'))),s('type.sptree.spt'('type.one.one'),'const.sptree.LN_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.one.one','fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.sptree.insert_1'(s('type.num.num',V_27y_27))),s('type.one.one','const.one.one_0')))))))).
fof('thm.reg_alloc.undir_g_insert_def', axiom, ![V_27x_27, V_27y_27, V_27g_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.dir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.dir_g_insert_3'(s('type.num.num',V_27y_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))).
fof('thm.reg_alloc.list_g_insert_def|split|0', axiom, ![V_27x_27, V_27g_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.option.option_CASE_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.sptree.insert_3'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.one.one'),'const.sptree.LN_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_dst_x0_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))).
fof('thm.reg_alloc.list_g_insert_def|split|1', axiom, ![V_27x_27, V_27y_27, V_27ys_27, V_27g_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27y_27),s('type.list.list'('type.num.num'),V_27ys_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27ys_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))).
fof('thm.reg_alloc.clique_g_insert_def|split|0', axiom, ![V_27g_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)).
fof('thm.reg_alloc.clique_g_insert_def|split|1', axiom, ![V_27x_27, V_27xs_27, V_27g_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27g_27)))))).
fof('thm.reg_alloc.clash_sets_to_sp_g_def|split|0', axiom, ![V_27A_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),'const.list.NIL_0'))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.sptree.LN_0')).
fof('ARITY_0_2_const.reg_alloc.clique_g_insert', axiom, ![VV0, VV1]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.reg_alloc.clique_g_insert_0'),s('type.list.list'('type.num.num'),VV0))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clique_g_insert_2'(s('type.list.list'('type.num.num'),VV0),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV1)))).
fof('thm.reg_alloc.clash_sets_to_sp_g_def|split|1', axiom, ![V_27A_27]: ![V_27x_27, V_27xs_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),'const.list.CONS_2'(s('type.sptree.spt'(V_27A_27),V_27x_27),s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27xs_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.reg_alloc.clique_g_insert_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.sptree.toAList_1'(s('type.sptree.spt'(V_27A_27),V_27x_27))))))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.clash_sets_to_sp_g_1'(s('type.list.list'('type.sptree.spt'(V_27A_27)),V_27xs_27)))))).
fof('thm.reg_alloc.clash_tree_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.list.list'('type.num.num'),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'_dst_x00x11x00_3'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.pair.,_0'),s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'const.pair.,_0'),s('type.sptree.spt'('type.one.one'),'const.bool.ARB_0'))),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.bool.ARB_0'))))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.ind_type.BOTTOM_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'const.pair.,_0'),s('type.list.list'('type.num.num'),'const.bool.ARB_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.pair.,_0'),s('type.list.list'('type.num.num'),'const.bool.ARB_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'_dst_x1x0_2'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'const.pair.,_0'),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.bool.ARB_0'))))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.ind_type.BOTTOM_0'))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'))))),'_dst_x00000x01111x10011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')))),'_dst_x0000x1000x0111_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'_dst_x000x100x011_3'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'const.pair.,_0'),s('type.list.list'('type.num.num'),'const.bool.ARB_0'))),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.pair.,_0'),s('type.list.list'('type.num.num'),'const.bool.ARB_0'))),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'const.pair.,_0'),s('type.sptree.spt'('type.one.one'),'const.bool.ARB_0'))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'const.ind_type.FCONS_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'const.ind_type.FCONS_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.ind_type.BOTTOM_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_i_0_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_i_0_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool'),'?_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')))),'_dst_x0000x0111x1011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'))),'_dst_x000x100x011_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'happ'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'const.pair.,_0'),s('type.list.list'('type.num.num'),'const.bool.ARB_0'))),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.pair.,_0'),s('type.list.list'('type.num.num'),'const.bool.ARB_0'))),s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))),'const.pair.,_0'),s('type.sptree.spt'('type.one.one'),'const.bool.ARB_0'))),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.bool.ARB_0'))))))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'_dst_x00x10x01_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'const.ind_type.FCONS_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))))),'_dst_x1x0_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))))),'const.ind_type.FCONS_0'),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'const.ind_type.BOTTOM_0'))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_i_0_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_i_0_0'))))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one')))))),'type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),'_i_0_0'))))))),s('fun'('type.reg_alloc.clash_tree','type.ind_type.recspace'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.option.option'('type.sptree.spt'('type.one.one'))))))),V_27rep_27))))).
fof('thm.reg_alloc.clash_tree_case_def|split|0', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.reg_alloc.clash_tree_CASE_5'(s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.num.num'),V_27A_27),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('type.list.list'('type.num.num'),V_27a_7c48_7c_27))),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27)))).
fof('thm.reg_alloc.clash_tree_case_def|split|1', axiom, ![V_27A_27]: ![V_27a_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.reg_alloc.clash_tree_CASE_5'(s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27a_27)))).
fof('thm.reg_alloc.clash_tree_case_def|split|2', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.reg_alloc.clash_tree_CASE_5'(s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s('type.reg_alloc.clash_tree',V_27a2_27)))).
fof('thm.reg_alloc.clash_tree_case_def|split|3', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: s(V_27A_27,'const.reg_alloc.clash_tree_CASE_5'(s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27))) = s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27),s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27)))).
fof('thm.reg_alloc.clash_tree_size_def|split|0', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.list.list'('type.num.num'),V_27a_7c48_7c_27))),s('type.num.num','const.list.list_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27)))))))).
fof('ARITY_0_1_const.basicSize.one_size', axiom, ![VV0]: s('type.num.num','happ'(s('fun'('type.one.one','type.num.num'),'const.basicSize.one_size_0'),s('type.one.one',VV0))) = s('type.num.num','const.basicSize.one_size_1'(s('type.one.one',VV0)))).
fof('thm.reg_alloc.clash_tree_size_def|split|1', axiom, ![V_27a_27]: s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.sptree.spt_size_2'(s('fun'('type.one.one','type.num.num'),'const.basicSize.one_size_0'),s('type.sptree.spt'('type.one.one'),V_27a_27)))))).
fof('ARITY_1_2_const.sptree.spt_size', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.num.num'),'const.sptree.spt_size_1'(s('fun'(V_27A_27,'type.num.num'),VV0))),s('type.sptree.spt'(V_27A_27),VV1))) = s('type.num.num','const.sptree.spt_size_2'(s('fun'(V_27A_27,'type.num.num'),VV0),s('type.sptree.spt'(V_27A_27),VV1)))).
fof('thm.reg_alloc.clash_tree_size_def|split|2', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27]: s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.basicSize.option_size_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.num.num'),'const.sptree.spt_size_1'(s('fun'('type.one.one','type.num.num'),'const.basicSize.one_size_0'))),s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree',V_27a2_27)))))))))).
fof('thm.reg_alloc.clash_tree_size_def|split|3', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27))),s('type.num.num','const.reg_alloc.clash_tree_size_1'(s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27)))))))).
fof('ARITY_0_1_const.reg_alloc.Set', axiom, ![VV0]: s('type.reg_alloc.clash_tree','happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.clash_tree'),'const.reg_alloc.Set_0'),s('type.sptree.spt'('type.one.one'),VV0))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),VV0)))).
fof('ARITY_0_2_const.reg_alloc.Seq', axiom, ![VV0, VV1]: s('type.reg_alloc.clash_tree','happ'(s('fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'const.reg_alloc.Seq_0'),s('type.reg_alloc.clash_tree',VV0))),s('type.reg_alloc.clash_tree',VV1))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',VV0),s('type.reg_alloc.clash_tree',VV1)))).
fof('ARITY_0_3_const.reg_alloc.Branch', axiom, ![VV0, VV1, VV2]: s('type.reg_alloc.clash_tree','happ'(s('fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'))),'const.reg_alloc.Branch_0'),s('type.option.option'('type.sptree.spt'('type.one.one')),VV0))),s('type.reg_alloc.clash_tree',VV1))),s('type.reg_alloc.clash_tree',VV2))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),VV0),s('type.reg_alloc.clash_tree',VV1),s('type.reg_alloc.clash_tree',VV2)))).
fof('ARITY_0_2_const.reg_alloc.Delta', axiom, ![VV0, VV1]: s('type.reg_alloc.clash_tree','happ'(s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.clash_tree'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.clash_tree')),'const.reg_alloc.Delta_0'),s('type.list.list'('type.num.num'),VV0))),s('type.list.list'('type.num.num'),VV1))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1)))).
fof('thm.reg_alloc.datatype_clash_tree', axiom, ![V_27clash__tree_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'bool'),'happ'(s('fun'('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'))),'fun'('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'bool')),'happ'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.clash_tree'),'fun'('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'))),'fun'('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'bool'))),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.clash_tree')),'fun'('fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.clash_tree'),'fun'('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'))),'fun'('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'bool')))),V_27clash__tree_27),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.clash_tree')),'const.reg_alloc.Delta_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.clash_tree'),'const.reg_alloc.Set_0'))),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree'))),'const.reg_alloc.Branch_0'))),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','type.reg_alloc.clash_tree')),'const.reg_alloc.Seq_0'))))))).
fof('thm.reg_alloc.clash_tree_|49||49||split|0', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27]: (s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_7c39_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_7c39_7c_27))) <=> (s('type.list.list'('type.num.num'),V_27a_7c48_7c_27) = s('type.list.list'('type.num.num'),V_27a_7c48_7c_7c39_7c_27) & s('type.list.list'('type.num.num'),V_27a_7c49_7c_27) = s('type.list.list'('type.num.num'),V_27a_7c49_7c_7c39_7c_27)))).
fof('thm.reg_alloc.clash_tree_|49||49||split|1', axiom, ![V_27a_27, V_27a_7c39_7c_27]: (s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_7c39_7c_27))) <=> s('type.sptree.spt'('type.one.one'),V_27a_27) = s('type.sptree.spt'('type.one.one'),V_27a_7c39_7c_27))).
fof('thm.reg_alloc.clash_tree_|49||49||split|2', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27, V_27a2_7c39_7c_27]: (s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a2_7c39_7c_27))) <=> (s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27) = s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_7c39_7c_27) & (s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27) = s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27) & s('type.reg_alloc.clash_tree',V_27a2_27) = s('type.reg_alloc.clash_tree',V_27a2_7c39_7c_27))))).
fof('thm.reg_alloc.clash_tree_|49||49||split|3', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27]: (s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27))) <=> (s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27) = s('type.reg_alloc.clash_tree',V_27a_7c48_7c_7c39_7c_27) & s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27) = s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27)))).
fof('thm.reg_alloc.clash_tree_distinct|split|0', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))))).
fof('thm.reg_alloc.clash_tree_distinct|split|1', axiom, ![V_27a2_27, V_27a_7c49_7c_7c39_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c48_7c_27]: ~ (s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))))).
fof('thm.reg_alloc.clash_tree_distinct|split|2', axiom, ![V_27a_7c49_7c_7c39_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c48_7c_27]: ~ (s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27))))).
fof('thm.reg_alloc.clash_tree_distinct|split|3', axiom, ![V_27a2_27, V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))))).
fof('thm.reg_alloc.clash_tree_distinct|split|4', axiom, ![V_27a_7c49_7c_27, V_27a_7c48_7c_27, V_27a_27]: ~ (s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))))).
fof('thm.reg_alloc.clash_tree_distinct|split|5', axiom, ![V_27a2_27, V_27a_7c49_7c_7c39_7c_27, V_27a_7c49_7c_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c48_7c_27]: ~ (s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_7c39_7c_27))))).
fof('thm.reg_alloc.clash_tree_case_cong', axiom, ![V_27A_27]: ![V_27f3_7c39_7c_27, V_27f2_7c39_7c_27, V_27f_7c49_7c_7c39_7c_27, V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: ((s('type.reg_alloc.clash_tree',V_27M_27) = s('type.reg_alloc.clash_tree',V_27M_7c39_7c_27) & (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (s('type.reg_alloc.clash_tree',V_27M_7c39_7c_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) => s(V_27A_27,'happ'(s('fun'('type.list.list'('type.num.num'),V_27A_27),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('type.list.list'('type.num.num'),V_27a_7c48_7c_27))),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.num.num'),V_27A_27),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_7c39_7c_27),s('type.list.list'('type.num.num'),V_27a_7c48_7c_27))),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27)))) & (![V_27a_27]: (s('type.reg_alloc.clash_tree',V_27M_7c39_7c_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))) => s(V_27A_27,'happ'(s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27a_27))) = s(V_27A_27,'happ'(s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_7c39_7c_27),s('type.sptree.spt'('type.one.one'),V_27a_27)))) & (![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27]: (s('type.reg_alloc.clash_tree',V_27M_7c39_7c_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))) => s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s('type.reg_alloc.clash_tree',V_27a2_27))) = s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_7c39_7c_27),s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s('type.reg_alloc.clash_tree',V_27a2_27)))) & ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: (s('type.reg_alloc.clash_tree',V_27M_7c39_7c_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))) => s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27),s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))) = s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27)))))))) => s(V_27A_27,'const.reg_alloc.clash_tree_CASE_5'(s('type.reg_alloc.clash_tree',V_27M_27),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_27),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_27))) = s(V_27A_27,'const.reg_alloc.clash_tree_CASE_5'(s('type.reg_alloc.clash_tree',V_27M_7c39_7c_27),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_7c39_7c_27),s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_7c39_7c_27),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27))),V_27f2_7c39_7c_27),s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree',V_27A_27)),V_27f3_7c39_7c_27))))).
fof('thm.reg_alloc.clash_tree_nchotomy', axiom, ![V_27cc_27]: (?[V_27l_27, V_27l_7c48_7c_27]: s('type.reg_alloc.clash_tree',V_27cc_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27))) | (?[V_27s_27]: s('type.reg_alloc.clash_tree',V_27cc_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))) | (?[V_27o_7c39_7c_27, V_27c_27, V_27c_7c48_7c_27]: s('type.reg_alloc.clash_tree',V_27cc_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27o_7c39_7c_27),s('type.reg_alloc.clash_tree',V_27c_27),s('type.reg_alloc.clash_tree',V_27c_7c48_7c_27))) | ?[V_27c_27, V_27c_7c48_7c_27]: s('type.reg_alloc.clash_tree',V_27cc_27) = s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27c_27),s('type.reg_alloc.clash_tree',V_27c_7c48_7c_27))))))).
fof('thm.reg_alloc.clash_tree_Axiom', axiom, ![V_27A_27]: ![V_27f_7c48_7c_27, V_27f_7c49_7c_27, V_27f2_27, V_27f3_27]: ?[V_27fn_27]: (![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27a_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))))) = s(V_27A_27,'happ'(s('fun'('type.list.list'('type.num.num'),V_27A_27),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),V_27A_27)),V_27f_7c48_7c_27),s('type.list.list'('type.num.num'),V_27a_7c48_7c_27))),s('type.list.list'('type.num.num'),V_27a_7c49_7c_27))) & (![V_27a_27]: s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27a_27))))) = s(V_27A_27,'happ'(s('fun'('type.sptree.spt'('type.one.one'),V_27A_27),V_27f_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27a_27))) & (![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27]: s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27a2_27))))) = s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)))),'happ'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))))),V_27f2_27),s('type.option.option'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s('type.reg_alloc.clash_tree',V_27a2_27))),s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))))),s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree',V_27a2_27))))) & ![V_27a_7c48_7c_27, V_27a_7c49_7c_27]: s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))))) = s(V_27A_27,'happ'(s('fun'(V_27A_27,V_27A_27),'happ'(s('fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27))),'happ'(s('fun'('type.reg_alloc.clash_tree','fun'('type.reg_alloc.clash_tree','fun'(V_27A_27,'fun'(V_27A_27,V_27A_27)))),V_27f3_27),s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27))),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))),s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree',V_27a_7c48_7c_27))))),s(V_27A_27,'happ'(s('fun'('type.reg_alloc.clash_tree',V_27A_27),V_27fn_27),s('type.reg_alloc.clash_tree',V_27a_7c49_7c_27))))))))).
fof('thm.reg_alloc.clash_tree_induction', axiom, ![V_27P_27]: ((![V_27l_27, V_27l_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27)))))) & (![V_27s_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27s_27)))))) & (![V_27c_27, V_27c_7c48_7c_27]: ((p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree',V_27c_27)))) & p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree',V_27c_7c48_7c_27))))) => ![V_27o_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27o_27),s('type.reg_alloc.clash_tree',V_27c_27),s('type.reg_alloc.clash_tree',V_27c_7c48_7c_27))))))) & ![V_27c_27, V_27c_7c48_7c_27]: ((p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree',V_27c_27)))) & p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree',V_27c_7c48_7c_27))))) => p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27c_27),s('type.reg_alloc.clash_tree',V_27c_7c48_7c_27)))))))))) => ![V_27c_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.clash_tree','bool'),V_27P_27),s('type.reg_alloc.clash_tree',V_27c_27)))))).
fof('thm.reg_alloc.numset_list_delete_def|split|0', axiom, ![V_27A_27]: ![V_27t_27]: s('type.sptree.spt'(V_27A_27),'const.reg_alloc.numset_list_delete_2'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.sptree.spt'(V_27A_27),V_27t_27))) = s('type.sptree.spt'(V_27A_27),V_27t_27)).
fof('thm.reg_alloc.numset_list_delete_def|split|1', axiom, ![V_27A_27]: ![V_27x_27, V_27xs_27, V_27t_27]: s('type.sptree.spt'(V_27A_27),'const.reg_alloc.numset_list_delete_2'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.sptree.spt'(V_27A_27),V_27t_27))) = s('type.sptree.spt'(V_27A_27),'const.reg_alloc.numset_list_delete_2'(s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'(V_27A_27),'const.sptree.delete_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'(V_27A_27),V_27t_27)))))).
fof('thm.reg_alloc.check_col_def', axiom, ![V_27A_27]: ![V_27f_27, V_27t_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_col_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.sptree.spt'(V_27A_27),V_27t_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'const.bool.LET_2'(s('fun'('type.list.list'('type.num.num'),'type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')))),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'fun'('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.num.num'),'bool'),'const.list.ALL_DISTINCT_0'),s('fun'('type.list.list'('type.num.num'),'type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')))),'const.option.SOME_0'),s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')))),'const.pair.,_0'),s('type.sptree.spt'(V_27A_27),V_27t_27))),s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.one.one')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.sptree.spt'('type.one.one')),'const.sptree.fromAList_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.list.MAP_1'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.one.one')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.one.one','type.pair.prod'('type.num.num','type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))))))),s('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'const.option.NONE_0'))),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'))))),s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.sptree.toAList_1'(s('type.sptree.spt'(V_27A_27),V_27t_27)))))))).
fof('thm.reg_alloc.check_partial_col_def|split|0', axiom, ![V_27f_27, V_27t_27, V_27ft_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_partial_col_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.sptree.spt'('type.one.one'),V_27t_27),s('type.sptree.spt'('type.one.one'),V_27ft_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.SOME_1'(s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.pair.,_2'(s('type.sptree.spt'('type.one.one'),V_27t_27),s('type.sptree.spt'('type.one.one'),V_27ft_27)))))).
fof('thm.reg_alloc.check_partial_col_def|split|1', axiom, ![V_27f_27, V_27x_27, V_27xs_27, V_27t_27, V_27ft_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_partial_col_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.sptree.spt'('type.one.one'),V_27t_27),s('type.sptree.spt'('type.one.one'),V_27ft_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.option_CASE_3'(s('type.option.option'('type.one.one'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.one.one'),V_27t_27))),s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.option_CASE_3'(s('type.option.option'('type.one.one'),'const.sptree.lookup_2'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num',V_27x_27))),s('type.sptree.spt'('type.one.one'),V_27ft_27))),s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_partial_col_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.one.one'),'const.sptree.insert_3'(s('type.num.num',V_27x_27),s('type.one.one','const.one.one_0'),s('type.sptree.spt'('type.one.one'),V_27t_27))),s('type.sptree.spt'('type.one.one'),'const.sptree.insert_3'(s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num',V_27x_27))),s('type.one.one','const.one.one_0'),s('type.sptree.spt'('type.one.one'),V_27ft_27))))),s('fun'('type.one.one','type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.NONE_0'))))),s('fun'('type.one.one','type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_partial_col_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.sptree.spt'('type.one.one'),V_27t_27),s('type.sptree.spt'('type.one.one'),V_27ft_27)))))))).
fof('ARITY_2_4_const.reg_alloc.check_partial_col', axiom, ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_partial_col_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1))),s('type.sptree.spt'('type.one.one'),VV2))),s('type.sptree.spt'('type.one.one'),VV3))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_partial_col_4'(s('fun'('type.num.num','type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.sptree.spt'('type.one.one'),VV2),s('type.sptree.spt'('type.one.one'),VV3)))).
fof('thm.reg_alloc.check_clash_tree_def|split|0', axiom, ![V_27f_27, V_27writes_27, V_27reads_27, V_27live_27, V_27flive_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_clash_tree_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27writes_27),s('type.list.list'('type.num.num'),V_27reads_27))),s('type.sptree.spt'('type.one.one'),V_27live_27),s('type.sptree.spt'('type.one.one'),V_27flive_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.option_CASE_3'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_partial_col_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27writes_27))),s('type.sptree.spt'('type.one.one'),V_27live_27))),s('type.sptree.spt'('type.one.one'),V_27flive_27))),s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.NONE_0'),s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'_dst_x0_1'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'_dst_x0x1x0_3'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_partial_col_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27reads_27))),s('type.sptree.spt'('type.one.one'),'const.reg_alloc.numset_list_delete_2'(s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.list.list'('type.num.num'),V_27writes_27))),s('type.sptree.spt'('type.one.one'),V_27flive_27))))))),s('type.sptree.spt'('type.one.one'),'const.reg_alloc.numset_list_delete_2'(s('type.list.list'('type.num.num'),V_27writes_27),s('type.sptree.spt'('type.one.one'),V_27live_27)))))))))).
fof('thm.reg_alloc.check_clash_tree_def|split|1', axiom, ![V_27f_27, V_27t_27, V_27live_27, V_27flive_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_clash_tree_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27t_27))),s('type.sptree.spt'('type.one.one'),V_27live_27),s('type.sptree.spt'('type.one.one'),V_27flive_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_col_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.sptree.spt'('type.one.one'),V_27t_27)))).
fof('ARITY_0_2_const.sptree.union', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.sptree.spt'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'(V_27A_27)),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'(V_27A_27))),'const.sptree.union_0'),s('type.sptree.spt'(V_27A_27),VV0))),s('type.sptree.spt'(V_27A_27),VV1))) = s('type.sptree.spt'(V_27A_27),'const.sptree.union_2'(s('type.sptree.spt'(V_27A_27),VV0),s('type.sptree.spt'(V_27A_27),VV1)))).
fof('ARITY_1_2_const.reg_alloc.check_col', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one')))),'const.reg_alloc.check_col_1'(s('fun'('type.num.num','type.num.num'),VV0))),s('type.sptree.spt'(V_27A_27),VV1))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_col_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.sptree.spt'(V_27A_27),VV1)))).
fof('thm.reg_alloc.check_clash_tree_def|split|2', axiom, ![V_27f_27, V_27topt_27, V_27t_7c49_7c_27, V_27t2_27, V_27live_27, V_27flive_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_clash_tree_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27topt_27),s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27t2_27))),s('type.sptree.spt'('type.one.one'),V_27live_27),s('type.sptree.spt'('type.one.one'),V_27flive_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'fun'('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.option.option_CASE_1'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_clash_tree_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27live_27),s('type.sptree.spt'('type.one.one'),V_27flive_27))))),s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.NONE_0'))),s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.pair.pair_CASE_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'_dst_x00x10_2'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'fun'('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.option.option_CASE_1'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_clash_tree_4'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree',V_27t2_27),s('type.sptree.spt'('type.one.one'),V_27live_27),s('type.sptree.spt'('type.one.one'),V_27flive_27))))),s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.NONE_0'))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.pair.pair_CASE_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))))),'_dst_x000x110x000_3'(s('fun'('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'fun'('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.option.option_CASE_1'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27topt_27))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'_dst_x00x11_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'const.reg_alloc.check_col_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.sptree.union_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'const.reg_alloc.check_col_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))))))))))).
fof('ARITY_2_4_const.reg_alloc.check_clash_tree', axiom, ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_clash_tree_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.clash_tree',VV1))),s('type.sptree.spt'('type.one.one'),VV2))),s('type.sptree.spt'('type.one.one'),VV3))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.check_clash_tree_4'(s('fun'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.clash_tree',VV1),s('type.sptree.spt'('type.one.one'),VV2),s('type.sptree.spt'('type.one.one'),VV3)))).
fof('thm.reg_alloc.check_clash_tree_def|split|3', axiom, ![V_27f_27, V_27t_7c49_7c_27, V_27t2_27, V_27live_27, V_27flive_27]: s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_clash_tree_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27t2_27))))),s('type.sptree.spt'('type.one.one'),V_27live_27))),s('type.sptree.spt'('type.one.one'),V_27flive_27))) = s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.option_CASE_3'(s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_clash_tree_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree',V_27t2_27))),s('type.sptree.spt'('type.one.one'),V_27live_27))),s('type.sptree.spt'('type.one.one'),V_27flive_27))),s('type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.option.NONE_0'),s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.pair.pair_CASE_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))))),'const.reg_alloc.check_clash_tree_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27)))))))).
fof('thm.reg_alloc.extend_clique_def|split|0', axiom, ![V_27cli_27, V_27G_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.list.list'('type.num.num'),V_27cli_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27cli_27)))).
fof('thm.reg_alloc.extend_clique_def|split|1', axiom, ![V_27x_27, V_27xs_27, V_27cli_27, V_27G_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),V_27cli_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.bool.COND_3'(s('bool','const.bool.IN_2'(s('type.num.num',V_27x_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27cli_27))))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),V_27xs_27),s('type.list.list'('type.num.num'),V_27cli_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),V_27xs_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27cli_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27cli_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('ARITY_1_3_const.reg_alloc.extend_clique', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.extend_clique_1'(s('type.list.list'('type.num.num'),VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2)))).
fof('thm.reg_alloc.clash_tree_to_spg_def|split|0', axiom, ![V_27writes_27, V_27reads_27, V_27liveout_27, V_27G_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree','const.reg_alloc.Delta_2'(s('type.list.list'('type.num.num'),V_27writes_27),s('type.list.list'('type.num.num'),V_27reads_27))),s('type.list.list'('type.num.num'),V_27liveout_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.pair.,_0'))))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.extend_clique_1'(s('type.list.list'('type.num.num'),V_27reads_27))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.FILTER_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27writes_27))))))))))))))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.extend_clique_1'(s('type.list.list'('type.num.num'),V_27writes_27))),s('type.list.list'('type.num.num'),V_27liveout_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_alloc.clash_tree_to_spg_def|split|1', axiom, ![V_27t_27, V_27liveout_27, V_27G_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree','const.reg_alloc.Set_1'(s('type.sptree.spt'('type.one.one'),V_27t_27))),s('type.list.list'('type.num.num'),V_27liveout_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.bool.LET_2'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'_dst_x0x1x1_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.reg_alloc.clique_g_insert_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'const.sptree.toAList_1'(s('type.sptree.spt'('type.one.one'),V_27t_27)))))))).
fof('ARITY_0_3_const.reg_alloc.extend_clique', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))))),'const.reg_alloc.extend_clique_0'),s('type.list.list'('type.num.num'),VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.extend_clique_3'(s('type.list.list'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2)))).
fof('ARITY_2_3_const.reg_alloc.clash_tree_to_spg', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.reg_alloc.clash_tree_to_spg_2'(s('type.reg_alloc.clash_tree',VV0),s('type.list.list'('type.num.num'),VV1))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',VV0),s('type.list.list'('type.num.num'),VV1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2)))).
fof('thm.reg_alloc.clash_tree_to_spg_def|split|2', axiom, ![V_27topt_27, V_27t_7c49_7c_27, V_27t2_27, V_27live_27, V_27G_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.reg_alloc.clash_tree_to_spg_2'(s('type.reg_alloc.clash_tree','const.reg_alloc.Branch_3'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27topt_27),s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27t2_27))),s('type.list.list'('type.num.num'),V_27live_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))))),'_dst_x000x111x010_3'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'fun'('fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.option.option_CASE_1'(s('type.option.option'('type.sptree.spt'('type.one.one')),V_27topt_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))))),'_dst_x101x010_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))))),'const.reg_alloc.extend_clique_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x00x11x01_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.reg_alloc.clique_g_insert_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0'))))))))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.reg_alloc.clash_tree_to_spg_2'(s('type.reg_alloc.clash_tree',V_27t2_27),s('type.list.list'('type.num.num'),V_27live_27))))))))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.reg_alloc.clash_tree_to_spg_2'(s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27),s('type.list.list'('type.num.num'),V_27live_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('ARITY_1_3_const.reg_alloc.clash_tree_to_spg', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.clash_tree_to_spg_1'(s('type.reg_alloc.clash_tree',VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.reg_alloc.clash_tree_to_spg_3'(s('type.reg_alloc.clash_tree',VV0),s('type.list.list'('type.num.num'),VV1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2)))).
fof('thm.reg_alloc.clash_tree_to_spg_def|split|3', axiom, ![V_27t_7c49_7c_27, V_27t2_27, V_27liveout_27, V_27G_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.clash_tree_to_spg_1'(s('type.reg_alloc.clash_tree','const.reg_alloc.Seq_2'(s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27),s('type.reg_alloc.clash_tree',V_27t2_27))))),s('type.list.list'('type.num.num'),V_27liveout_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'_dst_x01x10_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.clash_tree_to_spg_1'(s('type.reg_alloc.clash_tree',V_27t_7c49_7c_27))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.num.num')))),'const.reg_alloc.clash_tree_to_spg_1'(s('type.reg_alloc.clash_tree',V_27t2_27))),s('type.list.list'('type.num.num'),V_27liveout_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))).
fof('thm.reg_alloc.reg_alloc_36_prove_ltb', axiom, ![V_27a_27]: ((?[V_27col_27, V_27ls_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))) | (?[V_27col_27, V_27v4_27, V_27v5_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.num.num'),V_27v5_27))))))) | ?[V_27col_27, V_27v6_27, V_27v7_27, V_27x_27, V_27xs_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))))))) => (?[V_27col_27, V_27ls_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))) | (?[V_27col_27, V_27v4_27, V_27v5_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.num.num'),V_27v5_27))))))) | ?[V_27col_27, V_27x_27, V_27xs_27, V_27v6_27, V_27v7_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))))))))).
fof('thm.reg_alloc.remove_colours_ind', axiom, ![V_27P_27]: ((![V_27col_27, V_27ls_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27ls_27))),s('type.list.list'('type.num.num'),'const.list.NIL_0')))) & (![V_27col_27, V_27v4_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),'const.list.NIL_0'))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.num.num'),V_27v5_27)))))) & ![V_27col_27, V_27x_27, V_27xs_27, V_27v6_27, V_27v7_27]: ((![V_27c_7c39_7c_27, V_27c_27]: ((s('type.option.option'('type.num.num'),V_27c_7c39_7c_27) = s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) & s('type.option.option'('type.num.num'),V_27c_7c39_7c_27) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27c_27)))) => p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27c_27))))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))))))) & ![V_27c_7c39_7c_27]: ((s('type.option.option'('type.num.num'),V_27c_7c39_7c_27) = s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) & s('type.option.option'('type.num.num'),V_27c_7c39_7c_27) = s('type.option.option'('type.num.num'),'const.option.NONE_0')) => p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27)))))))) => p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27]: p(s('bool','happ'(s('fun'('type.list.list'('type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27v_27))),s('type.list.list'('type.num.num'),V_27v_7c49_7c_27))),s('type.list.list'('type.num.num'),V_27v2_27)))))).
fof('thm.reg_alloc.remove_colours_def|split|0', axiom, ![V_27ls_27, V_27col_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.remove_colours_3'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))) = s('type.list.list'('type.num.num'),'const.list.NIL_0')).
fof('thm.reg_alloc.remove_colours_def|split|1', axiom, ![V_27v5_27, V_27v4_27, V_27col_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.remove_colours_3'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.num.num'),V_27v5_27))))) = s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v4_27),s('type.list.list'('type.num.num'),V_27v5_27)))).
fof('ARITY_0_2_const.list.FILTER', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.list.FILTER_0'),s('fun'(V_27A_27,'bool'),VV0))),s('type.list.list'(V_27A_27),VV1))) = s('type.list.list'(V_27A_27),'const.list.FILTER_2'(s('fun'(V_27A_27,'bool'),VV0),s('type.list.list'(V_27A_27),VV1)))).
fof('ARITY_2_3_const.reg_alloc.remove_colours', axiom, ![VV0, VV1, VV2]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.remove_colours_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1))),s('type.list.list'('type.num.num'),VV2))) = s('type.list.list'('type.num.num'),'const.reg_alloc.remove_colours_3'(s('type.sptree.spt'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.list.list'('type.num.num'),VV2)))).
fof('thm.reg_alloc.remove_colours_def|split|2', axiom, ![V_27xs_27, V_27x_27, V_27v7_27, V_27v6_27, V_27col_27]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.remove_colours_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))) = s('type.list.list'('type.num.num'),'const.bool.LET_2'(s('fun'('type.option.option'('type.num.num'),'type.list.list'('type.num.num')),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','type.list.list'('type.num.num')),'type.list.list'('type.num.num')))),'const.option.option_CASE_0'),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.remove_colours_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))),s('fun'('type.num.num','type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.remove_colours_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('fun'('type.num.num','type.list.list'('type.num.num')),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.FILTER_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v6_27),s('type.list.list'('type.num.num'),V_27v7_27))))))))),s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27)))))).
fof('ARITY_1_3_const.reg_alloc.remove_colours', axiom, ![VV0, VV1, VV2]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.reg_alloc.remove_colours_1'(s('type.sptree.spt'('type.num.num'),VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.list.list'('type.num.num'),VV2))) = s('type.list.list'('type.num.num'),'const.reg_alloc.remove_colours_3'(s('type.sptree.spt'('type.num.num'),VV0),s('type.list.list'('type.num.num'),VV1),s('type.list.list'('type.num.num'),VV2)))).
fof('_dst_x00x11x10x00_ax', axiom, ![VA,VA2,VA3,VA4,VA1,VA5]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x11x10x00_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,'fun'(VA2,VA3)),V__0),s('fun'(VA1,VA4),V__1),s(VA5,V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x1x0x0_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA2,VA3),'happ'(s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA1,V__z))),s(VA4,'happ'(s('fun'(VA1,VA4),V__1),s(VA1,V__z))),s(VA5,V__2)))).
fof('thm.reg_alloc.assign_colour_def', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27v_27, V_27col_27, V_27spills_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.assign_colour_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spills_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'const.option.option_CASE_0'),s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.COND_1'(s('bool','const.bool.IN_2'(s('type.num.num',V_27v_27),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spills_27))))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27spills_27))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('fun'('type.sptree.spt'(V_27A_27),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('fun'('type.sptree.spt'(V_27A_27),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'happ'(s('fun'('type.option.option'('type.sptree.spt'(V_27A_27)),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('fun'('type.sptree.spt'(V_27A_27),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'const.option.option_CASE_0'),s('type.option.option'('type.sptree.spt'(V_27A_27)),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27spills_27))))),s('fun'('type.sptree.spt'(V_27A_27),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1x0_3'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.COND_1'(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27v_27))))),s('fun'('type.sptree.spt'(V_27A_27),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'const.bool.LET_1'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'const.bool.LET_1'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'const.list.list_CASE_0'),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.CONS_0'),s('type.num.num',V_27v_27))),s('type.list.list'('type.num.num'),V_27spills_27))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'_dst_x00x11_2'(s('fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'const.bool.LET_1'(s('fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1x0_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('fun'('type.num.num','type.sptree.spt'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.sptree.insert_1'(s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27spills_27))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.num.num')),'_dst_x00x11x10x00_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.num.num','fun'('fun'('type.num.num','type.num.num'),'type.num.num'))),'const.option.option_CASE_0'),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.option.option'('type.num.num'))),'_dst_x00x11x00_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27v_27))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.CONS_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.reg_alloc.remove_colours_1'(s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27k_27))))))),s('fun'('type.sptree.spt'(V_27A_27),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'(V_27A_27),'type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'const.sptree.toAList_0'))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.CONS_0'),s('type.num.num',V_27v_27))),s('type.list.list'('type.num.num'),V_27spills_27))))))))))))),s('fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0_1'(s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.,_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27spills_27)))))))).
fof('thm.reg_alloc.alloc_colouring_aux_def|split|0', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27col_27, V_27spills_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spills_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spills_27)))).
fof('ARITY_4_6_const.reg_alloc.alloc_colouring_aux', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4, VV5]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.reg_alloc.alloc_colouring_aux_4'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),VV0),s('type.list.list'('type.num.num'),VV1),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),VV2),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))),s('type.list.list'('type.num.num'),VV5))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),VV0),s('type.list.list'('type.num.num'),VV1),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4),s('type.list.list'('type.num.num'),VV5)))).
fof('thm.reg_alloc.alloc_colouring_aux_def|split|1', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27x_27, V_27xs_27, V_27col_27, V_27spills_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.reg_alloc.alloc_colouring_aux_4'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.list.list'('type.num.num'),V_27spills_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.bool.LET_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'const.pair.UNCURRY_1'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.reg_alloc.alloc_colouring_aux_4'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27xs_27))))),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.assign_colour_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.list.list'('type.num.num'),V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.list.list'('type.num.num'),V_27spills_27)))))).
fof('thm.reg_alloc.id_colour_def', axiom, ![V_27ls_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.id_colour_1'(s('type.list.list'('type.num.num'),V_27ls_27))) = s('type.sptree.spt'('type.num.num'),'const.list.FOLDR_3'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))),'const.sptree.insert_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'),s('type.list.list'('type.num.num'),V_27ls_27)))).
fof('ARITY_0_1_const.reg_alloc.id_colour', axiom, ![VV0]: s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.reg_alloc.id_colour_0'),s('type.list.list'('type.num.num'),VV0))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.id_colour_1'(s('type.list.list'('type.num.num'),VV0)))).
fof('ARITY_1_6_const.reg_alloc.alloc_colouring_aux', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4, VV5]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'happ'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))))),'const.reg_alloc.alloc_colouring_aux_1'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),VV0))),s('type.list.list'('type.num.num'),VV1))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),VV2))),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))),s('type.list.list'('type.num.num'),VV5))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_aux_6'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),VV0),s('type.list.list'('type.num.num'),VV1),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4),s('type.list.list'('type.num.num'),VV5)))).
fof('ARITY_1_2_const.sorting.PARTITION', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.sorting.PARTITION_1'(s('fun'(V_27A_27,'bool'),VV0))),s('type.list.list'(V_27A_27),VV1))) = s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'const.sorting.PARTITION_2'(s('fun'(V_27A_27,'bool'),VV0),s('type.list.list'(V_27A_27),VV1)))).
fof('_dst_x01x00x00x10x00_ax', axiom, ![VA2,VA,VA3,VA4,VA5,VA1,VA6]: ![V__x, V__0, V__1, V__2, V__3, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x00x00x10x00_5'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s('fun'(VA1,VA5),V__2),s(VA6,V__3))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x0x0x0_5'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z))),s(VA6,V__3)))).
fof('thm.reg_alloc.alloc_colouring_def', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27ls_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'_dst_x00x11x00_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'_dst_x000x101x011_3'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))))),'_dst_x01x00x10_3'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))))),'const.reg_alloc.alloc_colouring_aux_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'_dst_x01x00x00x10x00_5'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))))),'const.reg_alloc.alloc_colouring_aux_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),V_27prefs_27),s('type.list.list'('type.num.num'),V_27ls_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))),s('type.list.list'('type.num.num'),'const.list.GENLIST_2'(s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',V_27k_27))))),s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.reg_alloc.id_colour_0'))))))),s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.sorting.PARTITION_1'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))))))),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one')),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27)))))))).
fof('thm.reg_alloc.unbound_colours_def|split|0', axiom, ![V_27col_27]: s('type.num.num','const.reg_alloc.unbound_colours_2'(s('type.num.num',V_27col_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))) = s('type.num.num',V_27col_27)).
fof('thm.reg_alloc.unbound_colours_def|split|1', axiom, ![V_27col_27, V_27x_27, V_27xs_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27x_27) = s('type.num.num',V_27col_27)) & s('type.num.num','const.reg_alloc.unbound_colours_2'(s('type.num.num',V_27col_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))) = s('type.num.num','const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27col_27),s('type.num.num',V_27x_27))),s('type.num.num',V_27col_27),s('type.num.num','const.bool.COND_3'(s('bool',Vv),s('type.num.num','const.reg_alloc.unbound_colours_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27col_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.num.num','const.reg_alloc.unbound_colours_2'(s('type.num.num',V_27col_27),s('type.list.list'('type.num.num'),V_27xs_27))))))))).
fof('thm.reg_alloc.option_filter_def|split|0', axiom, ![V_27A_27]: s('type.list.list'(V_27A_27),'const.reg_alloc.option_filter_1'(s('type.list.list'('type.option.option'(V_27A_27)),'const.list.NIL_0'))) = s('type.list.list'(V_27A_27),'const.list.NIL_0')).
fof('thm.reg_alloc.option_filter_def|split|1', axiom, ![V_27A_27]: ![V_27x_27, V_27xs_27]: s('type.list.list'(V_27A_27),'const.reg_alloc.option_filter_1'(s('type.list.list'('type.option.option'(V_27A_27)),'happ'(s('fun'('type.list.list'('type.option.option'(V_27A_27)),'type.list.list'('type.option.option'(V_27A_27))),'happ'(s('fun'('type.option.option'(V_27A_27),'fun'('type.list.list'('type.option.option'(V_27A_27)),'type.list.list'('type.option.option'(V_27A_27)))),'const.list.CONS_0'),s('type.option.option'(V_27A_27),V_27x_27))),s('type.list.list'('type.option.option'(V_27A_27)),V_27xs_27))))) = s('type.list.list'(V_27A_27),'const.option.option_CASE_3'(s('type.option.option'(V_27A_27),V_27x_27),s('type.list.list'(V_27A_27),'const.reg_alloc.option_filter_1'(s('type.list.list'('type.option.option'(V_27A_27)),V_27xs_27))),s('fun'(V_27A_27,'type.list.list'(V_27A_27)),'_dst_x1x0_2'(s('fun'(V_27A_27,'fun'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.list.CONS_0'),s('type.list.list'(V_27A_27),'const.reg_alloc.option_filter_1'(s('type.list.list'('type.option.option'(V_27A_27)),V_27xs_27)))))))).
fof('ARITY_1_2_const.reg_alloc.unbound_colours', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.reg_alloc.unbound_colours_1'(s('type.num.num',VV0))),s('type.list.list'('type.num.num'),VV1))) = s('type.num.num','const.reg_alloc.unbound_colours_2'(s('type.num.num',VV0),s('type.list.list'('type.num.num'),VV1)))).
fof('ARITY_0_1_const.reg_alloc.option_filter', axiom, ![V_27A_27]: ![VV0]: s('type.list.list'(V_27A_27),'happ'(s('fun'('type.list.list'('type.option.option'(V_27A_27)),'type.list.list'(V_27A_27)),'const.reg_alloc.option_filter_0'),s('type.list.list'('type.option.option'(V_27A_27)),VV0))) = s('type.list.list'(V_27A_27),'const.reg_alloc.option_filter_1'(s('type.list.list'('type.option.option'(V_27A_27)),VV0)))).
fof('_dst_x00x11x00x01_ax', axiom, ![VA,VA3,VA1,VA4,VA2,VA5]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x11x00x01_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA4,V__1),s('fun'(VA2,VA5),V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x1x0x1_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA2,VA3),'happ'(s('fun'(VA1,'fun'(VA2,VA3)),V__0),s(VA1,V__z))),s(VA4,V__1),s('fun'(VA2,VA5),V__2)))).
fof('thm.reg_alloc.assign_colour2_def', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27prefs_27, V_27v_27, V_27col_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.assign_colour2_5'(s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('fun'('type.num.num','type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('fun'('type.num.num','type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num')))),'const.option.option_CASE_0'),s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.option.option'('type.sptree.spt'(V_27A_27)),'fun'('type.sptree.spt'('type.num.num'),'fun'('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num')))),'const.option.option_CASE_0'),s('type.option.option'('type.sptree.spt'(V_27A_27)),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'(V_27A_27)),'type.option.option'('type.sptree.spt'(V_27A_27))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'(V_27A_27)),'type.option.option'('type.sptree.spt'(V_27A_27)))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.sptree.spt'(V_27A_27)),V_27G_27))))),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'_dst_x0x1x1_3'(s('fun'('fun'('type.option.option'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.option.option'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.option.option'('type.num.num'),'type.sptree.spt'('type.num.num'))),'_dst_x00x11_2'(s('fun'('type.num.num','type.sptree.spt'('type.num.num')),'happ'(s('fun'('fun'('type.num.num','type.sptree.spt'('type.num.num')),'fun'('type.num.num','type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.num.num','type.sptree.spt'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.sptree.insert_1'(s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.num.num'),V_27col_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.option.option'('type.num.num'),'type.num.num')),'_dst_x01x10x00_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.num.num','fun'('fun'('type.num.num','type.num.num'),'type.num.num'))),'const.option.option_CASE_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.reg_alloc.unbound_colours_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.sorting.QSORT_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0'))))),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('fun'('type.list.list'('type.num.num'),'type.option.option'('type.num.num')),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num')))),'const.option.option_CASE_0'),s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.num.num'),V_27prefs_27))))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x00x01x00x10_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num')))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x00x11x00x01_4'(s('fun'('bool','fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')))),'const.bool.COND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))))))))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.option.option'('type.num.num')),'type.list.list'('type.num.num')),'const.reg_alloc.option_filter_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.option.option'('type.num.num'))),'const.list.MAP_1'(s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))))))))))),s('fun'('type.sptree.spt'(V_27A_27),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'(V_27A_27),'type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'const.sptree.toAList_0'))))))))),s('fun'('type.num.num','type.sptree.spt'('type.num.num')),'_dst_x0_1'(s('type.sptree.spt'('type.num.num'),V_27col_27)))))).
fof('thm.reg_alloc.spill_colouring_def|split|0', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27col_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.sptree.spt'('type.num.num'),V_27col_27)).
fof('ARITY_4_5_const.reg_alloc.spill_colouring', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.reg_alloc.spill_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4)))).
fof('thm.reg_alloc.spill_colouring_def|split|1', axiom, ![V_27G_27, V_27k_27, V_27prefs_27, V_27x_27, V_27xs_27, V_27col_27]: s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.reg_alloc.spill_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.sptree.spt'('type.num.num'),'const.bool.LET_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.reg_alloc.spill_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.assign_colour2_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27col_27)))))).
fof('thm.reg_alloc.ra_state_TY_DEF', axiom, ?[V_27rep_27]: p(s('bool','const.bool.TYPE_DEFINITION_2'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'bool'),'bool'),'!_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'bool'),'!_0'),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'==>_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','bool'))),'_dst_x000x111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'bool')))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool'))))))),'_dst_x0000000x1111111_2'(s('fun'('fun'('type.list.list'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'bool')))))))),'_dst_x00000000x11111111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'bool'))))))))),'_dst_x000000000x111111111_2'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'bool')))))))))),'_dst_x0000000000x1111111111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'))))))))))),'_dst_x00000000000x11111111111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool')))))))))))),'_dst_x000000000000x111111111111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'))))))))))))),'_dst_x0000000000000x1111111111111_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'?_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))))))))))))),'_dst_x00000000000000x10000000000000x01111111111111_3'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool')),'=_0'),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))),'_i_0_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))))))))))))))),'_dst_x0000000000000x1111111111111x0000000000000_3'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))),'fun'('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))),'type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))),'const.ind_type.CONSTR_1'(s('type.num.num','const.num.|48|_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))))))))))))),'_dst_x0000000000000x1000000000000x0111111111111_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))))))))))),'_dst_x000000000000x100000000000x011111111111_3'(s('fun'('type.num.num','fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))))))))),'_dst_x00000000000x10000000000x01111111111_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))))))),'_dst_x0000000000x1000000000x0111111111_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))))),'_dst_x000000000x100000000x011111111_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))))),'_dst_x00000000x10000000x01111111_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'_dst_x0000000x1000000x0111111_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))),'_dst_x000000x100000x011111_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))),'_dst_x00000x10000x01111_3'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))),'_dst_x0000x1000x0111_3'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))),'_dst_x000x100x011_3'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))),'const.pair.,_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))),'const.pair.,_0'))))))))))))))))))))))),s('fun'('type.num.num','type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))),'_dst_x0_1'(s('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'const.ind_type.BOTTOM_0'))))))))))))))))))))))))))))))))),s('fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool')),'_i_0_0'))))),s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'fun'('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'bool'),'bool')),'_dstsel_1_x10_1'(s('fun'('type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num'))))))))))))),'type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))),'_i_0_0'))))))),s('fun'('type.reg_alloc.ra_state','type.ind_type.recspace'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.num.num','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.num.num')))))))))))))),V_27rep_27))))).
fof('thm.reg_alloc.ra_state_case_def', axiom, ![V_27A_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27, V_27a8_27, V_27a9_27, V_27a_7c49_7c_7c48_7c_27, V_27a_7c49_7c_7c49_7c_27, V_27a_7c49_7c2_27, V_27f_27]: s(V_27A_27,'const.reg_alloc.ra_state_CASE_2'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.sptree.spt'('type.num.num'),V_27a2_27),s('type.list.list'('type.num.num'),V_27a3_27),s('type.list.list'('type.num.num'),V_27a4_27),s('type.list.list'('type.num.num'),V_27a5_27),s('type.list.list'('type.num.num'),V_27a6_27),s('type.sptree.spt'('type.num.num'),V_27a7_27),s('type.sptree.spt'('type.one.one'),V_27a8_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27),s('type.num.num',V_27a_7c49_7c2_27))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a2_27))),s('type.list.list'('type.num.num'),V_27a3_27))),s('type.list.list'('type.num.num'),V_27a4_27))),s('type.list.list'('type.num.num'),V_27a5_27))),s('type.list.list'('type.num.num'),V_27a6_27))),s('type.sptree.spt'('type.num.num'),V_27a7_27))),s('type.sptree.spt'('type.one.one'),V_27a8_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27))),s('type.num.num',V_27a_7c49_7c2_27)))).
fof('thm.reg_alloc.ra_state_size_def', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27, V_27a8_27, V_27a9_27, V_27a_7c49_7c_7c48_7c_27, V_27a_7c49_7c_7c49_7c_27, V_27a_7c49_7c2_27]: s('type.num.num','const.reg_alloc.ra_state_size_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.sptree.spt'('type.num.num'),V_27a2_27),s('type.list.list'('type.num.num'),V_27a3_27),s('type.list.list'('type.num.num'),V_27a4_27),s('type.list.list'('type.num.num'),V_27a5_27),s('type.list.list'('type.num.num'),V_27a6_27),s('type.sptree.spt'('type.num.num'),V_27a7_27),s('type.sptree.spt'('type.one.one'),V_27a8_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27),s('type.num.num',V_27a_7c49_7c2_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.num.num'),'const.sptree.spt_size_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.num.num'),'const.sptree.spt_size_1'(s('fun'('type.one.one','type.num.num'),'const.basicSize.one_size_0'))))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_7c49_7c_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.num.num'),'const.sptree.spt_size_1'(s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.sptree.spt'('type.num.num'),V_27a2_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.list.list'('type.num.num'),V_27a3_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.list.list'('type.num.num'),V_27a4_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.list.list'('type.num.num'),V_27a5_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.list.list'('type.num.num'),V_27a6_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.num.num'),'const.sptree.spt_size_1'(s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('type.sptree.spt'('type.num.num'),V_27a7_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.num.num'),'const.sptree.spt_size_1'(s('fun'('type.one.one','type.num.num'),'const.basicSize.one_size_0'))),s('type.sptree.spt'('type.one.one'),V_27a8_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.num.num'),'const.basicSize.pair_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.basicSize.pair_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.num.num'),'const.basicSize.pair_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.basicSize.pair_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.list_size_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.num.num'),'const.basicSize.pair_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.basicSize.pair_size_2'(s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27))),s('type.num.num',V_27a_7c49_7c2_27)))))))))))))))))))))))))))).
fof('thm.reg_alloc.ra_state_graph', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27)).
fof('thm.reg_alloc.ra_state_colours', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.num.num',V_27n_27)).
fof('thm.reg_alloc.ra_state_degs', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27)).
fof('thm.reg_alloc.ra_state_simp_worklist', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.num.num'),V_27l_27)).
fof('thm.reg_alloc.ra_state_freeze_worklist', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.num.num'),V_27l_7c48_7c_27)).
fof('thm.reg_alloc.ra_state_spill_worklist', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.num.num'),V_27l_7c49_7c_27)).
fof('thm.reg_alloc.ra_state_stack', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.num.num'),V_27l2_27)).
fof('thm.reg_alloc.ra_state_coalesced', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27)).
fof('thm.reg_alloc.ra_state_move_related', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.sptree.spt'('type.one.one'),V_27s2_27)).
fof('thm.reg_alloc.ra_state_avail_moves_pri', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27)).
fof('thm.reg_alloc.ra_state_avail_moves', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27)).
fof('thm.reg_alloc.ra_state_unavail_moves', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27)).
fof('thm.reg_alloc.ra_state_clock', axiom, ![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.num.num',V_27n_7c48_7c_27)).
fof('thm.reg_alloc.ra_state_graph_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27))),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_colours_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num',V_27n_27))),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_degs_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_simp_worklist_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),V_27l_27))),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_freeze_worklist_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27))),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_spill_worklist_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27))),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_stack_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),V_27l2_27))),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_coalesced_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_move_related_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.sptree.spt'('type.one.one'),V_27s2_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_avail_moves_pri_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_avail_moves_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_unavail_moves_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27))),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_clock_fupd', axiom, ![V_27f_27, V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num',V_27n_7c48_7c_27)))))).
fof('thm.reg_alloc.reg_alloc_82_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_83_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_84_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_85_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_86_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_87_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_88_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_89_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_9|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_9|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_92_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_93_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_94_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_95_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_96_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_97_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_98_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_99_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48||48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48||49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|2_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|3_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|4_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|5_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|6_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|7_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|8_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||48|9_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49||48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49||49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|2_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|3_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|4_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|5_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|6_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|7_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|8_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49||49|9_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|2|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|2|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|22_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|23_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|24_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|25_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|26_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|27_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|28_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|29_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|3|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|3|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|32_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|33_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|34_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|35_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|36_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|37_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|38_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|39_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|4|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|4|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|42_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|43_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|44_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|45_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|46_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|47_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|48_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|49_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|5|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|5|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|52_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|53_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|54_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|55_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|56_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|57_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|58_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|59_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|6|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|6|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|62_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|63_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|64_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|65_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|66_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|67_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|68_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|69_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|7|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|7|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|72_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|73_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|74_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|75_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|76_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|77_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|78_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|79_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|8|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|8|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|82_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|83_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|84_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|85_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|86_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|87_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|88_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|89_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|9|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|9|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|92_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|93_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|94_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|95_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|96_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|97_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|98_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_|49|99_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48||48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48||49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|2_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|3_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|4_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|5_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|6_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|7_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|8_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|48|9_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49||48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49||49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|2_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|3_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|4_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|5_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|6_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|7_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|8_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_2|49|9_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_22|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_22|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_222_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_223_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_224_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_225_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_226_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_227_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_228_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_229_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_23|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_23|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_232_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_233_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_234_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_235_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_236_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_237_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_238_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_239_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_24|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_24|49|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_242_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_243_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_244_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_245_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_246_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.sptree.spt'('type.one.one'),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_247_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_248_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_249_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_25|48|_prove_ltb', axiom, ![V_27r_27, V_27f_27]: s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_252_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_253_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_254_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_255_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_256_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_257_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_258_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_259_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_26|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_26|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_262_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_263_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('thm.reg_alloc.reg_alloc_264_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))),s('type.reg_alloc.ra_state',V_27r_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_graph_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|0', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|1', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27f_27),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_colours_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|2', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|3', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_degs_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|4', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|5', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_simp_worklist_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|6', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|7', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_freeze_worklist_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|8', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|9', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_spill_worklist_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|10', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|11', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_stack_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|12', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|13', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.o_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_coalesced_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|14', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|15', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_move_related_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|16', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|17', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.o_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_avail_moves_pri_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|18', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|19', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_avail_moves_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|20', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|21', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_unavail_moves_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|22', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|23', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.o_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('ARITY_1_2_const.reg_alloc.ra_state_clock_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|24', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27)))))).
fof('thm.reg_alloc.ra_state_fupdfupds_comp|split|25', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),'const.combin.o_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('fun'('type.num.num','type.num.num'),V_27g_27))))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))).
fof('thm.reg_alloc.reg_alloc_267_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_268_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_269_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_27|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_27|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_272_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_273_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_274_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_275_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_276_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_277_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_278_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_279_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_28|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_28|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_282_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_283_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_284_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_285_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_286_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_287_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_288_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_289_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_29|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_29|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_292_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_293_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_294_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_295_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_296_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_297_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_298_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_299_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48||48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48||49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|2_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|3_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|4_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|5_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|6_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|7_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|8_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|48|9_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49||48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49||49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|2_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|3_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|4_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|5_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|6_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|7_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|8_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_3|49|9_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_32|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_32|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_322_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_323_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_324_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_325_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_326_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_327_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_328_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_329_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_33|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_33|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_332_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_333_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_334_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_335_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_336_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_337_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_338_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_339_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_34|48|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_34|49|_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_342_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_343_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.reg_alloc_344_prove_ltb', axiom, ![V_27r_27, V_27g_27, V_27f_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state',V_27r_27))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),V_27f_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|0', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|1', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|2', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|3', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|4', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|5', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|6', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|7', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|8', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|9', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|10', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|11', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|12', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|13', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|14', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|15', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|16', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|17', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|18', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|19', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|20', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|21', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|22', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|23', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|24', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|25', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|26', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|27', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|28', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|29', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|30', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|31', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|32', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|33', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|34', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|35', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|36', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|37', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|38', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|39', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|40', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|41', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|42', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|43', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|44', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|45', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|46', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|47', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|48', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|49', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|50', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|51', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|52', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|53', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|54', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|55', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|56', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|57', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|58', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|59', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|60', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|61', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|62', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|63', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|64', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|65', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|66', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|67', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|68', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|69', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|70', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|71', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|72', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|73', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|74', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|75', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|76', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|77', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|78', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|79', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|80', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|81', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|82', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|83', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|84', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|85', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|86', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|87', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|88', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|89', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|90', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|91', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|92', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|93', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|94', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|95', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|96', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|97', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|98', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|99', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|100', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|101', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|102', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|103', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|104', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|105', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|106', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|107', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|108', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|109', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|110', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|111', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|112', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|113', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|114', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|115', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|116', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|117', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|118', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|119', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|120', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|121', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|122', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|123', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|124', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|125', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|126', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|127', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|128', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|129', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|130', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|131', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|132', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|133', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|134', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|135', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|136', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|137', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_degs_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|138', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|139', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_simp_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|140', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|141', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|142', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|143', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|144', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|145', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|146', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|147', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|148', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|149', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|150', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|151', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|152', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|153', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|154', axiom, ![V_27g_27, V_27f_27]: s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))))) = s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27)))))).
fof('thm.reg_alloc.ra_state_fupdcanon_comp|split|155', axiom, ![V_27A_27]: ![V_27h_27, V_27g_27, V_27f_27]: s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27))))) = s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),V_27g_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),'const.combin.o_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_clock_fupd_1'(s('fun'('type.num.num','type.num.num'),V_27f_27))),s('fun'(V_27A_27,'type.reg_alloc.ra_state'),V_27h_27)))))).
fof('thm.reg_alloc.reg_alloc_347_prove_ltb', axiom, ![V_27r2_27, V_27r_7c49_7c_27]: (s('type.reg_alloc.ra_state',V_27r_7c49_7c_27) = s('type.reg_alloc.ra_state',V_27r2_27) <=> (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r2_27))))))))))))))))).
fof('thm.reg_alloc.ra_state_component_equality', axiom, ![V_27r_7c49_7c_27, V_27r2_27]: (s('type.reg_alloc.ra_state',V_27r_7c49_7c_27) = s('type.reg_alloc.ra_state',V_27r2_27) <=> (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',V_27r2_27))) & s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r_7c49_7c_27))) = s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',V_27r2_27))))))))))))))))).
fof('thm.reg_alloc.reg_alloc_349_prove_ltb', axiom, ![V_27s2_27, V_27s_7c49_7c_27, V_27s_7c48_7c_27, V_27s_27, V_27r_27, V_27n_7c48_7c_27, V_27n_27, V_27l5_27, V_27l4_27, V_27l3_27, V_27l2_27, V_27l_7c49_7c_27, V_27l_7c48_7c_27, V_27l_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state',V_27r_27))))))))))))))))))))))))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0')))))))))))))))))))))))))))).
fof('thm.reg_alloc.reg_alloc_35|48|_prove_ltb', axiom, ![V_27r_27]: ?[V_27s2_27, V_27n_7c48_7c_27, V_27s_7c49_7c_27, V_27l5_27, V_27l4_27, V_27l3_27, V_27l2_27, V_27s_7c48_7c_27, V_27s_27, V_27l_7c49_7c_27, V_27l_7c48_7c_27, V_27l_27, V_27n_27]: s('type.reg_alloc.ra_state',V_27r_27) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0')))))))))))))))))))))))))))).
fof('thm.reg_alloc.reg_alloc_35|49|_prove_ltb', axiom, ![V_27P_27]: (![V_27r_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.ra_state','bool'),V_27P_27),s('type.reg_alloc.ra_state',V_27r_27)))) <=> ![V_27s2_27, V_27n_7c48_7c_27, V_27s_7c49_7c_27, V_27l5_27, V_27l4_27, V_27l3_27, V_27l2_27, V_27s_7c48_7c_27, V_27s_27, V_27l_7c49_7c_27, V_27l_7c48_7c_27, V_27l_27, V_27n_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.ra_state','bool'),V_27P_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0')))))))))))))))))))))))))))))))).
fof('thm.reg_alloc.reg_alloc_352_prove_ltb', axiom, ![V_27P_27]: (?[V_27r_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.ra_state','bool'),V_27P_27),s('type.reg_alloc.ra_state',V_27r_27)))) <=> ?[V_27s2_27, V_27n_7c48_7c_27, V_27s_7c49_7c_27, V_27l5_27, V_27l4_27, V_27l3_27, V_27l2_27, V_27s_7c48_7c_27, V_27s_27, V_27l_7c49_7c_27, V_27l_7c48_7c_27, V_27l_27, V_27n_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.ra_state','bool'),V_27P_27),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0')))))))))))))))))))))))))))))))).
fof('thm.reg_alloc.ra_state_updates_eq_literal', axiom, ![V_27r_27, V_27s2_27, V_27n_7c48_7c_27, V_27s_7c49_7c_27, V_27l5_27, V_27l4_27, V_27l3_27, V_27l2_27, V_27s_7c48_7c_27, V_27s_27, V_27l_7c49_7c_27, V_27l_7c48_7c_27, V_27l_27, V_27n_27]: s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state',V_27r_27))))))))))))))))))))))))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0')))))))))))))))))))))))))))).
fof('thm.reg_alloc.ra_state_literal_|49||49|', axiom, ![V_27s2_7c49_7c_27, V_27n_7c48_7c_7c49_7c_27, V_27s_7c49_7c_7c49_7c_27, V_27l5_7c49_7c_27, V_27l4_7c49_7c_27, V_27l3_7c49_7c_27, V_27l2_7c49_7c_27, V_27s_7c48_7c_7c49_7c_27, V_27s_7c49_7c_27, V_27l_7c49_7c_7c49_7c_27, V_27l_7c48_7c_7c49_7c_27, V_27l_7c49_7c_27, V_27n_7c49_7c_27, V_27s22_27, V_27n_7c48_7c2_27, V_27s_7c49_7c2_27, V_27l52_27, V_27l42_27, V_27l32_27, V_27l22_27, V_27s_7c48_7c2_27, V_27s2_27, V_27l_7c49_7c2_27, V_27l_7c48_7c2_27, V_27l2_27, V_27n2_27]: (s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l5_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l4_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l3_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l2_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c49_7c_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0'))))))))))))))))))))))))))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s22_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_colours_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n_7c48_7c2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l52_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l42_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l32_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27l22_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27s2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l2_27))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num',V_27n2_27))),s('type.reg_alloc.ra_state','const.bool.ARB_0'))))))))))))))))))))))))))) <=> (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s2_7c49_7c_27) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s22_27) & (s('type.num.num',V_27n_7c48_7c_7c49_7c_27) = s('type.num.num',V_27n_7c48_7c2_27) & (s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_7c49_7c_27) = s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c2_27) & (s('type.list.list'('type.num.num'),V_27l5_7c49_7c_27) = s('type.list.list'('type.num.num'),V_27l52_27) & (s('type.list.list'('type.num.num'),V_27l4_7c49_7c_27) = s('type.list.list'('type.num.num'),V_27l42_27) & (s('type.list.list'('type.num.num'),V_27l3_7c49_7c_27) = s('type.list.list'('type.num.num'),V_27l32_27) & (s('type.list.list'('type.num.num'),V_27l2_7c49_7c_27) = s('type.list.list'('type.num.num'),V_27l22_27) & (s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_7c49_7c_27) = s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c2_27) & (s('type.sptree.spt'('type.one.one'),V_27s_7c49_7c_27) = s('type.sptree.spt'('type.one.one'),V_27s2_27) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c2_27) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c48_7c2_27) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l2_27) & s('type.num.num',V_27n_7c49_7c_27) = s('type.num.num',V_27n2_27))))))))))))))).
fof('thm.reg_alloc.datatype_ra_state', axiom, ![V_27unavail__moves_27, V_27stack_27, V_27spill__worklist_27, V_27simp__worklist_27, V_27record_27, V_27ra__state_27, V_27move__related_27, V_27graph_27, V_27freeze__worklist_27, V_27degs_27, V_27colours_27, V_27coalesced_27, V_27clock_27, V_27avail__moves__pri_27, V_27avail__moves_27]: p(s('bool','const.bool.DATATYPE_1'(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool'))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool'))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool'))))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))))))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool'))))))))))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))))))))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool'))))))))))))),'happ'(s('fun'('type.min.ind','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','bool')))))))))))))),V_27record_27),s('type.min.ind',V_27ra__state_27))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27graph_27))),s('type.num.num',V_27colours_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),V_27simp__worklist_27))),s('type.list.list'('type.num.num'),V_27freeze__worklist_27))),s('type.list.list'('type.num.num'),V_27spill__worklist_27))),s('type.list.list'('type.num.num'),V_27stack_27))),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.one.one'),V_27move__related_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27avail__moves__pri_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27avail__moves_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27unavail__moves_27))),s('type.num.num',V_27clock_27))))))).
fof('thm.reg_alloc.ra_state_|49||49|', axiom, ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27, V_27a8_27, V_27a9_27, V_27a_7c49_7c_7c48_7c_27, V_27a_7c49_7c_7c49_7c_27, V_27a_7c49_7c2_27, V_27a_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c39_7c_27, V_27a2_7c39_7c_27, V_27a3_7c39_7c_27, V_27a4_7c39_7c_27, V_27a5_7c39_7c_27, V_27a6_7c39_7c_27, V_27a7_7c39_7c_27, V_27a8_7c39_7c_27, V_27a9_7c39_7c_27, V_27a_7c49_7c_7c48_7c_7c39_7c_27, V_27a_7c49_7c_7c49_7c_7c39_7c_27, V_27a_7c49_7c2_7c39_7c_27]: (s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.sptree.spt'('type.num.num'),V_27a2_27),s('type.list.list'('type.num.num'),V_27a3_27),s('type.list.list'('type.num.num'),V_27a4_27),s('type.list.list'('type.num.num'),V_27a5_27),s('type.list.list'('type.num.num'),V_27a6_27),s('type.sptree.spt'('type.num.num'),V_27a7_27),s('type.sptree.spt'('type.one.one'),V_27a8_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27),s('type.num.num',V_27a_7c49_7c2_27))) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_7c39_7c_27),s('type.num.num',V_27a_7c49_7c_7c39_7c_27),s('type.sptree.spt'('type.num.num'),V_27a2_7c39_7c_27),s('type.list.list'('type.num.num'),V_27a3_7c39_7c_27),s('type.list.list'('type.num.num'),V_27a4_7c39_7c_27),s('type.list.list'('type.num.num'),V_27a5_7c39_7c_27),s('type.list.list'('type.num.num'),V_27a6_7c39_7c_27),s('type.sptree.spt'('type.num.num'),V_27a7_7c39_7c_27),s('type.sptree.spt'('type.one.one'),V_27a8_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_7c39_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_7c39_7c_27),s('type.num.num',V_27a_7c49_7c2_7c39_7c_27))) <=> (s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_7c39_7c_27) & (s('type.num.num',V_27a_7c49_7c_27) = s('type.num.num',V_27a_7c49_7c_7c39_7c_27) & (s('type.sptree.spt'('type.num.num'),V_27a2_27) = s('type.sptree.spt'('type.num.num'),V_27a2_7c39_7c_27) & (s('type.list.list'('type.num.num'),V_27a3_27) = s('type.list.list'('type.num.num'),V_27a3_7c39_7c_27) & (s('type.list.list'('type.num.num'),V_27a4_27) = s('type.list.list'('type.num.num'),V_27a4_7c39_7c_27) & (s('type.list.list'('type.num.num'),V_27a5_27) = s('type.list.list'('type.num.num'),V_27a5_7c39_7c_27) & (s('type.list.list'('type.num.num'),V_27a6_27) = s('type.list.list'('type.num.num'),V_27a6_7c39_7c_27) & (s('type.sptree.spt'('type.num.num'),V_27a7_27) = s('type.sptree.spt'('type.num.num'),V_27a7_7c39_7c_27) & (s('type.sptree.spt'('type.one.one'),V_27a8_27) = s('type.sptree.spt'('type.one.one'),V_27a8_7c39_7c_27) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_7c39_7c_27) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_7c39_7c_27) & (s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27) = s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_7c39_7c_27) & s('type.num.num',V_27a_7c49_7c2_27) = s('type.num.num',V_27a_7c49_7c2_7c39_7c_27))))))))))))))).
fof('thm.reg_alloc.ra_state_case_cong', axiom, ![V_27A_27]: ![V_27f_7c39_7c_27, V_27M_27, V_27M_7c39_7c_27, V_27f_27]: ((s('type.reg_alloc.ra_state',V_27M_27) = s('type.reg_alloc.ra_state',V_27M_7c39_7c_27) & ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27, V_27a8_27, V_27a9_27, V_27a_7c49_7c_7c48_7c_27, V_27a_7c49_7c_7c49_7c_27, V_27a_7c49_7c2_27]: (s('type.reg_alloc.ra_state',V_27M_7c39_7c_27) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.sptree.spt'('type.num.num'),V_27a2_27),s('type.list.list'('type.num.num'),V_27a3_27),s('type.list.list'('type.num.num'),V_27a4_27),s('type.list.list'('type.num.num'),V_27a5_27),s('type.list.list'('type.num.num'),V_27a6_27),s('type.sptree.spt'('type.num.num'),V_27a7_27),s('type.sptree.spt'('type.one.one'),V_27a8_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27),s('type.num.num',V_27a_7c49_7c2_27))) => s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a2_27))),s('type.list.list'('type.num.num'),V_27a3_27))),s('type.list.list'('type.num.num'),V_27a4_27))),s('type.list.list'('type.num.num'),V_27a5_27))),s('type.list.list'('type.num.num'),V_27a6_27))),s('type.sptree.spt'('type.num.num'),V_27a7_27))),s('type.sptree.spt'('type.one.one'),V_27a8_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27))),s('type.num.num',V_27a_7c49_7c2_27))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_7c39_7c_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a2_27))),s('type.list.list'('type.num.num'),V_27a3_27))),s('type.list.list'('type.num.num'),V_27a4_27))),s('type.list.list'('type.num.num'),V_27a5_27))),s('type.list.list'('type.num.num'),V_27a6_27))),s('type.sptree.spt'('type.num.num'),V_27a7_27))),s('type.sptree.spt'('type.one.one'),V_27a8_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27))),s('type.num.num',V_27a_7c49_7c2_27))))) => s(V_27A_27,'const.reg_alloc.ra_state_CASE_2'(s('type.reg_alloc.ra_state',V_27M_27),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_27))) = s(V_27A_27,'const.reg_alloc.ra_state_CASE_2'(s('type.reg_alloc.ra_state',V_27M_7c39_7c_27),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_7c39_7c_27))))).
fof('thm.reg_alloc.ra_state_nchotomy', axiom, ![V_27rr_27]: ?[V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: s('type.reg_alloc.ra_state',V_27rr_27) = s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))).
fof('thm.reg_alloc.ra_state_Axiom', axiom, ![V_27A_27]: ![V_27f_27]: ?[V_27fn_27]: ![V_27a_7c48_7c_27, V_27a_7c49_7c_27, V_27a2_27, V_27a3_27, V_27a4_27, V_27a5_27, V_27a6_27, V_27a7_27, V_27a8_27, V_27a9_27, V_27a_7c49_7c_7c48_7c_27, V_27a_7c49_7c_7c49_7c_27, V_27a_7c49_7c2_27]: s(V_27A_27,'happ'(s('fun'('type.reg_alloc.ra_state',V_27A_27),V_27fn_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27),s('type.num.num',V_27a_7c49_7c_27),s('type.sptree.spt'('type.num.num'),V_27a2_27),s('type.list.list'('type.num.num'),V_27a3_27),s('type.list.list'('type.num.num'),V_27a4_27),s('type.list.list'('type.num.num'),V_27a5_27),s('type.list.list'('type.num.num'),V_27a6_27),s('type.sptree.spt'('type.num.num'),V_27a7_27),s('type.sptree.spt'('type.one.one'),V_27a8_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27),s('type.num.num',V_27a_7c49_7c2_27))))) = s(V_27A_27,'happ'(s('fun'('type.num.num',V_27A_27),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27)))))))))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num',V_27A_27))))))))))))),V_27f_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27a_7c48_7c_27))),s('type.num.num',V_27a_7c49_7c_27))),s('type.sptree.spt'('type.num.num'),V_27a2_27))),s('type.list.list'('type.num.num'),V_27a3_27))),s('type.list.list'('type.num.num'),V_27a4_27))),s('type.list.list'('type.num.num'),V_27a5_27))),s('type.list.list'('type.num.num'),V_27a6_27))),s('type.sptree.spt'('type.num.num'),V_27a7_27))),s('type.sptree.spt'('type.one.one'),V_27a8_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a9_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c48_7c_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27a_7c49_7c_7c49_7c_27))),s('type.num.num',V_27a_7c49_7c2_27)))).
fof('thm.reg_alloc.ra_state_induction', axiom, ![V_27P_27]: (![V_27s_27, V_27n_27, V_27s_7c48_7c_27, V_27l_27, V_27l_7c48_7c_27, V_27l_7c49_7c_27, V_27l2_27, V_27s_7c49_7c_27, V_27s2_27, V_27l3_27, V_27l4_27, V_27l5_27, V_27n_7c48_7c_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.ra_state','bool'),V_27P_27),s('type.reg_alloc.ra_state','const.reg_alloc.recordtype|46|ra_state_13'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27s_27),s('type.num.num',V_27n_27),s('type.sptree.spt'('type.num.num'),V_27s_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_27),s('type.list.list'('type.num.num'),V_27l_7c48_7c_27),s('type.list.list'('type.num.num'),V_27l_7c49_7c_27),s('type.list.list'('type.num.num'),V_27l2_27),s('type.sptree.spt'('type.num.num'),V_27s_7c49_7c_27),s('type.sptree.spt'('type.one.one'),V_27s2_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l3_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l4_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27l5_27),s('type.num.num',V_27n_7c48_7c_27)))))) => ![V_27r_27]: p(s('bool','happ'(s('fun'('type.reg_alloc.ra_state','bool'),V_27P_27),s('type.reg_alloc.ra_state',V_27r_27)))))).
fof('thm.reg_alloc.count_degrees_def', axiom, ![V_27P_27, V_27e_27]: s('type.num.num','const.reg_alloc.count_degrees_2'(s('fun'('type.num.num','bool'),V_27P_27),s('type.sptree.spt'('type.one.one'),V_27e_27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),V_27P_27),s('type.list.list'('type.num.num'),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'const.sptree.toAList_1'(s('type.sptree.spt'('type.one.one'),V_27e_27)))))))))).
fof('thm.reg_alloc.reg_alloc_366_prove_ltb', axiom, ![V_27A_27,V_27B_27]: ![V_27a_27]: ((?[V_27x_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.NIL_0'),s(V_27B_27,V_27x_27))) | ?[V_27pri_27, V_27x_27, V_27y_27, V_27xs_27, V_27z_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27pri_27),s('type.pair.prod'(V_27B_27,V_27B_27),'const.pair.,_2'(s(V_27B_27,V_27x_27),s(V_27B_27,V_27y_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27xs_27))),s(V_27B_27,V_27z_27)))) => (?[V_27x_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.NIL_0'),s(V_27B_27,V_27x_27))) | ?[V_27pri_27, V_27x_27, V_27y_27, V_27xs_27, V_27z_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),V_27a_27) = s('type.pair.prod'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27B_27),'const.pair.,_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27pri_27),s('type.pair.prod'(V_27B_27,V_27B_27),'const.pair.,_2'(s(V_27B_27,V_27x_27),s(V_27B_27,V_27y_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27xs_27))),s(V_27B_27,V_27z_27)))))).
fof('thm.reg_alloc.in_moves_ind', axiom, ![V_27A_27,V_27B_27]: ![V_27P_27]: ((![V_27x_27]: p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'(V_27B_27,'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.NIL_0'))),s(V_27B_27,V_27x_27)))) & ![V_27pri_27, V_27x_27, V_27y_27, V_27xs_27, V_27z_27]: (p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'(V_27B_27,'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27xs_27))),s(V_27B_27,V_27z_27)))) => p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'(V_27B_27,'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27pri_27),s('type.pair.prod'(V_27B_27,V_27B_27),'const.pair.,_2'(s(V_27B_27,V_27x_27),s(V_27B_27,V_27y_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27xs_27))))),s(V_27B_27,V_27z_27)))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'(V_27B_27,'bool'),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'(V_27B_27,'bool')),V_27P_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27v_27))),s(V_27B_27,V_27v_7c49_7c_27)))))).
fof('thm.reg_alloc.in_moves_def|split|0', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27]: s('bool','const.reg_alloc.in_moves_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.NIL_0'),s(V_27B_27,V_27x_27))) = s('bool','F_0')).
fof('thm.reg_alloc.in_moves_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27z_27, V_27y_27, V_27xs_27, V_27x_27, V_27pri_27]: (p(s('bool','const.reg_alloc.in_moves_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'const.pair.,_2'(s(V_27A_27,V_27pri_27),s('type.pair.prod'(V_27B_27,V_27B_27),'const.pair.,_2'(s(V_27B_27,V_27x_27),s(V_27B_27,V_27y_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27xs_27))),s(V_27B_27,V_27z_27)))) <=> (s(V_27B_27,V_27x_27) = s(V_27B_27,V_27z_27) | (s(V_27B_27,V_27y_27) = s(V_27B_27,V_27z_27) | p(s('bool','const.reg_alloc.in_moves_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),V_27xs_27),s(V_27B_27,V_27z_27)))))))).
fof('thm.reg_alloc.in_moves_set_def|split|0', axiom, ![V_27A_27]: ![V_27moves_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.in_moves_set_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))) = s('type.sptree.spt'('type.one.one'),'const.sptree.LN_0')).
fof('ARITY_2_3_const.sptree.insert', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.sptree.spt'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.sptree.spt'(V_27A_27)),'const.sptree.insert_2'(s('type.num.num',VV0),s(V_27A_27,VV1))),s('type.sptree.spt'(V_27A_27),VV2))) = s('type.sptree.spt'(V_27A_27),'const.sptree.insert_3'(s('type.num.num',VV0),s(V_27A_27,VV1),s('type.sptree.spt'(V_27A_27),VV2)))).
fof('thm.reg_alloc.in_moves_set_def|split|1', axiom, ![V_27A_27]: ![V_27moves_27, V_27x_27, V_27xs_27]: s('type.sptree.spt'('type.one.one'),'const.reg_alloc.in_moves_set_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))) = s('type.sptree.spt'('type.one.one'),'const.bool.LET_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_dst_x0x1x1_3'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.bool.COND_1'(s('bool','const.reg_alloc.in_moves_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.num.num',V_27x_27))))),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.sptree.insert_2'(s('type.num.num',V_27x_27),s('type.one.one','const.one.one_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'))),s('type.sptree.spt'('type.one.one'),'const.reg_alloc.in_moves_set_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.num.num'),V_27xs_27)))))).
fof('thm.reg_alloc.considered_var_def', axiom, ![V_27k_27, V_27x_27]: (p(s('bool','const.reg_alloc.considered_var_2'(s('type.num.num',V_27k_27),s('type.num.num',V_27x_27)))) <=> (p(s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',V_27x_27)))) | (p(s('bool','const.reg_alloc.is_phy_var_1'(s('type.num.num',V_27x_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27x_27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27)))))))))).
fof('ARITY_0_2_const.arithmetic.>', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('type.num.num',VV0))),s('type.num.num',VV1))) = s('bool','const.arithmetic.>_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('thm.reg_alloc.split_priority_def', axiom, ![V_27A_27,V_27B_27]: ![V_27ls_27]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'const.reg_alloc.split_priority_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ls_27))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'const.sorting.PARTITION_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'(V_27A_27,V_27B_27),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'(V_27A_27,V_27B_27),'bool')),'_dst_x0x1_2'(s('fun'('fun'(V_27A_27,'fun'(V_27B_27,'bool')),'fun'('type.pair.prod'(V_27A_27,V_27B_27),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'(V_27A_27,'fun'(V_27B_27,'bool'))),'_dst_x000x100x000_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),V_27ls_27)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_move_related_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_move_related_fupd_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_spill_worklist_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_spill_worklist_fupd_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_1_const.reg_alloc.is_alloc_var', axiom, ![VV0]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_alloc_var_0'),s('type.num.num',VV0))) = s('bool','const.reg_alloc.is_alloc_var_1'(s('type.num.num',VV0)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_freeze_worklist_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_freeze_worklist_fupd_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_1_2_const.reg_alloc.count_degrees', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.num.num'),'const.reg_alloc.count_degrees_1'(s('fun'('type.num.num','bool'),VV0))),s('type.sptree.spt'('type.one.one'),VV1))) = s('type.num.num','const.reg_alloc.count_degrees_2'(s('fun'('type.num.num','bool'),VV0),s('type.sptree.spt'('type.one.one'),VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_clock_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_clock_fupd_0'),s('fun'('type.num.num','type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_degs_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_degs_fupd_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.in_moves_set', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.sptree.spt'('type.one.one'),'happ'(s('fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.in_moves_set_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.list.list'('type.num.num'),VV1))) = s('type.sptree.spt'('type.one.one'),'const.reg_alloc.in_moves_set_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.list.list'('type.num.num'),VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_avail_moves_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_avail_moves_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.sorting.PARTITION', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'happ'(s('fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)))),'const.sorting.PARTITION_0'),s('fun'(V_27A_27,'bool'),VV0))),s('type.list.list'(V_27A_27),VV1))) = s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'const.sorting.PARTITION_2'(s('fun'(V_27A_27,'bool'),VV0),s('type.list.list'(V_27A_27),VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_avail_moves_pri_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_avail_moves_pri_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_simp_worklist_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_simp_worklist_fupd_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_1_2_const.reg_alloc.considered_var', axiom, ![VV0, VV1]: s('bool','happ'(s('fun'('type.num.num','bool'),'const.reg_alloc.considered_var_1'(s('type.num.num',VV0))),s('type.num.num',VV1))) = s('bool','const.reg_alloc.considered_var_2'(s('type.num.num',VV0),s('type.num.num',VV1)))).
fof('_dst_x0000x1101x0010_ax', axiom, ![VA,VA2,VA4,VA5,VA1,VA3,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1101x0010_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA5))),V__0),s('fun'(VA3,VA6),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x101x010_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,'fun'(VA4,VA5)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA5))),V__0),s(VA1,V__z))),s('fun'(VA3,VA6),V__1)))).
fof('_dst_x0000x0001x1110_ax', axiom, ![VA,VA4,VA5,VA2,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0001x1110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA4,VA5),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x001x110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA4,VA5),V__0),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000x01000x10111_ax', axiom, ![VA,VA2,VA6,VA3,VA4,VA5,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x01000x10111_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,VA6),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA7)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1000x0111_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,VA6),V__0),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA7))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA7)))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000x00001x11110_ax', axiom, ![VA,VA5,VA6,VA2,VA3,VA4,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x00001x11110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA5,VA6),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0001x1110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA5,VA6),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x101111x010100_ax', axiom, ![VA,VA3,VA5,VA6,VA7,VA1,VA2,VA4,VA8]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x101111x010100_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))))),V__0),s('fun'(VA2,'fun'(VA4,VA8)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x01111x10100_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7)))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA4,VA8)),V__1)))).
fof('_dst_x000000x011111x100000_ax', axiom, ![VA,VA2,VA3,VA4,VA5,VA6,VA7,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x011111x100000_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))))),V__0),s('fun'(VA1,VA8),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11111x00000_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA7))))),V__0),s(VA8,'happ'(s('fun'(VA1,VA8),V__1),s(VA1,V__z)))))).
fof('_dst_x000000x000001x111110_ax', axiom, ![VA,VA6,VA7,VA2,VA3,VA4,VA5,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x000001x111110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA6,VA7),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x00001x11110_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA6,VA7),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA8))))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000000x1101111x0010100_ax', axiom, ![VA,VA2,VA4,VA6,VA7,VA8,VA1,VA3,VA5,VA9]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x1101111x0010100_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),V__0),s('fun'(VA3,'fun'(VA5,VA9)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x101111x010100_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA8)))))),V__0),s(VA1,V__z))),s('fun'(VA3,'fun'(VA5,VA9)),V__1)))).
fof('_dst_x0000000x0000001x1111110_ax', axiom, ![VA,VA7,VA8,VA2,VA3,VA4,VA5,VA6,VA9,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))))),'_dst_x0000000x0000001x1111110_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA7,VA8),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA)))))),'_dst_x000000x000001x111110_3'(s('fun'(VA8,'fun'(VA9,VA)),V__x),s('fun'(VA7,VA8),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA9)))))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000000x01000000x10111111_ax', axiom, ![VA,VA2,VA9,VA3,VA4,VA5,VA6,VA7,VA8,VA10,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA)))))))),'_dst_x00000000x01000000x10111111_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,VA9),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10))))))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))))),'_dst_x0000000x1000000x0111111_3'(s('fun'(VA9,'fun'(VA10,VA)),V__x),s('fun'(VA2,VA9),V__0),s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10)))))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA10))))))),V__1),s(VA1,V__z)))))).
fof('thm.reg_alloc.init_ra_state_def', axiom, ![V_27G_27, V_27k_27, V_27moves_27]: s('type.reg_alloc.ra_state','const.reg_alloc.init_ra_state_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27))) = s('type.reg_alloc.ra_state','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'_dst_x0x1x0_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'_dst_x00x11x01_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state'))),'_dst_x000x111x001_3'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x0000x1101x0010_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state'))))),'_dst_x00000x11111x11000_3'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state'),'fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')))))),'_dst_x000000x011111x100000_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'type.reg_alloc.ra_state'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'type.reg_alloc.ra_state')))))),'_dst_x00000x11111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'type.reg_alloc.ra_state')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))))),'_dst_x0000000x1101111x0010100_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))))),'_dst_x000000x111111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')))))))),'_dst_x00000000x11111111_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.combin.K_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')))))))),'_dst_x00000000x11111111_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.combin.K_0'),s('type.num.num',V_27k_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')))))))),'_dst_x00000000x01000000x10111111_3'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_degs_fupd_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state'))))))),'_dst_x0000000x0000001x1111110_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_simp_worklist_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')))))),'_dst_x000000x000001x111110_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_freeze_worklist_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))),'_dst_x00000x01000x10111_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_spill_worklist_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x0000x1111_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_stack_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x0000x1111_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.combin.K_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x0000x0100x1011_3'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_move_related_fupd_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'_dst_x000x010x101_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_avail_moves_pri_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'_dst_x00x01x10_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_avail_moves_fupd_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.combin.K_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_clock_fupd_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))),s('type.reg_alloc.ra_state','const.bool.ARB_0'))))))))))))))))))))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x00x01x10_3'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))))),'const.sorting.PARTITION_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x110x000_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','type.option.option'('type.one.one'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'))),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'_i_0_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.sorting.PARTITION_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x100x000_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.num.num','const.num.|48|_0'))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.in_moves_set_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))))),'const.sorting.PARTITION_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x0_1'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num',V_27k_27))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.sptree.spt'('type.num.num')),'const.sptree.fromAList_0'))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'const.list.MAP_1'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'_dst_x1x1_2'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.num.num'),'const.reg_alloc.count_degrees_1'(s('fun'('type.num.num','bool'),'const.reg_alloc.considered_var_1'(s('type.num.num',V_27k_27))))),s('fun'('type.num.num','type.sptree.spt'('type.one.one')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.one.one')),'const.option.THE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))))))),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'const.reg_alloc.is_alloc_var_0'),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one')),'type.num.num'),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.sptree.spt'('type.one.one'))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.FILTER_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.considered_var_1'(s('type.num.num',V_27k_27))),s('fun'('type.num.num','bool'),'const.reg_alloc.considered_var_1'(s('type.num.num',V_27k_27))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))).
fof('thm.reg_alloc.get_stack_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_stack_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_1_const.reg_alloc.get_graph', axiom, ![VV0]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'const.reg_alloc.get_graph_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'const.reg_alloc.get_graph_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_graph_def', axiom, ![Vx]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'const.reg_alloc.get_graph_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_2_const.reg_alloc.push_stack', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0'),s('type.num.num',VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.push_stack_2'(s('type.num.num',VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.push_stack_def', axiom, ![V_27v_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.push_stack_2'(s('type.num.num',V_27v_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),'const.sptree.delete_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),'const.sptree.delete_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))))))).
fof('ARITY_0_1_const.reg_alloc.get_degs', axiom, ![VV0]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_degs_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_degs_def', axiom, ![Vx]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_degs_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_1_2_const.reg_alloc.get_deg', axiom, ![VV0, VV1]: s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_deg_1'(s('type.num.num',VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_deg_2'(s('type.num.num',VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.get_deg_def', axiom, ![V_27v_27, Vx]: s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_deg_2'(s('type.num.num',V_27v_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',Vx))))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_1_3_const.reg_alloc.set_deg', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_deg_1'(s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.reg_alloc.ra_state',VV2))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_deg_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.reg_alloc.ra_state',VV2)))).
fof('thm.reg_alloc.set_deg_def', axiom, ![V_27k_27, V_27v_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_deg_3'(s('type.num.num',V_27k_27),s('type.num.num',V_27v_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_degs_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num',V_27k_27),s('type.num.num',V_27v_27),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_degs_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_2_const.reg_alloc.add_simp_worklist', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_simp_worklist_0'),s('type.list.list'('type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_simp_worklist_2'(s('type.list.list'('type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.add_simp_worklist_def', axiom, ![V_27ls_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_simp_worklist_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.add_spill_worklist_def', axiom, ![V_27ls_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_spill_worklist_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.add_freeze_worklist_def', axiom, ![V_27ls_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_freeze_worklist_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),'const.list.APPEND_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_2_const.reg_alloc.set_spill_worklist', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_spill_worklist_0'),s('type.list.list'('type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_spill_worklist_2'(s('type.list.list'('type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.set_spill_worklist_def', axiom, ![V_27ls_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_spill_worklist_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_spill_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_spill_worklist', axiom, ![VV0]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_spill_worklist_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_spill_worklist_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_spill_worklist_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_spill_worklist_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_spill_worklist_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_1_const.reg_alloc.get_simp_worklist', axiom, ![VV0]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_simp_worklist_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_simp_worklist_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_simp_worklist_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_simp_worklist_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_simp_worklist_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_2_const.reg_alloc.set_simp_worklist', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_simp_worklist_0'),s('type.list.list'('type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_simp_worklist_2'(s('type.list.list'('type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.set_simp_worklist_def', axiom, ![V_27ls_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_simp_worklist_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_simp_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_freeze_worklist', axiom, ![VV0]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_freeze_worklist_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_freeze_worklist_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_freeze_worklist_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_freeze_worklist_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_freeze_worklist_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_2_const.reg_alloc.set_freeze_worklist', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_freeze_worklist_0'),s('type.list.list'('type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_freeze_worklist_2'(s('type.list.list'('type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.set_freeze_worklist_def', axiom, ![V_27ls_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_freeze_worklist_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_freeze_worklist_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.combin.K_1'(s('type.list.list'('type.num.num'),V_27ls_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_colours', axiom, ![VV0]: s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_colours_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'const.reg_alloc.get_colours_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_colours_def', axiom, ![Vx]: s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'const.reg_alloc.get_colours_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.num.num','const.reg_alloc.ra_state_colours_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_1_const.reg_alloc.get_move_rel', axiom, ![VV0]: s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_move_rel_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_move_rel_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_move_rel_def', axiom, ![Vx]: s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_move_rel_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('thm.reg_alloc.set_move_rel_def', axiom, ![V_27move__rel_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_move_rel_2'(s('type.sptree.spt'('type.one.one'),V_27move__rel_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),V_27move__rel_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_coalesced', axiom, ![VV0]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_coalesced_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_coalesced_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_coalesced_def', axiom, ![Vx]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'const.reg_alloc.get_coalesced_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('thm.reg_alloc.set_coalesced_def', axiom, ![V_27coalesce_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_coalesced_2'(s('type.sptree.spt'('type.num.num'),V_27coalesce_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),V_27coalesce_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_avail_moves_pri', axiom, ![VV0]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_pri_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.get_avail_moves_pri_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_avail_moves_pri_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.get_avail_moves_pri_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_1_const.reg_alloc.get_avail_moves', axiom, ![VV0]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.get_avail_moves_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_avail_moves_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.get_avail_moves_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('thm.reg_alloc.set_avail_moves_pri_def', axiom, ![V_27moves_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_avail_moves_pri_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.set_avail_moves_def', axiom, ![V_27moves_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_avail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.add_avail_moves_pri_def', axiom, ![V_27moves_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_avail_moves_pri_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_pri_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_pri_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.add_avail_moves_def', axiom, ![V_27moves_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_avail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_avail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_avail_moves_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_unavail_moves', axiom, ![VV0]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_unavail_moves_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.get_unavail_moves_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_unavail_moves_def', axiom, ![Vx]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.get_unavail_moves_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('ARITY_0_2_const.reg_alloc.set_unavail_moves', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_unavail_moves_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_unavail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.set_unavail_moves_def', axiom, ![V_27moves_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_unavail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.add_unavail_moves_def', axiom, ![V_27moves_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_unavail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_unavail_moves_fupd_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.combin.K_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.APPEND_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.ra_state_unavail_moves_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.freeze_node_def', axiom, ![V_27x_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.freeze_node_2'(s('type.num.num',V_27x_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_move_related_fupd_2'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'const.combin.K_1'(s('type.sptree.spt'('type.one.one'),'const.sptree.delete_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.one.one'),'const.reg_alloc.ra_state_move_related_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.add_coalesce_def', axiom, ![V_27x_27, V_27y_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_coalesce_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_coalesced_fupd_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'const.combin.K_1'(s('type.sptree.spt'('type.num.num'),'const.sptree.insert_3'(s('type.num.num',V_27y_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('thm.reg_alloc.get_edges_def', axiom, ![V_27v_27, Vx]: s('type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'const.reg_alloc.get_edges_2'(s('type.num.num',V_27v_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.option.option'('type.sptree.spt'('type.one.one')),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',Vx))))),s('type.reg_alloc.ra_state',Vx)))).
fof('thm.reg_alloc.inc_one_def', axiom, ![V_27v_27]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.inc_one_1'(s('type.num.num',V_27v_27))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_deg_1'(s('type.num.num',V_27v_27))),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_deg_1'(s('type.num.num',V_27v_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.+_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('ARITY_0_1_const.reg_alloc.dec_one', axiom, ![VV0]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_one_0'),s('type.num.num',VV0))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_one_1'(s('type.num.num',VV0)))).
fof('thm.reg_alloc.dec_one_def', axiom, ![V_27v_27]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_one_1'(s('type.num.num',V_27v_27))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_deg_1'(s('type.num.num',V_27v_27))),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_deg_1'(s('type.num.num',V_27v_27))),s('fun'('type.num.num','type.num.num'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.arithmetic.-_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))).
fof('ARITY_0_1_const.reg_alloc.dec_deg', axiom, ![VV0]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_deg_0'),s('type.num.num',VV0))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_deg_1'(s('type.num.num',VV0)))).
fof('thm.reg_alloc.dec_deg_def', axiom, ![V_27v_27]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_deg_1'(s('type.num.num',V_27v_27))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'const.reg_alloc.get_graph_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1x0x0_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'const.sptree.lookup_1'(s('type.num.num',V_27v_27))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.bool.LET_1'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.FOREACH_0'),s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_one_0'))))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0')))))))))).
fof('ARITY_0_1_const.reg_alloc.split_priority', axiom, ![V_27A_27,V_27B_27]: ![VV0]: s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))))),'const.reg_alloc.split_priority_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),VV0))) = s('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27)))),'const.reg_alloc.split_priority_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'(V_27A_27,V_27B_27))),VV0)))).
fof('ARITY_0_2_const.reg_alloc.add_avail_moves', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_avail_moves_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_avail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.add_avail_moves_pri', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_avail_moves_pri_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_avail_moves_pri_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_1_const.reg_alloc.revive_moves', axiom, ![VV0]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.revive_moves_0'),s('type.num.num',VV0))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.revive_moves_1'(s('type.num.num',VV0)))).
fof('thm.reg_alloc.revive_moves_def', axiom, ![V_27v_27]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.revive_moves_1'(s('type.num.num',V_27v_27))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'const.reg_alloc.get_graph_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1x0x0_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'const.sptree.lookup_1'(s('type.num.num',V_27v_27))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_unavail_moves_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x010x101_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_avail_moves_pri_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_avail_moves_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_unavail_moves_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.split_priority_0'))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x0x1_2'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'const.sorting.PARTITION_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'_dst_x00x10_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x110x101_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))))))))))))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.CONS_1'(s('type.num.num',V_27v_27))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0')))))))))))).
fof('ARITY_0_2_const.reg_alloc.add_freeze_worklist', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_freeze_worklist_0'),s('type.list.list'('type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_freeze_worklist_2'(s('type.list.list'('type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.unspill_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.unspill_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_spill_worklist_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_colours_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_move_rel_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))))),'_dst_x0000x0001x1110_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x011x110_3'(s('fun'('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))))),'_dst_x0000x1000x0111_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.FOREACH_0'),s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.revive_moves_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x100x011_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_spill_worklist_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_simp_worklist_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_freeze_worklist_0'))))))))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')))),'const.sorting.PARTITION_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','type.option.option'('type.one.one'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'))),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))))),'_dst_x000x011x100_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')))),'const.sorting.PARTITION_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x101x000x010_4'(s('fun'('type.option.option'('type.num.num'),'fun'('bool','fun'('fun'('type.num.num','bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('bool','F_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0')))))))))))))).
fof('thm.reg_alloc.simplify_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.simplify_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_simp_worklist_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.list.list_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_simp_worklist_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1x1_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_deg_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.unspill_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0')))))))))))))).
fof('thm.reg_alloc.reg_alloc_4|49|3_prove_ltb', axiom, ![V_27a_27]: ((?[V_27coalesced_27, V_27degs_27, V_27acc_27, V_27v_27, V_27deg_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27acc_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27))))))))))) | ?[V_27coalesced_27, V_27degs_27, V_27x_27, V_27xs_27, V_27acc_27, V_27v_27, V_27deg_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27acc_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27)))))))))))) => (?[V_27coalesced_27, V_27degs_27, V_27acc_27, V_27v_27, V_27deg_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27acc_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27))))))))))) | ?[V_27coalesced_27, V_27degs_27, V_27x_27, V_27xs_27, V_27acc_27, V_27v_27, V_27deg_27]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),V_27a_27) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_2'(s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_2'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.pair.prod'('type.list.list'('type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_2'(s('type.list.list'('type.num.num'),V_27acc_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27)))))))))))))).
fof('thm.reg_alloc.max_non_coalesced_ind', axiom, ![V_27P_27]: ((![V_27coalesced_27, V_27degs_27, V_27acc_27, V_27v_27, V_27deg_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),'const.list.NIL_0'))),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27)))))) & ![V_27coalesced_27, V_27degs_27, V_27x_27, V_27xs_27, V_27acc_27, V_27v_27, V_27deg_27]: ((![V_27d_27]: ((s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))) = s('type.option.option'('type.num.num'),'const.option.NONE_0') & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27degs_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27d_27))) & ~ (p(s('bool','const.arithmetic.>_2'(s('type.num.num',V_27d_27),s('type.num.num',V_27deg_27))))))) => p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27acc_27))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27))))))) & (![V_27d_27]: ((s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))) = s('type.option.option'('type.num.num'),'const.option.NONE_0') & (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27degs_27))) = s('type.option.option'('type.num.num'),'const.option.SOME_1'(s('type.num.num',V_27d_27))) & p(s('bool','const.arithmetic.>_2'(s('type.num.num',V_27d_27),s('type.num.num',V_27deg_27)))))) => p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27acc_27))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27d_27))))))) & ((~ (s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')) => p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27))))))) & ((s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))) = s('type.option.option'('type.num.num'),'const.option.NONE_0') & s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27degs_27))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')) => p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27)))))))))) => p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))))),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27)))))))) => ![V_27v_27, V_27v_7c49_7c_27, V_27v2_27, V_27v3_27, V_27v4_27, V_27v5_27]: p(s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))))),V_27P_27),s('type.sptree.spt'('type.num.num'),V_27v_27))),s('type.sptree.spt'('type.num.num'),V_27v_7c49_7c_27))),s('type.list.list'('type.num.num'),V_27v2_27))),s('type.list.list'('type.num.num'),V_27v3_27))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v4_27),s('type.num.num',V_27v5_27)))))))).
fof('thm.reg_alloc.max_non_coalesced_def|split|0', axiom, ![V_27v_27, V_27degs_27, V_27deg_27, V_27coalesced_27, V_27acc_27]: s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'const.reg_alloc.max_non_coalesced_5'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('type.list.list'('type.num.num'),V_27acc_27),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.num.num',V_27deg_27))))) = s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'const.pair.,_2'(s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27acc_27)))).
fof('ARITY_4_5_const.reg_alloc.max_non_coalesced', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'const.reg_alloc.max_non_coalesced_4'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.num.num'),VV1),s('type.list.list'('type.num.num'),VV2),s('type.list.list'('type.num.num'),VV3))),s('type.pair.prod'('type.num.num','type.num.num'),VV4))) = s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'const.reg_alloc.max_non_coalesced_5'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.num.num'),VV1),s('type.list.list'('type.num.num'),VV2),s('type.list.list'('type.num.num'),VV3),s('type.pair.prod'('type.num.num','type.num.num'),VV4)))).
fof('thm.reg_alloc.max_non_coalesced_def|split|1', axiom, ![V_27xs_27, V_27x_27, V_27v_27, V_27degs_27, V_27deg_27, V_27coalesced_27, V_27acc_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27coalesced_27))) = s('type.option.option'('type.num.num'),'const.option.NONE_0')) & s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'const.reg_alloc.max_non_coalesced_4'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27xs_27))),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_1'(s('type.num.num',V_27v_27))),s('type.num.num',V_27deg_27))))) = s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'happ'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.pair.prod'('type.num.num','type.list.list'('type.num.num')))),'happ'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))))),'const.bool.COND_0'),s('bool',Vv))),s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'const.option.option_CASE_3'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'const.reg_alloc.max_non_coalesced_4'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_1'(s('type.num.num',V_27v_27))),s('type.num.num',V_27deg_27))))),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('type.num.num',V_27deg_27))),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'const.reg_alloc.max_non_coalesced_4'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27acc_27))))),s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_1'(s('type.num.num',V_27x_27))))),s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'const.reg_alloc.max_non_coalesced_4'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),V_27acc_27))))),s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_1'(s('type.num.num',V_27v_27))),s('type.num.num',V_27deg_27))))))))))),s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'const.reg_alloc.max_non_coalesced_4'(s('type.sptree.spt'('type.num.num'),V_27coalesced_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.list.list'('type.num.num'),V_27xs_27),s('type.list.list'('type.num.num'),V_27acc_27))),s('type.pair.prod'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'const.pair.,_1'(s('type.num.num',V_27v_27))),s('type.num.num',V_27deg_27))))))))).
fof('ARITY_0_5_const.reg_alloc.max_non_coalesced', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num')))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num')))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))))))),'const.reg_alloc.max_non_coalesced_0'),s('type.sptree.spt'('type.num.num'),VV0))),s('type.sptree.spt'('type.num.num'),VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.list.list'('type.num.num'),VV3))),s('type.pair.prod'('type.num.num','type.num.num'),VV4))) = s('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'const.reg_alloc.max_non_coalesced_5'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.num.num'),VV1),s('type.list.list'('type.num.num'),VV2),s('type.list.list'('type.num.num'),VV3),s('type.pair.prod'('type.num.num','type.num.num'),VV4)))).
fof('_dst_x00x00x00x10x00x01_ax', axiom, ![VA,VA3,VA4,VA5,VA1,VA6,VA2,VA7]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x00x00x10x00x01_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s('fun'(VA1,VA5),V__2),s(VA6,V__3),s('fun'(VA2,VA7),V__4))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0x0x0x1_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z))),s(VA6,V__3),s('fun'(VA2,VA7),V__4)))).
fof('_dst_x000x110x111_ax', axiom, ![VA,VA4,VA2,VA3,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x110x111_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA1,'fun'(VA2,VA4)),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x10x11_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA2,VA4),'happ'(s('fun'(VA1,'fun'(VA2,VA4)),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA5)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__1),s(VA1,V__z)))))).
fof('_dst_x000x000x000x010x000x101_ax', axiom, ![VA,VA4,VA5,VA2,VA6,VA7,VA3,VA8,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x000x000x010x000x101_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s(VA4,V__0),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s(VA7,V__3),s('fun'(VA1,'fun'(VA3,VA8)),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00x10x00x01_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s(VA4,V__0),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s(VA7,V__3),s('fun'(VA3,VA8),'happ'(s('fun'(VA1,'fun'(VA3,VA8)),V__4),s(VA1,V__z)))))).
fof('_dst_x0000x0110x1111_ax', axiom, ![VA,VA5,VA2,VA3,VA4,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0110x1111_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA5)),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA6)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x110x111_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA5)),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA6)))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x0000x1000x0010x0000x0101_ax', axiom, ![VA,VA5,VA6,VA1,VA3,VA7,VA8,VA2,VA4,VA9]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0000x1000x0010x0000x0101_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s(VA5,V__0),s('fun'(VA1,VA6),V__1),s('fun'(VA3,VA7),V__2),s(VA8,V__3),s('fun'(VA2,'fun'(VA4,VA9)),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x000x000x010x000x101_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s(VA5,V__0),s(VA6,'happ'(s('fun'(VA1,VA6),V__1),s(VA1,V__z))),s('fun'(VA3,VA7),V__2),s(VA8,V__3),s('fun'(VA2,'fun'(VA4,VA9)),V__4)))).
fof('_dst_x00000x10000x01000x00010x00000x00101_ax', axiom, ![VA,VA6,VA1,VA2,VA7,VA4,VA8,VA9,VA3,VA5,VA10]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x10000x01000x00010x00000x00101_6'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))),V__x),s('fun'(VA1,VA6),V__0),s('fun'(VA2,VA7),V__1),s('fun'(VA4,VA8),V__2),s(VA9,V__3),s('fun'(VA3,'fun'(VA5,VA10)),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0000x1000x0010x0000x0101_6'(s('fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,'fun'(VA10,VA))))),V__x),s(VA6,'happ'(s('fun'(VA1,VA6),V__0),s(VA1,V__z))),s('fun'(VA2,VA7),V__1),s('fun'(VA4,VA8),V__2),s(VA9,V__3),s('fun'(VA3,'fun'(VA5,VA10)),V__4)))).
fof('thm.reg_alloc.spill_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.spill_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_spill_worklist_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_coalesced_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x100x000x011_4'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))))),'_dst_x0000x0110x1111_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.num.num')),'_dst_x00x11x00x00_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.num.num','fun'('fun'('type.num.num','type.num.num'),'type.num.num'))),'const.option.option_CASE_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('type.num.num','const.num.|48|_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11111x00000_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.reg_alloc.ra_state')),'fun'('fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11111_2'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.list.list'('type.num.num'))))))),'_dst_x00000x10000x01000x00010x00000x00101_6'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.list.list'('type.num.num'))))))),'const.reg_alloc.max_non_coalesced_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))))),s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_spill_worklist_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1x1_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_deg_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.unspill_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0')))))))))))))))))))))))).
fof('ARITY_0_3_const.reg_alloc.lookup_g', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2))) = s('bool','const.reg_alloc.lookup_g_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2)))).
fof('ARITY_0_2_const.reg_alloc.set_move_rel', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_move_rel_0'),s('type.sptree.spt'('type.one.one'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_move_rel_2'(s('type.sptree.spt'('type.one.one'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('_dst_x00x00x10_ax', axiom, ![VA2,VA,VA3,VA4,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x00x10_3'(s('fun'(VA3,'fun'(VA4,VA)),V__x),s(VA3,V__0),s('fun'(VA1,VA4),V__1))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0_3'(s('fun'(VA3,'fun'(VA4,VA)),V__x),s(VA3,V__0),s(VA4,'happ'(s('fun'(VA1,VA4),V__1),s(VA1,V__z)))))).
fof('_dst_x000x000x110_ax', axiom, ![VA3,VA,VA4,VA2,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x000x110_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,V__0),s('fun'(VA1,'fun'(VA2,VA5)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x10_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,V__0),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x1000x0110_ax', axiom, ![VA4,VA,VA5,VA1,VA2,VA3,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1000x0110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,VA5),V__0),s('fun'(VA2,'fun'(VA3,VA6)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x000x110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s(VA5,'happ'(s('fun'(VA1,VA5),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA6)),V__1)))).
fof('thm.reg_alloc.freeze_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.freeze_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_freeze_worklist_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_unavail_moves_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'const.reg_alloc.get_graph_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x011x100_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x00x01x10_3'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.list.FILTER_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'_dst_x00x10_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x011x111_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x111_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x011x100_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'))))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x011x110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.one.one'))),'_dst_x00x10x01_3'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.one.one'))),'const.reg_alloc.in_moves_set_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'const.sptree.toAList_0'))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_coalesced_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))))),'_dst_x0000x1001x0110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.FILTER_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x010x111_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_move_rel_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))))),'_dst_x0000x1000x0110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_unavail_moves_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x111x000_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.bool.LET_1'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x01x10x10_3'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.list.list_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_freeze_worklist_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x001x110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_simp_worklist_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_freeze_worklist_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))))))))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.one.one','type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))))),'_dst_x000x101x010_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')))),'const.sorting.PARTITION_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.one.one','fun'('type.num.num','bool'))),'_dst_x000x101x010_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','type.option.option'('type.one.one'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'))),s('fun'('type.one.one','type.option.option'('type.one.one')),'const.option.SOME_0'))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1x1_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_deg_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.unspill_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0')))))))))))))))))))))))))))))))).
fof('thm.reg_alloc.briggs_ok_def', axiom, ![V_27G_27, V_27k_27, V_27degs_27, V_27move_27]: s('bool','const.reg_alloc.briggs_ok_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'('type.num.num','type.num.num'),V_27move_27))) = s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.bool.LET_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x00x01_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('bool','fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('bool','F_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x10x00x01_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('bool','fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('bool','F_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x11_2'(s('fun'('type.sptree.spt'('type.one.one'),'bool'),'const.bool.LET_1'(s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.option.option'('type.num.num')),'bool'),'const.bool.LET_1'(s('fun'('type.list.list'('type.option.option'('type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'bool'),'const.bool.LET_1'(s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1x0_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.FILTER_1'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num',V_27k_27))))))),s('type.num.num',V_27k_27))))),s('fun'('type.list.list'('type.option.option'('type.num.num')),'type.list.list'('type.num.num')),'const.reg_alloc.option_filter_0'))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.option.option'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.option.option'('type.num.num'))),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.option.option'('type.num.num')),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.one.one','type.option.option'('type.num.num'))),'_dst_x00x10x00_3'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.sptree.spt'('type.num.num'),V_27degs_27))))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0'))))))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.sptree.union_0'))))))))))),s('type.pair.prod'('type.num.num','type.num.num'),V_27move_27)))).
fof('ARITY_0_2_const.sptree.difference', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1]: s('type.sptree.spt'(V_27A_27),'happ'(s('fun'('type.sptree.spt'(V_27B_27),'type.sptree.spt'(V_27A_27)),'happ'(s('fun'('type.sptree.spt'(V_27A_27),'fun'('type.sptree.spt'(V_27B_27),'type.sptree.spt'(V_27A_27))),'const.sptree.difference_0'),s('type.sptree.spt'(V_27A_27),VV0))),s('type.sptree.spt'(V_27B_27),VV1))) = s('type.sptree.spt'(V_27A_27),'const.sptree.difference_2'(s('type.sptree.spt'(V_27A_27),VV0),s('type.sptree.spt'(V_27B_27),VV1)))).
fof('thm.reg_alloc.george_ok_def', axiom, ![V_27G_27, V_27k_27, V_27degs_27, V_27move_27]: s('bool','const.reg_alloc.george_ok_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'('type.num.num','type.num.num'),V_27move_27))) = s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.bool.LET_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x00x01_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('bool','fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('bool','F_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x10x00x01_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('bool','fun'('fun'('type.sptree.spt'('type.one.one'),'bool'),'bool'))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('bool','F_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'bool')),'_dst_x00x11_2'(s('fun'('type.sptree.spt'('type.one.one'),'bool'),'const.bool.LET_1'(s('fun'('type.sptree.spt'('type.one.one'),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.option.option'('type.num.num')),'bool'),'const.bool.LET_1'(s('fun'('type.list.list'('type.option.option'('type.num.num')),'bool'),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'bool'),'const.bool.LET_1'(s('fun'('type.list.list'('type.num.num'),'bool'),'const.list.EVERY_1'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('type.num.num',V_27k_27))))))),s('fun'('type.list.list'('type.option.option'('type.num.num')),'type.list.list'('type.num.num')),'const.reg_alloc.option_filter_0'))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.option.option'('type.num.num'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.option.option'('type.num.num'))),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.option.option'('type.num.num')),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.one.one','type.option.option'('type.num.num'))),'_dst_x00x10x00_3'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('type.sptree.spt'('type.num.num'),V_27degs_27))))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0'))))))),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'_dst_x01x10_2'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.sptree.difference_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'))))))))))))),s('type.pair.prod'('type.num.num','type.num.num'),V_27move_27)))).
fof('ARITY_2_3_const.reg_alloc.is_valid_move', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'const.reg_alloc.is_valid_move_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.sptree.spt'('type.one.one'),VV1))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),VV2))) = s('bool','const.reg_alloc.is_valid_move_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.sptree.spt'('type.one.one'),VV1),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),VV2)))).
fof('thm.reg_alloc.is_valid_move_def', axiom, ![V_27A_27]: ![V_27G_27, V_27move__related_27, V_27move_27]: s('bool','const.reg_alloc.is_valid_move_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.one.one'),V_27move__related_27),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01x11_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.one.one')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.one.one'),V_27move__related_27))),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x10_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.one.one')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.one.one'),V_27move__related_27))),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.one.one')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.one.one'),V_27move__related_27))),s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))))))))))))))))))))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27)))).
fof('ARITY_3_4_const.reg_alloc.briggs_ok', axiom, ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.reg_alloc.briggs_ok_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2))),s('type.pair.prod'('type.num.num','type.num.num'),VV3))) = s('bool','const.reg_alloc.briggs_ok_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.pair.prod'('type.num.num','type.num.num'),VV3)))).
fof('ARITY_3_4_const.reg_alloc.george_ok', axiom, ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.reg_alloc.george_ok_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2))),s('type.pair.prod'('type.num.num','type.num.num'),VV3))) = s('bool','const.reg_alloc.george_ok_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.pair.prod'('type.num.num','type.num.num'),VV3)))).
fof('_dst_x00x10x11x11_ax', axiom, ![VA,VA3,VA4,VA2,VA5,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x10x11x11_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA1,'fun'(VA2,VA4)),V__1),s('fun'(VA1,'fun'(VA2,VA5)),V__2))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x1x1_4'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),'happ'(s('fun'(VA1,'fun'(VA2,VA4)),V__1),s(VA1,V__z))),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__2),s(VA1,V__z)))))).
fof('thm.reg_alloc.is_coalesceable_move_def', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27degs_27, V_27move_27]: s('bool','const.reg_alloc.is_coalesceable_move_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27degs_27),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27))) = s('bool','const.bool.LET_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'const.pair.UNCURRY_1'(s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x11x11_4'(s('fun'('bool','fun'('bool','fun'('bool','bool'))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.reg_alloc.george_ok_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'const.reg_alloc.briggs_ok_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),V_27degs_27))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))))))))))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27)))).
fof('thm.reg_alloc.split_avail_def|split|0', axiom, ![V_27A_27]: ![V_27P_27, V_27Q_27, V_27acc_27]: s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.reg_alloc.split_avail_4'(s('fun'(V_27A_27,'bool'),V_27P_27),s('fun'(V_27A_27,'bool'),V_27Q_27),s('type.list.list'(V_27A_27),'const.list.NIL_0'),s('type.list.list'(V_27A_27),V_27acc_27))) = s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.pair.,_2'(s('type.option.option'(V_27A_27),'const.option.NONE_0'),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27acc_27),s('type.list.list'(V_27A_27),'const.list.NIL_0')))))).
fof('thm.reg_alloc.split_avail_def|split|1', axiom, ![V_27A_27]: ![V_27P_27, V_27Q_27, V_27x_27, V_27xs_27, V_27acc_27]: s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.reg_alloc.split_avail_4'(s('fun'(V_27A_27,'bool'),V_27P_27),s('fun'(V_27A_27,'bool'),V_27Q_27),s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27x_27),s('type.list.list'(V_27A_27),V_27xs_27))),s('type.list.list'(V_27A_27),V_27acc_27))) = s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.bool.COND_3'(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27P_27),s(V_27A_27,V_27x_27))),s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.bool.COND_3'(s('bool','happ'(s('fun'(V_27A_27,'bool'),V_27Q_27),s(V_27A_27,V_27x_27))),s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.pair.,_2'(s('type.option.option'(V_27A_27),'const.option.SOME_1'(s(V_27A_27,V_27x_27))),s('type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)),'const.pair.,_2'(s('type.list.list'(V_27A_27),V_27acc_27),s('type.list.list'(V_27A_27),V_27xs_27))))),s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.reg_alloc.split_avail_4'(s('fun'(V_27A_27,'bool'),V_27P_27),s('fun'(V_27A_27,'bool'),V_27Q_27),s('type.list.list'(V_27A_27),V_27xs_27),s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27x_27),s('type.list.list'(V_27A_27),V_27acc_27))))))),s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.reg_alloc.split_avail_4'(s('fun'(V_27A_27,'bool'),V_27P_27),s('fun'(V_27A_27,'bool'),V_27Q_27),s('type.list.list'(V_27A_27),V_27xs_27),s('type.list.list'(V_27A_27),V_27acc_27)))))).
fof('ARITY_1_3_const.reg_alloc.force_add', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.force_add_1'(s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.reg_alloc.ra_state',VV2))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.force_add_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.reg_alloc.ra_state',VV2)))).
fof('thm.reg_alloc.force_add_def', axiom, ![V_27x_27, V_27y_27, Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.force_add_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_graph_fupd_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.combin.K_1'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.undir_g_insert_3'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',Vx))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.force_add', axiom, ![VV0]: s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.reg_alloc.force_add_0'),s('type.num.num',VV0))) = s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.force_add_1'(s('type.num.num',VV0)))).
fof('ARITY_0_2_const.reg_alloc.get_edges', axiom, ![VV0, VV1]: s('type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'))),'const.reg_alloc.get_edges_0'),s('type.num.num',VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'),'const.reg_alloc.get_edges_2'(s('type.num.num',VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_3_const.reg_alloc.add_coalesce', axiom, ![VV0, VV1, VV2]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.reg_alloc.add_coalesce_0'),s('type.num.num',VV0))),s('type.num.num',VV1))),s('type.reg_alloc.ra_state',VV2))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_coalesce_3'(s('type.num.num',VV0),s('type.num.num',VV1),s('type.reg_alloc.ra_state',VV2)))).
fof('ARITY_1_2_const.reg_alloc.do_coalesce', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_coalesce_1'(s('type.pair.prod'('type.num.num','type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_coalesce_2'(s('type.pair.prod'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_1_const.reg_alloc.inc_one', axiom, ![VV0]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.inc_one_0'),s('type.num.num',VV0))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.inc_one_1'(s('type.num.num',VV0)))).
fof('_dst_x000x011x101x001_ax', axiom, ![VA,VA2,VA4,VA5,VA1,VA3,VA6]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x011x101x001_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,'fun'(VA3,VA4)),V__0),s('fun'(VA1,'fun'(VA3,VA5)),V__1),s('fun'(VA3,VA6),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x11x01x01_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,'fun'(VA3,VA4)),V__0),s('fun'(VA3,VA5),'happ'(s('fun'(VA1,'fun'(VA3,VA5)),V__1),s(VA1,V__z))),s('fun'(VA3,VA6),V__2)))).
fof('_dst_x00000x10001x01110_ax', axiom, ![VA,VA5,VA6,VA1,VA2,VA3,VA4,VA7]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x10001x01110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA5,VA6)),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x0001x1110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA5,VA6),'happ'(s('fun'(VA1,'fun'(VA5,VA6)),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),V__1)))).
fof('thm.reg_alloc.do_coalesce_def', axiom, ![V_27move_27]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_coalesce_1'(s('type.pair.prod'('type.num.num','type.num.num'),V_27move_27))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.pair.UNCURRY_1'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x11x11_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.reg_alloc.add_coalesce_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'fun'('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'))),'const.reg_alloc.get_edges_0'),s('fun'('type.num.num','fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x10x11_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'fun'('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state'))),'const.reg_alloc.get_edges_0'),s('fun'('type.num.num','fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'))),s('fun'('type.num.num','fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_colours_0'))),s('fun'('type.num.num','fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))))),'_dst_x00000x01000x00000x10111_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'_i_0_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))))),'_dst_x00000x01000x00000x10111_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one'))),'_i_0_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))))),'_dst_x00000x10001x01110_3'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.FOREACH_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))))),'_dst_x001x110_2'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'type.pair.prod'('type.list.list'('type.num.num'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))))),'const.pair.,_0'),s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'_dst_x000x011x101x001_4'(s('fun'('bool','fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.bool.COND_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.one.one'),'fun'('type.option.option'('type.one.one'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.num.num','type.option.option'('type.one.one'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.option.option'('type.one.one'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'_i_0_0'))),s('type.option.option'('type.one.one'),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x10x11_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.inc_one_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'const.reg_alloc.force_add_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_one_0'))))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')))),'_dst_x000x110x001_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.FILTER_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'_dst_x000x101x011_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))))),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.num.num','type.num.num'),'const.arithmetic.*_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.num.num')),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0'))))))))))))))))))))))))),s('type.pair.prod'('type.num.num','type.num.num'),V_27move_27)))).
fof('ARITY_0_3_const.reg_alloc.pair_rename', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'happ'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'happ'(s('fun'(V_27B_27,'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'happ'(s('fun'(V_27B_27,'fun'(V_27B_27,'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))))),'const.reg_alloc.pair_rename_0'),s(V_27B_27,VV0))),s(V_27B_27,VV1))),s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),VV2))) = s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'const.reg_alloc.pair_rename_3'(s(V_27B_27,VV0),s(V_27B_27,VV1),s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),VV2)))).
fof('thm.reg_alloc.pair_rename_def', axiom, ![V_27A_27,V_27B_27]: ![V_27x_27, V_27y_27, V_27move_27]: s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'const.reg_alloc.pair_rename_3'(s(V_27B_27,V_27x_27),s(V_27B_27,V_27y_27),s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),V_27move_27))) = s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'happ'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'happ'(s('fun'('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'const.bool.LET_0'),s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27B_27),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27B_27),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'_dst_x0x1_2'(s('fun'('fun'(V_27B_27,'fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'fun'('type.pair.prod'(V_27B_27,V_27B_27),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))))),'_dst_x000x101x010_3'(s('fun'('fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'const.bool.LET_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))))),'_dst_x000x101x010_3'(s('fun'('fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))),'fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'const.bool.LET_0'),s('fun'(V_27A_27,'fun'(V_27B_27,'fun'(V_27B_27,'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27))))),'_dst_x000x100x011_3'(s('fun'(V_27A_27,'fun'('type.pair.prod'(V_27B_27,V_27B_27),'type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)))),'const.pair.,_0'),s('fun'(V_27A_27,V_27A_27),'_i_0_0'),s('fun'(V_27B_27,'fun'(V_27B_27,'type.pair.prod'(V_27B_27,V_27B_27))),'const.pair.,_0'))),s('fun'(V_27B_27,V_27B_27),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'(V_27B_27,'fun'(V_27B_27,V_27B_27))),'const.bool.COND_0'),s('fun'(V_27B_27,'bool'),'_dst_x1x0_2'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),'=_0'),s(V_27B_27,V_27y_27))),s(V_27B_27,V_27x_27),s('fun'(V_27B_27,V_27B_27),'_i_0_0'))))),s('fun'(V_27B_27,V_27B_27),'_dst_x0x1x0x1_4'(s('fun'('bool','fun'(V_27B_27,'fun'(V_27B_27,V_27B_27))),'const.bool.COND_0'),s('fun'(V_27B_27,'bool'),'_dst_x1x0_2'(s('fun'(V_27B_27,'fun'(V_27B_27,'bool')),'=_0'),s(V_27B_27,V_27y_27))),s(V_27B_27,V_27x_27),s('fun'(V_27B_27,V_27B_27),'_i_0_0'))))))))))),s('type.pair.prod'(V_27A_27,'type.pair.prod'(V_27B_27,V_27B_27)),V_27move_27)))).
fof('ARITY_1_2_const.reg_alloc.add_spill_worklist', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.add_spill_worklist_1'(s('type.list.list'('type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_spill_worklist_2'(s('type.list.list'('type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_1_2_const.reg_alloc.respill', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.respill_1'(s('type.num.num',VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.respill_2'(s('type.num.num',VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_1_2_const.bool.IN', axiom, ![V_27A_27]: ![VV0, VV1]: s('bool','happ'(s('fun'('fun'(V_27A_27,'bool'),'bool'),'const.bool.IN_1'(s(V_27A_27,VV0))),s('fun'(V_27A_27,'bool'),VV1))) = s('bool','const.bool.IN_2'(s(V_27A_27,VV0),s('fun'(V_27A_27,'bool'),VV1)))).
fof('ARITY_0_1_const.state_transformer.IGNORE_BIND', axiom, ![V_27B_27,V_27C_27,V_27A_27]: ![VV0]: s('fun'('fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27A_27)),'fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27A_27))),'happ'(s('fun'('fun'(V_27A_27,'type.pair.prod'(V_27C_27,V_27A_27)),'fun'('fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27A_27)),'fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27A_27)))),'const.state_transformer.IGNORE_BIND_0'),s('fun'(V_27A_27,'type.pair.prod'(V_27C_27,V_27A_27)),VV0))) = s('fun'('fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27A_27)),'fun'(V_27A_27,'type.pair.prod'(V_27B_27,V_27A_27))),'const.state_transformer.IGNORE_BIND_1'(s('fun'(V_27A_27,'type.pair.prod'(V_27C_27,V_27A_27)),VV0)))).
fof('thm.reg_alloc.respill_def', axiom, ![V_27x_27]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.respill_1'(s('type.num.num',V_27x_27))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_colours_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_deg_1'(s('type.num.num',V_27x_27))))),s('fun'('type.num.num','fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x01x00x10_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x11x00x00_4'(s('fun'('bool','fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.bool.COND_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.prim_rec.<_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_freeze_worklist_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.bool.COND_0'),s('fun'('type.list.list'('type.num.num'),'bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.bool.IN_1'(s('type.num.num',V_27x_27))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.state_transformer.IGNORE_BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.add_spill_worklist_1'(s('type.list.list'('type.num.num'),'const.list.CONS_2'(s('type.num.num',V_27x_27),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_freeze_worklist_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.FILTER_1'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'=_0'),s('type.num.num',V_27x_27))))))))))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0')))))))))))))))).
fof('ARITY_0_4_const.reg_alloc.is_coalesceable_move', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('bool','happ'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool')))),'const.reg_alloc.is_coalesceable_move_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.num.num',VV1))),s('type.sptree.spt'('type.num.num'),VV2))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),VV3))) = s('bool','const.reg_alloc.is_coalesceable_move_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),VV3)))).
fof('ARITY_0_2_const.reg_alloc.set_avail_moves_pri', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_avail_moves_pri_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_avail_moves_pri_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.respill', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.respill_0'),s('type.num.num',VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.respill_2'(s('type.num.num',VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.is_valid_move', axiom, ![V_27A_27]: ![VV0, VV1]: s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'))),'const.reg_alloc.is_valid_move_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.sptree.spt'('type.one.one'),VV1))) = s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'bool'),'const.reg_alloc.is_valid_move_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.sptree.spt'('type.one.one'),VV1)))).
fof('ARITY_0_4_const.reg_alloc.split_avail', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'happ'(s('fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)))),'happ'(s('fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))))),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27)))))),'happ'(s('fun'('fun'(V_27A_27,'bool'),'fun'('fun'(V_27A_27,'bool'),'fun'('type.list.list'(V_27A_27),'fun'('type.list.list'(V_27A_27),'type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))))))),'const.reg_alloc.split_avail_0'),s('fun'(V_27A_27,'bool'),VV0))),s('fun'(V_27A_27,'bool'),VV1))),s('type.list.list'(V_27A_27),VV2))),s('type.list.list'(V_27A_27),VV3))) = s('type.pair.prod'('type.option.option'(V_27A_27),'type.pair.prod'('type.list.list'(V_27A_27),'type.list.list'(V_27A_27))),'const.reg_alloc.split_avail_4'(s('fun'(V_27A_27,'bool'),VV0),s('fun'(V_27A_27,'bool'),VV1),s('type.list.list'(V_27A_27),VV2),s('type.list.list'(V_27A_27),VV3)))).
fof('ARITY_0_2_const.reg_alloc.set_avail_moves', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_avail_moves_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_avail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.do_coalesce', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.do_coalesce_0'),s('type.pair.prod'('type.num.num','type.num.num'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.do_coalesce_2'(s('type.pair.prod'('type.num.num','type.num.num'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_2_const.reg_alloc.add_unavail_moves', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_unavail_moves_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.add_unavail_moves_2'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('_dst_x1x0x1_ax', axiom, ![VA,VA2,VA3,VA1]: ![V__x, V__0, V__1, V__z]: s(VA,'happ'(s('fun'(VA1,VA),'_dst_x1x0x1_3'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s(VA2,V__0),s('fun'(VA1,VA3),V__1))),s(VA1,V__z))) = s(VA,'happ'(s('fun'(VA3,VA),'happ'(s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s(VA1,V__z))),s(VA2,V__0))),s(VA3,'happ'(s('fun'(VA1,VA3),V__1),s(VA1,V__z)))))).
fof('_dst_x111x000_ax', axiom, ![VA2,VA3,VA,VA1,VA4]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x111x000_2'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),V__x),s(VA4,V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x11x00_2'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),V__x),s(VA1,V__z))),s(VA4,V__0)))).
fof('_dst_x1111x0000_ax', axiom, ![VA2,VA3,VA4,VA,VA1,VA5]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x1111x0000_2'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),V__x),s(VA5,V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x111x000_2'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),V__x),s(VA1,V__z))),s(VA5,V__0)))).
fof('_dst_x11111x00000_ax', axiom, ![VA2,VA3,VA4,VA5,VA,VA1,VA6]: ![V__x, V__0, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x11111x00000_2'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),V__x),s(VA6,V__0))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x1111x0000_2'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),V__x),s(VA1,V__z))),s(VA6,V__0)))).
fof('_dst_x01x10x01_ax', axiom, ![VA,VA3,VA1,VA2,VA4]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x01x10x01_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),V__x),s('fun'(VA1,VA3),V__0),s('fun'(VA2,VA4),V__1))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0x1_3'(s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),V__x),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z))),s('fun'(VA2,VA4),V__1)))).
fof('_dst_x001x110x001_ax', axiom, ![VA,VA2,VA4,VA1,VA3,VA5]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x001x110x001_3'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA1,'fun'(VA2,VA4)),V__0),s('fun'(VA3,VA5),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x01x10x01_3'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA))),V__x),s('fun'(VA2,VA4),'happ'(s('fun'(VA1,'fun'(VA2,VA4)),V__0),s(VA1,V__z))),s('fun'(VA3,VA5),V__1)))).
fof('_dst_x0001x1110x0001_ax', axiom, ![VA,VA2,VA3,VA5,VA1,VA4,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0001x1110x0001_3'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__0),s('fun'(VA4,VA6),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x001x110x001_3'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,'fun'(VA3,VA5)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__0),s(VA1,V__z))),s('fun'(VA4,VA6),V__1)))).
fof('_dst_x0000x1111x1110_ax', axiom, ![VA,VA4,VA5,VA2,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1111x1110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA5)))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x111x110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA5))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA5)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x1011x1100_ax', axiom, ![VA,VA3,VA4,VA5,VA2,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1011x1100_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA3,'fun'(VA4,VA5))),V__0),s('fun'(VA1,'fun'(VA2,VA6)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x011x100_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA3,'fun'(VA4,VA5)),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,VA5))),V__0),s(VA1,V__z))),s('fun'(VA2,VA6),'happ'(s('fun'(VA1,'fun'(VA2,VA6)),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x1001x1110_ax', axiom, ![VA,VA4,VA5,VA2,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1001x1110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA4,VA5)),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x001x110_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA4,VA5),'happ'(s('fun'(VA1,'fun'(VA4,VA5)),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__1),s(VA1,V__z)))))).
fof('_dst_x00001x11110x00001_ax', axiom, ![VA,VA2,VA3,VA4,VA6,VA1,VA5,VA7]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00001x11110x00001_3'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA6)))),V__0),s('fun'(VA5,VA7),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0001x1110x0001_3'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,VA))),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA6)))),V__0),s(VA1,V__z))),s('fun'(VA5,VA7),V__1)))).
fof('_dst_x00000x11111x11110_ax', axiom, ![VA,VA5,VA6,VA2,VA3,VA4,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11111x11110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA6))))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1111x1110_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA6)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA6))))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA7))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA7)))),V__1),s(VA1,V__z)))))).
fof('_dst_x00000x11011x11100_ax', axiom, ![VA,VA4,VA5,VA6,VA2,VA3,VA7,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11011x11100_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,VA6)))),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1011x1100_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA4,'fun'(VA5,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,'fun'(VA5,VA6)))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA7)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA7))),V__1),s(VA1,V__z)))))).
fof('thm.reg_alloc.coalesce_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.coalesce_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.reg_alloc.ra_state')),'const.reg_alloc.get_graph_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_colours_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')),'fun'('fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.one.one'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_move_rel_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_pri_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11111x11110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11111x00000_3'(s('fun'('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'fun'('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.pair.pair_CASE_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))))))),'_dst_x11111x00000_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))))))),'_dst_x0000x1001x1110_3'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))))),'const.reg_alloc.split_avail_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'const.reg_alloc.is_valid_move_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')))),'const.reg_alloc.is_coalesceable_move_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.pair.pair_CASE_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))),'_dst_x000x001x110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_avail_moves_pri_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_unavail_moves_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'))))))))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11111x00000_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))))),'_dst_x00001x11110x00001_3'(s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11111x00000_3'(s('fun'('type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'fun'('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.pair.pair_CASE_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))))))),'_dst_x11111x00000_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))))))),'_dst_x0000x1001x1110_3'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))))))),'const.reg_alloc.split_avail_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.one.one'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'const.reg_alloc.is_valid_move_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')))),'const.reg_alloc.is_coalesceable_move_0'))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x01x10_2'(s('fun'('type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.pair.pair_CASE_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))))),'_dst_x000x001x110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_avail_moves_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.add_unavail_moves_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'))))))))))),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')))),'_dst_x00x10_2'(s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'))))),s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.pair.pair_CASE_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.pair.pair_CASE_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11x11_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.do_coalesce_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_pri_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_unavail_moves_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11011x11100_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11011x11100_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x11011x11100_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))))),'_dst_x00000x00100x11011_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_avail_moves_pri_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))))),'_dst_x0000x0010x1101_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_avail_moves_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'_dst_x000x001x110_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_unavail_moves_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'happ'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.unspill_0'))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x10x01_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.respill_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'))))))))))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x00x11_2'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.list.MAP_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.pair_rename_0'))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x00x11_2'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.list.MAP_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.pair_rename_0'))))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))))),'_dst_x00x11_2'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.list.MAP_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.pair_rename_0')))))))))))))))))))))))))))))))))))).
fof('ARITY_0_1_const.reg_alloc.dec_clock', axiom, ![VV0]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_clock_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.dec_clock_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.dec_clock_def', axiom, ![Vx]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.dec_clock_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.pair.,_2'(s('type.one.one','const.one.one_0'),s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_clock_fupd_2'(s('fun'('type.num.num','type.num.num'),'const.combin.K_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',Vx))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.reg_alloc.ra_state',Vx)))))).
fof('ARITY_0_1_const.reg_alloc.get_clock', axiom, ![VV0]: s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_clock_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'const.reg_alloc.get_clock_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('thm.reg_alloc.get_clock_def', axiom, ![Vx]: s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'const.reg_alloc.get_clock_1'(s('type.reg_alloc.ra_state',Vx))) = s('type.pair.prod'('type.num.num','type.reg_alloc.ra_state'),'const.state_transformer.UNIT_2'(s('type.num.num','const.reg_alloc.ra_state_clock_1'(s('type.reg_alloc.ra_state',Vx))),s('type.reg_alloc.ra_state',Vx)))).
fof('thm.reg_alloc.do_step_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_step_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.IGNORE_BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_clock_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.simplify_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.coalesce_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.freeze_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.spill_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0'))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0'))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0'))))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0')))))))).
fof('thm.reg_alloc.has_work_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'const.reg_alloc.has_work_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_clock_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('bool','fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('type.num.num','const.num.|48|_0')))))))).
fof('thm.reg_alloc.rpt_do_step_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.rpt_do_step_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.MWHILE_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'const.reg_alloc.has_work_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_step_0')))).
fof('ARITY_0_2_const.reg_alloc.count_degrees', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.sptree.spt'('type.one.one'),'type.num.num'),'happ'(s('fun'('fun'('type.num.num','bool'),'fun'('type.sptree.spt'('type.one.one'),'type.num.num')),'const.reg_alloc.count_degrees_0'),s('fun'('type.num.num','bool'),VV0))),s('type.sptree.spt'('type.one.one'),VV1))) = s('type.num.num','const.reg_alloc.count_degrees_2'(s('fun'('type.num.num','bool'),VV0),s('type.sptree.spt'('type.one.one'),VV1)))).
fof('ARITY_0_2_const.reg_alloc.ra_state_stack_fupd', axiom, ![VV0, VV1]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_stack_fupd_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.reg_alloc.ra_state','const.reg_alloc.ra_state_stack_fupd_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('thm.reg_alloc.sec_ra_state_def', axiom, ![V_27A_27]: ![V_27G_27, V_27k_27, V_27vertices_27, V_27coalesce__map_27]: s('type.reg_alloc.ra_state','const.reg_alloc.sec_ra_state_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.num.num'),V_27vertices_27),s('type.sptree.spt'(V_27A_27),V_27coalesce__map_27))) = s('type.reg_alloc.ra_state','happ'(s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1x1_3'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.reg_alloc.ra_state')),'_dst_x00x10x01_3'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'),'fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'_dst_x00x11x00_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x000x111_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_graph_fupd_1'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'const.combin.K_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x000x111_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_colours_fupd_1'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.combin.K_0'),s('type.num.num',V_27k_27))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x000x010x101_3'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_degs_fupd_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'_dst_x00x10x11_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_simp_worklist_fupd_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'_dst_x00x01x10_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_stack_fupd_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_spill_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_freeze_worklist_fupd_1'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.combin.K_0'),s('type.list.list'('type.num.num'),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_coalesced_fupd_1'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.combin.K_0'),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_move_related_fupd_1'(s('fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.one.one'),'fun'('type.sptree.spt'('type.one.one'),'type.sptree.spt'('type.one.one'))),'const.combin.K_0'),s('type.sptree.spt'('type.one.one'),'const.sptree.LN_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.combin.K_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_avail_moves_pri_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.combin.K_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'const.reg_alloc.ra_state_unavail_moves_fupd_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.combin.K_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state'),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','type.num.num'),'fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.reg_alloc.ra_state_clock_fupd_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.num.num')),'_dst_x0x1_2'(s('fun'('type.num.num','fun'('type.num.num','type.num.num')),'const.combin.K_0'),s('fun'('type.list.list'('type.num.num'),'type.num.num'),'const.list.LENGTH_0'))),s('type.reg_alloc.ra_state','const.bool.ARB_0'))))))))))))))))))))))))))),s('type.list.list'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.list.list'('type.num.num')),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.list.list'('type.num.num'))),'const.list.MAP_0'),s('fun'('type.pair.prod'('type.num.num',V_27A_27),'type.num.num'),'const.pair.FST_0'))),s('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'const.sptree.toAList_1'(s('type.sptree.spt'(V_27A_27),V_27coalesce__map_27))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')),'type.sptree.spt'('type.num.num')),'const.sptree.fromAList_0'))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'_dst_x0x1x1_3'(s('fun'('fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'const.list.MAP_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x11_2'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','type.num.num')),'_dst_x00x10x01_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.sptree.spt'('type.one.one'),'type.num.num')),'const.reg_alloc.count_degrees_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x01x11_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))))),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.num.num','bool')),'const.list.LIST_TO_SET_0'))))),s('fun'('type.num.num','type.sptree.spt'('type.one.one')),'_dst_x0x1_2'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.one.one')),'const.option.THE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))))))),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))))),s('type.list.list'('type.num.num'),'const.list.FILTER_2'(s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.option.NONE_0'))))),s('type.list.list'('type.num.num'),V_27vertices_27)))))).
fof('thm.reg_alloc.deg_comparator_def', axiom, ![V_27deg_27, V_27x_27, V_27y_27]: s('bool','const.reg_alloc.deg_comparator_3'(s('type.sptree.spt'('type.num.num'),V_27deg_27),s('type.num.num',V_27x_27),s('type.num.num',V_27y_27))) = s('bool','happ'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.option.option_CASE_2'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.num.num'),V_27deg_27))),s('bool','T_0'))),s('fun'('type.num.num','bool'),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','bool'),'bool'),'const.option.option_CASE_2'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',V_27y_27),s('type.sptree.spt'('type.num.num'),V_27deg_27))),s('bool','T_0'))),s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.<=_0')))))).
fof('thm.reg_alloc.full_coalesce_aux_def|split|0', axiom, ![V_27A_27]: ![V_27G_27, V_27spills_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'const.reg_alloc.full_coalesce_aux_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27spills_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'const.pair.,_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0')))).
fof('ARITY_0_3_const.reg_alloc.list_g_insert', axiom, ![VV0, VV1, VV2]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))))),'const.reg_alloc.list_g_insert_0'),s('type.num.num',VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.list_g_insert_3'(s('type.num.num',VV0),s('type.list.list'('type.num.num'),VV1),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV2)))).
fof('ARITY_0_3_const.reg_alloc.full_coalesce_aux', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.reg_alloc.full_coalesce_aux_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.list.list'('type.num.num'),VV1))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'const.reg_alloc.full_coalesce_aux_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.list.list'('type.num.num'),VV1),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV2)))).
fof('_dst_x000x100x010_ax', axiom, ![VA3,VA,VA4,VA1,VA2,VA5]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x010_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA1,VA4),V__0),s('fun'(VA2,VA5),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x10_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s('fun'(VA2,VA5),V__1)))).
fof('_dst_x0000x1100x0010_ax', axiom, ![VA4,VA,VA2,VA5,VA1,VA3,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1100x0010_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA2,VA5)),V__0),s('fun'(VA3,VA6),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x100x010_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,VA5),'happ'(s('fun'(VA1,'fun'(VA2,VA5)),V__0),s(VA1,V__z))),s('fun'(VA3,VA6),V__1)))).
fof('thm.reg_alloc.full_coalesce_aux_def|split|1', axiom, ![V_27A_27]: ![V_27G_27, V_27spills_27, V_27move_27, V_27xs_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.reg_alloc.full_coalesce_aux_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.list.list'('type.num.num'),V_27spills_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'_dst_x00x11x00x11_4'(s('fun'('bool','fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.bool.COND_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x11x10_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'bool'))),'const.reg_alloc.lookup_g_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('fun'('type.num.num','bool'),'_dst_x0x1x0_3'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.option.option'('type.sptree.spt'('type.one.one')),'bool')),'=_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.option.option'('type.sptree.spt'('type.one.one')),'const.option.NONE_0'))))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.reg_alloc.full_coalesce_aux_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.list.list'('type.num.num'),V_27spills_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'_dst_x00x01x00x11_4'(s('fun'('type.option.option'('type.sptree.spt'('type.one.one')),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'fun'('fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.sptree.spt'('type.one.one'))),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.option.option'('type.sptree.spt'('type.one.one')))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.reg_alloc.full_coalesce_aux_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))),s('type.list.list'('type.num.num'),V_27spills_27))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.one.one'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'_dst_x000x110x001_3'(s('fun'('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'_dst_x000x110x101_3'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'_dst_x000x111x110_3'(s('fun'('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))))),'_dst_x0000x1100x0010_3'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.bool.LET_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))))),'_dst_x0000x0010x1101_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))),'const.sptree.insert_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'_dst_x1x0x0_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))))),'const.reg_alloc.full_coalesce_aux_0'),s('type.list.list'('type.num.num'),V_27spills_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))))),s('fun'('type.num.num','fun'('type.num.num','type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x00x11x00_3'(s('fun'('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'const.list.MAP_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.pair_rename_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.sptree.spt'('type.one.one')))),'_dst_x11x00_2'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))))),'const.reg_alloc.list_g_insert_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'const.list.FILTER_1'(s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spills_27))))))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.num.num')),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.num.num')),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.one.one')),'type.list.list'('type.num.num'))),'const.list.MAP_0'),s('fun'('type.pair.prod'('type.num.num','type.one.one'),'type.num.num'),'const.pair.FST_0'))),s('fun'('type.sptree.spt'('type.one.one'),'type.list.list'('type.pair.prod'('type.num.num','type.one.one'))),'const.sptree.toAList_0'))))))))))))))))))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27)))).
fof('ARITY_2_3_const.reg_alloc.full_coalesce_aux', axiom, ![V_27A_27]: ![VV0, VV1, VV2]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'const.reg_alloc.full_coalesce_aux_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.list.list'('type.num.num'),VV1))),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV2))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'const.reg_alloc.full_coalesce_aux_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.list.list'('type.num.num'),VV1),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV2)))).
fof('_dst_x000x000x100_ax', axiom, ![VA2,VA3,VA,VA4,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x000x100_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,V__0),s('fun'(VA1,VA5),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,V__0),s(VA5,'happ'(s('fun'(VA1,VA5),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x1000x0100_ax', axiom, ![VA3,VA4,VA,VA5,VA1,VA2,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1000x0100_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,VA5),V__0),s('fun'(VA2,VA6),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x000x100_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s(VA5,'happ'(s('fun'(VA1,VA5),V__0),s(VA1,V__z))),s('fun'(VA2,VA6),V__1)))).
fof('thm.reg_alloc.full_coalesce_def', axiom, ![V_27G_27, V_27k_27, V_27moves_27, V_27spills_27]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.reg_alloc.full_coalesce_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27),s('type.list.list'('type.num.num'),V_27spills_27))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'const.bool.LET_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'const.bool.LET_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'const.bool.LET_1'(s('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'_dst_x00x10x01_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'_dst_x0x1x1_3'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'const.pair.,_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'_dst_x0x1x0_3'(s('fun'('fun'('type.num.num','bool'),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.list.FILTER_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','bool')),'_dst_x00x11x00_3'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'bool')),'=_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.option.option'('type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('type.list.list'('type.num.num'),V_27spills_27))),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.num.num'))),'const.reg_alloc.full_coalesce_aux_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.list.list'('type.num.num'),V_27spills_27))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'const.sorting.QSORT_1'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'fun'('type.pair.prod'('type.num.num','type.num.num'),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')))),'_dst_x000x100_2'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'))),'_dst_x00x11_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','fun'('type.num.num','bool')))),'_dst_x0000x1000x0100_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'happ'(s('fun'('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))))),'const.list.FILTER_0'),s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'_dst_x0_1'(s('fun'('type.pair.prod'('type.num.num','type.num.num'),'bool'),'happ'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.pair.prod'('type.num.num','type.num.num'),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spills_27))))),s('fun'('type.num.num','bool'),'_dst_x0x1x1_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>=_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',V_27k_27))))))))),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27spills_27))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))).
fof('ARITY_0_3_const.reg_alloc.deg_comparator', axiom, ![VV0, VV1, VV2]: s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'const.reg_alloc.deg_comparator_0'),s('type.sptree.spt'('type.num.num'),VV0))),s('type.num.num',VV1))),s('type.num.num',VV2))) = s('bool','const.reg_alloc.deg_comparator_3'(s('type.sptree.spt'('type.num.num'),VV0),s('type.num.num',VV1),s('type.num.num',VV2)))).
fof('thm.reg_alloc.full_simplify_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.full_simplify_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_simp_worklist_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.get_degs_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x11x00x00_4'(s('fun'('type.list.list'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))))),'const.list.list_CASE_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'_dst_x00x01x10_3'(s('fun'('fun'('type.num.num','fun'('type.num.num','bool')),'fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num'))),'const.sorting.QSORT_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.num.num','bool'))),'const.reg_alloc.deg_comparator_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'_dst_x00x01x10_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_simp_worklist_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1x1_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')))),'const.state_transformer.IGNORE_BIND_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.dec_deg_0'),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0')))))))))))))).
fof('thm.reg_alloc.do_step2_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_step2_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.IGNORE_BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_clock_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.full_simplify_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0')))))))).
fof('thm.reg_alloc.rpt_do_step2_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.rpt_do_step2_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.MWHILE_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'const.reg_alloc.has_work_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_step2_0')))).
fof('thm.reg_alloc.aux_pref_def', axiom, ![V_27prefs_27, V_27v_27, V_27ls_27, V_27col_27]: s('type.option.option'('type.num.num'),'const.reg_alloc.aux_pref_4'(s('type.sptree.spt'('type.num.num'),V_27prefs_27),s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'happ'(s('fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num')),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num')))),'const.option.option_CASE_0'),s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('type.num.num',V_27v_27))),s('type.sptree.spt'('type.num.num'),V_27prefs_27))))),s('type.option.option'('type.num.num'),'const.option.NONE_0'))),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x0x1x0x0_4'(s('fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'fun'('fun'('type.num.num','type.option.option'('type.num.num')),'type.option.option'('type.num.num')))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'const.sptree.lookup_0'),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.num.num','type.option.option'('type.num.num')),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('type.option.option'('type.num.num'),'fun'('type.option.option'('type.num.num'),'type.option.option'('type.num.num')))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('fun'('type.num.num','bool'),'bool')),'const.bool.IN_0'),s('fun'('type.num.num','bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'('type.num.num'),V_27ls_27))))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0'),s('type.option.option'('type.num.num'),'const.option.NONE_0')))))))).
fof('thm.reg_alloc.pri_move_insert_def', axiom, ![V_27A_27,V_27B_27]: ![V_27p_27, V_27x_27, V_27y_27, V_27acc_27]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'const.reg_alloc.pri_move_insert_4'(s(V_27A_27,V_27p_27),s('type.num.num',V_27x_27),s(V_27B_27,V_27y_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),V_27acc_27))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'const.sptree.lookup_2'(s('type.num.num',V_27x_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),V_27acc_27))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))))),'const.sptree.insert_1'(s('type.num.num',V_27x_27))),s('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'const.list.CONS_1'(s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27p_27),s(V_27B_27,V_27y_27))))),s('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'const.list.NIL_0'))))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),V_27acc_27))),s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)))),'_dst_x0x1x0_3'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))))),'const.sptree.insert_1'(s('type.num.num',V_27x_27))),s('fun'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27)),'type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),'const.list.CONS_1'(s('type.pair.prod'(V_27A_27,V_27B_27),'const.pair.,_2'(s(V_27A_27,V_27p_27),s(V_27B_27,V_27y_27))))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,V_27B_27))),V_27acc_27)))))).
fof('thm.reg_alloc.undir_move_insert_def', axiom, ![V_27A_27]: ![V_27p_27, V_27x_27, V_27y_27, V_27acc_27]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.undir_move_insert_4'(s(V_27A_27,V_27p_27),s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27acc_27))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.pri_move_insert_4'(s(V_27A_27,V_27p_27),s('type.num.num',V_27x_27),s('type.num.num',V_27y_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.pri_move_insert_4'(s(V_27A_27,V_27p_27),s('type.num.num',V_27y_27),s('type.num.num',V_27x_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27acc_27)))))).
fof('thm.reg_alloc.moves_to_sp_def|split|0', axiom, ![V_27A_27]: ![V_27acc_27]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.moves_to_sp_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27acc_27))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27acc_27)).
fof('ARITY_1_2_const.reg_alloc.moves_to_sp', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))),'const.reg_alloc.moves_to_sp_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.moves_to_sp_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1)))).
fof('ARITY_0_4_const.reg_alloc.undir_move_insert', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'happ'(s('fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))))),'happ'(s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))))),'const.reg_alloc.undir_move_insert_0'),s(V_27A_27,VV0))),s('type.num.num',VV1))),s('type.num.num',VV2))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV3))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.undir_move_insert_4'(s(V_27A_27,VV0),s('type.num.num',VV1),s('type.num.num',VV2),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV3)))).
fof('thm.reg_alloc.moves_to_sp_def|split|1', axiom, ![V_27A_27]: ![V_27move_27, V_27xs_27, V_27acc_27]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))),'const.reg_alloc.moves_to_sp_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'const.list.CONS_2'(s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27acc_27))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.bool.LET_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))))),'_dst_x000x111_2'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))),'const.reg_alloc.moves_to_sp_1'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),V_27xs_27))),s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))))),'_dst_x111x000_2'(s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))))),'const.reg_alloc.undir_move_insert_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27acc_27))))))))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27)))).
fof('thm.reg_alloc.resort_moves_def', axiom, ![V_27A_27]: ![V_27acc_27]: s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'const.reg_alloc.resort_moves_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),V_27acc_27))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'const.bool.LET_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'_dst_x0x1_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'const.bool.LET_1'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'const.sptree.fromAList_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))))),'const.list.MAP_1'(s('fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'happ'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))))),'fun'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))))),'_dst_x00x10x01_3'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27))))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)),'type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'const.sorting.QSORT_1'(s('fun'('type.pair.prod'('type.num.num',V_27A_27),'fun'('type.pair.prod'('type.num.num',V_27A_27),'bool')),'happ'(s('fun'('fun'('type.num.num','fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num',V_27A_27),'bool'))),'fun'('type.pair.prod'('type.num.num',V_27A_27),'fun'('type.pair.prod'('type.num.num',V_27A_27),'bool'))),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num',V_27A_27),'bool'))),'_dst_x00x10_2'(s('fun'('fun'('type.num.num','fun'(V_27A_27,'bool')),'fun'('type.pair.prod'('type.num.num',V_27A_27),'bool')),'const.pair.UNCURRY_0'),s('fun'('type.num.num','fun'('type.num.num','fun'(V_27A_27,'bool'))),'_dst_x000x100x010_3'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'const.sptree.toAList_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),V_27acc_27)))))).
fof('thm.reg_alloc.first_match_col_def|split|0', axiom, ![V_27B_27,V_27A_27]: ![V_27ls_27, V_27col_27]: s('type.option.option'(V_27A_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27A_27),V_27ls_27),s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),'const.list.NIL_0'))) = s('type.option.option'(V_27A_27),'const.option.NONE_0')).
fof('thm.reg_alloc.first_match_col_def|split|1', axiom, ![V_27A_27,V_27B_27]: ![V_27ls_27, V_27col_27, V_27x_27, V_27xs_27]: s('type.option.option'(V_27A_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27A_27),V_27ls_27),s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),'const.list.CONS_2'(s('type.pair.prod'(V_27B_27,'type.num.num'),V_27x_27),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),V_27xs_27))))) = s('type.option.option'(V_27A_27),'const.bool.LET_2'(s('fun'('type.pair.prod'(V_27B_27,'type.num.num'),'type.option.option'(V_27A_27)),'const.pair.UNCURRY_1'(s('fun'(V_27B_27,'fun'('type.num.num','type.option.option'(V_27A_27))),'_dst_x0_1'(s('fun'('type.num.num','type.option.option'(V_27A_27)),'_dst_x0x1x0x0_4'(s('fun'('type.option.option'(V_27A_27),'fun'('type.option.option'(V_27A_27),'fun'('fun'(V_27A_27,'type.option.option'(V_27A_27)),'type.option.option'(V_27A_27)))),'const.option.option_CASE_0'),s('fun'('type.num.num','type.option.option'(V_27A_27)),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.sptree.spt'(V_27A_27),'type.option.option'(V_27A_27))),'const.sptree.lookup_0'),s('type.sptree.spt'(V_27A_27),V_27col_27))),s('type.option.option'(V_27A_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27A_27),V_27ls_27),s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),V_27xs_27))),s('fun'(V_27A_27,'type.option.option'(V_27A_27)),'_dst_x0x1x1x0_4'(s('fun'('bool','fun'('type.option.option'(V_27A_27),'fun'('type.option.option'(V_27A_27),'type.option.option'(V_27A_27)))),'const.bool.COND_0'),s('fun'(V_27A_27,'bool'),'_dst_x1x0_2'(s('fun'(V_27A_27,'fun'('fun'(V_27A_27,'bool'),'bool')),'const.bool.IN_0'),s('fun'(V_27A_27,'bool'),'const.list.LIST_TO_SET_1'(s('type.list.list'(V_27A_27),V_27ls_27))))),s('fun'(V_27A_27,'type.option.option'(V_27A_27)),'const.option.SOME_0'),s('type.option.option'(V_27A_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27A_27),V_27ls_27),s('type.sptree.spt'(V_27A_27),V_27col_27),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),V_27xs_27))))))))))),s('type.pair.prod'(V_27B_27,'type.num.num'),V_27x_27)))).
fof('ARITY_2_3_const.reg_alloc.first_match_col', axiom, ![V_27A_27,V_27B_27]: ![VV0, VV1, VV2]: s('type.option.option'(V_27A_27),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),'type.option.option'(V_27A_27)),'const.reg_alloc.first_match_col_2'(s('type.list.list'(V_27A_27),VV0),s('type.sptree.spt'(V_27A_27),VV1))),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),VV2))) = s('type.option.option'(V_27A_27),'const.reg_alloc.first_match_col_3'(s('type.list.list'(V_27A_27),VV0),s('type.sptree.spt'(V_27A_27),VV1),s('type.list.list'('type.pair.prod'(V_27B_27,'type.num.num')),VV2)))).
fof('thm.reg_alloc.move_pref_def', axiom, ![V_27A_27]: ![V_27prefs_27, V_27v_27, V_27ls_27, V_27col_27]: s('type.option.option'('type.num.num'),'const.reg_alloc.move_pref_4'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27prefs_27),s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.sptree.lookup_2'(s('type.num.num',V_27v_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27prefs_27))),s('type.option.option'('type.num.num'),'const.option.NONE_0'),s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')),'type.option.option'('type.num.num')),'const.reg_alloc.first_match_col_2'(s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27)))))).
fof('thm.reg_alloc.aux_move_pref_def', axiom, ![V_27A_27]: ![V_27cprefs_27, V_27mprefs_27, V_27v_27, V_27ls_27, V_27col_27]: s('type.option.option'('type.num.num'),'const.reg_alloc.aux_move_pref_5'(s('type.sptree.spt'('type.num.num'),V_27cprefs_27),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27mprefs_27),s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))) = s('type.option.option'('type.num.num'),'const.option.option_CASE_3'(s('type.option.option'('type.num.num'),'const.reg_alloc.aux_pref_4'(s('type.sptree.spt'('type.num.num'),V_27cprefs_27),s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.option.option'('type.num.num'),'const.reg_alloc.move_pref_4'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),V_27mprefs_27),s('type.num.num',V_27v_27),s('type.list.list'('type.num.num'),V_27ls_27),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('fun'('type.num.num','type.option.option'('type.num.num')),'const.option.SOME_0')))).
fof('ARITY_0_2_const.reg_alloc.total_colour', axiom, ![VV0, VV1]: s('type.num.num','happ'(s('fun'('type.num.num','type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','type.num.num')),'const.reg_alloc.total_colour_0'),s('type.sptree.spt'('type.num.num'),VV0))),s('type.num.num',VV1))) = s('type.num.num','const.reg_alloc.total_colour_2'(s('type.sptree.spt'('type.num.num'),VV0),s('type.num.num',VV1)))).
fof('thm.reg_alloc.total_colour_def', axiom, ![V_27col_27, Vx]: s('type.num.num','const.reg_alloc.total_colour_2'(s('type.sptree.spt'('type.num.num'),V_27col_27),s('type.num.num',Vx))) = s('type.num.num','const.option.option_CASE_3'(s('type.option.option'('type.num.num'),'const.sptree.lookup_2'(s('type.num.num',Vx),s('type.sptree.spt'('type.num.num'),V_27col_27))),s('type.num.num',Vx),s('fun'('type.num.num','type.num.num'),'_i_0_0')))).
fof('thm.reg_alloc.briggs_has_work_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'const.reg_alloc.briggs_has_work_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'happ'(s('fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.num.num','type.reg_alloc.ra_state')),'const.reg_alloc.get_clock_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'_dst_x0x1_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')))),'_dst_x00x11_2'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'const.state_transformer.BIND_1'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state')),'const.reg_alloc.get_avail_moves_pri_0'))),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))))),'_dst_x000x111_2'(s('fun'('bool','fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state'))),'const.state_transformer.UNIT_0'),s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'))),'_dst_x000x100x011_3'(s('fun'('bool','fun'('bool','bool')),'|slash||bslash|_0'),s('fun'('type.num.num','bool'),'_dst_x1x0_2'(s('fun'('type.num.num','fun'('type.num.num','bool')),'const.arithmetic.>_0'),s('type.num.num','const.num.|48|_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool')),'_dst_x00x10x01_3'(s('fun'('bool','fun'('bool','bool')),'|bslash||slash|_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool')),'=_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x0x1_2'(s('fun'('bool','bool'),'~_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool'),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'bool')),'=_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0')))))))))))))))))).
fof('thm.reg_alloc.do_briggs_step_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_briggs_step_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.IGNORE_BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.dec_clock_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.option.option'('type.num.num'),'type.reg_alloc.ra_state')),'const.reg_alloc.coalesce_0'),s('fun'('type.option.option'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'_dst_x1x0x0_3'(s('fun'('type.option.option'('type.num.num'),'fun'('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'fun'('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))))),'const.option.option_CASE_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.UNIT_1'(s('type.one.one','const.one.one_0'))),s('fun'('type.num.num','fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.push_stack_0')))))))).
fof('ARITY_1_2_const.reg_alloc.set_move_rel', axiom, ![VV0, VV1]: s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.set_move_rel_1'(s('type.sptree.spt'('type.one.one'),VV0))),s('type.reg_alloc.ra_state',VV1))) = s('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'const.reg_alloc.set_move_rel_2'(s('type.sptree.spt'('type.one.one'),VV0),s('type.reg_alloc.ra_state',VV1)))).
fof('ARITY_0_1_const.reg_alloc.set_unavail_moves', axiom, ![VV0]: s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state'))),'const.reg_alloc.set_unavail_moves_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0))) = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.set_unavail_moves_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV0)))).
fof('thm.reg_alloc.briggs_coalesce_def', axiom, s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.briggs_coalesce_0') = s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.IGNORE_BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.MWHILE_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('bool','type.reg_alloc.ra_state')),'const.reg_alloc.briggs_has_work_0'),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.do_briggs_step_0'))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.state_transformer.IGNORE_BIND_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.set_move_rel_1'(s('type.sptree.spt'('type.one.one'),'const.sptree.LN_0'))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.set_unavail_moves_1'(s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0')))))))).
fof('_dst_x000x010x111x111_ax', axiom, ![VA,VA4,VA5,VA2,VA3,VA6,VA1]: ![V__x, V__0, V__1, V__2, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x010x111x111_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__1),s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__2))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x10x11x11_4'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,VA))),V__x),s('fun'(VA2,VA4),V__0),s('fun'(VA2,'fun'(VA3,VA5)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA5))),V__1),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA6))),V__2),s(VA1,V__z)))))).
fof('thm.reg_alloc.maybe_flip_def', axiom, ![V_27A_27]: ![V_27move_27]: s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'const.reg_alloc.maybe_flip_1'(s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27))) = s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'const.bool.LET_2'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'happ'(s('fun'('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('fun'('type.num.num','fun'('type.num.num','type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.UNCURRY_0'),s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x010x111x111_4'(s('fun'('bool','fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'const.bool.COND_0'),s('fun'('type.num.num','bool'),'const.reg_alloc.is_phy_var_0'),s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'(V_27A_27,V_27A_27),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'))),s('fun'(V_27A_27,'fun'('type.num.num','fun'('type.num.num','type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))))),'_dst_x000x100x011_3'(s('fun'(V_27A_27,'fun'('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')))),'const.pair.,_0'),s('fun'(V_27A_27,V_27A_27),'_i_0_0'),s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s('fun'('type.num.num','fun'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.pair.,_0'),s('fun'('type.num.num','type.num.num'),'_i_0_0'))))))))))),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),V_27move_27)))).
fof('ARITY_0_1_const.reg_alloc.ra_state_graph', axiom, ![VV0]: s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'happ'(s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.sptree.spt'('type.sptree.spt'('type.one.one')),'const.reg_alloc.ra_state_graph_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('ARITY_0_4_const.reg_alloc.sec_ra_state', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.sptree.spt'(V_27A_27),'type.reg_alloc.ra_state'),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'(V_27A_27),'type.reg_alloc.ra_state')),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'(V_27A_27),'type.reg_alloc.ra_state'))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'(V_27A_27),'type.reg_alloc.ra_state')))),'const.reg_alloc.sec_ra_state_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'(V_27A_27),VV3))) = s('type.reg_alloc.ra_state','const.reg_alloc.sec_ra_state_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'(V_27A_27),VV3)))).
fof('ARITY_0_2_const.reg_alloc.moves_to_sp', axiom, ![V_27A_27]: ![VV0, VV1]: s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num')))),'happ'(s('fun'('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))))),'const.reg_alloc.moves_to_sp_0'),s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV0))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'const.reg_alloc.moves_to_sp_2'(s('type.list.list'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1)))).
fof('ARITY_0_5_const.reg_alloc.spill_colouring', axiom, ![VV0, VV1, VV2, VV3, VV4]: s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))))),'const.reg_alloc.spill_colouring_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.num.num',VV1))),s('type.sptree.spt'('type.num.num'),VV2))),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.spill_colouring_5'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.sptree.spt'('type.num.num'),VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4)))).
fof('ARITY_0_4_const.reg_alloc.alloc_colouring', axiom, ![VV0, VV1, VV2, VV3]: s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))),'happ'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'happ'(s('fun'('type.num.num','fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))))),'const.reg_alloc.alloc_colouring_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.num.num',VV1))),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),VV2))),s('type.list.list'('type.num.num'),VV3))) = s('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'const.reg_alloc.alloc_colouring_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),VV2),s('type.list.list'('type.num.num'),VV3)))).
fof('ARITY_0_5_const.reg_alloc.aux_move_pref', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3, VV4]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'const.reg_alloc.aux_move_pref_0'),s('type.sptree.spt'('type.num.num'),VV0))),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1))),s('type.num.num',VV2))),s('type.list.list'('type.num.num'),VV3))),s('type.sptree.spt'('type.num.num'),VV4))) = s('type.option.option'('type.num.num'),'const.reg_alloc.aux_move_pref_5'(s('type.sptree.spt'('type.num.num'),VV0),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV1),s('type.num.num',VV2),s('type.list.list'('type.num.num'),VV3),s('type.sptree.spt'('type.num.num'),VV4)))).
fof('ARITY_0_1_const.reg_alloc.ra_state_coalesced', axiom, ![VV0]: s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')),'const.reg_alloc.ra_state_coalesced_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.sptree.spt'('type.num.num'),'const.reg_alloc.ra_state_coalesced_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('ARITY_0_4_const.reg_alloc.aux_pref', axiom, ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'const.reg_alloc.aux_pref_0'),s('type.sptree.spt'('type.num.num'),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'('type.num.num'),VV3))) = s('type.option.option'('type.num.num'),'const.reg_alloc.aux_pref_4'(s('type.sptree.spt'('type.num.num'),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'('type.num.num'),VV3)))).
fof('ARITY_0_4_const.reg_alloc.move_pref', axiom, ![V_27A_27]: ![VV0, VV1, VV2, VV3]: s('type.option.option'('type.num.num'),'happ'(s('fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')),'happ'(s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'const.reg_alloc.move_pref_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.num.num'),VV2))),s('type.sptree.spt'('type.num.num'),VV3))) = s('type.option.option'('type.num.num'),'const.reg_alloc.move_pref_4'(s('type.sptree.spt'('type.list.list'('type.pair.prod'(V_27A_27,'type.num.num'))),VV0),s('type.num.num',VV1),s('type.list.list'('type.num.num'),VV2),s('type.sptree.spt'('type.num.num'),VV3)))).
fof('ARITY_0_4_const.reg_alloc.full_coalesce', axiom, ![VV0, VV1, VV2, VV3]: s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'happ'(s('fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'happ'(s('fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))))),'happ'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))))),'const.reg_alloc.full_coalesce_0'),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0))),s('type.num.num',VV1))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV2))),s('type.list.list'('type.num.num'),VV3))) = s('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.reg_alloc.full_coalesce_4'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV2),s('type.list.list'('type.num.num'),VV3)))).
fof('ARITY_0_1_const.reg_alloc.ra_state_stack', axiom, ![VV0]: s('type.list.list'('type.num.num'),'happ'(s('fun'('type.reg_alloc.ra_state','type.list.list'('type.num.num')),'const.reg_alloc.ra_state_stack_0'),s('type.reg_alloc.ra_state',VV0))) = s('type.list.list'('type.num.num'),'const.reg_alloc.ra_state_stack_1'(s('type.reg_alloc.ra_state',VV0)))).
fof('ARITY_0_1_const.reg_alloc.resort_moves', axiom, ![V_27A_27]: ![VV0]: s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'happ'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27)))),'const.reg_alloc.resort_moves_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),VV0))) = s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),'const.reg_alloc.resort_moves_1'(s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num',V_27A_27))),VV0)))).
fof('ARITY_0_1_const.reg_alloc.maybe_flip', axiom, ![V_27A_27]: ![VV0]: s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'happ'(s('fun'('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.maybe_flip_0'),s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),VV0))) = s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),'const.reg_alloc.maybe_flip_1'(s('type.pair.prod'(V_27A_27,'type.pair.prod'('type.num.num','type.num.num')),VV0)))).
fof('ARITY_2_3_const.reg_alloc.init_ra_state', axiom, ![VV0, VV1, VV2]: s('type.reg_alloc.ra_state','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.init_ra_state_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV2))) = s('type.reg_alloc.ra_state','const.reg_alloc.init_ra_state_3'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),VV0),s('type.num.num',VV1),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),VV2)))).
fof('_dst_x11x10_ax', axiom, ![VA2,VA,VA3,VA1]: ![V__x, V__0, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x11x10_2'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s('fun'(VA1,VA3),V__0))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x1x0_2'(s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),V__x),s(VA1,V__z))),s(VA3,'happ'(s('fun'(VA1,VA3),V__0),s(VA1,V__z)))))).
fof('_dst_x00x00x00x10x01x00_ax', axiom, ![VA,VA3,VA4,VA5,VA1,VA2,VA6,VA7]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,VA),'happ'(s('fun'(VA1,'fun'(VA2,VA)),'_dst_x00x00x00x10x01x00_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s('fun'(VA1,VA5),V__2),s('fun'(VA2,VA6),V__3),s(VA7,V__4))),s(VA1,V__z))) = s('fun'(VA2,VA),'_dst_x0x0x0x0x1x0_6'(s('fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,VA))))),V__x),s(VA3,V__0),s(VA4,V__1),s(VA5,'happ'(s('fun'(VA1,VA5),V__2),s(VA1,V__z))),s('fun'(VA2,VA6),V__3),s(VA7,V__4)))).
fof('_dst_x000x101x101_ax', axiom, ![VA2,VA,VA4,VA3,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x101x101_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA1,'fun'(VA3,VA4)),V__0),s('fun'(VA1,'fun'(VA3,VA5)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x01x01_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s('fun'(VA3,VA4),'happ'(s('fun'(VA1,'fun'(VA3,VA4)),V__0),s(VA1,V__z))),s('fun'(VA3,VA5),'happ'(s('fun'(VA1,'fun'(VA3,VA5)),V__1),s(VA1,V__z)))))).
fof('_dst_x000x100x000x010x001x000_ax', axiom, ![VA,VA4,VA1,VA5,VA2,VA6,VA3,VA7,VA8]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x100x000x010x001x000_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s('fun'(VA1,VA4),V__0),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s('fun'(VA3,VA7),V__3),s(VA8,V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x00x10x01x00_6'(s('fun'(VA4,'fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,VA))))),V__x),s(VA4,'happ'(s('fun'(VA1,VA4),V__0),s(VA1,V__z))),s(VA5,V__1),s('fun'(VA2,VA6),V__2),s('fun'(VA3,VA7),V__3),s(VA8,V__4)))).
fof('_dst_x000x000x101_ax', axiom, ![VA2,VA,VA4,VA3,VA5,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,VA)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,VA))),'_dst_x000x000x101_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,V__0),s('fun'(VA1,'fun'(VA3,VA5)),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,VA)),'_dst_x00x00x01_3'(s('fun'(VA4,'fun'(VA5,VA)),V__x),s(VA4,V__0),s('fun'(VA3,VA5),'happ'(s('fun'(VA1,'fun'(VA3,VA5)),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x1101x0111_ax', axiom, ![VA,VA5,VA1,VA2,VA3,VA4,VA6]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1101x0111_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA5))),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x101x111_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA2,'fun'(VA4,VA5)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA5))),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA6))),V__1)))).
fof('_dst_x0000x1000x1101_ax', axiom, ![VA3,VA,VA5,VA2,VA4,VA6,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x1000x1101_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s('fun'(VA1,VA5),V__0),s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA6))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x000x101_3'(s('fun'(VA5,'fun'(VA6,VA)),V__x),s(VA5,'happ'(s('fun'(VA1,VA5),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA4,VA6)),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA4,VA6))),V__1),s(VA1,V__z)))))).
fof('_dst_x0000x0100x0000x0010x0001x1000_ax', axiom, ![VA,VA2,VA5,VA6,VA3,VA7,VA4,VA8,VA9,VA1]: ![V__x, V__0, V__1, V__2, V__3, V__4, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,VA)))),'_dst_x0000x0100x0000x0010x0001x1000_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s('fun'(VA2,VA5),V__0),s(VA6,V__1),s('fun'(VA3,VA7),V__2),s('fun'(VA4,VA8),V__3),s('fun'(VA1,VA9),V__4))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,VA))),'_dst_x000x100x000x010x001x000_6'(s('fun'(VA5,'fun'(VA6,'fun'(VA7,'fun'(VA8,'fun'(VA9,VA))))),V__x),s('fun'(VA2,VA5),V__0),s(VA6,V__1),s('fun'(VA3,VA7),V__2),s('fun'(VA4,VA8),V__3),s(VA9,'happ'(s('fun'(VA1,VA9),V__4),s(VA1,V__z)))))).
fof('_dst_x00000x11101x00111_ax', axiom, ![VA,VA2,VA6,VA1,VA3,VA4,VA5,VA7]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11101x00111_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,VA6)))),V__0),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1101x0111_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA6))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA5,VA6)))),V__0),s(VA1,V__z))),s('fun'(VA3,'fun'(VA4,'fun'(VA5,VA7))),V__1)))).
fof('_dst_x00000x11000x01101_ax', axiom, ![VA4,VA,VA6,VA1,VA2,VA3,VA5,VA7]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA))))),'_dst_x00000x11000x01101_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA1,'fun'(VA2,VA6)),V__0),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA7))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,VA)))),'_dst_x0000x1000x1101_3'(s('fun'(VA6,'fun'(VA7,VA)),V__x),s('fun'(VA2,VA6),'happ'(s('fun'(VA1,'fun'(VA2,VA6)),V__0),s(VA1,V__z))),s('fun'(VA2,'fun'(VA3,'fun'(VA5,VA7))),V__1)))).
fof('_dst_x000000x011000x101101_ax', axiom, ![VA5,VA,VA2,VA7,VA3,VA4,VA6,VA8,VA1]: ![V__x, V__0, V__1, V__z]: s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'happ'(s('fun'(VA1,'fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA)))))),'_dst_x000000x011000x101101_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA7)),V__0),s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA8)))),V__1))),s(VA1,V__z))) = s('fun'(VA2,'fun'(VA3,'fun'(VA4,'fun'(VA5,'fun'(VA6,VA))))),'_dst_x00000x11000x01101_3'(s('fun'(VA7,'fun'(VA8,VA)),V__x),s('fun'(VA2,'fun'(VA3,VA7)),V__0),s('fun'(VA3,'fun'(VA4,'fun'(VA6,VA8))),'happ'(s('fun'(VA1,'fun'(VA3,'fun'(VA4,'fun'(VA6,VA8)))),V__1),s(VA1,V__z)))))).
fof('thm.reg_alloc.reg_alloc_def', axiom, ![V_27alg_27, V_27G_27, V_27k_27, V_27moves_27]: ?[Vv]: ((p(s('bool',Vv)) <=> s('type.num.num',V_27alg_27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & ?[Vv_27]: ((p(s('bool',Vv_27)) <=> s('type.num.num',V_27alg_27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & ?[Vv_27_27]: ((p(s('bool',Vv_27_27)) <=> s('type.num.num',V_27alg_27) = s('type.num.num','const.num.|48|_0')) & ?[Vv_27_27_27]: ((p(s('bool',Vv_27_27_27)) <=> s('type.num.num',V_27alg_27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & ?[Vv_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27)) <=> s('type.num.num',V_27alg_27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) & ?[Vv_27_27_27_27_27]: ((p(s('bool',Vv_27_27_27_27_27)) <=> s('type.num.num',V_27alg_27) = s('type.num.num','const.num.|48|_0')) & s('type.sptree.spt'('type.num.num'),'const.reg_alloc.reg_alloc_4'(s('type.num.num',V_27alg_27),s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27))) = s('type.sptree.spt'('type.num.num'),'happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.num.num')),'fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.num.num')),'_dst_x0x1x1_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))),'_dst_x00x10x01_3'(s('fun'('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num')),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num'))),'_dst_x0x1_2'(s('fun'('fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')))),'_dst_x000x101x101_3'(s('fun'('fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'type.sptree.spt'('type.num.num')),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'type.sptree.spt'('type.num.num')))),'_dst_x000x110x011_3'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.sptree.spt'('type.num.num')),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.sptree.spt'('type.num.num')))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')),'type.sptree.spt'('type.num.num'))),'const.pair.UNCURRY_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))),'_dst_x0000x0011x1101_3'(s('fun'('fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'type.sptree.spt'('type.num.num')),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'type.sptree.spt'('type.num.num')))),'_dst_x00x11_2'(s('fun'('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))),'type.sptree.spt'('type.num.num'))),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num'))))),'_dst_x000x111_2'(s('fun'('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')),'type.sptree.spt'('type.num.num'))),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))))),'_dst_x00000x11101x00111_3'(s('fun'('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')),'fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')))))),'_dst_x00000x11110x00001_3'(s('fun'('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num')),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num')))))),'_dst_x0000x1111_2'(s('fun'('fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.sptree.spt'('type.num.num'))),'const.pair.UNCURRY_0'),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))))))),'_dst_x000000x011000x101101_3'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))),'_dst_x000x111_2'(s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'happ'(s('fun'('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num'))),'const.bool.LET_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))),s('fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))),'_dst_x01x00x00x10_4'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))))),'const.reg_alloc.spill_colouring_0'),s('type.num.num',V_27k_27),s('type.sptree.spt'('type.num.num'),'const.sptree.LN_0'),s('fun'('type.list.list'('type.num.num'),'type.list.list'('type.num.num')),'_i_0_0'))))),s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.sptree.spt'('type.num.num'),'fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num'))))),'_dst_x0000x0100x0000x0010x0001x1000_6'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.sptree.spt'('type.num.num'),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')))))),'const.reg_alloc.spill_colouring_0'),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.sptree.spt'('type.sptree.spt'('type.one.one'))),'_i_0_0'),s('type.num.num',V_27k_27),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'),s('fun'('type.reg_alloc.ra_state','type.list.list'('type.num.num')),'const.reg_alloc.ra_state_stack_0'),s('fun'('type.sptree.spt'('type.num.num'),'type.sptree.spt'('type.num.num')),'_i_0_0'))))))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.rpt_do_step2_0'))),s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state'))),'_dst_x1x0_2'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.reg_alloc.ra_state')))),'const.reg_alloc.sec_ra_state_0'),s('type.num.num',V_27k_27))))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num')))))),'_dst_x00x01x00x10_4'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'type.pair.prod'('type.list.list'('type.num.num'),'type.sptree.spt'('type.num.num'))))))),'const.reg_alloc.full_coalesce_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.num.num',V_27k_27),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')))),'_i_0_0'))))))),s('fun'('type.reg_alloc.ra_state','fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))),'_dst_x11x10_2'(s('fun'('type.reg_alloc.ra_state','fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num'))))),'_dst_x0x1x0_3'(s('fun'('type.sptree.spt'('type.sptree.spt'('type.one.one')),'fun'('type.num.num','fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.list.list'('type.num.num'),'type.pair.prod'('type.sptree.spt'('type.num.num'),'type.list.list'('type.num.num')))))),'const.reg_alloc.alloc_colouring_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.sptree.spt'('type.one.one'))),'const.reg_alloc.ra_state_graph_0'),s('type.num.num',V_27k_27))),s('fun'('type.reg_alloc.ra_state','type.list.list'('type.num.num')),'const.reg_alloc.ra_state_stack_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'_dst_x00x10x11_3'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'const.bool.COND_1'(s('bool',Vv_27_27_27_27_27))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'const.reg_alloc.move_pref_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'const.reg_alloc.resort_moves_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.moves_to_sp_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'const.sptree.LN_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'_dst_x00x11x11_3'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'const.bool.COND_1'(s('bool',Vv_27_27_27_27))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'_dst_x00x01x10_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'const.reg_alloc.aux_move_pref_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')),'const.reg_alloc.ra_state_coalesced_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'const.reg_alloc.resort_moves_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.moves_to_sp_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'const.sptree.LN_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'_dst_x00x01x11_3'(s('fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'const.bool.COND_1'(s('bool',Vv_27_27_27))),s('fun'('type.reg_alloc.ra_state','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num'))))),'const.reg_alloc.aux_pref_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')),'const.reg_alloc.ra_state_coalesced_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.reg_alloc.ra_state','fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'_dst_x00x01x10_3'(s('fun'('type.sptree.spt'('type.num.num'),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.num.num','fun'('type.list.list'('type.num.num'),'fun'('type.sptree.spt'('type.num.num'),'type.option.option'('type.num.num')))))),'const.reg_alloc.aux_move_pref_0'),s('fun'('type.reg_alloc.ra_state','type.sptree.spt'('type.num.num')),'const.reg_alloc.ra_state_coalesced_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x0x1_2'(s('fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'const.reg_alloc.resort_moves_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num')))),'_dst_x1x0_2'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'fun'('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))))),'const.reg_alloc.moves_to_sp_0'),s('type.sptree.spt'('type.list.list'('type.pair.prod'('type.num.num','type.num.num'))),'const.sptree.LN_0'))))))))))))))))),s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.rpt_do_step_0'))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'happ'(s('fun'('type.reg_alloc.ra_state','fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.bool.COND_1'(s('bool',Vv_27_27))),s('type.reg_alloc.ra_state','happ'(s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.init_ra_state_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.NIL_0'))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'_dst_x0x1x1_3'(s('fun'('type.reg_alloc.ra_state','fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.bool.COND_1'(s('bool',Vv_27))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'_dst_x0x1_2'(s('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.reg_alloc.ra_state'),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.reg_alloc.ra_state')),'const.bool.LET_0'),s('fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.reg_alloc.ra_state'),'happ'(s('fun'('fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'fun'('type.pair.prod'('type.one.one','type.reg_alloc.ra_state'),'type.reg_alloc.ra_state')),'const.pair.UNCURRY_0'),s('fun'('type.one.one','fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'_dst_x0_1'(s('fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state'),'_i_0_0'))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'_dst_x0x1_2'(s('fun'('type.reg_alloc.ra_state','type.pair.prod'('type.one.one','type.reg_alloc.ra_state')),'const.reg_alloc.briggs_coalesce_0'),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.init_ra_state_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27))))))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'_dst_x0x1x1_3'(s('fun'('type.reg_alloc.ra_state','fun'('type.reg_alloc.ra_state','type.reg_alloc.ra_state')),'const.bool.COND_1'(s('bool',Vv))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.init_ra_state_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27))),s('fun'('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'type.reg_alloc.ra_state'),'const.reg_alloc.init_ra_state_2'(s('type.sptree.spt'('type.sptree.spt'('type.one.one')),V_27G_27),s('type.num.num',V_27k_27))))))))))))),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.list.MAP_2'(s('fun'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num')),'type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),'const.reg_alloc.maybe_flip_0'),s('type.list.list'('type.pair.prod'('type.num.num','type.pair.prod'('type.num.num','type.num.num'))),V_27moves_27)))))))))))).
